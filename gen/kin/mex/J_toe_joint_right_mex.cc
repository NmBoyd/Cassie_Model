/*
 * Automatically Generated from Mathematica.
 * Fri 16 Mar 2018 11:08:33 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t1574;
  double t2584;
  double t1920;
  double t2479;
  double t2648;
  double t119;
  double t152;
  double t325;
  double t493;
  double t1743;
  double t2580;
  double t2666;
  double t2813;
  double t3080;
  double t3426;
  double t3427;
  double t3480;
  double t117;
  double t3828;
  double t3969;
  double t3975;
  double t4079;
  double t4253;
  double t4313;
  double t4433;
  double t4891;
  double t5131;
  double t5187;
  double t6012;
  double t6043;
  double t6118;
  double t6330;
  double t6443;
  double t6472;
  double t6599;
  double t6815;
  double t6828;
  double t6840;
  double t7328;
  double t7432;
  double t7623;
  double t7999;
  double t8123;
  double t8139;
  double t8495;
  double t8984;
  double t9011;
  double t9062;
  double t9184;
  double t9189;
  double t9210;
  double t9219;
  double t9222;
  double t9239;
  double t9246;
  double t9264;
  double t9271;
  double t9272;
  double t9296;
  double t9297;
  double t9301;
  double t9309;
  double t9310;
  double t9313;
  double t9317;
  double t9350;
  double t9353;
  double t9355;
  double t9395;
  double t9402;
  double t9409;
  double t335;
  double t1526;
  double t1568;
  double t1759;
  double t1885;
  double t3110;
  double t3200;
  double t3210;
  double t3424;
  double t3521;
  double t3523;
  double t3524;
  double t9472;
  double t9476;
  double t9478;
  double t9484;
  double t9485;
  double t9489;
  double t4360;
  double t4437;
  double t4615;
  double t9514;
  double t9517;
  double t9526;
  double t5471;
  double t5893;
  double t5952;
  double t6563;
  double t6780;
  double t6789;
  double t9538;
  double t9539;
  double t9545;
  double t9578;
  double t9581;
  double t9582;
  double t6990;
  double t7207;
  double t7272;
  double t8171;
  double t8523;
  double t8859;
  double t9587;
  double t9588;
  double t9593;
  double t9597;
  double t9600;
  double t9601;
  double t9071;
  double t9079;
  double t9155;
  double t9245;
  double t9258;
  double t9263;
  double t9609;
  double t9613;
  double t9616;
  double t9624;
  double t9625;
  double t9626;
  double t9282;
  double t9285;
  double t9291;
  double t9316;
  double t9319;
  double t9338;
  double t9630;
  double t9631;
  double t9637;
  double t9643;
  double t9645;
  double t9653;
  double t9377;
  double t9383;
  double t9392;
  double t9657;
  double t9658;
  double t9660;
  double t9669;
  double t9671;
  double t9676;
  double t9717;
  double t9721;
  double t9724;
  double t9728;
  double t9729;
  double t9730;
  double t9744;
  double t9747;
  double t9750;
  double t9755;
  double t9760;
  double t9761;
  double t9764;
  double t9765;
  double t9766;
  double t9768;
  double t9769;
  double t9770;
  double t9774;
  double t9775;
  double t9776;
  double t9782;
  double t9783;
  double t9791;
  double t9796;
  double t9798;
  double t9802;
  double t9805;
  double t9806;
  double t9808;
  double t9811;
  double t9812;
  double t9819;
  double t9852;
  double t9853;
  double t9854;
  double t9859;
  double t9860;
  double t9865;
  double t9884;
  double t9887;
  double t9892;
  double t9896;
  double t9897;
  double t9899;
  double t9901;
  double t9902;
  double t9903;
  double t9905;
  double t9908;
  double t9912;
  double t9919;
  double t9920;
  double t9925;
  double t9928;
  double t9931;
  double t9933;
  double t9936;
  double t9938;
  double t9941;
  double t9943;
  double t9945;
  double t9947;
  double t9952;
  double t9954;
  double t9956;
  double t9983;
  double t9987;
  double t9992;
  double t9997;
  double t9999;
  double t10000;
  double t10008;
  double t10009;
  double t10010;
  double t10013;
  double t10014;
  double t10017;
  double t10021;
  double t10024;
  double t10026;
  double t10028;
  double t10031;
  double t10032;
  double t10034;
  double t10035;
  double t10036;
  double t10040;
  double t10041;
  double t10044;
  double t10047;
  double t10049;
  double t10051;
  double t10056;
  double t10058;
  double t10061;
  double t10067;
  double t10068;
  double t10071;
  double t10083;
  double t10084;
  double t10085;
  double t10093;
  double t10094;
  double t10087;
  double t10090;
  double t10091;
  double t10099;
  double t10101;
  double t10102;
  double t10104;
  double t10106;
  double t10108;
  double t10112;
  double t10113;
  double t10115;
  double t10117;
  double t10119;
  double t10120;
  double t10122;
  double t10123;
  double t10124;
  double t10128;
  double t10129;
  double t10132;
  double t10135;
  double t10136;
  double t10137;
  double t10140;
  double t10141;
  double t10142;
  double t10153;
  double t10154;
  double t10155;
  double t10162;
  double t10163;
  double t10164;
  double t10159;
  double t10160;
  double t10169;
  double t10170;
  double t10171;
  double t10173;
  double t10174;
  double t10175;
  double t10177;
  double t10178;
  double t10179;
  double t10181;
  double t10182;
  double t10183;
  double t10185;
  double t10186;
  double t10187;
  double t10189;
  double t10190;
  double t10191;
  double t10193;
  double t10194;
  double t10195;
  double t10197;
  double t10198;
  double t10199;
  double t10216;
  double t10217;
  double t10218;
  double t10212;
  double t10213;
  double t10214;
  double t10222;
  double t10223;
  double t10224;
  double t10226;
  double t10227;
  double t10228;
  double t10230;
  double t10231;
  double t10232;
  double t10234;
  double t10235;
  double t10236;
  double t10238;
  double t10239;
  double t10240;
  double t10242;
  double t10243;
  double t10244;
  double t10246;
  double t10247;
  double t10248;
  double t10250;
  double t10251;
  double t10252;
  double t10265;
  double t10266;
  double t10271;
  double t10272;
  double t10273;
  double t10275;
  double t10276;
  double t10277;
  double t10279;
  double t10280;
  double t10281;
  double t10283;
  double t10284;
  double t10285;
  double t10287;
  double t10288;
  double t10289;
  double t10291;
  double t10292;
  double t10293;
  double t10295;
  double t10296;
  double t10297;
  double t10299;
  double t10300;
  double t10301;
  double t10313;
  double t10314;
  double t10315;
  double t10320;
  double t10321;
  double t10317;
  double t10318;
  double t10325;
  double t10326;
  double t10327;
  double t10329;
  double t10330;
  double t10331;
  double t10333;
  double t10334;
  double t10335;
  double t10337;
  double t10338;
  double t10339;
  double t10341;
  double t10342;
  double t10343;
  double t10345;
  double t10346;
  double t10347;
  double t10349;
  double t10350;
  double t10351;
  double t10353;
  double t10354;
  double t10355;
  double t10215;
  double t10219;
  double t10220;
  double t10221;
  double t10225;
  double t10229;
  double t10233;
  double t10237;
  double t10241;
  double t10245;
  double t10249;
  double t10253;
  double t10254;
  double t10255;
  double t10256;
  double t10257;
  double t10258;
  double t10259;
  double t10260;
  double t10261;
  double t9565;
  double t9566;
  double t9572;
  double t10383;
  double t10384;
  double t10385;
  double t10387;
  double t10388;
  double t10389;
  double t10391;
  double t10392;
  double t10393;
  double t10395;
  double t10396;
  double t10397;
  double t10399;
  double t10400;
  double t10401;
  double t10403;
  double t10404;
  double t10405;
  double t10369;
  double t10370;
  double t10371;
  double t10373;
  double t10374;
  double t10417;
  double t10418;
  double t10419;
  double t10421;
  double t10422;
  double t10423;
  double t10430;
  double t10431;
  double t10432;
  double t10434;
  double t10435;
  double t10436;
  double t10438;
  double t10439;
  double t10440;
  double t10442;
  double t10443;
  double t10444;
  double t10446;
  double t10447;
  double t10448;
  double t10450;
  double t10451;
  double t10452;
  double t10464;
  double t10465;
  double t10466;
  double t10468;
  double t10469;
  double t10470;
  double t10478;
  double t10479;
  double t10480;
  double t10482;
  double t10483;
  double t10484;
  double t10486;
  double t10487;
  double t10488;
  double t10490;
  double t10491;
  double t10492;
  double t10494;
  double t10495;
  double t10496;
  double t10498;
  double t10499;
  double t10500;
  double t10518;
  double t10519;
  double t10520;
  double t10523;
  double t10524;
  double t10526;
  double t10527;
  double t10528;
  double t10530;
  double t10531;
  double t10532;
  double t10534;
  double t10535;
  double t10536;
  double t10538;
  double t10539;
  double t10540;
  double t10542;
  double t10543;
  double t10544;
  double t10511;
  double t10512;
  double t10514;
  double t10515;
  double t10516;
  double t10556;
  double t10557;
  double t10558;
  double t10560;
  double t10561;
  double t10562;
  double t10564;
  double t10565;
  double t10566;
  double t10568;
  double t10569;
  double t10570;
  double t10572;
  double t10573;
  double t10574;
  double t10576;
  double t10577;
  double t10578;
  double t10580;
  double t10581;
  double t10582;
  double t10584;
  double t10585;
  double t10586;
  double t10588;
  double t10589;
  double t10590;
  double t10602;
  double t10603;
  double t10604;
  double t10606;
  double t10607;
  double t10608;
  double t10610;
  double t10611;
  double t10612;
  double t10614;
  double t10615;
  double t10616;
  double t10618;
  double t10619;
  double t10620;
  double t10622;
  double t10623;
  double t10624;
  double t10626;
  double t10627;
  double t10628;
  double t10630;
  double t10631;
  double t10632;
  double t10634;
  double t10635;
  double t10636;
  double t10655;
  double t10656;
  double t10658;
  double t10659;
  double t10660;
  double t10662;
  double t10663;
  double t10665;
  double t10666;
  double t10667;
  double t10669;
  double t10670;
  double t10671;
  double t10647;
  double t10648;
  double t10649;
  double t10651;
  double t10652;
  double t10682;
  double t10683;
  double t10684;
  double t10687;
  double t10688;
  double t10690;
  double t10691;
  double t10693;
  double t10694;
  double t10695;
  double t10697;
  double t10698;
  double t10699;
  double t10701;
  double t10702;
  double t10703;
  double t10705;
  double t10706;
  double t10707;
  double t10718;
  double t10719;
  double t10720;
  double t10723;
  double t10724;
  double t10726;
  double t10727;
  double t10729;
  double t10730;
  double t10731;
  double t10733;
  double t10734;
  double t10735;
  double t10737;
  double t10738;
  double t10739;
  double t10741;
  double t10742;
  double t10743;
  double t10761;
  double t10762;
  double t10765;
  double t10766;
  double t10768;
  double t10769;
  double t10770;
  double t10754;
  double t10755;
  double t10757;
  double t10758;
  double t10759;
  double t10782;
  double t10783;
  double t10784;
  double t10786;
  double t10787;
  double t10789;
  double t10790;
  double t10792;
  double t10793;
  double t10794;
  double t10796;
  double t10797;
  double t10798;
  double t10810;
  double t10811;
  double t10812;
  double t10814;
  double t10815;
  double t10817;
  double t10818;
  double t10820;
  double t10821;
  double t10822;
  double t10824;
  double t10825;
  double t10826;
  double t10845;
  double t10846;
  double t9700;
  double t10837;
  double t10838;
  double t10839;
  double t10841;
  double t10842;
  double t10856;
  double t10857;
  double t10858;
  double t10861;
  double t10862;
  double t10864;
  double t10865;
  double t10876;
  double t10877;
  double t10878;
  double t10881;
  double t10882;
  double t10884;
  double t10885;
  double t10848;
  double t9702;
  double t9704;
  double t10896;
  double t10897;
  double t10899;
  double t10900;
  double t10901;
  double t10867;
  double t10909;
  double t10910;
  double t10911;
  double t10871;
  double t10887;
  double t10921;
  double t10922;
  double t10923;
  double t10891;
  t1574 = Sin(var1[3]);
  t2584 = Cos(var1[3]);
  t1920 = Cos(var1[5]);
  t2479 = Sin(var1[4]);
  t2648 = Sin(var1[5]);
  t119 = Cos(var1[14]);
  t152 = -1.*t119;
  t325 = 1. + t152;
  t493 = Sin(var1[14]);
  t1743 = Sin(var1[13]);
  t2580 = -1.*t1920*t1574*t2479;
  t2666 = t2584*t2648;
  t2813 = t2580 + t2666;
  t3080 = Cos(var1[13]);
  t3426 = -1.*t2584*t1920;
  t3427 = -1.*t1574*t2479*t2648;
  t3480 = t3426 + t3427;
  t117 = Cos(var1[4]);
  t3828 = t1743*t2813;
  t3969 = t3080*t3480;
  t3975 = t3828 + t3969;
  t4079 = Cos(var1[15]);
  t4253 = -1.*t4079;
  t4313 = 1. + t4253;
  t4433 = Sin(var1[15]);
  t4891 = t3080*t2813;
  t5131 = -1.*t1743*t3480;
  t5187 = t4891 + t5131;
  t6012 = -1.*t119*t117*t1574;
  t6043 = t493*t3975;
  t6118 = t6012 + t6043;
  t6330 = Cos(var1[16]);
  t6443 = -1.*t6330;
  t6472 = 1. + t6443;
  t6599 = Sin(var1[16]);
  t6815 = t4433*t5187;
  t6828 = t4079*t6118;
  t6840 = t6815 + t6828;
  t7328 = t4079*t5187;
  t7432 = -1.*t4433*t6118;
  t7623 = t7328 + t7432;
  t7999 = Cos(var1[17]);
  t8123 = -1.*t7999;
  t8139 = 1. + t8123;
  t8495 = Sin(var1[17]);
  t8984 = -1.*t6599*t6840;
  t9011 = t6330*t7623;
  t9062 = t8984 + t9011;
  t9184 = t6330*t6840;
  t9189 = t6599*t7623;
  t9210 = t9184 + t9189;
  t9219 = Cos(var1[18]);
  t9222 = -1.*t9219;
  t9239 = 1. + t9222;
  t9246 = Sin(var1[18]);
  t9264 = t8495*t9062;
  t9271 = t7999*t9210;
  t9272 = t9264 + t9271;
  t9296 = t7999*t9062;
  t9297 = -1.*t8495*t9210;
  t9301 = t9296 + t9297;
  t9309 = Cos(var1[19]);
  t9310 = -1.*t9309;
  t9313 = 1. + t9310;
  t9317 = Sin(var1[19]);
  t9350 = -1.*t9246*t9272;
  t9353 = t9219*t9301;
  t9355 = t9350 + t9353;
  t9395 = t9219*t9272;
  t9402 = t9246*t9301;
  t9409 = t9395 + t9402;
  t335 = -0.049*t325;
  t1526 = -0.135*t493;
  t1568 = 0. + t335 + t1526;
  t1759 = 0.135*t1743;
  t1885 = 0. + t1759;
  t3110 = -1.*t3080;
  t3200 = 1. + t3110;
  t3210 = -0.135*t3200;
  t3424 = 0. + t3210;
  t3521 = -0.135*t325;
  t3523 = 0.049*t493;
  t3524 = 0. + t3521 + t3523;
  t9472 = t2584*t1920*t2479;
  t9476 = t1574*t2648;
  t9478 = t9472 + t9476;
  t9484 = -1.*t1920*t1574;
  t9485 = t2584*t2479*t2648;
  t9489 = t9484 + t9485;
  t4360 = -0.09*t4313;
  t4437 = 0.049*t4433;
  t4615 = 0. + t4360 + t4437;
  t9514 = t1743*t9478;
  t9517 = t3080*t9489;
  t9526 = t9514 + t9517;
  t5471 = -0.049*t4313;
  t5893 = -0.09*t4433;
  t5952 = 0. + t5471 + t5893;
  t6563 = -0.049*t6472;
  t6780 = -0.21*t6599;
  t6789 = 0. + t6563 + t6780;
  t9538 = t3080*t9478;
  t9539 = -1.*t1743*t9489;
  t9545 = t9538 + t9539;
  t9578 = t119*t2584*t117;
  t9581 = t493*t9526;
  t9582 = t9578 + t9581;
  t6990 = -0.21*t6472;
  t7207 = 0.049*t6599;
  t7272 = 0. + t6990 + t7207;
  t8171 = -0.2707*t8139;
  t8523 = 0.0016*t8495;
  t8859 = 0. + t8171 + t8523;
  t9587 = t4433*t9545;
  t9588 = t4079*t9582;
  t9593 = t9587 + t9588;
  t9597 = t4079*t9545;
  t9600 = -1.*t4433*t9582;
  t9601 = t9597 + t9600;
  t9071 = -0.0016*t8139;
  t9079 = -0.2707*t8495;
  t9155 = 0. + t9071 + t9079;
  t9245 = 0.0184*t9239;
  t9258 = -0.7055*t9246;
  t9263 = 0. + t9245 + t9258;
  t9609 = -1.*t6599*t9593;
  t9613 = t6330*t9601;
  t9616 = t9609 + t9613;
  t9624 = t6330*t9593;
  t9625 = t6599*t9601;
  t9626 = t9624 + t9625;
  t9282 = -0.7055*t9239;
  t9285 = -0.0184*t9246;
  t9291 = 0. + t9282 + t9285;
  t9316 = -1.1135*t9313;
  t9319 = 0.0216*t9317;
  t9338 = 0. + t9316 + t9319;
  t9630 = t8495*t9616;
  t9631 = t7999*t9626;
  t9637 = t9630 + t9631;
  t9643 = t7999*t9616;
  t9645 = -1.*t8495*t9626;
  t9653 = t9643 + t9645;
  t9377 = -0.0216*t9313;
  t9383 = -1.1135*t9317;
  t9392 = 0. + t9377 + t9383;
  t9657 = -1.*t9246*t9637;
  t9658 = t9219*t9653;
  t9660 = t9657 + t9658;
  t9669 = t9219*t9637;
  t9671 = t9246*t9653;
  t9676 = t9669 + t9671;
  t9717 = t2584*t117*t1920*t1743;
  t9721 = t3080*t2584*t117*t2648;
  t9724 = t9717 + t9721;
  t9728 = t3080*t2584*t117*t1920;
  t9729 = -1.*t2584*t117*t1743*t2648;
  t9730 = t9728 + t9729;
  t9744 = -1.*t119*t2584*t2479;
  t9747 = t493*t9724;
  t9750 = t9744 + t9747;
  t9755 = t4433*t9730;
  t9760 = t4079*t9750;
  t9761 = t9755 + t9760;
  t9764 = t4079*t9730;
  t9765 = -1.*t4433*t9750;
  t9766 = t9764 + t9765;
  t9768 = -1.*t6599*t9761;
  t9769 = t6330*t9766;
  t9770 = t9768 + t9769;
  t9774 = t6330*t9761;
  t9775 = t6599*t9766;
  t9776 = t9774 + t9775;
  t9782 = t8495*t9770;
  t9783 = t7999*t9776;
  t9791 = t9782 + t9783;
  t9796 = t7999*t9770;
  t9798 = -1.*t8495*t9776;
  t9802 = t9796 + t9798;
  t9805 = -1.*t9246*t9791;
  t9806 = t9219*t9802;
  t9808 = t9805 + t9806;
  t9811 = t9219*t9791;
  t9812 = t9246*t9802;
  t9819 = t9811 + t9812;
  t9852 = t117*t1920*t1743*t1574;
  t9853 = t3080*t117*t1574*t2648;
  t9854 = t9852 + t9853;
  t9859 = t3080*t117*t1920*t1574;
  t9860 = -1.*t117*t1743*t1574*t2648;
  t9865 = t9859 + t9860;
  t9884 = -1.*t119*t1574*t2479;
  t9887 = t493*t9854;
  t9892 = t9884 + t9887;
  t9896 = t4433*t9865;
  t9897 = t4079*t9892;
  t9899 = t9896 + t9897;
  t9901 = t4079*t9865;
  t9902 = -1.*t4433*t9892;
  t9903 = t9901 + t9902;
  t9905 = -1.*t6599*t9899;
  t9908 = t6330*t9903;
  t9912 = t9905 + t9908;
  t9919 = t6330*t9899;
  t9920 = t6599*t9903;
  t9925 = t9919 + t9920;
  t9928 = t8495*t9912;
  t9931 = t7999*t9925;
  t9933 = t9928 + t9931;
  t9936 = t7999*t9912;
  t9938 = -1.*t8495*t9925;
  t9941 = t9936 + t9938;
  t9943 = -1.*t9246*t9933;
  t9945 = t9219*t9941;
  t9947 = t9943 + t9945;
  t9952 = t9219*t9933;
  t9954 = t9246*t9941;
  t9956 = t9952 + t9954;
  t9983 = -1.*t1920*t1743*t2479;
  t9987 = -1.*t3080*t2479*t2648;
  t9992 = t9983 + t9987;
  t9997 = -1.*t3080*t1920*t2479;
  t9999 = t1743*t2479*t2648;
  t10000 = t9997 + t9999;
  t10008 = -1.*t119*t117;
  t10009 = t493*t9992;
  t10010 = t10008 + t10009;
  t10013 = t4433*t10000;
  t10014 = t4079*t10010;
  t10017 = t10013 + t10014;
  t10021 = t4079*t10000;
  t10024 = -1.*t4433*t10010;
  t10026 = t10021 + t10024;
  t10028 = -1.*t6599*t10017;
  t10031 = t6330*t10026;
  t10032 = t10028 + t10031;
  t10034 = t6330*t10017;
  t10035 = t6599*t10026;
  t10036 = t10034 + t10035;
  t10040 = t8495*t10032;
  t10041 = t7999*t10036;
  t10044 = t10040 + t10041;
  t10047 = t7999*t10032;
  t10049 = -1.*t8495*t10036;
  t10051 = t10047 + t10049;
  t10056 = -1.*t9246*t10044;
  t10058 = t9219*t10051;
  t10061 = t10056 + t10058;
  t10067 = t9219*t10044;
  t10068 = t9246*t10051;
  t10071 = t10067 + t10068;
  t10083 = t1920*t1574;
  t10084 = -1.*t2584*t2479*t2648;
  t10085 = t10083 + t10084;
  t10093 = t1743*t10085;
  t10094 = t9538 + t10093;
  t10087 = -1.*t1743*t9478;
  t10090 = t3080*t10085;
  t10091 = t10087 + t10090;
  t10099 = t4433*t10091;
  t10101 = t4079*t493*t10094;
  t10102 = t10099 + t10101;
  t10104 = t4079*t10091;
  t10106 = -1.*t493*t4433*t10094;
  t10108 = t10104 + t10106;
  t10112 = -1.*t6599*t10102;
  t10113 = t6330*t10108;
  t10115 = t10112 + t10113;
  t10117 = t6330*t10102;
  t10119 = t6599*t10108;
  t10120 = t10117 + t10119;
  t10122 = t8495*t10115;
  t10123 = t7999*t10120;
  t10124 = t10122 + t10123;
  t10128 = t7999*t10115;
  t10129 = -1.*t8495*t10120;
  t10132 = t10128 + t10129;
  t10135 = -1.*t9246*t10124;
  t10136 = t9219*t10132;
  t10137 = t10135 + t10136;
  t10140 = t9219*t10124;
  t10141 = t9246*t10132;
  t10142 = t10140 + t10141;
  t10153 = t1920*t1574*t2479;
  t10154 = -1.*t2584*t2648;
  t10155 = t10153 + t10154;
  t10162 = t3080*t10155;
  t10163 = t1743*t3480;
  t10164 = t10162 + t10163;
  t10159 = -1.*t1743*t10155;
  t10160 = t10159 + t3969;
  t10169 = t4433*t10160;
  t10170 = t4079*t493*t10164;
  t10171 = t10169 + t10170;
  t10173 = t4079*t10160;
  t10174 = -1.*t493*t4433*t10164;
  t10175 = t10173 + t10174;
  t10177 = -1.*t6599*t10171;
  t10178 = t6330*t10175;
  t10179 = t10177 + t10178;
  t10181 = t6330*t10171;
  t10182 = t6599*t10175;
  t10183 = t10181 + t10182;
  t10185 = t8495*t10179;
  t10186 = t7999*t10183;
  t10187 = t10185 + t10186;
  t10189 = t7999*t10179;
  t10190 = -1.*t8495*t10183;
  t10191 = t10189 + t10190;
  t10193 = -1.*t9246*t10187;
  t10194 = t9219*t10191;
  t10195 = t10193 + t10194;
  t10197 = t9219*t10187;
  t10198 = t9246*t10191;
  t10199 = t10197 + t10198;
  t10216 = t3080*t117*t1920;
  t10217 = -1.*t117*t1743*t2648;
  t10218 = t10216 + t10217;
  t10212 = -1.*t117*t1920*t1743;
  t10213 = -1.*t3080*t117*t2648;
  t10214 = t10212 + t10213;
  t10222 = t4433*t10214;
  t10223 = t4079*t493*t10218;
  t10224 = t10222 + t10223;
  t10226 = t4079*t10214;
  t10227 = -1.*t493*t4433*t10218;
  t10228 = t10226 + t10227;
  t10230 = -1.*t6599*t10224;
  t10231 = t6330*t10228;
  t10232 = t10230 + t10231;
  t10234 = t6330*t10224;
  t10235 = t6599*t10228;
  t10236 = t10234 + t10235;
  t10238 = t8495*t10232;
  t10239 = t7999*t10236;
  t10240 = t10238 + t10239;
  t10242 = t7999*t10232;
  t10243 = -1.*t8495*t10236;
  t10244 = t10242 + t10243;
  t10246 = -1.*t9246*t10240;
  t10247 = t9219*t10244;
  t10248 = t10246 + t10247;
  t10250 = t9219*t10240;
  t10251 = t9246*t10244;
  t10252 = t10250 + t10251;
  t10265 = -1.*t3080*t9489;
  t10266 = t10087 + t10265;
  t10271 = t4433*t10266;
  t10272 = t4079*t493*t9545;
  t10273 = t10271 + t10272;
  t10275 = t4079*t10266;
  t10276 = -1.*t493*t4433*t9545;
  t10277 = t10275 + t10276;
  t10279 = -1.*t6599*t10273;
  t10280 = t6330*t10277;
  t10281 = t10279 + t10280;
  t10283 = t6330*t10273;
  t10284 = t6599*t10277;
  t10285 = t10283 + t10284;
  t10287 = t8495*t10281;
  t10288 = t7999*t10285;
  t10289 = t10287 + t10288;
  t10291 = t7999*t10281;
  t10292 = -1.*t8495*t10285;
  t10293 = t10291 + t10292;
  t10295 = -1.*t9246*t10289;
  t10296 = t9219*t10293;
  t10297 = t10295 + t10296;
  t10299 = t9219*t10289;
  t10300 = t9246*t10293;
  t10301 = t10299 + t10300;
  t10313 = t2584*t1920;
  t10314 = t1574*t2479*t2648;
  t10315 = t10313 + t10314;
  t10320 = -1.*t1743*t10315;
  t10321 = t10162 + t10320;
  t10317 = -1.*t3080*t10315;
  t10318 = t10159 + t10317;
  t10325 = t4433*t10318;
  t10326 = t4079*t493*t10321;
  t10327 = t10325 + t10326;
  t10329 = t4079*t10318;
  t10330 = -1.*t493*t4433*t10321;
  t10331 = t10329 + t10330;
  t10333 = -1.*t6599*t10327;
  t10334 = t6330*t10331;
  t10335 = t10333 + t10334;
  t10337 = t6330*t10327;
  t10338 = t6599*t10331;
  t10339 = t10337 + t10338;
  t10341 = t8495*t10335;
  t10342 = t7999*t10339;
  t10343 = t10341 + t10342;
  t10345 = t7999*t10335;
  t10346 = -1.*t8495*t10339;
  t10347 = t10345 + t10346;
  t10349 = -1.*t9246*t10343;
  t10350 = t9219*t10347;
  t10351 = t10349 + t10350;
  t10353 = t9219*t10343;
  t10354 = t9246*t10347;
  t10355 = t10353 + t10354;
  t10215 = t4615*t10214;
  t10219 = -0.1305*t119*t10218;
  t10220 = t3524*t10218;
  t10221 = t493*t5952*t10218;
  t10225 = t6789*t10224;
  t10229 = t7272*t10228;
  t10233 = t8859*t10232;
  t10237 = t9155*t10236;
  t10241 = t9263*t10240;
  t10245 = t9291*t10244;
  t10249 = t9338*t10248;
  t10253 = t9392*t10252;
  t10254 = t9317*t10248;
  t10255 = t9309*t10252;
  t10256 = t10254 + t10255;
  t10257 = -0.0216*t10256;
  t10258 = t9309*t10248;
  t10259 = -1.*t9317*t10252;
  t10260 = t10258 + t10259;
  t10261 = -1.1135*t10260;
  t9565 = -1.*t2584*t117*t493;
  t9566 = t119*t9526;
  t9572 = t9565 + t9566;
  t10383 = -1.*t6330*t4433*t9572;
  t10384 = -1.*t4079*t6599*t9572;
  t10385 = t10383 + t10384;
  t10387 = t4079*t6330*t9572;
  t10388 = -1.*t4433*t6599*t9572;
  t10389 = t10387 + t10388;
  t10391 = t8495*t10385;
  t10392 = t7999*t10389;
  t10393 = t10391 + t10392;
  t10395 = t7999*t10385;
  t10396 = -1.*t8495*t10389;
  t10397 = t10395 + t10396;
  t10399 = -1.*t9246*t10393;
  t10400 = t9219*t10397;
  t10401 = t10399 + t10400;
  t10403 = t9219*t10393;
  t10404 = t9246*t10397;
  t10405 = t10403 + t10404;
  t10369 = -0.135*t119;
  t10370 = -0.049*t493;
  t10371 = t10369 + t10370;
  t10373 = 0.049*t119;
  t10374 = t10373 + t1526;
  t10417 = t1743*t10155;
  t10418 = t3080*t10315;
  t10419 = t10417 + t10418;
  t10421 = -1.*t117*t493*t1574;
  t10422 = t119*t10419;
  t10423 = t10421 + t10422;
  t10430 = -1.*t6330*t4433*t10423;
  t10431 = -1.*t4079*t6599*t10423;
  t10432 = t10430 + t10431;
  t10434 = t4079*t6330*t10423;
  t10435 = -1.*t4433*t6599*t10423;
  t10436 = t10434 + t10435;
  t10438 = t8495*t10432;
  t10439 = t7999*t10436;
  t10440 = t10438 + t10439;
  t10442 = t7999*t10432;
  t10443 = -1.*t8495*t10436;
  t10444 = t10442 + t10443;
  t10446 = -1.*t9246*t10440;
  t10447 = t9219*t10444;
  t10448 = t10446 + t10447;
  t10450 = t9219*t10440;
  t10451 = t9246*t10444;
  t10452 = t10450 + t10451;
  t10464 = t117*t1920*t1743;
  t10465 = t3080*t117*t2648;
  t10466 = t10464 + t10465;
  t10468 = t493*t2479;
  t10469 = t119*t10466;
  t10470 = t10468 + t10469;
  t10478 = -1.*t6330*t4433*t10470;
  t10479 = -1.*t4079*t6599*t10470;
  t10480 = t10478 + t10479;
  t10482 = t4079*t6330*t10470;
  t10483 = -1.*t4433*t6599*t10470;
  t10484 = t10482 + t10483;
  t10486 = t8495*t10480;
  t10487 = t7999*t10484;
  t10488 = t10486 + t10487;
  t10490 = t7999*t10480;
  t10491 = -1.*t8495*t10484;
  t10492 = t10490 + t10491;
  t10494 = -1.*t9246*t10488;
  t10495 = t9219*t10492;
  t10496 = t10494 + t10495;
  t10498 = t9219*t10488;
  t10499 = t9246*t10492;
  t10500 = t10498 + t10499;
  t10518 = -1.*t4433*t9545;
  t10519 = -1.*t4079*t9582;
  t10520 = t10518 + t10519;
  t10523 = t6599*t10520;
  t10524 = t10523 + t9613;
  t10526 = t6330*t10520;
  t10527 = -1.*t6599*t9601;
  t10528 = t10526 + t10527;
  t10530 = -1.*t8495*t10524;
  t10531 = t7999*t10528;
  t10532 = t10530 + t10531;
  t10534 = t7999*t10524;
  t10535 = t8495*t10528;
  t10536 = t10534 + t10535;
  t10538 = t9246*t10532;
  t10539 = t9219*t10536;
  t10540 = t10538 + t10539;
  t10542 = t9219*t10532;
  t10543 = -1.*t9246*t10536;
  t10544 = t10542 + t10543;
  t10511 = 0.049*t4079;
  t10512 = t10511 + t5893;
  t10514 = -0.09*t4079;
  t10515 = -0.049*t4433;
  t10516 = t10514 + t10515;
  t10556 = t119*t117*t1574;
  t10557 = t493*t10419;
  t10558 = t10556 + t10557;
  t10560 = -1.*t4433*t10321;
  t10561 = -1.*t4079*t10558;
  t10562 = t10560 + t10561;
  t10564 = t4079*t10321;
  t10565 = -1.*t4433*t10558;
  t10566 = t10564 + t10565;
  t10568 = t6599*t10562;
  t10569 = t6330*t10566;
  t10570 = t10568 + t10569;
  t10572 = t6330*t10562;
  t10573 = -1.*t6599*t10566;
  t10574 = t10572 + t10573;
  t10576 = -1.*t8495*t10570;
  t10577 = t7999*t10574;
  t10578 = t10576 + t10577;
  t10580 = t7999*t10570;
  t10581 = t8495*t10574;
  t10582 = t10580 + t10581;
  t10584 = t9246*t10578;
  t10585 = t9219*t10582;
  t10586 = t10584 + t10585;
  t10588 = t9219*t10578;
  t10589 = -1.*t9246*t10582;
  t10590 = t10588 + t10589;
  t10602 = -1.*t119*t2479;
  t10603 = t493*t10466;
  t10604 = t10602 + t10603;
  t10606 = -1.*t4433*t10218;
  t10607 = -1.*t4079*t10604;
  t10608 = t10606 + t10607;
  t10610 = t4079*t10218;
  t10611 = -1.*t4433*t10604;
  t10612 = t10610 + t10611;
  t10614 = t6599*t10608;
  t10615 = t6330*t10612;
  t10616 = t10614 + t10615;
  t10618 = t6330*t10608;
  t10619 = -1.*t6599*t10612;
  t10620 = t10618 + t10619;
  t10622 = -1.*t8495*t10616;
  t10623 = t7999*t10620;
  t10624 = t10622 + t10623;
  t10626 = t7999*t10616;
  t10627 = t8495*t10620;
  t10628 = t10626 + t10627;
  t10630 = t9246*t10624;
  t10631 = t9219*t10628;
  t10632 = t10630 + t10631;
  t10634 = t9219*t10624;
  t10635 = -1.*t9246*t10628;
  t10636 = t10634 + t10635;
  t10655 = -1.*t6330*t9593;
  t10656 = t10655 + t10527;
  t10658 = -1.*t8495*t9616;
  t10659 = t7999*t10656;
  t10660 = t10658 + t10659;
  t10662 = t8495*t10656;
  t10663 = t9643 + t10662;
  t10665 = t9246*t10660;
  t10666 = t9219*t10663;
  t10667 = t10665 + t10666;
  t10669 = t9219*t10660;
  t10670 = -1.*t9246*t10663;
  t10671 = t10669 + t10670;
  t10647 = -0.21*t6330;
  t10648 = -0.049*t6599;
  t10649 = t10647 + t10648;
  t10651 = 0.049*t6330;
  t10652 = t10651 + t6780;
  t10682 = t4433*t10321;
  t10683 = t4079*t10558;
  t10684 = t10682 + t10683;
  t10687 = -1.*t6599*t10684;
  t10688 = t10687 + t10569;
  t10690 = -1.*t6330*t10684;
  t10691 = t10690 + t10573;
  t10693 = -1.*t8495*t10688;
  t10694 = t7999*t10691;
  t10695 = t10693 + t10694;
  t10697 = t7999*t10688;
  t10698 = t8495*t10691;
  t10699 = t10697 + t10698;
  t10701 = t9246*t10695;
  t10702 = t9219*t10699;
  t10703 = t10701 + t10702;
  t10705 = t9219*t10695;
  t10706 = -1.*t9246*t10699;
  t10707 = t10705 + t10706;
  t10718 = t4433*t10218;
  t10719 = t4079*t10604;
  t10720 = t10718 + t10719;
  t10723 = -1.*t6599*t10720;
  t10724 = t10723 + t10615;
  t10726 = -1.*t6330*t10720;
  t10727 = t10726 + t10619;
  t10729 = -1.*t8495*t10724;
  t10730 = t7999*t10727;
  t10731 = t10729 + t10730;
  t10733 = t7999*t10724;
  t10734 = t8495*t10727;
  t10735 = t10733 + t10734;
  t10737 = t9246*t10731;
  t10738 = t9219*t10735;
  t10739 = t10737 + t10738;
  t10741 = t9219*t10731;
  t10742 = -1.*t9246*t10735;
  t10743 = t10741 + t10742;
  t10761 = -1.*t7999*t9626;
  t10762 = t10658 + t10761;
  t10765 = t9246*t10762;
  t10766 = t10765 + t9658;
  t10768 = t9219*t10762;
  t10769 = -1.*t9246*t9653;
  t10770 = t10768 + t10769;
  t10754 = 0.0016*t7999;
  t10755 = t10754 + t9079;
  t10757 = -0.2707*t7999;
  t10758 = -0.0016*t8495;
  t10759 = t10757 + t10758;
  t10782 = t6330*t10684;
  t10783 = t6599*t10566;
  t10784 = t10782 + t10783;
  t10786 = -1.*t7999*t10784;
  t10787 = t10693 + t10786;
  t10789 = -1.*t8495*t10784;
  t10790 = t10697 + t10789;
  t10792 = t9246*t10787;
  t10793 = t9219*t10790;
  t10794 = t10792 + t10793;
  t10796 = t9219*t10787;
  t10797 = -1.*t9246*t10790;
  t10798 = t10796 + t10797;
  t10810 = t6330*t10720;
  t10811 = t6599*t10612;
  t10812 = t10810 + t10811;
  t10814 = -1.*t7999*t10812;
  t10815 = t10729 + t10814;
  t10817 = -1.*t8495*t10812;
  t10818 = t10733 + t10817;
  t10820 = t9246*t10815;
  t10821 = t9219*t10818;
  t10822 = t10820 + t10821;
  t10824 = t9219*t10815;
  t10825 = -1.*t9246*t10818;
  t10826 = t10824 + t10825;
  t10845 = -1.*t9219*t9637;
  t10846 = t10845 + t10769;
  t9700 = t9309*t9660;
  t10837 = -0.7055*t9219;
  t10838 = 0.0184*t9246;
  t10839 = t10837 + t10838;
  t10841 = -0.0184*t9219;
  t10842 = t10841 + t9258;
  t10856 = t8495*t10688;
  t10857 = t7999*t10784;
  t10858 = t10856 + t10857;
  t10861 = -1.*t9246*t10858;
  t10862 = t10861 + t10793;
  t10864 = -1.*t9219*t10858;
  t10865 = t10864 + t10797;
  t10876 = t8495*t10724;
  t10877 = t7999*t10812;
  t10878 = t10876 + t10877;
  t10881 = -1.*t9246*t10878;
  t10882 = t10881 + t10821;
  t10884 = -1.*t9219*t10878;
  t10885 = t10884 + t10825;
  t10848 = -1.*t9317*t9660;
  t9702 = -1.*t9317*t9676;
  t9704 = t9700 + t9702;
  t10896 = 0.0216*t9309;
  t10897 = t10896 + t9383;
  t10899 = -1.1135*t9309;
  t10900 = -0.0216*t9317;
  t10901 = t10899 + t10900;
  t10867 = -1.*t9317*t10862;
  t10909 = t9219*t10858;
  t10910 = t9246*t10790;
  t10911 = t10909 + t10910;
  t10871 = t9309*t10862;
  t10887 = -1.*t9317*t10882;
  t10921 = t9219*t10878;
  t10922 = t9246*t10818;
  t10923 = t10921 + t10922;
  t10891 = t9309*t10882;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=-1.*t117*t1568*t1574 + t1885*t2813 + t3424*t3480 + t3524*t3975 - 0.1305*(t119*t3975 + t117*t1574*t493) + t4615*t5187 + t5952*t6118 + t6789*t6840 + t7272*t7623 + t8859*t9062 + t9155*t9210 + t9263*t9272 + t9291*t9301 + t9338*t9355 + t9392*t9409 - 0.0216*(t9317*t9355 + t9309*t9409) - 1.1135*(t9309*t9355 - 1.*t9317*t9409);
  p_output1[10]=t117*t1568*t2584 + t1885*t9478 + t3424*t9489 + t3524*t9526 + t4615*t9545 - 0.1305*t9572 + t5952*t9582 + t6789*t9593 + t7272*t9601 + t8859*t9616 + t9155*t9626 + t9263*t9637 + t9291*t9653 + t9338*t9660 + t9392*t9676 - 0.0216*(t9317*t9660 + t9309*t9676) - 1.1135*t9704;
  p_output1[11]=0;
  p_output1[12]=t117*t1885*t1920*t2584 - 1.*t1568*t2479*t2584 + t117*t2584*t2648*t3424 + t3524*t9724 - 0.1305*(t2479*t2584*t493 + t119*t9724) + t4615*t9730 + t5952*t9750 + t6789*t9761 + t7272*t9766 + t8859*t9770 + t9155*t9776 + t9263*t9791 + t9291*t9802 + t9338*t9808 + t9392*t9819 - 0.0216*(t9317*t9808 + t9309*t9819) - 1.1135*(t9309*t9808 - 1.*t9317*t9819);
  p_output1[13]=t117*t1574*t1885*t1920 - 1.*t1568*t1574*t2479 + t117*t1574*t2648*t3424 + t3524*t9854 - 0.1305*(t1574*t2479*t493 + t119*t9854) + t4615*t9865 + t5952*t9892 + t6789*t9899 + t7272*t9903 + t8859*t9912 + t9155*t9925 + t9263*t9933 + t9291*t9941 + t9338*t9947 + t9392*t9956 - 0.0216*(t9317*t9947 + t9309*t9956) - 1.1135*(t9309*t9947 - 1.*t9317*t9956);
  p_output1[14]=-1.*t117*t1568 - 1.*t1885*t1920*t2479 - 1.*t2479*t2648*t3424 + t10000*t4615 + t10010*t5952 + t10017*t6789 + t10026*t7272 + t10032*t8859 + t10036*t9155 + t10044*t9263 + t10051*t9291 - 0.0216*(t10071*t9309 + t10061*t9317) - 1.1135*(t10061*t9309 - 1.*t10071*t9317) + t10061*t9338 + t10071*t9392 + t3524*t9992 - 0.1305*(t117*t493 + t119*t9992);
  p_output1[15]=-0.1305*t10094*t119 + t10085*t1885 + t10094*t3524 + t10091*t4615 + t10094*t493*t5952 + t10102*t6789 + t10108*t7272 + t10115*t8859 + t10120*t9155 + t10124*t9263 + t10132*t9291 - 0.0216*(t10142*t9309 + t10137*t9317) - 1.1135*(t10137*t9309 - 1.*t10142*t9317) + t10137*t9338 + t10142*t9392 + t3424*t9478;
  p_output1[16]=-0.1305*t10164*t119 + t10155*t3424 + t1885*t3480 + t10164*t3524 + t10160*t4615 + t10164*t493*t5952 + t10171*t6789 + t10175*t7272 + t10179*t8859 + t10183*t9155 + t10187*t9263 + t10191*t9291 - 0.0216*(t10199*t9309 + t10195*t9317) - 1.1135*(t10195*t9309 - 1.*t10199*t9317) + t10195*t9338 + t10199*t9392;
  p_output1[17]=t10215 + t10219 + t10220 + t10221 + t10225 + t10229 + t10233 + t10237 + t10241 + t10245 + t10249 + t10253 + t10257 + t10261 - 1.*t117*t1885*t2648 + t117*t1920*t3424;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=t10266*t4615 + t10273*t6789 + t10277*t7272 + t10281*t8859 + t10285*t9155 + t10289*t9263 + t10293*t9291 - 0.0216*(t10301*t9309 + t10297*t9317) - 1.1135*(t10297*t9309 - 1.*t10301*t9317) + t10297*t9338 + t10301*t9392 + 0.135*t3080*t9478 - 0.135*t1743*t9489 - 0.1305*t119*t9545 + t3524*t9545 + t493*t5952*t9545;
  p_output1[40]=-0.1305*t10321*t119 - 0.135*t10315*t1743 + 0.135*t10155*t3080 + t10321*t3524 + t10318*t4615 + t10321*t493*t5952 + t10327*t6789 + t10331*t7272 + t10335*t8859 + t10339*t9155 + t10343*t9263 + t10347*t9291 - 0.0216*(t10355*t9309 + t10351*t9317) - 1.1135*(t10351*t9309 - 1.*t10355*t9317) + t10351*t9338 + t10355*t9392;
  p_output1[41]=t10215 + t10219 + t10220 + t10221 + t10225 + t10229 + t10233 + t10237 + t10241 + t10245 + t10249 + t10253 + t10257 + t10261 - 0.135*t117*t1743*t2648 + 0.135*t117*t1920*t3080;
  p_output1[42]=t10371*t117*t2584 + t10385*t8859 + t10389*t9155 + t10393*t9263 + t10397*t9291 - 0.0216*(t10405*t9309 + t10401*t9317) - 1.1135*(t10401*t9309 - 1.*t10405*t9317) + t10401*t9338 + t10405*t9392 + t10374*t9526 - 0.1305*(-1.*t117*t119*t2584 - 1.*t493*t9526) + t5952*t9572 + t4079*t6789*t9572 - 1.*t4433*t7272*t9572;
  p_output1[43]=t10374*t10419 + t10371*t117*t1574 + t10423*t5952 - 0.1305*(-1.*t10419*t493 + t6012) + t10423*t4079*t6789 - 1.*t10423*t4433*t7272 + t10432*t8859 + t10436*t9155 + t10440*t9263 + t10444*t9291 - 0.0216*(t10452*t9309 + t10448*t9317) - 1.1135*(t10448*t9309 - 1.*t10452*t9317) + t10448*t9338 + t10452*t9392;
  p_output1[44]=t10374*t10466 - 1.*t10371*t2479 - 0.1305*(t119*t2479 - 1.*t10466*t493) + t10470*t5952 + t10470*t4079*t6789 - 1.*t10470*t4433*t7272 + t10480*t8859 + t10484*t9155 + t10488*t9263 + t10492*t9291 - 0.0216*(t10500*t9309 + t10496*t9317) - 1.1135*(t10496*t9309 - 1.*t10500*t9317) + t10496*t9338 + t10500*t9392;
  p_output1[45]=t10520*t7272 + t10528*t8859 + t10524*t9155 + t10536*t9263 + t10532*t9291 - 1.1135*(t10544*t9309 - 1.*t10540*t9317) - 0.0216*(t10540*t9309 + t10544*t9317) + t10544*t9338 + t10540*t9392 + t10512*t9545 + t10516*t9582 + t6789*t9601;
  p_output1[46]=t10321*t10512 + t10516*t10558 + t10566*t6789 + t10562*t7272 + t10574*t8859 + t10570*t9155 + t10582*t9263 + t10578*t9291 - 1.1135*(t10590*t9309 - 1.*t10586*t9317) - 0.0216*(t10586*t9309 + t10590*t9317) + t10590*t9338 + t10586*t9392;
  p_output1[47]=t10218*t10512 + t10516*t10604 + t10612*t6789 + t10608*t7272 + t10620*t8859 + t10616*t9155 + t10628*t9263 + t10624*t9291 - 1.1135*(t10636*t9309 - 1.*t10632*t9317) - 0.0216*(t10632*t9309 + t10636*t9317) + t10636*t9338 + t10632*t9392;
  p_output1[48]=t10656*t8859 + t10663*t9263 + t10660*t9291 - 1.1135*(t10671*t9309 - 1.*t10667*t9317) - 0.0216*(t10667*t9309 + t10671*t9317) + t10671*t9338 + t10667*t9392 + t10649*t9593 + t10652*t9601 + t9155*t9616;
  p_output1[49]=t10566*t10652 + t10649*t10684 + t10691*t8859 + t10688*t9155 + t10699*t9263 + t10695*t9291 - 1.1135*(t10707*t9309 - 1.*t10703*t9317) - 0.0216*(t10703*t9309 + t10707*t9317) + t10707*t9338 + t10703*t9392;
  p_output1[50]=t10612*t10652 + t10649*t10720 + t10727*t8859 + t10724*t9155 + t10735*t9263 + t10731*t9291 - 1.1135*(t10743*t9309 - 1.*t10739*t9317) - 0.0216*(t10739*t9309 + t10743*t9317) + t10743*t9338 + t10739*t9392;
  p_output1[51]=t10762*t9291 - 1.1135*(t10770*t9309 - 1.*t10766*t9317) - 0.0216*(t10766*t9309 + t10770*t9317) + t10770*t9338 + t10766*t9392 + t10755*t9616 + t10759*t9626 + t9263*t9653;
  p_output1[52]=t10688*t10755 + t10759*t10784 + t10790*t9263 + t10787*t9291 - 1.1135*(t10798*t9309 - 1.*t10794*t9317) - 0.0216*(t10794*t9309 + t10798*t9317) + t10798*t9338 + t10794*t9392;
  p_output1[53]=t10724*t10755 + t10759*t10812 + t10818*t9263 + t10815*t9291 - 1.1135*(t10826*t9309 - 1.*t10822*t9317) - 0.0216*(t10822*t9309 + t10826*t9317) + t10826*t9338 + t10822*t9392;
  p_output1[54]=-1.1135*(t10848 + t10846*t9309) + t10846*t9338 + t10839*t9637 + t10842*t9653 + t9392*t9660 - 0.0216*(t10846*t9317 + t9700);
  p_output1[55]=t10790*t10842 + t10839*t10858 - 1.1135*(t10867 + t10865*t9309) - 0.0216*(t10871 + t10865*t9317) + t10865*t9338 + t10862*t9392;
  p_output1[56]=t10818*t10842 + t10839*t10878 - 1.1135*(t10887 + t10885*t9309) - 0.0216*(t10891 + t10885*t9317) + t10885*t9338 + t10882*t9392;
  p_output1[57]=t10897*t9660 + t10901*t9676 - 1.1135*(t10848 - 1.*t9309*t9676) - 0.0216*t9704;
  p_output1[58]=t10862*t10897 + t10901*t10911 - 1.1135*(t10867 - 1.*t10911*t9309) - 0.0216*(t10871 - 1.*t10911*t9317);
  p_output1[59]=t10882*t10897 + t10901*t10923 - 1.1135*(t10887 - 1.*t10923*t9309) - 0.0216*(t10891 - 1.*t10923*t9317);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "J_toe_joint_right_mex.hh"

namespace SymExpression
{

void J_toe_joint_right_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
