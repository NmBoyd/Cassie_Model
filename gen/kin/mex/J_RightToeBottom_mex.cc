/*
 * Automatically Generated from Mathematica.
 * Mon 2 Jul 2018 15:34:13 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t1168;
  double t1423;
  double t1336;
  double t1380;
  double t1444;
  double t96;
  double t102;
  double t766;
  double t896;
  double t1298;
  double t1414;
  double t1450;
  double t1517;
  double t1627;
  double t1923;
  double t2059;
  double t2140;
  double t10;
  double t2206;
  double t2231;
  double t2274;
  double t2338;
  double t2351;
  double t2356;
  double t2380;
  double t2439;
  double t2454;
  double t2479;
  double t2756;
  double t2769;
  double t2775;
  double t2835;
  double t2838;
  double t2839;
  double t2848;
  double t2932;
  double t2952;
  double t2963;
  double t3061;
  double t3068;
  double t3074;
  double t3103;
  double t3129;
  double t3142;
  double t3147;
  double t3194;
  double t3219;
  double t3256;
  double t3304;
  double t3313;
  double t3365;
  double t3401;
  double t3403;
  double t3414;
  double t3461;
  double t3514;
  double t3530;
  double t3535;
  double t3578;
  double t3602;
  double t3619;
  double t3636;
  double t3643;
  double t3645;
  double t3650;
  double t3669;
  double t3684;
  double t3690;
  double t3754;
  double t3760;
  double t3784;
  double t839;
  double t990;
  double t1085;
  double t1299;
  double t1328;
  double t1672;
  double t1805;
  double t1816;
  double t1845;
  double t2153;
  double t2171;
  double t2196;
  double t4450;
  double t4489;
  double t4512;
  double t4552;
  double t4600;
  double t4613;
  double t2370;
  double t2385;
  double t2418;
  double t4628;
  double t4634;
  double t4658;
  double t2617;
  double t2647;
  double t2694;
  double t2840;
  double t2850;
  double t2925;
  double t4798;
  double t4853;
  double t4861;
  double t5009;
  double t5014;
  double t5031;
  double t3029;
  double t3030;
  double t3043;
  double t3145;
  double t3163;
  double t3175;
  double t5112;
  double t5123;
  double t5189;
  double t5212;
  double t5217;
  double t5222;
  double t3270;
  double t3276;
  double t3286;
  double t3448;
  double t3479;
  double t3508;
  double t5235;
  double t5239;
  double t5241;
  double t5303;
  double t5315;
  double t5350;
  double t3544;
  double t3549;
  double t3551;
  double t3648;
  double t3663;
  double t3666;
  double t5380;
  double t5425;
  double t5466;
  double t5479;
  double t5497;
  double t5499;
  double t3708;
  double t3718;
  double t3723;
  double t5523;
  double t5534;
  double t5539;
  double t5563;
  double t5570;
  double t5576;
  double t5871;
  double t5913;
  double t5918;
  double t5938;
  double t5939;
  double t5943;
  double t6053;
  double t6062;
  double t6068;
  double t6082;
  double t6085;
  double t6102;
  double t6111;
  double t6141;
  double t6152;
  double t6228;
  double t6247;
  double t6258;
  double t6305;
  double t6320;
  double t6361;
  double t6397;
  double t6409;
  double t6418;
  double t6440;
  double t6453;
  double t6487;
  double t6519;
  double t6583;
  double t6609;
  double t6620;
  double t6621;
  double t6624;
  double t6766;
  double t6778;
  double t6784;
  double t6825;
  double t6842;
  double t6849;
  double t6904;
  double t6915;
  double t6937;
  double t6958;
  double t6976;
  double t7004;
  double t7018;
  double t7024;
  double t7039;
  double t7045;
  double t7057;
  double t7060;
  double t7069;
  double t7071;
  double t7073;
  double t7078;
  double t7080;
  double t7081;
  double t7088;
  double t7089;
  double t7091;
  double t7099;
  double t7101;
  double t7102;
  double t7112;
  double t7125;
  double t7126;
  double t7203;
  double t7204;
  double t7208;
  double t7212;
  double t7224;
  double t7225;
  double t7243;
  double t7246;
  double t7248;
  double t7257;
  double t7260;
  double t7264;
  double t7268;
  double t7282;
  double t7303;
  double t7313;
  double t7317;
  double t7318;
  double t7325;
  double t7329;
  double t7335;
  double t7345;
  double t7353;
  double t7357;
  double t7384;
  double t7385;
  double t7393;
  double t7396;
  double t7397;
  double t7398;
  double t7400;
  double t7405;
  double t7410;
  double t7460;
  double t7461;
  double t7478;
  double t7554;
  double t7558;
  double t7524;
  double t7528;
  double t7540;
  double t7567;
  double t7577;
  double t7583;
  double t7592;
  double t7597;
  double t7598;
  double t7611;
  double t7616;
  double t7632;
  double t7648;
  double t7649;
  double t7652;
  double t7671;
  double t7680;
  double t7687;
  double t7693;
  double t7704;
  double t7712;
  double t7725;
  double t7734;
  double t7739;
  double t7765;
  double t7768;
  double t7771;
  double t7860;
  double t7868;
  double t7875;
  double t7896;
  double t7902;
  double t7906;
  double t7888;
  double t7890;
  double t7938;
  double t7940;
  double t7944;
  double t7958;
  double t7959;
  double t7966;
  double t7972;
  double t7975;
  double t7976;
  double t7987;
  double t7989;
  double t7990;
  double t7998;
  double t7999;
  double t8007;
  double t8028;
  double t8029;
  double t8030;
  double t8046;
  double t8050;
  double t8052;
  double t8066;
  double t8075;
  double t8079;
  double t8145;
  double t8147;
  double t8150;
  double t8127;
  double t8131;
  double t8132;
  double t8170;
  double t8171;
  double t8184;
  double t8189;
  double t8190;
  double t8193;
  double t8196;
  double t8197;
  double t8199;
  double t8205;
  double t8207;
  double t8218;
  double t8240;
  double t8242;
  double t8245;
  double t8254;
  double t8256;
  double t8262;
  double t8266;
  double t8267;
  double t8272;
  double t8279;
  double t8287;
  double t8297;
  double t8345;
  double t8346;
  double t8364;
  double t8370;
  double t8374;
  double t8380;
  double t8392;
  double t8393;
  double t8396;
  double t8404;
  double t8405;
  double t8409;
  double t8419;
  double t8420;
  double t8424;
  double t8425;
  double t8439;
  double t8441;
  double t8445;
  double t8447;
  double t8451;
  double t8454;
  double t8455;
  double t8462;
  double t8463;
  double t8464;
  double t8492;
  double t8496;
  double t8497;
  double t8515;
  double t8517;
  double t8503;
  double t8505;
  double t8530;
  double t8534;
  double t8535;
  double t8545;
  double t8551;
  double t8553;
  double t8558;
  double t8562;
  double t8566;
  double t8573;
  double t8584;
  double t8586;
  double t8589;
  double t8593;
  double t8596;
  double t8603;
  double t8604;
  double t8605;
  double t8609;
  double t8612;
  double t8620;
  double t8623;
  double t8624;
  double t8632;
  double t8142;
  double t8153;
  double t8159;
  double t8164;
  double t8185;
  double t8195;
  double t8203;
  double t8235;
  double t8250;
  double t8265;
  double t8274;
  double t8298;
  double t8302;
  double t8310;
  double t8314;
  double t8323;
  double t8324;
  double t8331;
  double t8333;
  double t8336;
  double t4944;
  double t4977;
  double t4979;
  double t8745;
  double t8751;
  double t8767;
  double t8778;
  double t8782;
  double t8794;
  double t8807;
  double t8808;
  double t8811;
  double t8816;
  double t8817;
  double t8823;
  double t8834;
  double t8835;
  double t8842;
  double t8848;
  double t8851;
  double t8854;
  double t8679;
  double t8680;
  double t8681;
  double t8702;
  double t8704;
  double t8898;
  double t8902;
  double t8904;
  double t8907;
  double t8913;
  double t8916;
  double t8946;
  double t8949;
  double t8959;
  double t8973;
  double t8981;
  double t8983;
  double t8992;
  double t9000;
  double t9002;
  double t9033;
  double t9047;
  double t9051;
  double t9065;
  double t9067;
  double t9077;
  double t9087;
  double t9090;
  double t9092;
  double t9141;
  double t9144;
  double t9147;
  double t9160;
  double t9163;
  double t9165;
  double t9201;
  double t9204;
  double t9205;
  double t9213;
  double t9219;
  double t9220;
  double t9222;
  double t9223;
  double t9225;
  double t9231;
  double t9235;
  double t9237;
  double t9258;
  double t9260;
  double t9265;
  double t9281;
  double t9290;
  double t9307;
  double t9373;
  double t9374;
  double t9382;
  double t9410;
  double t9414;
  double t9417;
  double t9433;
  double t9434;
  double t9436;
  double t9447;
  double t9449;
  double t9466;
  double t9469;
  double t9474;
  double t9483;
  double t9490;
  double t9492;
  double t9506;
  double t9508;
  double t9510;
  double t9342;
  double t9344;
  double t9351;
  double t9354;
  double t9355;
  double t9616;
  double t9619;
  double t9620;
  double t9625;
  double t9630;
  double t9631;
  double t9635;
  double t9636;
  double t9641;
  double t9655;
  double t9658;
  double t9659;
  double t9684;
  double t9685;
  double t9687;
  double t9694;
  double t9697;
  double t9698;
  double t9732;
  double t9734;
  double t9737;
  double t9753;
  double t9756;
  double t9760;
  double t9766;
  double t9771;
  double t9794;
  double t9840;
  double t9841;
  double t9848;
  double t9863;
  double t9869;
  double t9871;
  double t9876;
  double t9883;
  double t9885;
  double t9907;
  double t9910;
  double t9913;
  double t9922;
  double t9923;
  double t9924;
  double t9930;
  double t9933;
  double t9934;
  double t9941;
  double t9943;
  double t9953;
  double t9972;
  double t9977;
  double t9978;
  double t9984;
  double t9987;
  double t9993;
  double t10078;
  double t10090;
  double t10092;
  double t10096;
  double t10097;
  double t10106;
  double t10112;
  double t10123;
  double t10125;
  double t10127;
  double t10137;
  double t10139;
  double t10155;
  double t10049;
  double t10050;
  double t10054;
  double t10069;
  double t10070;
  double t10210;
  double t10211;
  double t10225;
  double t10242;
  double t10258;
  double t10270;
  double t10280;
  double t10287;
  double t10288;
  double t10289;
  double t10296;
  double t10301;
  double t10302;
  double t10309;
  double t10312;
  double t10314;
  double t10324;
  double t10327;
  double t10331;
  double t10385;
  double t10387;
  double t10391;
  double t10405;
  double t10411;
  double t10422;
  double t10424;
  double t10432;
  double t10433;
  double t10434;
  double t10441;
  double t10442;
  double t10447;
  double t10454;
  double t10461;
  double t10467;
  double t10472;
  double t10474;
  double t10476;
  double t10559;
  double t10560;
  double t10582;
  double t10588;
  double t10601;
  double t10605;
  double t10607;
  double t10530;
  double t10542;
  double t10545;
  double t10551;
  double t10554;
  double t10653;
  double t10655;
  double t10658;
  double t10680;
  double t10684;
  double t10692;
  double t10695;
  double t10709;
  double t10710;
  double t10711;
  double t10719;
  double t10734;
  double t10743;
  double t10798;
  double t10801;
  double t10805;
  double t10810;
  double t10818;
  double t10820;
  double t10821;
  double t10824;
  double t10827;
  double t10830;
  double t10833;
  double t10835;
  double t10840;
  double t10940;
  double t10946;
  double t5636;
  double t10890;
  double t10891;
  double t10902;
  double t10923;
  double t10924;
  double t10996;
  double t10997;
  double t11002;
  double t11006;
  double t11018;
  double t11028;
  double t11032;
  double t11065;
  double t11066;
  double t11072;
  double t11083;
  double t11086;
  double t11098;
  double t11099;
  double t10961;
  double t5640;
  double t5695;
  double t11172;
  double t11177;
  double t11183;
  double t11189;
  double t11198;
  double t11036;
  double t11236;
  double t11238;
  double t11249;
  double t11046;
  double t11106;
  double t11331;
  double t11333;
  double t11336;
  double t11144;
  t1168 = Sin(var1[3]);
  t1423 = Cos(var1[3]);
  t1336 = Cos(var1[5]);
  t1380 = Sin(var1[4]);
  t1444 = Sin(var1[5]);
  t96 = Cos(var1[14]);
  t102 = -1.*t96;
  t766 = 1. + t102;
  t896 = Sin(var1[14]);
  t1298 = Sin(var1[13]);
  t1414 = -1.*t1336*t1168*t1380;
  t1450 = t1423*t1444;
  t1517 = t1414 + t1450;
  t1627 = Cos(var1[13]);
  t1923 = -1.*t1423*t1336;
  t2059 = -1.*t1168*t1380*t1444;
  t2140 = t1923 + t2059;
  t10 = Cos(var1[4]);
  t2206 = t1298*t1517;
  t2231 = t1627*t2140;
  t2274 = t2206 + t2231;
  t2338 = Cos(var1[15]);
  t2351 = -1.*t2338;
  t2356 = 1. + t2351;
  t2380 = Sin(var1[15]);
  t2439 = t1627*t1517;
  t2454 = -1.*t1298*t2140;
  t2479 = t2439 + t2454;
  t2756 = -1.*t96*t10*t1168;
  t2769 = t896*t2274;
  t2775 = t2756 + t2769;
  t2835 = Cos(var1[16]);
  t2838 = -1.*t2835;
  t2839 = 1. + t2838;
  t2848 = Sin(var1[16]);
  t2932 = t2380*t2479;
  t2952 = t2338*t2775;
  t2963 = t2932 + t2952;
  t3061 = t2338*t2479;
  t3068 = -1.*t2380*t2775;
  t3074 = t3061 + t3068;
  t3103 = Cos(var1[17]);
  t3129 = -1.*t3103;
  t3142 = 1. + t3129;
  t3147 = Sin(var1[17]);
  t3194 = -1.*t2848*t2963;
  t3219 = t2835*t3074;
  t3256 = t3194 + t3219;
  t3304 = t2835*t2963;
  t3313 = t2848*t3074;
  t3365 = t3304 + t3313;
  t3401 = Cos(var1[18]);
  t3403 = -1.*t3401;
  t3414 = 1. + t3403;
  t3461 = Sin(var1[18]);
  t3514 = t3147*t3256;
  t3530 = t3103*t3365;
  t3535 = t3514 + t3530;
  t3578 = t3103*t3256;
  t3602 = -1.*t3147*t3365;
  t3619 = t3578 + t3602;
  t3636 = Cos(var1[19]);
  t3643 = -1.*t3636;
  t3645 = 1. + t3643;
  t3650 = Sin(var1[19]);
  t3669 = -1.*t3461*t3535;
  t3684 = t3401*t3619;
  t3690 = t3669 + t3684;
  t3754 = t3401*t3535;
  t3760 = t3461*t3619;
  t3784 = t3754 + t3760;
  t839 = -0.049*t766;
  t990 = -0.135*t896;
  t1085 = 0. + t839 + t990;
  t1299 = 0.135*t1298;
  t1328 = 0. + t1299;
  t1672 = -1.*t1627;
  t1805 = 1. + t1672;
  t1816 = -0.135*t1805;
  t1845 = 0. + t1816;
  t2153 = -0.135*t766;
  t2171 = 0.049*t896;
  t2196 = 0. + t2153 + t2171;
  t4450 = t1423*t1336*t1380;
  t4489 = t1168*t1444;
  t4512 = t4450 + t4489;
  t4552 = -1.*t1336*t1168;
  t4600 = t1423*t1380*t1444;
  t4613 = t4552 + t4600;
  t2370 = -0.09*t2356;
  t2385 = 0.049*t2380;
  t2418 = 0. + t2370 + t2385;
  t4628 = t1298*t4512;
  t4634 = t1627*t4613;
  t4658 = t4628 + t4634;
  t2617 = -0.049*t2356;
  t2647 = -0.09*t2380;
  t2694 = 0. + t2617 + t2647;
  t2840 = -0.049*t2839;
  t2850 = -0.21*t2848;
  t2925 = 0. + t2840 + t2850;
  t4798 = t1627*t4512;
  t4853 = -1.*t1298*t4613;
  t4861 = t4798 + t4853;
  t5009 = t96*t1423*t10;
  t5014 = t896*t4658;
  t5031 = t5009 + t5014;
  t3029 = -0.21*t2839;
  t3030 = 0.049*t2848;
  t3043 = 0. + t3029 + t3030;
  t3145 = -0.2707*t3142;
  t3163 = 0.0016*t3147;
  t3175 = 0. + t3145 + t3163;
  t5112 = t2380*t4861;
  t5123 = t2338*t5031;
  t5189 = t5112 + t5123;
  t5212 = t2338*t4861;
  t5217 = -1.*t2380*t5031;
  t5222 = t5212 + t5217;
  t3270 = -0.0016*t3142;
  t3276 = -0.2707*t3147;
  t3286 = 0. + t3270 + t3276;
  t3448 = 0.0184*t3414;
  t3479 = -0.7055*t3461;
  t3508 = 0. + t3448 + t3479;
  t5235 = -1.*t2848*t5189;
  t5239 = t2835*t5222;
  t5241 = t5235 + t5239;
  t5303 = t2835*t5189;
  t5315 = t2848*t5222;
  t5350 = t5303 + t5315;
  t3544 = -0.7055*t3414;
  t3549 = -0.0184*t3461;
  t3551 = 0. + t3544 + t3549;
  t3648 = -1.1135*t3645;
  t3663 = 0.0216*t3650;
  t3666 = 0. + t3648 + t3663;
  t5380 = t3147*t5241;
  t5425 = t3103*t5350;
  t5466 = t5380 + t5425;
  t5479 = t3103*t5241;
  t5497 = -1.*t3147*t5350;
  t5499 = t5479 + t5497;
  t3708 = -0.0216*t3645;
  t3718 = -1.1135*t3650;
  t3723 = 0. + t3708 + t3718;
  t5523 = -1.*t3461*t5466;
  t5534 = t3401*t5499;
  t5539 = t5523 + t5534;
  t5563 = t3401*t5466;
  t5570 = t3461*t5499;
  t5576 = t5563 + t5570;
  t5871 = t1423*t10*t1336*t1298;
  t5913 = t1627*t1423*t10*t1444;
  t5918 = t5871 + t5913;
  t5938 = t1627*t1423*t10*t1336;
  t5939 = -1.*t1423*t10*t1298*t1444;
  t5943 = t5938 + t5939;
  t6053 = -1.*t96*t1423*t1380;
  t6062 = t896*t5918;
  t6068 = t6053 + t6062;
  t6082 = t2380*t5943;
  t6085 = t2338*t6068;
  t6102 = t6082 + t6085;
  t6111 = t2338*t5943;
  t6141 = -1.*t2380*t6068;
  t6152 = t6111 + t6141;
  t6228 = -1.*t2848*t6102;
  t6247 = t2835*t6152;
  t6258 = t6228 + t6247;
  t6305 = t2835*t6102;
  t6320 = t2848*t6152;
  t6361 = t6305 + t6320;
  t6397 = t3147*t6258;
  t6409 = t3103*t6361;
  t6418 = t6397 + t6409;
  t6440 = t3103*t6258;
  t6453 = -1.*t3147*t6361;
  t6487 = t6440 + t6453;
  t6519 = -1.*t3461*t6418;
  t6583 = t3401*t6487;
  t6609 = t6519 + t6583;
  t6620 = t3401*t6418;
  t6621 = t3461*t6487;
  t6624 = t6620 + t6621;
  t6766 = t10*t1336*t1298*t1168;
  t6778 = t1627*t10*t1168*t1444;
  t6784 = t6766 + t6778;
  t6825 = t1627*t10*t1336*t1168;
  t6842 = -1.*t10*t1298*t1168*t1444;
  t6849 = t6825 + t6842;
  t6904 = -1.*t96*t1168*t1380;
  t6915 = t896*t6784;
  t6937 = t6904 + t6915;
  t6958 = t2380*t6849;
  t6976 = t2338*t6937;
  t7004 = t6958 + t6976;
  t7018 = t2338*t6849;
  t7024 = -1.*t2380*t6937;
  t7039 = t7018 + t7024;
  t7045 = -1.*t2848*t7004;
  t7057 = t2835*t7039;
  t7060 = t7045 + t7057;
  t7069 = t2835*t7004;
  t7071 = t2848*t7039;
  t7073 = t7069 + t7071;
  t7078 = t3147*t7060;
  t7080 = t3103*t7073;
  t7081 = t7078 + t7080;
  t7088 = t3103*t7060;
  t7089 = -1.*t3147*t7073;
  t7091 = t7088 + t7089;
  t7099 = -1.*t3461*t7081;
  t7101 = t3401*t7091;
  t7102 = t7099 + t7101;
  t7112 = t3401*t7081;
  t7125 = t3461*t7091;
  t7126 = t7112 + t7125;
  t7203 = -1.*t1336*t1298*t1380;
  t7204 = -1.*t1627*t1380*t1444;
  t7208 = t7203 + t7204;
  t7212 = -1.*t1627*t1336*t1380;
  t7224 = t1298*t1380*t1444;
  t7225 = t7212 + t7224;
  t7243 = -1.*t96*t10;
  t7246 = t896*t7208;
  t7248 = t7243 + t7246;
  t7257 = t2380*t7225;
  t7260 = t2338*t7248;
  t7264 = t7257 + t7260;
  t7268 = t2338*t7225;
  t7282 = -1.*t2380*t7248;
  t7303 = t7268 + t7282;
  t7313 = -1.*t2848*t7264;
  t7317 = t2835*t7303;
  t7318 = t7313 + t7317;
  t7325 = t2835*t7264;
  t7329 = t2848*t7303;
  t7335 = t7325 + t7329;
  t7345 = t3147*t7318;
  t7353 = t3103*t7335;
  t7357 = t7345 + t7353;
  t7384 = t3103*t7318;
  t7385 = -1.*t3147*t7335;
  t7393 = t7384 + t7385;
  t7396 = -1.*t3461*t7357;
  t7397 = t3401*t7393;
  t7398 = t7396 + t7397;
  t7400 = t3401*t7357;
  t7405 = t3461*t7393;
  t7410 = t7400 + t7405;
  t7460 = t1336*t1168;
  t7461 = -1.*t1423*t1380*t1444;
  t7478 = t7460 + t7461;
  t7554 = t1298*t7478;
  t7558 = t4798 + t7554;
  t7524 = -1.*t1298*t4512;
  t7528 = t1627*t7478;
  t7540 = t7524 + t7528;
  t7567 = t2380*t7540;
  t7577 = t2338*t896*t7558;
  t7583 = t7567 + t7577;
  t7592 = t2338*t7540;
  t7597 = -1.*t896*t2380*t7558;
  t7598 = t7592 + t7597;
  t7611 = -1.*t2848*t7583;
  t7616 = t2835*t7598;
  t7632 = t7611 + t7616;
  t7648 = t2835*t7583;
  t7649 = t2848*t7598;
  t7652 = t7648 + t7649;
  t7671 = t3147*t7632;
  t7680 = t3103*t7652;
  t7687 = t7671 + t7680;
  t7693 = t3103*t7632;
  t7704 = -1.*t3147*t7652;
  t7712 = t7693 + t7704;
  t7725 = -1.*t3461*t7687;
  t7734 = t3401*t7712;
  t7739 = t7725 + t7734;
  t7765 = t3401*t7687;
  t7768 = t3461*t7712;
  t7771 = t7765 + t7768;
  t7860 = t1336*t1168*t1380;
  t7868 = -1.*t1423*t1444;
  t7875 = t7860 + t7868;
  t7896 = t1627*t7875;
  t7902 = t1298*t2140;
  t7906 = t7896 + t7902;
  t7888 = -1.*t1298*t7875;
  t7890 = t7888 + t2231;
  t7938 = t2380*t7890;
  t7940 = t2338*t896*t7906;
  t7944 = t7938 + t7940;
  t7958 = t2338*t7890;
  t7959 = -1.*t896*t2380*t7906;
  t7966 = t7958 + t7959;
  t7972 = -1.*t2848*t7944;
  t7975 = t2835*t7966;
  t7976 = t7972 + t7975;
  t7987 = t2835*t7944;
  t7989 = t2848*t7966;
  t7990 = t7987 + t7989;
  t7998 = t3147*t7976;
  t7999 = t3103*t7990;
  t8007 = t7998 + t7999;
  t8028 = t3103*t7976;
  t8029 = -1.*t3147*t7990;
  t8030 = t8028 + t8029;
  t8046 = -1.*t3461*t8007;
  t8050 = t3401*t8030;
  t8052 = t8046 + t8050;
  t8066 = t3401*t8007;
  t8075 = t3461*t8030;
  t8079 = t8066 + t8075;
  t8145 = t1627*t10*t1336;
  t8147 = -1.*t10*t1298*t1444;
  t8150 = t8145 + t8147;
  t8127 = -1.*t10*t1336*t1298;
  t8131 = -1.*t1627*t10*t1444;
  t8132 = t8127 + t8131;
  t8170 = t2380*t8132;
  t8171 = t2338*t896*t8150;
  t8184 = t8170 + t8171;
  t8189 = t2338*t8132;
  t8190 = -1.*t896*t2380*t8150;
  t8193 = t8189 + t8190;
  t8196 = -1.*t2848*t8184;
  t8197 = t2835*t8193;
  t8199 = t8196 + t8197;
  t8205 = t2835*t8184;
  t8207 = t2848*t8193;
  t8218 = t8205 + t8207;
  t8240 = t3147*t8199;
  t8242 = t3103*t8218;
  t8245 = t8240 + t8242;
  t8254 = t3103*t8199;
  t8256 = -1.*t3147*t8218;
  t8262 = t8254 + t8256;
  t8266 = -1.*t3461*t8245;
  t8267 = t3401*t8262;
  t8272 = t8266 + t8267;
  t8279 = t3401*t8245;
  t8287 = t3461*t8262;
  t8297 = t8279 + t8287;
  t8345 = -1.*t1627*t4613;
  t8346 = t7524 + t8345;
  t8364 = t2380*t8346;
  t8370 = t2338*t896*t4861;
  t8374 = t8364 + t8370;
  t8380 = t2338*t8346;
  t8392 = -1.*t896*t2380*t4861;
  t8393 = t8380 + t8392;
  t8396 = -1.*t2848*t8374;
  t8404 = t2835*t8393;
  t8405 = t8396 + t8404;
  t8409 = t2835*t8374;
  t8419 = t2848*t8393;
  t8420 = t8409 + t8419;
  t8424 = t3147*t8405;
  t8425 = t3103*t8420;
  t8439 = t8424 + t8425;
  t8441 = t3103*t8405;
  t8445 = -1.*t3147*t8420;
  t8447 = t8441 + t8445;
  t8451 = -1.*t3461*t8439;
  t8454 = t3401*t8447;
  t8455 = t8451 + t8454;
  t8462 = t3401*t8439;
  t8463 = t3461*t8447;
  t8464 = t8462 + t8463;
  t8492 = t1423*t1336;
  t8496 = t1168*t1380*t1444;
  t8497 = t8492 + t8496;
  t8515 = -1.*t1298*t8497;
  t8517 = t7896 + t8515;
  t8503 = -1.*t1627*t8497;
  t8505 = t7888 + t8503;
  t8530 = t2380*t8505;
  t8534 = t2338*t896*t8517;
  t8535 = t8530 + t8534;
  t8545 = t2338*t8505;
  t8551 = -1.*t896*t2380*t8517;
  t8553 = t8545 + t8551;
  t8558 = -1.*t2848*t8535;
  t8562 = t2835*t8553;
  t8566 = t8558 + t8562;
  t8573 = t2835*t8535;
  t8584 = t2848*t8553;
  t8586 = t8573 + t8584;
  t8589 = t3147*t8566;
  t8593 = t3103*t8586;
  t8596 = t8589 + t8593;
  t8603 = t3103*t8566;
  t8604 = -1.*t3147*t8586;
  t8605 = t8603 + t8604;
  t8609 = -1.*t3461*t8596;
  t8612 = t3401*t8605;
  t8620 = t8609 + t8612;
  t8623 = t3401*t8596;
  t8624 = t3461*t8605;
  t8632 = t8623 + t8624;
  t8142 = t2418*t8132;
  t8153 = -0.1305*t96*t8150;
  t8159 = t2196*t8150;
  t8164 = t896*t2694*t8150;
  t8185 = t2925*t8184;
  t8195 = t3043*t8193;
  t8203 = t3175*t8199;
  t8235 = t3286*t8218;
  t8250 = t3508*t8245;
  t8265 = t3551*t8262;
  t8274 = t3666*t8272;
  t8298 = t3723*t8297;
  t8302 = t3650*t8272;
  t8310 = t3636*t8297;
  t8314 = t8302 + t8310;
  t8323 = 0.0306*t8314;
  t8324 = t3636*t8272;
  t8331 = -1.*t3650*t8297;
  t8333 = t8324 + t8331;
  t8336 = -1.1312*t8333;
  t4944 = -1.*t1423*t10*t896;
  t4977 = t96*t4658;
  t4979 = t4944 + t4977;
  t8745 = -1.*t2835*t2380*t4979;
  t8751 = -1.*t2338*t2848*t4979;
  t8767 = t8745 + t8751;
  t8778 = t2338*t2835*t4979;
  t8782 = -1.*t2380*t2848*t4979;
  t8794 = t8778 + t8782;
  t8807 = t3147*t8767;
  t8808 = t3103*t8794;
  t8811 = t8807 + t8808;
  t8816 = t3103*t8767;
  t8817 = -1.*t3147*t8794;
  t8823 = t8816 + t8817;
  t8834 = -1.*t3461*t8811;
  t8835 = t3401*t8823;
  t8842 = t8834 + t8835;
  t8848 = t3401*t8811;
  t8851 = t3461*t8823;
  t8854 = t8848 + t8851;
  t8679 = -0.135*t96;
  t8680 = -0.049*t896;
  t8681 = t8679 + t8680;
  t8702 = 0.049*t96;
  t8704 = t8702 + t990;
  t8898 = t1298*t7875;
  t8902 = t1627*t8497;
  t8904 = t8898 + t8902;
  t8907 = -1.*t10*t896*t1168;
  t8913 = t96*t8904;
  t8916 = t8907 + t8913;
  t8946 = -1.*t2835*t2380*t8916;
  t8949 = -1.*t2338*t2848*t8916;
  t8959 = t8946 + t8949;
  t8973 = t2338*t2835*t8916;
  t8981 = -1.*t2380*t2848*t8916;
  t8983 = t8973 + t8981;
  t8992 = t3147*t8959;
  t9000 = t3103*t8983;
  t9002 = t8992 + t9000;
  t9033 = t3103*t8959;
  t9047 = -1.*t3147*t8983;
  t9051 = t9033 + t9047;
  t9065 = -1.*t3461*t9002;
  t9067 = t3401*t9051;
  t9077 = t9065 + t9067;
  t9087 = t3401*t9002;
  t9090 = t3461*t9051;
  t9092 = t9087 + t9090;
  t9141 = t10*t1336*t1298;
  t9144 = t1627*t10*t1444;
  t9147 = t9141 + t9144;
  t9160 = t896*t1380;
  t9163 = t96*t9147;
  t9165 = t9160 + t9163;
  t9201 = -1.*t2835*t2380*t9165;
  t9204 = -1.*t2338*t2848*t9165;
  t9205 = t9201 + t9204;
  t9213 = t2338*t2835*t9165;
  t9219 = -1.*t2380*t2848*t9165;
  t9220 = t9213 + t9219;
  t9222 = t3147*t9205;
  t9223 = t3103*t9220;
  t9225 = t9222 + t9223;
  t9231 = t3103*t9205;
  t9235 = -1.*t3147*t9220;
  t9237 = t9231 + t9235;
  t9258 = -1.*t3461*t9225;
  t9260 = t3401*t9237;
  t9265 = t9258 + t9260;
  t9281 = t3401*t9225;
  t9290 = t3461*t9237;
  t9307 = t9281 + t9290;
  t9373 = -1.*t2380*t4861;
  t9374 = -1.*t2338*t5031;
  t9382 = t9373 + t9374;
  t9410 = t2848*t9382;
  t9414 = t9410 + t5239;
  t9417 = t2835*t9382;
  t9433 = -1.*t2848*t5222;
  t9434 = t9417 + t9433;
  t9436 = -1.*t3147*t9414;
  t9447 = t3103*t9434;
  t9449 = t9436 + t9447;
  t9466 = t3103*t9414;
  t9469 = t3147*t9434;
  t9474 = t9466 + t9469;
  t9483 = t3461*t9449;
  t9490 = t3401*t9474;
  t9492 = t9483 + t9490;
  t9506 = t3401*t9449;
  t9508 = -1.*t3461*t9474;
  t9510 = t9506 + t9508;
  t9342 = 0.049*t2338;
  t9344 = t9342 + t2647;
  t9351 = -0.09*t2338;
  t9354 = -0.049*t2380;
  t9355 = t9351 + t9354;
  t9616 = t96*t10*t1168;
  t9619 = t896*t8904;
  t9620 = t9616 + t9619;
  t9625 = -1.*t2380*t8517;
  t9630 = -1.*t2338*t9620;
  t9631 = t9625 + t9630;
  t9635 = t2338*t8517;
  t9636 = -1.*t2380*t9620;
  t9641 = t9635 + t9636;
  t9655 = t2848*t9631;
  t9658 = t2835*t9641;
  t9659 = t9655 + t9658;
  t9684 = t2835*t9631;
  t9685 = -1.*t2848*t9641;
  t9687 = t9684 + t9685;
  t9694 = -1.*t3147*t9659;
  t9697 = t3103*t9687;
  t9698 = t9694 + t9697;
  t9732 = t3103*t9659;
  t9734 = t3147*t9687;
  t9737 = t9732 + t9734;
  t9753 = t3461*t9698;
  t9756 = t3401*t9737;
  t9760 = t9753 + t9756;
  t9766 = t3401*t9698;
  t9771 = -1.*t3461*t9737;
  t9794 = t9766 + t9771;
  t9840 = -1.*t96*t1380;
  t9841 = t896*t9147;
  t9848 = t9840 + t9841;
  t9863 = -1.*t2380*t8150;
  t9869 = -1.*t2338*t9848;
  t9871 = t9863 + t9869;
  t9876 = t2338*t8150;
  t9883 = -1.*t2380*t9848;
  t9885 = t9876 + t9883;
  t9907 = t2848*t9871;
  t9910 = t2835*t9885;
  t9913 = t9907 + t9910;
  t9922 = t2835*t9871;
  t9923 = -1.*t2848*t9885;
  t9924 = t9922 + t9923;
  t9930 = -1.*t3147*t9913;
  t9933 = t3103*t9924;
  t9934 = t9930 + t9933;
  t9941 = t3103*t9913;
  t9943 = t3147*t9924;
  t9953 = t9941 + t9943;
  t9972 = t3461*t9934;
  t9977 = t3401*t9953;
  t9978 = t9972 + t9977;
  t9984 = t3401*t9934;
  t9987 = -1.*t3461*t9953;
  t9993 = t9984 + t9987;
  t10078 = -1.*t2835*t5189;
  t10090 = t10078 + t9433;
  t10092 = -1.*t3147*t5241;
  t10096 = t3103*t10090;
  t10097 = t10092 + t10096;
  t10106 = t3147*t10090;
  t10112 = t5479 + t10106;
  t10123 = t3461*t10097;
  t10125 = t3401*t10112;
  t10127 = t10123 + t10125;
  t10137 = t3401*t10097;
  t10139 = -1.*t3461*t10112;
  t10155 = t10137 + t10139;
  t10049 = -0.21*t2835;
  t10050 = -0.049*t2848;
  t10054 = t10049 + t10050;
  t10069 = 0.049*t2835;
  t10070 = t10069 + t2850;
  t10210 = t2380*t8517;
  t10211 = t2338*t9620;
  t10225 = t10210 + t10211;
  t10242 = -1.*t2848*t10225;
  t10258 = t10242 + t9658;
  t10270 = -1.*t2835*t10225;
  t10280 = t10270 + t9685;
  t10287 = -1.*t3147*t10258;
  t10288 = t3103*t10280;
  t10289 = t10287 + t10288;
  t10296 = t3103*t10258;
  t10301 = t3147*t10280;
  t10302 = t10296 + t10301;
  t10309 = t3461*t10289;
  t10312 = t3401*t10302;
  t10314 = t10309 + t10312;
  t10324 = t3401*t10289;
  t10327 = -1.*t3461*t10302;
  t10331 = t10324 + t10327;
  t10385 = t2380*t8150;
  t10387 = t2338*t9848;
  t10391 = t10385 + t10387;
  t10405 = -1.*t2848*t10391;
  t10411 = t10405 + t9910;
  t10422 = -1.*t2835*t10391;
  t10424 = t10422 + t9923;
  t10432 = -1.*t3147*t10411;
  t10433 = t3103*t10424;
  t10434 = t10432 + t10433;
  t10441 = t3103*t10411;
  t10442 = t3147*t10424;
  t10447 = t10441 + t10442;
  t10454 = t3461*t10434;
  t10461 = t3401*t10447;
  t10467 = t10454 + t10461;
  t10472 = t3401*t10434;
  t10474 = -1.*t3461*t10447;
  t10476 = t10472 + t10474;
  t10559 = -1.*t3103*t5350;
  t10560 = t10092 + t10559;
  t10582 = t3461*t10560;
  t10588 = t10582 + t5534;
  t10601 = t3401*t10560;
  t10605 = -1.*t3461*t5499;
  t10607 = t10601 + t10605;
  t10530 = 0.0016*t3103;
  t10542 = t10530 + t3276;
  t10545 = -0.2707*t3103;
  t10551 = -0.0016*t3147;
  t10554 = t10545 + t10551;
  t10653 = t2835*t10225;
  t10655 = t2848*t9641;
  t10658 = t10653 + t10655;
  t10680 = -1.*t3103*t10658;
  t10684 = t10287 + t10680;
  t10692 = -1.*t3147*t10658;
  t10695 = t10296 + t10692;
  t10709 = t3461*t10684;
  t10710 = t3401*t10695;
  t10711 = t10709 + t10710;
  t10719 = t3401*t10684;
  t10734 = -1.*t3461*t10695;
  t10743 = t10719 + t10734;
  t10798 = t2835*t10391;
  t10801 = t2848*t9885;
  t10805 = t10798 + t10801;
  t10810 = -1.*t3103*t10805;
  t10818 = t10432 + t10810;
  t10820 = -1.*t3147*t10805;
  t10821 = t10441 + t10820;
  t10824 = t3461*t10818;
  t10827 = t3401*t10821;
  t10830 = t10824 + t10827;
  t10833 = t3401*t10818;
  t10835 = -1.*t3461*t10821;
  t10840 = t10833 + t10835;
  t10940 = -1.*t3401*t5466;
  t10946 = t10940 + t10605;
  t5636 = t3636*t5539;
  t10890 = -0.7055*t3401;
  t10891 = 0.0184*t3461;
  t10902 = t10890 + t10891;
  t10923 = -0.0184*t3401;
  t10924 = t10923 + t3479;
  t10996 = t3147*t10258;
  t10997 = t3103*t10658;
  t11002 = t10996 + t10997;
  t11006 = -1.*t3461*t11002;
  t11018 = t11006 + t10710;
  t11028 = -1.*t3401*t11002;
  t11032 = t11028 + t10734;
  t11065 = t3147*t10411;
  t11066 = t3103*t10805;
  t11072 = t11065 + t11066;
  t11083 = -1.*t3461*t11072;
  t11086 = t11083 + t10827;
  t11098 = -1.*t3401*t11072;
  t11099 = t11098 + t10835;
  t10961 = -1.*t3650*t5539;
  t5640 = -1.*t3650*t5576;
  t5695 = t5636 + t5640;
  t11172 = 0.0216*t3636;
  t11177 = t11172 + t3718;
  t11183 = -1.1135*t3636;
  t11189 = -0.0216*t3650;
  t11198 = t11183 + t11189;
  t11036 = -1.*t3650*t11018;
  t11236 = t3401*t11002;
  t11238 = t3461*t10695;
  t11249 = t11236 + t11238;
  t11046 = t3636*t11018;
  t11106 = -1.*t3650*t11086;
  t11331 = t3401*t11072;
  t11333 = t3461*t10821;
  t11336 = t11331 + t11333;
  t11144 = t3636*t11086;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=-1.*t10*t1085*t1168 + t1328*t1517 + t1845*t2140 + t2196*t2274 + t2418*t2479 + t2694*t2775 + t2925*t2963 + t3043*t3074 + t3175*t3256 + t3286*t3365 + t3508*t3535 + t3551*t3619 + t3666*t3690 + t3723*t3784 + 0.0306*(t3650*t3690 + t3636*t3784) - 1.1312*(t3636*t3690 - 1.*t3650*t3784) - 0.1305*(t10*t1168*t896 + t2274*t96);
  p_output1[10]=t10*t1085*t1423 + t1328*t4512 + t1845*t4613 + t2196*t4658 + t2418*t4861 - 0.1305*t4979 + t2694*t5031 + t2925*t5189 + t3043*t5222 + t3175*t5241 + t3286*t5350 + t3508*t5466 + t3551*t5499 + t3666*t5539 + t3723*t5576 + 0.0306*(t3650*t5539 + t3636*t5576) - 1.1312*t5695;
  p_output1[11]=0;
  p_output1[12]=t10*t1328*t1336*t1423 - 1.*t1085*t1380*t1423 + t10*t1423*t1444*t1845 + t2196*t5918 + t2418*t5943 + t2694*t6068 + t2925*t6102 + t3043*t6152 + t3175*t6258 + t3286*t6361 + t3508*t6418 + t3551*t6487 + t3666*t6609 + t3723*t6624 + 0.0306*(t3650*t6609 + t3636*t6624) - 1.1312*(t3636*t6609 - 1.*t3650*t6624) - 0.1305*(t1380*t1423*t896 + t5918*t96);
  p_output1[13]=t10*t1168*t1328*t1336 - 1.*t1085*t1168*t1380 + t10*t1168*t1444*t1845 + t2196*t6784 + t2418*t6849 + t2694*t6937 + t2925*t7004 + t3043*t7039 + t3175*t7060 + t3286*t7073 + t3508*t7081 + t3551*t7091 + t3666*t7102 + t3723*t7126 + 0.0306*(t3650*t7102 + t3636*t7126) - 1.1312*(t3636*t7102 - 1.*t3650*t7126) - 0.1305*(t1168*t1380*t896 + t6784*t96);
  p_output1[14]=-1.*t10*t1085 - 1.*t1328*t1336*t1380 - 1.*t1380*t1444*t1845 + t2196*t7208 + t2418*t7225 + t2694*t7248 + t2925*t7264 + t3043*t7303 + t3175*t7318 + t3286*t7335 + t3508*t7357 + t3551*t7393 + t3666*t7398 + t3723*t7410 + 0.0306*(t3650*t7398 + t3636*t7410) - 1.1312*(t3636*t7398 - 1.*t3650*t7410) - 0.1305*(t10*t896 + t7208*t96);
  p_output1[15]=t1845*t4512 + t1328*t7478 + t2418*t7540 + t2196*t7558 + t2925*t7583 + t3043*t7598 + t3175*t7632 + t3286*t7652 + t3508*t7687 + t3551*t7712 + t3666*t7739 + t3723*t7771 + 0.0306*(t3650*t7739 + t3636*t7771) - 1.1312*(t3636*t7739 - 1.*t3650*t7771) + t2694*t7558*t896 - 0.1305*t7558*t96;
  p_output1[16]=t1328*t2140 + t1845*t7875 + t2418*t7890 + t2196*t7906 + t2925*t7944 + t3043*t7966 + t3175*t7976 + t3286*t7990 + t3508*t8007 + t3551*t8030 + t3666*t8052 + t3723*t8079 + 0.0306*(t3650*t8052 + t3636*t8079) - 1.1312*(t3636*t8052 - 1.*t3650*t8079) + t2694*t7906*t896 - 0.1305*t7906*t96;
  p_output1[17]=-1.*t10*t1328*t1444 + t10*t1336*t1845 + t8142 + t8153 + t8159 + t8164 + t8185 + t8195 + t8203 + t8235 + t8250 + t8265 + t8274 + t8298 + t8323 + t8336;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0.135*t1627*t4512 - 0.135*t1298*t4613 + t2196*t4861 + t2418*t8346 + t2925*t8374 + t3043*t8393 + t3175*t8405 + t3286*t8420 + t3508*t8439 + t3551*t8447 + t3666*t8455 + t3723*t8464 + 0.0306*(t3650*t8455 + t3636*t8464) - 1.1312*(t3636*t8455 - 1.*t3650*t8464) + t2694*t4861*t896 - 0.1305*t4861*t96;
  p_output1[40]=0.135*t1627*t7875 - 0.135*t1298*t8497 + t2418*t8505 + t2196*t8517 + t2925*t8535 + t3043*t8553 + t3175*t8566 + t3286*t8586 + t3508*t8596 + t3551*t8605 + t3666*t8620 + t3723*t8632 + 0.0306*(t3650*t8620 + t3636*t8632) - 1.1312*(t3636*t8620 - 1.*t3650*t8632) + t2694*t8517*t896 - 0.1305*t8517*t96;
  p_output1[41]=-0.135*t10*t1298*t1444 + 0.135*t10*t1336*t1627 + t8142 + t8153 + t8159 + t8164 + t8185 + t8195 + t8203 + t8235 + t8250 + t8265 + t8274 + t8298 + t8323 + t8336;
  p_output1[42]=t2694*t4979 + t2338*t2925*t4979 - 1.*t2380*t3043*t4979 + t10*t1423*t8681 + t4658*t8704 + t3175*t8767 + t3286*t8794 + t3508*t8811 + t3551*t8823 + t3666*t8842 + t3723*t8854 + 0.0306*(t3650*t8842 + t3636*t8854) - 1.1312*(t3636*t8842 - 1.*t3650*t8854) - 0.1305*(-1.*t4658*t896 - 1.*t10*t1423*t96);
  p_output1[43]=t10*t1168*t8681 + t8704*t8904 + t2694*t8916 + t2338*t2925*t8916 - 1.*t2380*t3043*t8916 + t3175*t8959 - 0.1305*(t2756 - 1.*t8904*t896) + t3286*t8983 + t3508*t9002 + t3551*t9051 + t3666*t9077 + t3723*t9092 + 0.0306*(t3650*t9077 + t3636*t9092) - 1.1312*(t3636*t9077 - 1.*t3650*t9092);
  p_output1[44]=-1.*t1380*t8681 + t8704*t9147 + t2694*t9165 + t2338*t2925*t9165 - 1.*t2380*t3043*t9165 + t3175*t9205 + t3286*t9220 + t3508*t9225 + t3551*t9237 + t3666*t9265 + t3723*t9307 + 0.0306*(t3650*t9265 + t3636*t9307) - 1.1312*(t3636*t9265 - 1.*t3650*t9307) - 0.1305*(-1.*t896*t9147 + t1380*t96);
  p_output1[45]=t2925*t5222 + t4861*t9344 + t5031*t9355 + t3043*t9382 + t3286*t9414 + t3175*t9434 + t3551*t9449 + t3508*t9474 + t3723*t9492 + t3666*t9510 - 1.1312*(-1.*t3650*t9492 + t3636*t9510) + 0.0306*(t3636*t9492 + t3650*t9510);
  p_output1[46]=t8517*t9344 + t9355*t9620 + t3043*t9631 + t2925*t9641 + t3286*t9659 + t3175*t9687 + t3551*t9698 + t3508*t9737 + t3723*t9760 + t3666*t9794 - 1.1312*(-1.*t3650*t9760 + t3636*t9794) + 0.0306*(t3636*t9760 + t3650*t9794);
  p_output1[47]=t8150*t9344 + t9355*t9848 + t3043*t9871 + t2925*t9885 + t3286*t9913 + t3175*t9924 + t3551*t9934 + t3508*t9953 + t3723*t9978 + t3666*t9993 - 1.1312*(-1.*t3650*t9978 + t3636*t9993) + 0.0306*(t3636*t9978 + t3650*t9993);
  p_output1[48]=t10090*t3175 + t10112*t3508 + t10097*t3551 - 1.1312*(t10155*t3636 - 1.*t10127*t3650) + 0.0306*(t10127*t3636 + t10155*t3650) + t10155*t3666 + t10127*t3723 + t10054*t5189 + t10070*t5222 + t3286*t5241;
  p_output1[49]=t10054*t10225 + t10280*t3175 + t10258*t3286 + t10302*t3508 + t10289*t3551 - 1.1312*(t10331*t3636 - 1.*t10314*t3650) + 0.0306*(t10314*t3636 + t10331*t3650) + t10331*t3666 + t10314*t3723 + t10070*t9641;
  p_output1[50]=t10054*t10391 + t10424*t3175 + t10411*t3286 + t10447*t3508 + t10434*t3551 - 1.1312*(t10476*t3636 - 1.*t10467*t3650) + 0.0306*(t10467*t3636 + t10476*t3650) + t10476*t3666 + t10467*t3723 + t10070*t9885;
  p_output1[51]=t10560*t3551 - 1.1312*(t10607*t3636 - 1.*t10588*t3650) + 0.0306*(t10588*t3636 + t10607*t3650) + t10607*t3666 + t10588*t3723 + t10542*t5241 + t10554*t5350 + t3508*t5499;
  p_output1[52]=t10258*t10542 + t10554*t10658 + t10695*t3508 + t10684*t3551 - 1.1312*(t10743*t3636 - 1.*t10711*t3650) + 0.0306*(t10711*t3636 + t10743*t3650) + t10743*t3666 + t10711*t3723;
  p_output1[53]=t10411*t10542 + t10554*t10805 + t10821*t3508 + t10818*t3551 - 1.1312*(t10840*t3636 - 1.*t10830*t3650) + 0.0306*(t10830*t3636 + t10840*t3650) + t10840*t3666 + t10830*t3723;
  p_output1[54]=-1.1312*(t10961 + t10946*t3636) + t10946*t3666 + t10902*t5466 + t10924*t5499 + t3723*t5539 + 0.0306*(t10946*t3650 + t5636);
  p_output1[55]=t10695*t10924 + t10902*t11002 - 1.1312*(t11036 + t11032*t3636) + 0.0306*(t11046 + t11032*t3650) + t11032*t3666 + t11018*t3723;
  p_output1[56]=t10821*t10924 + t10902*t11072 - 1.1312*(t11106 + t11099*t3636) + 0.0306*(t11144 + t11099*t3650) + t11099*t3666 + t11086*t3723;
  p_output1[57]=t11177*t5539 + t11198*t5576 - 1.1312*(t10961 - 1.*t3636*t5576) + 0.0306*t5695;
  p_output1[58]=t11018*t11177 + t11198*t11249 - 1.1312*(t11036 - 1.*t11249*t3636) + 0.0306*(t11046 - 1.*t11249*t3650);
  p_output1[59]=t11086*t11177 + t11198*t11336 - 1.1312*(t11106 - 1.*t11336*t3636) + 0.0306*(t11144 - 1.*t11336*t3650);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "J_RightToeBottom_mex.hh"

namespace SymExpression
{

void J_RightToeBottom_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
