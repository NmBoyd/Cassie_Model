/*
 * Automatically Generated from Mathematica.
 * Fri 16 Feb 2018 12:25:27 GMT-05:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "p_LeftToeBottom_to_RightToeBottom.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(Eigen::Matrix<double,3,1> &p_output1, const Eigen::Matrix<double,14,1> &var1)
{
  double t30;
  double t207;
  double t504;
  double t946;
  double t970;
  double t1065;
  double t1083;
  double t1355;
  double t1536;
  double t1549;
  double t1565;
  double t1717;
  double t1493;
  double t1501;
  double t1535;
  double t1835;
  double t1852;
  double t1855;
  double t1978;
  double t2073;
  double t2093;
  double t2121;
  double t1930;
  double t1953;
  double t1955;
  double t2195;
  double t2297;
  double t2350;
  double t2520;
  double t2532;
  double t2566;
  double t2576;
  double t2394;
  double t2452;
  double t2485;
  double t2638;
  double t2641;
  double t2643;
  double t2811;
  double t2821;
  double t2846;
  double t2894;
  double t2736;
  double t2765;
  double t2773;
  double t2945;
  double t2959;
  double t2996;
  double t3408;
  double t3497;
  double t3409;
  double t3445;
  double t3499;
  double t3598;
  double t3486;
  double t3542;
  double t3572;
  double t3387;
  double t3606;
  double t3614;
  double t3621;
  double t3713;
  double t3591;
  double t3623;
  double t3636;
  double t3352;
  double t3728;
  double t3740;
  double t3783;
  double t3865;
  double t3707;
  double t3806;
  double t3824;
  double t3319;
  double t3914;
  double t3966;
  double t4138;
  double t4503;
  double t4424;
  double t4440;
  double t4490;
  double t4543;
  double t4544;
  double t4594;
  double t4635;
  double t4661;
  double t4583;
  double t4677;
  double t4689;
  double t4759;
  double t4770;
  double t4772;
  double t4722;
  double t4775;
  double t4793;
  double t4813;
  double t4870;
  double t4877;
  double t4812;
  double t4928;
  double t4938;
  double t4994;
  double t5012;
  double t5066;
  double t3858;
  double t4171;
  double t4220;
  double t4318;
  double t4324;
  double t4360;
  double t4987;
  double t5075;
  double t5079;
  double t5383;
  double t5410;
  double t5420;
  double t5679;
  double t5680;
  double t5695;
  double t5718;
  double t5731;
  double t5740;
  double t5711;
  double t5760;
  double t5788;
  double t5812;
  double t5819;
  double t5831;
  double t5791;
  double t5841;
  double t5857;
  double t5876;
  double t5877;
  double t5888;
  double t5867;
  double t5918;
  double t5959;
  double t5977;
  double t5983;
  double t5988;
  double t5490;
  double t5516;
  double t5539;
  double t5217;
  double t5424;
  double t5455;
  double t5960;
  double t6024;
  double t6069;
  double t6077;
  double t6087;
  double t6099;
  double t4310;
  double t4407;
  double t4423;
  double t5559;
  double t5576;
  double t5603;
  double t5460;
  double t5617;
  double t291;
  double t307;
  double t480;
  double t550;
  double t600;
  double t1075;
  double t1096;
  double t1286;
  double t1412;
  double t1415;
  double t1433;
  double t1592;
  double t1755;
  double t1756;
  double t1861;
  double t1864;
  double t1867;
  double t6516;
  double t6556;
  double t6581;
  double t6635;
  double t6643;
  double t6654;
  double t2110;
  double t2163;
  double t2188;
  double t2353;
  double t2360;
  double t2372;
  double t6670;
  double t6692;
  double t6703;
  double t6710;
  double t6721;
  double t6725;
  double t2575;
  double t2590;
  double t2606;
  double t2662;
  double t2680;
  double t2696;
  double t6750;
  double t6768;
  double t6770;
  double t6795;
  double t6799;
  double t6800;
  double t2867;
  double t2896;
  double t2898;
  double t3010;
  double t3026;
  double t3029;
  double t6813;
  double t6816;
  double t6821;
  double t6824;
  double t6835;
  double t6844;
  double t6247;
  double t6250;
  double t6266;
  double t6071;
  double t6122;
  double t6123;
  double t6149;
  double t6160;
  double t6168;
  double t6223;
  double t6269;
  double t6270;
  double t6273;
  double t6275;
  double t6317;
  double t6324;
  double t6325;
  double t6354;
  double t7027;
  double t7052;
  double t7053;
  double t7093;
  double t7131;
  double t7153;
  double t7183;
  double t7187;
  double t7201;
  double t7240;
  double t7251;
  double t7256;
  double t7278;
  double t7281;
  double t7287;
  double t7298;
  double t7307;
  double t7317;
  double t7502;
  double t7507;
  double t7580;
  double t7589;
  double t7667;
  double t7671;
  double t7760;
  double t7768;
  double t7805;
  double t7808;
  double t7435;
  double t7442;
  double t7595;
  double t7608;
  double t7615;
  double t7509;
  double t7523;
  double t7531;
  double t7633;
  double t7634;
  double t7652;
  double t7683;
  double t7684;
  double t7696;
  double t7706;
  double t7713;
  double t7714;
  double t7769;
  double t7772;
  double t7780;
  double t7787;
  double t7799;
  double t7800;
  double t7812;
  double t7816;
  double t7826;
  double t7829;
  double t7842;
  double t7860;
  double t7419;
  double t7421;
  double t7428;
  double t7431;
  double t7456;
  double t7459;
  double t7494;
  double t7495;
  double t7545;
  double t7562;
  double t7564;
  double t7568;
  double t7577;
  double t7617;
  double t7654;
  double t7697;
  double t7741;
  double t7784;
  double t7802;
  double t7828;
  double t7883;
  double t7900;
  double t7902;
  double t7926;
  double t7946;
  double t7976;
  double t7978;
  double t7979;
  double t7997;
  double t8002;
  double t8017;
  double t8019;
  double t8025;
  double t8039;
  double t8063;
  double t8078;
  double t8081;
  double t8086;
  double t41;
  double t262;
  double t858;
  double t1328;
  double t1455;
  double t1793;
  double t1872;
  double t2189;
  double t2378;
  double t2630;
  double t2699;
  double t2937;
  double t3033;
  double t3041;
  double t3068;
  double t3147;
  double t3151;
  double t3175;
  double t3197;
  double t3280;
  double t3296;
  double t3317;
  double t6975;
  double t6984;
  double t6985;
  double t7017;
  double t7022;
  double t7075;
  double t7180;
  double t7202;
  double t7263;
  double t7291;
  double t7334;
  double t7338;
  double t7341;
  double t7344;
  double t7351;
  double t7358;
  double t7362;
  double t7365;
  double t7372;
  double t7377;
  double t6396;
  double t6407;
  double t6418;
  double t6429;
  double t6464;
  double t6465;
  double t6513;
  double t6604;
  double t6655;
  double t6709;
  double t6731;
  double t6773;
  double t6802;
  double t6822;
  double t6850;
  double t6863;
  double t6870;
  double t6881;
  double t6891;
  double t6902;
  double t6923;
  double t6928;
  double t6929;
  double t6930;
  double t8134;
  double t8135;
  double t8136;
  double t8140;
  double t8153;
  double t8157;
  double t8159;
  double t8171;
  double t8181;
  double t8182;
  double t8185;
  double t8196;
  double t8199;
  double t8202;
  double t8247;
  double t8261;
  double t7938;
  double t8090;
  double t8094;
  double t8331;
  double t8348;
  double t8351;
  double t8103;
  double t8111;
  double t8119;
  t30 = Sin(var1[7]);
  t207 = Cos(var1[8]);
  t504 = Sin(var1[8]);
  t946 = Cos(var1[9]);
  t970 = -1.*t946;
  t1065 = 1. + t970;
  t1083 = Sin(var1[9]);
  t1355 = Cos(var1[7]);
  t1536 = Cos(var1[10]);
  t1549 = -1.*t1536;
  t1565 = 1. + t1549;
  t1717 = Sin(var1[10]);
  t1493 = t946*t30*t504;
  t1501 = t1355*t1083;
  t1535 = t1493 + t1501;
  t1835 = t1355*t946;
  t1852 = -1.*t30*t504*t1083;
  t1855 = t1835 + t1852;
  t1978 = Cos(var1[11]);
  t2073 = -1.*t1978;
  t2093 = 1. + t2073;
  t2121 = Sin(var1[11]);
  t1930 = t1536*t1535;
  t1953 = t1855*t1717;
  t1955 = t1930 + t1953;
  t2195 = t1536*t1855;
  t2297 = -1.*t1535*t1717;
  t2350 = t2195 + t2297;
  t2520 = Cos(var1[12]);
  t2532 = -1.*t2520;
  t2566 = 1. + t2532;
  t2576 = Sin(var1[12]);
  t2394 = t1978*t1955;
  t2452 = t2350*t2121;
  t2485 = t2394 + t2452;
  t2638 = t1978*t2350;
  t2641 = -1.*t1955*t2121;
  t2643 = t2638 + t2641;
  t2811 = Cos(var1[13]);
  t2821 = -1.*t2811;
  t2846 = 1. + t2821;
  t2894 = Sin(var1[13]);
  t2736 = t2520*t2485;
  t2765 = t2643*t2576;
  t2773 = t2736 + t2765;
  t2945 = t2520*t2643;
  t2959 = -1.*t2485*t2576;
  t2996 = t2945 + t2959;
  t3408 = Cos(var1[1]);
  t3497 = Cos(var1[3]);
  t3409 = Cos(var1[2]);
  t3445 = Sin(var1[3]);
  t3499 = Sin(var1[2]);
  t3598 = Cos(var1[4]);
  t3486 = -1.*t3408*t3409*t3445;
  t3542 = -1.*t3497*t3408*t3499;
  t3572 = t3486 + t3542;
  t3387 = Sin(var1[4]);
  t3606 = t3497*t3408*t3409;
  t3614 = -1.*t3408*t3445*t3499;
  t3621 = t3606 + t3614;
  t3713 = Cos(var1[5]);
  t3591 = t3387*t3572;
  t3623 = t3598*t3621;
  t3636 = t3591 + t3623;
  t3352 = Sin(var1[5]);
  t3728 = t3598*t3572;
  t3740 = -1.*t3387*t3621;
  t3783 = t3728 + t3740;
  t3865 = Cos(var1[6]);
  t3707 = -1.*t3352*t3636;
  t3806 = t3713*t3783;
  t3824 = t3707 + t3806;
  t3319 = Sin(var1[6]);
  t3914 = t3713*t3636;
  t3966 = t3352*t3783;
  t4138 = t3914 + t3966;
  t4503 = Sin(var1[0]);
  t4424 = Cos(var1[0]);
  t4440 = Sin(var1[1]);
  t4490 = t4424*t3409*t4440;
  t4543 = -1.*t4503*t3499;
  t4544 = t4490 + t4543;
  t4594 = -1.*t3409*t4503;
  t4635 = -1.*t4424*t4440*t3499;
  t4661 = t4594 + t4635;
  t4583 = -1.*t3445*t4544;
  t4677 = t3497*t4661;
  t4689 = t4583 + t4677;
  t4759 = t3497*t4544;
  t4770 = t3445*t4661;
  t4772 = t4759 + t4770;
  t4722 = t3387*t4689;
  t4775 = t3598*t4772;
  t4793 = t4722 + t4775;
  t4813 = t3598*t4689;
  t4870 = -1.*t3387*t4772;
  t4877 = t4813 + t4870;
  t4812 = -1.*t3352*t4793;
  t4928 = t3713*t4877;
  t4938 = t4812 + t4928;
  t4994 = t3713*t4793;
  t5012 = t3352*t4877;
  t5066 = t4994 + t5012;
  t3858 = t3319*t3824;
  t4171 = t3865*t4138;
  t4220 = t3858 + t4171;
  t4318 = t3865*t3824;
  t4324 = -1.*t3319*t4138;
  t4360 = t4318 + t4324;
  t4987 = t3319*t4938;
  t5075 = t3865*t5066;
  t5079 = t4987 + t5075;
  t5383 = t3865*t4938;
  t5410 = -1.*t3319*t5066;
  t5420 = t5383 + t5410;
  t5679 = t3409*t4503*t4440;
  t5680 = t4424*t3499;
  t5695 = t5679 + t5680;
  t5718 = t4424*t3409;
  t5731 = -1.*t4503*t4440*t3499;
  t5740 = t5718 + t5731;
  t5711 = -1.*t3445*t5695;
  t5760 = t3497*t5740;
  t5788 = t5711 + t5760;
  t5812 = t3497*t5695;
  t5819 = t3445*t5740;
  t5831 = t5812 + t5819;
  t5791 = t3387*t5788;
  t5841 = t3598*t5831;
  t5857 = t5791 + t5841;
  t5876 = t3598*t5788;
  t5877 = -1.*t3387*t5831;
  t5888 = t5876 + t5877;
  t5867 = -1.*t3352*t5857;
  t5918 = t3713*t5888;
  t5959 = t5867 + t5918;
  t5977 = t3713*t5857;
  t5983 = t3352*t5888;
  t5988 = t5977 + t5983;
  t5490 = -0.766044*t4220;
  t5516 = 0.642788*t4360;
  t5539 = t5490 + t5516;
  t5217 = -0.766044*t5079;
  t5424 = 0.642788*t5420;
  t5455 = t5217 + t5424;
  t5960 = t3319*t5959;
  t6024 = t3865*t5988;
  t6069 = t5960 + t6024;
  t6077 = t3865*t5959;
  t6087 = -1.*t3319*t5988;
  t6099 = t6077 + t6087;
  t4310 = 0.642788*t4220;
  t4407 = 0.766044*t4360;
  t4423 = t4310 + t4407;
  t5559 = 0.642788*t5079;
  t5576 = 0.766044*t5420;
  t5603 = t5559 + t5576;
  t5460 = t4423*t5455;
  t5617 = -1.*t5539*t5603;
  t291 = -1.*t207;
  t307 = 1. + t291;
  t480 = -0.135*t307;
  t550 = 0.049*t504;
  t600 = 0. + t480 + t550;
  t1075 = -0.049*t1065;
  t1096 = -0.09*t1083;
  t1286 = 0. + t1075 + t1096;
  t1412 = -0.09*t1065;
  t1415 = 0.049*t1083;
  t1433 = 0. + t1412 + t1415;
  t1592 = -0.049*t1565;
  t1755 = -0.21*t1717;
  t1756 = 0. + t1592 + t1755;
  t1861 = -0.21*t1565;
  t1864 = 0.049*t1717;
  t1867 = 0. + t1861 + t1864;
  t6516 = t1355*t946*t504;
  t6556 = -1.*t30*t1083;
  t6581 = t6516 + t6556;
  t6635 = -1.*t946*t30;
  t6643 = -1.*t1355*t504*t1083;
  t6654 = t6635 + t6643;
  t2110 = -0.0016*t2093;
  t2163 = -0.2707*t2121;
  t2188 = 0. + t2110 + t2163;
  t2353 = -0.2707*t2093;
  t2360 = 0.0016*t2121;
  t2372 = 0. + t2353 + t2360;
  t6670 = t1536*t6581;
  t6692 = t6654*t1717;
  t6703 = t6670 + t6692;
  t6710 = t1536*t6654;
  t6721 = -1.*t6581*t1717;
  t6725 = t6710 + t6721;
  t2575 = 0.0184*t2566;
  t2590 = -0.7055*t2576;
  t2606 = 0. + t2575 + t2590;
  t2662 = -0.7055*t2566;
  t2680 = -0.0184*t2576;
  t2696 = 0. + t2662 + t2680;
  t6750 = t1978*t6703;
  t6768 = t6725*t2121;
  t6770 = t6750 + t6768;
  t6795 = t1978*t6725;
  t6799 = -1.*t6703*t2121;
  t6800 = t6795 + t6799;
  t2867 = -0.0216*t2846;
  t2896 = -1.1135*t2894;
  t2898 = 0. + t2867 + t2896;
  t3010 = -1.1135*t2846;
  t3026 = 0.0216*t2894;
  t3029 = 0. + t3010 + t3026;
  t6813 = t2520*t6770;
  t6816 = t6800*t2576;
  t6821 = t6813 + t6816;
  t6824 = t2520*t6800;
  t6835 = -1.*t6770*t2576;
  t6844 = t6824 + t6835;
  t6247 = -0.766044*t6069;
  t6250 = 0.642788*t6099;
  t6266 = t6247 + t6250;
  t6071 = 0.642788*t6069;
  t6122 = 0.766044*t6099;
  t6123 = t6071 + t6122;
  t6149 = t4424*t3408*t5539;
  t6160 = t4440*t5455;
  t6168 = t6149 + t6160;
  t6223 = -1.*t6123*t6168;
  t6269 = t4424*t3408*t4423;
  t6270 = t4440*t5603;
  t6273 = t6269 + t6270;
  t6275 = t6266*t6273;
  t6317 = t5460 + t5617;
  t6324 = -1.*t3408*t4503*t6317;
  t6325 = 0. + t6223 + t6275 + t6324;
  t6354 = 1/t6325;
  t7027 = t207*t946*t1536;
  t7052 = -1.*t207*t1083*t1717;
  t7053 = t7027 + t7052;
  t7093 = -1.*t207*t1536*t1083;
  t7131 = -1.*t207*t946*t1717;
  t7153 = t7093 + t7131;
  t7183 = t1978*t7053;
  t7187 = t7153*t2121;
  t7201 = t7183 + t7187;
  t7240 = t1978*t7153;
  t7251 = -1.*t7053*t2121;
  t7256 = t7240 + t7251;
  t7278 = t2520*t7201;
  t7281 = t7256*t2576;
  t7287 = t7278 + t7281;
  t7298 = t2520*t7256;
  t7307 = -1.*t7201*t2576;
  t7317 = t7298 + t7307;
  t7502 = -1.*t3409;
  t7507 = 1. + t7502;
  t7580 = -1.*t3497;
  t7589 = 1. + t7580;
  t7667 = -1.*t3598;
  t7671 = 1. + t7667;
  t7760 = -1.*t3713;
  t7768 = 1. + t7760;
  t7805 = -1.*t3865;
  t7808 = 1. + t7805;
  t7435 = -1.*t3408;
  t7442 = 1. + t7435;
  t7595 = -0.049*t7589;
  t7608 = -0.21*t3445;
  t7615 = 0. + t7595 + t7608;
  t7509 = -0.049*t7507;
  t7523 = -0.09*t3499;
  t7531 = 0. + t7509 + t7523;
  t7633 = -0.21*t7589;
  t7634 = 0.049*t3445;
  t7652 = 0. + t7633 + t7634;
  t7683 = -0.2707*t7671;
  t7684 = 0.0016*t3387;
  t7696 = 0. + t7683 + t7684;
  t7706 = -0.0016*t7671;
  t7713 = -0.2707*t3387;
  t7714 = 0. + t7706 + t7713;
  t7769 = 0.0184*t7768;
  t7772 = -0.7055*t3352;
  t7780 = 0. + t7769 + t7772;
  t7787 = -0.7055*t7768;
  t7799 = -0.0184*t3352;
  t7800 = 0. + t7787 + t7799;
  t7812 = -1.1135*t7808;
  t7816 = 0.0216*t3319;
  t7826 = 0. + t7812 + t7816;
  t7829 = -0.0216*t7808;
  t7842 = -1.1135*t3319;
  t7860 = 0. + t7829 + t7842;
  t7419 = -1.*t4424;
  t7421 = 1. + t7419;
  t7428 = 0.135*t7421;
  t7431 = 0.1305*t4424*t3408;
  t7456 = 0.135*t7442;
  t7459 = 0.049*t4440;
  t7494 = 0. + t7456 + t7459;
  t7495 = t4424*t7494;
  t7545 = t4424*t4440*t7531;
  t7562 = -0.09*t7507;
  t7564 = 0.049*t3499;
  t7568 = 0. + t7562 + t7564;
  t7577 = -1.*t4503*t7568;
  t7617 = t7615*t4544;
  t7654 = t7652*t4661;
  t7697 = t7696*t4689;
  t7741 = t7714*t4772;
  t7784 = t7780*t4793;
  t7802 = t7800*t4877;
  t7828 = t7826*t4938;
  t7883 = t7860*t5066;
  t7900 = 0.0306*t5079;
  t7902 = -1.1312*t5420;
  t7926 = 0. + t7428 + t7431 + t7495 + t7545 + t7577 + t7617 + t7654 + t7697 + t7741 + t7784 + t7802 + t7828 + t7883 + t7900 + t7902;
  t7946 = -0.049*t7442;
  t7976 = t3408*t3409*t7615;
  t7978 = 0.004500000000000004*t4440;
  t7979 = t3408*t7531;
  t7997 = -1.*t3408*t7652*t3499;
  t8002 = t7696*t3572;
  t8017 = t7714*t3621;
  t8019 = t7780*t3636;
  t8025 = t7800*t3783;
  t8039 = t7826*t3824;
  t8063 = t7860*t4138;
  t8078 = 0.0306*t4220;
  t8081 = -1.1312*t4360;
  t8086 = 0. + t7946 + t7976 + t7978 + t7979 + t7997 + t8002 + t8017 + t8019 + t8025 + t8039 + t8063 + t8078 + t8081;
  t41 = 0.135*t30;
  t262 = -0.1305*t207*t30;
  t858 = t30*t600;
  t1328 = t30*t504*t1286;
  t1455 = t1355*t1433;
  t1793 = t1535*t1756;
  t1872 = t1855*t1867;
  t2189 = t1955*t2188;
  t2378 = t2350*t2372;
  t2630 = t2485*t2606;
  t2699 = t2643*t2696;
  t2937 = t2773*t2898;
  t3033 = t2996*t3029;
  t3041 = t2811*t2773;
  t3068 = t2996*t2894;
  t3147 = t3041 + t3068;
  t3151 = 0.0306*t3147;
  t3175 = t2811*t2996;
  t3197 = -1.*t2773*t2894;
  t3280 = t3175 + t3197;
  t3296 = -1.1312*t3280;
  t3317 = 0. + t41 + t262 + t858 + t1328 + t1455 + t1793 + t1872 + t2189 + t2378 + t2630 + t2699 + t2937 + t3033 + t3151 + t3296;
  t6975 = -0.049*t307;
  t6984 = -0.004500000000000004*t504;
  t6985 = t207*t1286;
  t7017 = t207*t946*t1756;
  t7022 = -1.*t207*t1083*t1867;
  t7075 = t7053*t2188;
  t7180 = t7153*t2372;
  t7202 = t7201*t2606;
  t7263 = t7256*t2696;
  t7291 = t7287*t2898;
  t7334 = t7317*t3029;
  t7338 = t2811*t7287;
  t7341 = t7317*t2894;
  t7344 = t7338 + t7341;
  t7351 = 0.0306*t7344;
  t7358 = t2811*t7317;
  t7362 = -1.*t7287*t2894;
  t7365 = t7358 + t7362;
  t7372 = -1.1312*t7365;
  t7377 = 0. + t6975 + t6984 + t6985 + t7017 + t7022 + t7075 + t7180 + t7202 + t7263 + t7291 + t7334 + t7351 + t7372;
  t6396 = -1.*t1355;
  t6407 = 1. + t6396;
  t6418 = -0.135*t6407;
  t6429 = -0.1305*t1355*t207;
  t6464 = t1355*t600;
  t6465 = t1355*t504*t1286;
  t6513 = -1.*t30*t1433;
  t6604 = t6581*t1756;
  t6655 = t6654*t1867;
  t6709 = t6703*t2188;
  t6731 = t6725*t2372;
  t6773 = t6770*t2606;
  t6802 = t6800*t2696;
  t6822 = t6821*t2898;
  t6850 = t6844*t3029;
  t6863 = t2811*t6821;
  t6870 = t6844*t2894;
  t6881 = t6863 + t6870;
  t6891 = 0.0306*t6881;
  t6902 = t2811*t6844;
  t6923 = -1.*t6821*t2894;
  t6928 = t6902 + t6923;
  t6929 = -1.1312*t6928;
  t6930 = 0. + t6418 + t6429 + t6464 + t6465 + t6513 + t6604 + t6655 + t6709 + t6731 + t6773 + t6802 + t6822 + t6850 + t6891 + t6929;
  t8134 = -0.135*t4503;
  t8135 = 0.1305*t3408*t4503;
  t8136 = t4503*t7494;
  t8140 = t4503*t4440*t7531;
  t8153 = t4424*t7568;
  t8157 = t7615*t5695;
  t8159 = t7652*t5740;
  t8171 = t7696*t5788;
  t8181 = t7714*t5831;
  t8182 = t7780*t5857;
  t8185 = t7800*t5888;
  t8196 = t7826*t5959;
  t8199 = t7860*t5988;
  t8202 = 0.0306*t6069;
  t8247 = -1.1312*t6099;
  t8261 = 0. + t8134 + t8135 + t8136 + t8140 + t8153 + t8157 + t8159 + t8171 + t8181 + t8182 + t8185 + t8196 + t8199 + t8202 + t8247;
  t7938 = t5539*t7926;
  t8090 = -1.*t8086*t5455;
  t8094 = t7938 + t8090;
  t8331 = t4424*t3408*t8086;
  t8348 = t4440*t7926;
  t8351 = t8331 + t8348;
  t8103 = t4423*t7926;
  t8111 = -1.*t8086*t5603;
  t8119 = t8103 + t8111;

  p_output1(0)=t3317*(0. + t5460 + t5617)*t6354 + (0. + t5539*t6123 - 1.*t4423*t6266)*t6354*t6930 + (0. - 1.*t5455*t6123 + t5603*t6266)*t6354*t7377 + t6354*(-1.*t6123*t8094 + t6266*t8119 - 1.*t6317*t8261);
  p_output1(1)=t3317*(0. - 1.*t4440*t5455 - 1.*t3408*t4424*t5539)*t6354 + (0. + t3408*t4503*t5539 + t4440*t6266)*t6354*t6930 + (0. - 1.*t3408*t4503*t5455 + t3408*t4424*t6266)*t6354*t7377 + t6354*(-1.*t3408*t4503*t8094 + t6168*t8261 - 1.*t6266*t8351);
  p_output1(2)=t3317*(0. + t6269 + t6270)*t6354 + (0. - 1.*t3408*t4423*t4503 - 1.*t4440*t6123)*t6354*t6930 + (0. + t3408*t4503*t5603 - 1.*t3408*t4424*t6123)*t6354*t7377 + t6354*(t3408*t4503*t8119 - 1.*t6273*t8261 + t6123*t8351);
}


       
void p_LeftToeBottom_to_RightToeBottom(Eigen::Matrix<double,3,1> &p_output1, const Eigen::Matrix<double,14,1> &var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
