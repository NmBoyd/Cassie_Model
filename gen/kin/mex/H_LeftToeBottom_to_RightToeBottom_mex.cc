/*
 * Automatically Generated from Mathematica.
 * Mon 26 Feb 2018 15:42:46 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t240;
  double t521;
  double t397;
  double t446;
  double t591;
  double t868;
  double t500;
  double t701;
  double t712;
  double t236;
  double t890;
  double t1041;
  double t1044;
  double t1116;
  double t856;
  double t1074;
  double t1089;
  double t233;
  double t1146;
  double t1183;
  double t1215;
  double t1390;
  double t1112;
  double t1281;
  double t1364;
  double t141;
  double t1476;
  double t1502;
  double t1510;
  double t2225;
  double t2188;
  double t2196;
  double t2209;
  double t2240;
  double t2270;
  double t2293;
  double t2296;
  double t2297;
  double t2282;
  double t2458;
  double t2468;
  double t2503;
  double t2526;
  double t2674;
  double t2486;
  double t2695;
  double t2710;
  double t2746;
  double t2813;
  double t2896;
  double t2716;
  double t2931;
  double t3126;
  double t3179;
  double t3222;
  double t3231;
  double t1381;
  double t1590;
  double t1632;
  double t1853;
  double t1894;
  double t1928;
  double t3161;
  double t3281;
  double t3328;
  double t3510;
  double t3520;
  double t3585;
  double t4679;
  double t4756;
  double t5441;
  double t6314;
  double t6481;
  double t6573;
  double t6248;
  double t6602;
  double t6659;
  double t6792;
  double t6814;
  double t6835;
  double t6719;
  double t6844;
  double t6891;
  double t6912;
  double t6913;
  double t6929;
  double t6897;
  double t6933;
  double t6948;
  double t6960;
  double t6972;
  double t7000;
  double t3801;
  double t3865;
  double t3967;
  double t3453;
  double t3618;
  double t3632;
  double t6950;
  double t7015;
  double t7024;
  double t7036;
  double t7038;
  double t7060;
  double t1792;
  double t1932;
  double t2039;
  double t4079;
  double t4084;
  double t4132;
  double t3682;
  double t4624;
  double t53;
  double t7096;
  double t7097;
  double t7103;
  double t7027;
  double t7061;
  double t7064;
  double t7069;
  double t7076;
  double t7079;
  double t7084;
  double t7104;
  double t7106;
  double t7107;
  double t7110;
  double t7111;
  double t7117;
  double t7118;
  double t7121;
  double t89;
  double t7134;
  double t7129;
  double t7217;
  double t7227;
  double t7215;
  double t7234;
  double t7240;
  double t7245;
  double t7221;
  double t7230;
  double t7231;
  double t7246;
  double t7214;
  double t7269;
  double t7271;
  double t7272;
  double t7232;
  double t7263;
  double t7267;
  double t7274;
  double t7212;
  double t7286;
  double t7287;
  double t7288;
  double t7268;
  double t7278;
  double t7283;
  double t7291;
  double t7211;
  double t7297;
  double t7298;
  double t7303;
  double t7285;
  double t7292;
  double t7293;
  double t7306;
  double t4625;
  double t7352;
  double t7358;
  double t7361;
  double t7338;
  double t7342;
  double t7343;
  double t7368;
  double t7370;
  double t7371;
  double t7344;
  double t7365;
  double t7366;
  double t7384;
  double t7386;
  double t7387;
  double t7367;
  double t7375;
  double t7381;
  double t7393;
  double t7394;
  double t7396;
  double t7383;
  double t7389;
  double t7390;
  double t7130;
  double t7131;
  double t7132;
  double t7420;
  double t7422;
  double t7423;
  double t7414;
  double t7415;
  double t7416;
  double t7430;
  double t7431;
  double t7432;
  double t7419;
  double t7425;
  double t7426;
  double t7441;
  double t7442;
  double t7443;
  double t7429;
  double t7434;
  double t7435;
  double t7136;
  double t7140;
  double t7141;
  double t7295;
  double t7307;
  double t7313;
  double t7322;
  double t7325;
  double t7326;
  double t7327;
  double t7331;
  double t7334;
  double t7147;
  double t7152;
  double t7155;
  double t7436;
  double t7444;
  double t7445;
  double t7446;
  double t7447;
  double t7450;
  double t7451;
  double t7454;
  double t7457;
  double t7163;
  double t7164;
  double t7165;
  double t7391;
  double t7397;
  double t7401;
  double t7403;
  double t7404;
  double t7407;
  double t7409;
  double t7410;
  double t7412;
  double t7176;
  double t7179;
  double t7182;
  double t7193;
  double t7195;
  double t7196;
  double t7198;
  double t7200;
  double t7201;
  double t7202;
  double t7473;
  double t7474;
  double t7476;
  double t7483;
  double t7485;
  double t7486;
  double t7479;
  double t7480;
  double t7481;
  double t7508;
  double t7509;
  double t7521;
  double t7522;
  double t7534;
  double t7535;
  double t7545;
  double t7546;
  double t7556;
  double t7557;
  double t7500;
  double t7501;
  double t7502;
  double t7503;
  double t7505;
  double t7511;
  double t7512;
  double t7513;
  double t7515;
  double t7517;
  double t7518;
  double t7524;
  double t7525;
  double t7527;
  double t7529;
  double t7530;
  double t7531;
  double t7536;
  double t7537;
  double t7538;
  double t7541;
  double t7542;
  double t7543;
  double t7548;
  double t7549;
  double t7550;
  double t7552;
  double t7553;
  double t7554;
  double t7558;
  double t7559;
  double t7560;
  double t7562;
  double t7563;
  double t7564;
  double t7614;
  double t7615;
  double t7624;
  double t7625;
  double t7634;
  double t7635;
  double t7644;
  double t7645;
  double t7654;
  double t7655;
  double t7608;
  double t7609;
  double t7626;
  double t7627;
  double t7628;
  double t7616;
  double t7617;
  double t7618;
  double t7630;
  double t7631;
  double t7632;
  double t7636;
  double t7637;
  double t7638;
  double t7640;
  double t7641;
  double t7642;
  double t7646;
  double t7647;
  double t7648;
  double t7650;
  double t7651;
  double t7652;
  double t7656;
  double t7657;
  double t7658;
  double t7660;
  double t7661;
  double t7662;
  double t7604;
  double t7605;
  double t7606;
  double t7607;
  double t7610;
  double t7611;
  double t7612;
  double t7613;
  double t7619;
  double t7620;
  double t7621;
  double t7622;
  double t7623;
  double t7629;
  double t7633;
  double t7639;
  double t7643;
  double t7649;
  double t7653;
  double t7659;
  double t7663;
  double t7664;
  double t7665;
  double t7666;
  double t7668;
  double t7669;
  double t7670;
  double t7671;
  double t7672;
  double t7673;
  double t7674;
  double t7675;
  double t7676;
  double t7677;
  double t7678;
  double t7679;
  double t7680;
  double t7681;
  double t7498;
  double t7499;
  double t7506;
  double t7514;
  double t7519;
  double t7528;
  double t7533;
  double t7540;
  double t7544;
  double t7551;
  double t7555;
  double t7561;
  double t7565;
  double t7566;
  double t7567;
  double t7568;
  double t7589;
  double t7590;
  double t7591;
  double t7592;
  double t7593;
  double t7594;
  double t7595;
  double t7596;
  double t7597;
  double t7598;
  double t7599;
  double t7600;
  double t7601;
  double t7602;
  double t7570;
  double t7571;
  double t7572;
  double t7573;
  double t7574;
  double t7575;
  double t7576;
  double t7577;
  double t7578;
  double t7579;
  double t7580;
  double t7581;
  double t7582;
  double t7583;
  double t7584;
  double t7585;
  double t7586;
  double t7587;
  double t7689;
  double t7690;
  double t7691;
  double t7692;
  double t7693;
  double t7694;
  double t7695;
  double t7696;
  double t7697;
  double t7698;
  double t7699;
  double t7700;
  double t7701;
  double t7702;
  double t7703;
  double t7704;
  double t7667;
  double t7682;
  double t7683;
  double t7712;
  double t7713;
  double t7714;
  double t7685;
  double t7686;
  double t7687;
  t240 = Cos(var1[1]);
  t521 = Cos(var1[3]);
  t397 = Cos(var1[2]);
  t446 = Sin(var1[3]);
  t591 = Sin(var1[2]);
  t868 = Cos(var1[4]);
  t500 = -1.*t240*t397*t446;
  t701 = -1.*t521*t240*t591;
  t712 = t500 + t701;
  t236 = Sin(var1[4]);
  t890 = t521*t240*t397;
  t1041 = -1.*t240*t446*t591;
  t1044 = t890 + t1041;
  t1116 = Cos(var1[5]);
  t856 = t236*t712;
  t1074 = t868*t1044;
  t1089 = t856 + t1074;
  t233 = Sin(var1[5]);
  t1146 = t868*t712;
  t1183 = -1.*t236*t1044;
  t1215 = t1146 + t1183;
  t1390 = Cos(var1[6]);
  t1112 = -1.*t233*t1089;
  t1281 = t1116*t1215;
  t1364 = t1112 + t1281;
  t141 = Sin(var1[6]);
  t1476 = t1116*t1089;
  t1502 = t233*t1215;
  t1510 = t1476 + t1502;
  t2225 = Sin(var1[0]);
  t2188 = Cos(var1[0]);
  t2196 = Sin(var1[1]);
  t2209 = t2188*t397*t2196;
  t2240 = -1.*t2225*t591;
  t2270 = t2209 + t2240;
  t2293 = -1.*t397*t2225;
  t2296 = -1.*t2188*t2196*t591;
  t2297 = t2293 + t2296;
  t2282 = -1.*t446*t2270;
  t2458 = t521*t2297;
  t2468 = t2282 + t2458;
  t2503 = t521*t2270;
  t2526 = t446*t2297;
  t2674 = t2503 + t2526;
  t2486 = t236*t2468;
  t2695 = t868*t2674;
  t2710 = t2486 + t2695;
  t2746 = t868*t2468;
  t2813 = -1.*t236*t2674;
  t2896 = t2746 + t2813;
  t2716 = -1.*t233*t2710;
  t2931 = t1116*t2896;
  t3126 = t2716 + t2931;
  t3179 = t1116*t2710;
  t3222 = t233*t2896;
  t3231 = t3179 + t3222;
  t1381 = t141*t1364;
  t1590 = t1390*t1510;
  t1632 = t1381 + t1590;
  t1853 = t1390*t1364;
  t1894 = -1.*t141*t1510;
  t1928 = t1853 + t1894;
  t3161 = t141*t3126;
  t3281 = t1390*t3231;
  t3328 = t3161 + t3281;
  t3510 = t1390*t3126;
  t3520 = -1.*t141*t3231;
  t3585 = t3510 + t3520;
  t4679 = t397*t2225*t2196;
  t4756 = t2188*t591;
  t5441 = t4679 + t4756;
  t6314 = t2188*t397;
  t6481 = -1.*t2225*t2196*t591;
  t6573 = t6314 + t6481;
  t6248 = -1.*t446*t5441;
  t6602 = t521*t6573;
  t6659 = t6248 + t6602;
  t6792 = t521*t5441;
  t6814 = t446*t6573;
  t6835 = t6792 + t6814;
  t6719 = t236*t6659;
  t6844 = t868*t6835;
  t6891 = t6719 + t6844;
  t6912 = t868*t6659;
  t6913 = -1.*t236*t6835;
  t6929 = t6912 + t6913;
  t6897 = -1.*t233*t6891;
  t6933 = t1116*t6929;
  t6948 = t6897 + t6933;
  t6960 = t1116*t6891;
  t6972 = t233*t6929;
  t7000 = t6960 + t6972;
  t3801 = -0.766044*t1632;
  t3865 = 0.642788*t1928;
  t3967 = t3801 + t3865;
  t3453 = -0.766044*t3328;
  t3618 = 0.642788*t3585;
  t3632 = t3453 + t3618;
  t6950 = t141*t6948;
  t7015 = t1390*t7000;
  t7024 = t6950 + t7015;
  t7036 = t1390*t6948;
  t7038 = -1.*t141*t7000;
  t7060 = t7036 + t7038;
  t1792 = 0.642788*t1632;
  t1932 = 0.766044*t1928;
  t2039 = t1792 + t1932;
  t4079 = 0.642788*t3328;
  t4084 = 0.766044*t3585;
  t4132 = t4079 + t4084;
  t3682 = t2039*t3632;
  t4624 = -1.*t3967*t4132;
  t53 = Cos(var1[8]);
  t7096 = -0.766044*t7024;
  t7097 = 0.642788*t7060;
  t7103 = t7096 + t7097;
  t7027 = 0.642788*t7024;
  t7061 = 0.766044*t7060;
  t7064 = t7027 + t7061;
  t7069 = t2188*t240*t3967;
  t7076 = t2196*t3632;
  t7079 = t7069 + t7076;
  t7084 = -1.*t7064*t7079;
  t7104 = t2188*t240*t2039;
  t7106 = t2196*t4132;
  t7107 = t7104 + t7106;
  t7110 = t7103*t7107;
  t7111 = t3682 + t4624;
  t7117 = -1.*t240*t2225*t7111;
  t7118 = 0. + t7084 + t7110 + t7117;
  t7121 = 1/t7118;
  t89 = Sin(var1[7]);
  t7134 = Sin(var1[8]);
  t7129 = Cos(var1[7]);
  t7217 = Cos(var1[9]);
  t7227 = Sin(var1[9]);
  t7215 = Cos(var1[10]);
  t7234 = t7129*t7217;
  t7240 = -1.*t89*t7134*t7227;
  t7245 = t7234 + t7240;
  t7221 = t7217*t89*t7134;
  t7230 = t7129*t7227;
  t7231 = t7221 + t7230;
  t7246 = Sin(var1[10]);
  t7214 = Cos(var1[11]);
  t7269 = t7215*t7245;
  t7271 = -1.*t7231*t7246;
  t7272 = t7269 + t7271;
  t7232 = t7215*t7231;
  t7263 = t7245*t7246;
  t7267 = t7232 + t7263;
  t7274 = Sin(var1[11]);
  t7212 = Cos(var1[12]);
  t7286 = t7214*t7272;
  t7287 = -1.*t7267*t7274;
  t7288 = t7286 + t7287;
  t7268 = t7214*t7267;
  t7278 = t7272*t7274;
  t7283 = t7268 + t7278;
  t7291 = Sin(var1[12]);
  t7211 = Cos(var1[13]);
  t7297 = t7212*t7288;
  t7298 = -1.*t7283*t7291;
  t7303 = t7297 + t7298;
  t7285 = t7212*t7283;
  t7292 = t7288*t7291;
  t7293 = t7285 + t7292;
  t7306 = Sin(var1[13]);
  t4625 = 0. + t3682 + t4624;
  t7352 = -1.*t7217*t89;
  t7358 = -1.*t7129*t7134*t7227;
  t7361 = t7352 + t7358;
  t7338 = t7129*t7217*t7134;
  t7342 = -1.*t89*t7227;
  t7343 = t7338 + t7342;
  t7368 = t7215*t7361;
  t7370 = -1.*t7343*t7246;
  t7371 = t7368 + t7370;
  t7344 = t7215*t7343;
  t7365 = t7361*t7246;
  t7366 = t7344 + t7365;
  t7384 = t7214*t7371;
  t7386 = -1.*t7366*t7274;
  t7387 = t7384 + t7386;
  t7367 = t7214*t7366;
  t7375 = t7371*t7274;
  t7381 = t7367 + t7375;
  t7393 = t7212*t7387;
  t7394 = -1.*t7381*t7291;
  t7396 = t7393 + t7394;
  t7383 = t7212*t7381;
  t7389 = t7387*t7291;
  t7390 = t7383 + t7389;
  t7130 = -1.*t2039*t7103;
  t7131 = t3967*t7064;
  t7132 = 0. + t7130 + t7131;
  t7420 = -1.*t53*t7215*t7227;
  t7422 = -1.*t53*t7217*t7246;
  t7423 = t7420 + t7422;
  t7414 = t53*t7217*t7215;
  t7415 = -1.*t53*t7227*t7246;
  t7416 = t7414 + t7415;
  t7430 = t7214*t7423;
  t7431 = -1.*t7416*t7274;
  t7432 = t7430 + t7431;
  t7419 = t7214*t7416;
  t7425 = t7423*t7274;
  t7426 = t7419 + t7425;
  t7441 = t7212*t7432;
  t7442 = -1.*t7426*t7291;
  t7443 = t7441 + t7442;
  t7429 = t7212*t7426;
  t7434 = t7432*t7291;
  t7435 = t7429 + t7434;
  t7136 = t4132*t7103;
  t7140 = -1.*t3632*t7064;
  t7141 = 0. + t7136 + t7140;
  t7295 = t7211*t7293;
  t7307 = t7303*t7306;
  t7313 = t7295 + t7307;
  t7322 = 0.642788*t7313;
  t7325 = t7211*t7303;
  t7326 = -1.*t7293*t7306;
  t7327 = t7325 + t7326;
  t7331 = 0.766044*t7327;
  t7334 = t7322 + t7331;
  t7147 = -1.*t2188*t240*t3967;
  t7152 = -1.*t2196*t3632;
  t7155 = 0. + t7147 + t7152;
  t7436 = t7211*t7435;
  t7444 = t7443*t7306;
  t7445 = t7436 + t7444;
  t7446 = 0.642788*t7445;
  t7447 = t7211*t7443;
  t7450 = -1.*t7435*t7306;
  t7451 = t7447 + t7450;
  t7454 = 0.766044*t7451;
  t7457 = t7446 + t7454;
  t7163 = -1.*t240*t2225*t3632;
  t7164 = t2188*t240*t7103;
  t7165 = 0. + t7163 + t7164;
  t7391 = t7211*t7390;
  t7397 = t7396*t7306;
  t7401 = t7391 + t7397;
  t7403 = 0.642788*t7401;
  t7404 = t7211*t7396;
  t7407 = -1.*t7390*t7306;
  t7409 = t7404 + t7407;
  t7410 = 0.766044*t7409;
  t7412 = t7403 + t7410;
  t7176 = t240*t2225*t3967;
  t7179 = t2196*t7103;
  t7182 = 0. + t7176 + t7179;
  t7193 = 0. + t7104 + t7106;
  t7195 = t240*t2225*t4132;
  t7196 = -1.*t2188*t240*t7064;
  t7198 = 0. + t7195 + t7196;
  t7200 = -1.*t240*t2225*t2039;
  t7201 = -1.*t2196*t7064;
  t7202 = 0. + t7200 + t7201;
  t7473 = -0.766044*t7313;
  t7474 = 0.642788*t7327;
  t7476 = t7473 + t7474;
  t7483 = -0.766044*t7445;
  t7485 = 0.642788*t7451;
  t7486 = t7483 + t7485;
  t7479 = -0.766044*t7401;
  t7480 = 0.642788*t7409;
  t7481 = t7479 + t7480;
  t7508 = -1.*t7217;
  t7509 = 1. + t7508;
  t7521 = -1.*t7215;
  t7522 = 1. + t7521;
  t7534 = -1.*t7214;
  t7535 = 1. + t7534;
  t7545 = -1.*t7212;
  t7546 = 1. + t7545;
  t7556 = -1.*t7211;
  t7557 = 1. + t7556;
  t7500 = -1.*t53;
  t7501 = 1. + t7500;
  t7502 = -0.135*t7501;
  t7503 = 0.049*t7134;
  t7505 = 0. + t7502 + t7503;
  t7511 = -0.049*t7509;
  t7512 = -0.09*t7227;
  t7513 = 0. + t7511 + t7512;
  t7515 = -0.09*t7509;
  t7517 = 0.049*t7227;
  t7518 = 0. + t7515 + t7517;
  t7524 = -0.049*t7522;
  t7525 = -0.21*t7246;
  t7527 = 0. + t7524 + t7525;
  t7529 = -0.21*t7522;
  t7530 = 0.049*t7246;
  t7531 = 0. + t7529 + t7530;
  t7536 = -0.0016*t7535;
  t7537 = -0.2707*t7274;
  t7538 = 0. + t7536 + t7537;
  t7541 = -0.2707*t7535;
  t7542 = 0.0016*t7274;
  t7543 = 0. + t7541 + t7542;
  t7548 = 0.0184*t7546;
  t7549 = -0.7055*t7291;
  t7550 = 0. + t7548 + t7549;
  t7552 = -0.7055*t7546;
  t7553 = -0.0184*t7291;
  t7554 = 0. + t7552 + t7553;
  t7558 = -0.0216*t7557;
  t7559 = -1.1135*t7306;
  t7560 = 0. + t7558 + t7559;
  t7562 = -1.1135*t7557;
  t7563 = 0.0216*t7306;
  t7564 = 0. + t7562 + t7563;
  t7614 = -1.*t397;
  t7615 = 1. + t7614;
  t7624 = -1.*t521;
  t7625 = 1. + t7624;
  t7634 = -1.*t868;
  t7635 = 1. + t7634;
  t7644 = -1.*t1116;
  t7645 = 1. + t7644;
  t7654 = -1.*t1390;
  t7655 = 1. + t7654;
  t7608 = -1.*t240;
  t7609 = 1. + t7608;
  t7626 = -0.049*t7625;
  t7627 = -0.21*t446;
  t7628 = 0. + t7626 + t7627;
  t7616 = -0.049*t7615;
  t7617 = -0.09*t591;
  t7618 = 0. + t7616 + t7617;
  t7630 = -0.21*t7625;
  t7631 = 0.049*t446;
  t7632 = 0. + t7630 + t7631;
  t7636 = -0.2707*t7635;
  t7637 = 0.0016*t236;
  t7638 = 0. + t7636 + t7637;
  t7640 = -0.0016*t7635;
  t7641 = -0.2707*t236;
  t7642 = 0. + t7640 + t7641;
  t7646 = 0.0184*t7645;
  t7647 = -0.7055*t233;
  t7648 = 0. + t7646 + t7647;
  t7650 = -0.7055*t7645;
  t7651 = -0.0184*t233;
  t7652 = 0. + t7650 + t7651;
  t7656 = -1.1135*t7655;
  t7657 = 0.0216*t141;
  t7658 = 0. + t7656 + t7657;
  t7660 = -0.0216*t7655;
  t7661 = -1.1135*t141;
  t7662 = 0. + t7660 + t7661;
  t7604 = -1.*t2188;
  t7605 = 1. + t7604;
  t7606 = 0.135*t7605;
  t7607 = 0.1305*t2188*t240;
  t7610 = 0.135*t7609;
  t7611 = 0.049*t2196;
  t7612 = 0. + t7610 + t7611;
  t7613 = t2188*t7612;
  t7619 = t2188*t2196*t7618;
  t7620 = -0.09*t7615;
  t7621 = 0.049*t591;
  t7622 = 0. + t7620 + t7621;
  t7623 = -1.*t2225*t7622;
  t7629 = t7628*t2270;
  t7633 = t7632*t2297;
  t7639 = t7638*t2468;
  t7643 = t7642*t2674;
  t7649 = t7648*t2710;
  t7653 = t7652*t2896;
  t7659 = t7658*t3126;
  t7663 = t7662*t3231;
  t7664 = 0.0306*t3328;
  t7665 = -1.1312*t3585;
  t7666 = 0. + t7606 + t7607 + t7613 + t7619 + t7623 + t7629 + t7633 + t7639 + t7643 + t7649 + t7653 + t7659 + t7663 + t7664 + t7665;
  t7668 = -0.049*t7609;
  t7669 = t240*t397*t7628;
  t7670 = 0.004500000000000004*t2196;
  t7671 = t240*t7618;
  t7672 = -1.*t240*t7632*t591;
  t7673 = t7638*t712;
  t7674 = t7642*t1044;
  t7675 = t7648*t1089;
  t7676 = t7652*t1215;
  t7677 = t7658*t1364;
  t7678 = t7662*t1510;
  t7679 = 0.0306*t1632;
  t7680 = -1.1312*t1928;
  t7681 = 0. + t7668 + t7669 + t7670 + t7671 + t7672 + t7673 + t7674 + t7675 + t7676 + t7677 + t7678 + t7679 + t7680;
  t7498 = 0.135*t89;
  t7499 = -0.1305*t53*t89;
  t7506 = t89*t7505;
  t7514 = t89*t7134*t7513;
  t7519 = t7129*t7518;
  t7528 = t7231*t7527;
  t7533 = t7245*t7531;
  t7540 = t7267*t7538;
  t7544 = t7272*t7543;
  t7551 = t7283*t7550;
  t7555 = t7288*t7554;
  t7561 = t7293*t7560;
  t7565 = t7303*t7564;
  t7566 = 0.0306*t7313;
  t7567 = -1.1312*t7327;
  t7568 = 0. + t7498 + t7499 + t7506 + t7514 + t7519 + t7528 + t7533 + t7540 + t7544 + t7551 + t7555 + t7561 + t7565 + t7566 + t7567;
  t7589 = -0.049*t7501;
  t7590 = -0.004500000000000004*t7134;
  t7591 = t53*t7513;
  t7592 = t53*t7217*t7527;
  t7593 = -1.*t53*t7227*t7531;
  t7594 = t7416*t7538;
  t7595 = t7423*t7543;
  t7596 = t7426*t7550;
  t7597 = t7432*t7554;
  t7598 = t7435*t7560;
  t7599 = t7443*t7564;
  t7600 = 0.0306*t7445;
  t7601 = -1.1312*t7451;
  t7602 = 0. + t7589 + t7590 + t7591 + t7592 + t7593 + t7594 + t7595 + t7596 + t7597 + t7598 + t7599 + t7600 + t7601;
  t7570 = -1.*t7129;
  t7571 = 1. + t7570;
  t7572 = -0.135*t7571;
  t7573 = -0.1305*t7129*t53;
  t7574 = t7129*t7505;
  t7575 = t7129*t7134*t7513;
  t7576 = -1.*t89*t7518;
  t7577 = t7343*t7527;
  t7578 = t7361*t7531;
  t7579 = t7366*t7538;
  t7580 = t7371*t7543;
  t7581 = t7381*t7550;
  t7582 = t7387*t7554;
  t7583 = t7390*t7560;
  t7584 = t7396*t7564;
  t7585 = 0.0306*t7401;
  t7586 = -1.1312*t7409;
  t7587 = 0. + t7572 + t7573 + t7574 + t7575 + t7576 + t7577 + t7578 + t7579 + t7580 + t7581 + t7582 + t7583 + t7584 + t7585 + t7586;
  t7689 = -0.135*t2225;
  t7690 = 0.1305*t240*t2225;
  t7691 = t2225*t7612;
  t7692 = t2225*t2196*t7618;
  t7693 = t2188*t7622;
  t7694 = t7628*t5441;
  t7695 = t7632*t6573;
  t7696 = t7638*t6659;
  t7697 = t7642*t6835;
  t7698 = t7648*t6891;
  t7699 = t7652*t6929;
  t7700 = t7658*t6948;
  t7701 = t7662*t7000;
  t7702 = 0.0306*t7024;
  t7703 = -1.1312*t7060;
  t7704 = 0. + t7689 + t7690 + t7691 + t7692 + t7693 + t7694 + t7695 + t7696 + t7697 + t7698 + t7699 + t7700 + t7701 + t7702 + t7703;
  t7667 = t3967*t7666;
  t7682 = -1.*t7681*t3632;
  t7683 = t7667 + t7682;
  t7712 = t2188*t240*t7681;
  t7713 = t2196*t7666;
  t7714 = t7712 + t7713;
  t7685 = t2039*t7666;
  t7686 = -1.*t7681*t4132;
  t7687 = t7685 + t7686;
  p_output1[0]=0. - 1.*t53*t7121*t7129*t7132 + t7121*t7134*t7141 - 1.*t4625*t53*t7121*t89;
  p_output1[1]=0. + t7121*t7134*t7165 - 1.*t53*t7121*t7129*t7182 - 1.*t53*t7121*t7155*t89;
  p_output1[2]=0. + t7121*t7134*t7198 - 1.*t53*t7121*t7129*t7202 - 1.*t53*t7121*t7193*t89;
  p_output1[3]=0.;
  p_output1[4]=0. + t4625*t7121*t7334 + t7121*t7132*t7412 + t7121*t7141*t7457;
  p_output1[5]=0. + t7121*t7155*t7334 + t7121*t7182*t7412 + t7121*t7165*t7457;
  p_output1[6]=0. + t7121*t7193*t7334 + t7121*t7202*t7412 + t7121*t7198*t7457;
  p_output1[7]=0.;
  p_output1[8]=0. + t4625*t7121*t7476 + t7121*t7132*t7481 + t7121*t7141*t7486;
  p_output1[9]=0. + t7121*t7155*t7476 + t7121*t7182*t7481 + t7121*t7165*t7486;
  p_output1[10]=0. + t7121*t7193*t7476 + t7121*t7202*t7481 + t7121*t7198*t7486;
  p_output1[11]=0.;
  p_output1[12]=t4625*t7121*t7568 + t7121*t7132*t7587 + t7121*t7141*t7602 + t7121*(-1.*t7064*t7683 + t7103*t7687 - 1.*t7111*t7704);
  p_output1[13]=t7121*t7155*t7568 + t7121*t7182*t7587 + t7121*t7165*t7602 + t7121*(-1.*t2225*t240*t7683 + t7079*t7704 - 1.*t7103*t7714);
  p_output1[14]=t7121*t7193*t7568 + t7121*t7202*t7587 + t7121*t7198*t7602 + t7121*(t2225*t240*t7687 - 1.*t7107*t7704 + t7064*t7714);
  p_output1[15]=0. + (t7084 + t7110 + t7117)*t7121;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 14 && ncols == 1) && 
      !(mrows == 1 && ncols == 14))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 4, (mwSize) 4, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "H_LeftToeBottom_to_RightToeBottom_mex.hh"

namespace SymExpression
{

void H_LeftToeBottom_to_RightToeBottom_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
