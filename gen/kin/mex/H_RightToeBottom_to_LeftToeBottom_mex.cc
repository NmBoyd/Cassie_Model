/*
 * Automatically Generated from Mathematica.
 * Fri 16 Mar 2018 12:16:16 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t3234;
  double t3263;
  double t3284;
  double t3258;
  double t3287;
  double t3225;
  double t3312;
  double t3313;
  double t3316;
  double t3272;
  double t3292;
  double t3297;
  double t3318;
  double t3209;
  double t3344;
  double t3347;
  double t3352;
  double t3303;
  double t3320;
  double t3331;
  double t3356;
  double t3167;
  double t3363;
  double t3366;
  double t3372;
  double t3339;
  double t3357;
  double t3358;
  double t3378;
  double t3409;
  double t3403;
  double t3406;
  double t3415;
  double t3416;
  double t3417;
  double t3408;
  double t3410;
  double t3412;
  double t3425;
  double t3426;
  double t3427;
  double t3413;
  double t3420;
  double t3421;
  double t3433;
  double t3435;
  double t3437;
  double t3422;
  double t3429;
  double t3430;
  double t3444;
  double t3447;
  double t3448;
  double t3432;
  double t3438;
  double t3439;
  double t3361;
  double t3381;
  double t3382;
  double t3385;
  double t3387;
  double t3389;
  double t3441;
  double t3450;
  double t3451;
  double t3453;
  double t3454;
  double t3456;
  double t3466;
  double t3468;
  double t3469;
  double t3461;
  double t3463;
  double t3464;
  double t3478;
  double t3479;
  double t3480;
  double t3474;
  double t3475;
  double t3476;
  double t3484;
  double t3485;
  double t3486;
  double t3477;
  double t3481;
  double t3482;
  double t3494;
  double t3495;
  double t3496;
  double t3483;
  double t3489;
  double t3490;
  double t3502;
  double t3504;
  double t3506;
  double t3491;
  double t3498;
  double t3499;
  double t3452;
  double t3457;
  double t3458;
  double t3384;
  double t3394;
  double t3400;
  double t3501;
  double t3507;
  double t3508;
  double t3511;
  double t3512;
  double t3513;
  double t3510;
  double t3514;
  double t3515;
  double t3520;
  double t3521;
  double t3522;
  double t3114;
  double t3526;
  double t3527;
  double t3473;
  double t3516;
  double t3517;
  double t3518;
  double t3519;
  double t3523;
  double t3524;
  double t3525;
  double t3528;
  double t3529;
  double t3530;
  double t3531;
  double t1100;
  double t3534;
  double t3539;
  double t3536;
  double t3537;
  double t3538;
  double t3572;
  double t3569;
  double t3570;
  double t3573;
  double t3577;
  double t3571;
  double t3574;
  double t3575;
  double t3568;
  double t3578;
  double t3579;
  double t3580;
  double t3584;
  double t3576;
  double t3581;
  double t3582;
  double t3567;
  double t3585;
  double t3586;
  double t3587;
  double t3591;
  double t3583;
  double t3588;
  double t3589;
  double t3566;
  double t3592;
  double t3593;
  double t3594;
  double t3460;
  double t3470;
  double t3472;
  double t3604;
  double t3605;
  double t3606;
  double t3608;
  double t3609;
  double t3610;
  double t3607;
  double t3611;
  double t3612;
  double t3614;
  double t3615;
  double t3616;
  double t3613;
  double t3617;
  double t3618;
  double t3620;
  double t3621;
  double t3622;
  double t3619;
  double t3623;
  double t3624;
  double t3626;
  double t3627;
  double t3628;
  double t3533;
  double t3638;
  double t3639;
  double t3640;
  double t3642;
  double t3643;
  double t3644;
  double t3641;
  double t3645;
  double t3646;
  double t3648;
  double t3649;
  double t3650;
  double t3647;
  double t3651;
  double t3652;
  double t3654;
  double t3655;
  double t3656;
  double t3653;
  double t3657;
  double t3658;
  double t3660;
  double t3661;
  double t3662;
  double t3550;
  double t3551;
  double t3552;
  double t3590;
  double t3595;
  double t3596;
  double t3597;
  double t3598;
  double t3599;
  double t3600;
  double t3601;
  double t3602;
  double t3542;
  double t3543;
  double t3544;
  double t3625;
  double t3629;
  double t3630;
  double t3631;
  double t3632;
  double t3633;
  double t3634;
  double t3635;
  double t3636;
  double t3546;
  double t3547;
  double t3548;
  double t3659;
  double t3663;
  double t3664;
  double t3665;
  double t3666;
  double t3667;
  double t3668;
  double t3669;
  double t3670;
  double t3561;
  double t3562;
  double t3563;
  double t3555;
  double t3556;
  double t3557;
  double t3559;
  double t3681;
  double t3682;
  double t3683;
  double t3685;
  double t3686;
  double t3687;
  double t3689;
  double t3690;
  double t3691;
  double t3712;
  double t3713;
  double t3722;
  double t3723;
  double t3732;
  double t3733;
  double t3742;
  double t3743;
  double t3752;
  double t3753;
  double t3706;
  double t3707;
  double t3714;
  double t3715;
  double t3716;
  double t3724;
  double t3725;
  double t3726;
  double t3728;
  double t3729;
  double t3730;
  double t3734;
  double t3735;
  double t3736;
  double t3738;
  double t3739;
  double t3740;
  double t3744;
  double t3745;
  double t3746;
  double t3748;
  double t3749;
  double t3750;
  double t3754;
  double t3755;
  double t3756;
  double t3758;
  double t3759;
  double t3760;
  double t3702;
  double t3703;
  double t3704;
  double t3705;
  double t3708;
  double t3709;
  double t3710;
  double t3711;
  double t3717;
  double t3718;
  double t3719;
  double t3720;
  double t3721;
  double t3727;
  double t3731;
  double t3737;
  double t3741;
  double t3747;
  double t3751;
  double t3757;
  double t3761;
  double t3762;
  double t3763;
  double t3764;
  double t3766;
  double t3767;
  double t3768;
  double t3769;
  double t3770;
  double t3771;
  double t3772;
  double t3773;
  double t3774;
  double t3775;
  double t3776;
  double t3777;
  double t3778;
  double t3779;
  double t3809;
  double t3810;
  double t3826;
  double t3827;
  double t3836;
  double t3837;
  double t3846;
  double t3847;
  double t3806;
  double t3807;
  double t3816;
  double t3817;
  double t3818;
  double t3819;
  double t3820;
  double t3811;
  double t3812;
  double t3813;
  double t3822;
  double t3823;
  double t3824;
  double t3828;
  double t3829;
  double t3830;
  double t3832;
  double t3833;
  double t3834;
  double t3838;
  double t3839;
  double t3840;
  double t3842;
  double t3843;
  double t3844;
  double t3848;
  double t3849;
  double t3850;
  double t3852;
  double t3853;
  double t3854;
  double t3864;
  double t3865;
  double t3866;
  double t3869;
  double t3870;
  double t3871;
  double t3787;
  double t3788;
  double t3789;
  double t3790;
  double t3791;
  double t3792;
  double t3793;
  double t3794;
  double t3795;
  double t3796;
  double t3797;
  double t3798;
  double t3799;
  double t3800;
  double t3801;
  double t3802;
  double t3765;
  double t3780;
  double t3781;
  double t3808;
  double t3814;
  double t3815;
  double t3821;
  double t3825;
  double t3831;
  double t3835;
  double t3841;
  double t3845;
  double t3851;
  double t3855;
  double t3856;
  double t3857;
  double t3858;
  double t3860;
  double t3861;
  double t3862;
  double t3863;
  double t3867;
  double t3868;
  double t3872;
  double t3873;
  double t3874;
  double t3875;
  double t3876;
  double t3877;
  double t3878;
  double t3879;
  double t3880;
  double t3881;
  double t3882;
  double t3883;
  double t3885;
  double t3886;
  double t3887;
  double t3888;
  double t3889;
  double t3890;
  double t3891;
  double t3892;
  double t3893;
  double t3894;
  double t3895;
  double t3896;
  double t3897;
  double t3898;
  double t3899;
  double t3900;
  double t3903;
  double t3904;
  double t3905;
  double t3783;
  double t3784;
  double t3785;
  t3234 = Cos(var1[8]);
  t3263 = Cos(var1[10]);
  t3284 = Sin(var1[9]);
  t3258 = Cos(var1[9]);
  t3287 = Sin(var1[10]);
  t3225 = Cos(var1[11]);
  t3312 = -1.*t3234*t3263*t3284;
  t3313 = -1.*t3234*t3258*t3287;
  t3316 = t3312 + t3313;
  t3272 = t3234*t3258*t3263;
  t3292 = -1.*t3234*t3284*t3287;
  t3297 = t3272 + t3292;
  t3318 = Sin(var1[11]);
  t3209 = Cos(var1[12]);
  t3344 = t3225*t3316;
  t3347 = -1.*t3297*t3318;
  t3352 = t3344 + t3347;
  t3303 = t3225*t3297;
  t3320 = t3316*t3318;
  t3331 = t3303 + t3320;
  t3356 = Sin(var1[12]);
  t3167 = Cos(var1[13]);
  t3363 = t3209*t3352;
  t3366 = -1.*t3331*t3356;
  t3372 = t3363 + t3366;
  t3339 = t3209*t3331;
  t3357 = t3352*t3356;
  t3358 = t3339 + t3357;
  t3378 = Sin(var1[13]);
  t3409 = Cos(var1[7]);
  t3403 = Sin(var1[7]);
  t3406 = Sin(var1[8]);
  t3415 = t3409*t3258;
  t3416 = -1.*t3403*t3406*t3284;
  t3417 = t3415 + t3416;
  t3408 = t3258*t3403*t3406;
  t3410 = t3409*t3284;
  t3412 = t3408 + t3410;
  t3425 = t3263*t3417;
  t3426 = -1.*t3412*t3287;
  t3427 = t3425 + t3426;
  t3413 = t3263*t3412;
  t3420 = t3417*t3287;
  t3421 = t3413 + t3420;
  t3433 = t3225*t3427;
  t3435 = -1.*t3421*t3318;
  t3437 = t3433 + t3435;
  t3422 = t3225*t3421;
  t3429 = t3427*t3318;
  t3430 = t3422 + t3429;
  t3444 = t3209*t3437;
  t3447 = -1.*t3430*t3356;
  t3448 = t3444 + t3447;
  t3432 = t3209*t3430;
  t3438 = t3437*t3356;
  t3439 = t3432 + t3438;
  t3361 = t3167*t3358;
  t3381 = t3372*t3378;
  t3382 = t3361 + t3381;
  t3385 = t3167*t3372;
  t3387 = -1.*t3358*t3378;
  t3389 = t3385 + t3387;
  t3441 = t3167*t3439;
  t3450 = t3448*t3378;
  t3451 = t3441 + t3450;
  t3453 = t3167*t3448;
  t3454 = -1.*t3439*t3378;
  t3456 = t3453 + t3454;
  t3466 = 0.642788*t3451;
  t3468 = 0.766044*t3456;
  t3469 = t3466 + t3468;
  t3461 = -0.766044*t3382;
  t3463 = 0.642788*t3389;
  t3464 = t3461 + t3463;
  t3478 = -1.*t3258*t3403;
  t3479 = -1.*t3409*t3406*t3284;
  t3480 = t3478 + t3479;
  t3474 = t3409*t3258*t3406;
  t3475 = -1.*t3403*t3284;
  t3476 = t3474 + t3475;
  t3484 = t3263*t3480;
  t3485 = -1.*t3476*t3287;
  t3486 = t3484 + t3485;
  t3477 = t3263*t3476;
  t3481 = t3480*t3287;
  t3482 = t3477 + t3481;
  t3494 = t3225*t3486;
  t3495 = -1.*t3482*t3318;
  t3496 = t3494 + t3495;
  t3483 = t3225*t3482;
  t3489 = t3486*t3318;
  t3490 = t3483 + t3489;
  t3502 = t3209*t3496;
  t3504 = -1.*t3490*t3356;
  t3506 = t3502 + t3504;
  t3491 = t3209*t3490;
  t3498 = t3496*t3356;
  t3499 = t3491 + t3498;
  t3452 = -0.766044*t3451;
  t3457 = 0.642788*t3456;
  t3458 = t3452 + t3457;
  t3384 = 0.642788*t3382;
  t3394 = 0.766044*t3389;
  t3400 = t3384 + t3394;
  t3501 = t3167*t3499;
  t3507 = t3506*t3378;
  t3508 = t3501 + t3507;
  t3511 = t3167*t3506;
  t3512 = -1.*t3499*t3378;
  t3513 = t3511 + t3512;
  t3510 = -0.766044*t3508;
  t3514 = 0.642788*t3513;
  t3515 = t3510 + t3514;
  t3520 = 0.642788*t3508;
  t3521 = 0.766044*t3513;
  t3522 = t3520 + t3521;
  t3114 = Cos(var1[1]);
  t3526 = t3400*t3515;
  t3527 = -1.*t3464*t3522;
  t3473 = t3409*t3234*t3464;
  t3516 = t3406*t3515;
  t3517 = t3473 + t3516;
  t3518 = -1.*t3469*t3517;
  t3519 = t3409*t3234*t3400;
  t3523 = t3406*t3522;
  t3524 = t3519 + t3523;
  t3525 = t3458*t3524;
  t3528 = t3526 + t3527;
  t3529 = -1.*t3234*t3403*t3528;
  t3530 = 0. + t3518 + t3525 + t3529;
  t3531 = 1/t3530;
  t1100 = Cos(var1[0]);
  t3534 = Sin(var1[0]);
  t3539 = Sin(var1[1]);
  t3536 = t3522*t3458;
  t3537 = -1.*t3515*t3469;
  t3538 = 0. + t3536 + t3537;
  t3572 = Cos(var1[3]);
  t3569 = Cos(var1[2]);
  t3570 = Sin(var1[3]);
  t3573 = Sin(var1[2]);
  t3577 = Cos(var1[4]);
  t3571 = -1.*t3114*t3569*t3570;
  t3574 = -1.*t3572*t3114*t3573;
  t3575 = t3571 + t3574;
  t3568 = Sin(var1[4]);
  t3578 = t3572*t3114*t3569;
  t3579 = -1.*t3114*t3570*t3573;
  t3580 = t3578 + t3579;
  t3584 = Cos(var1[5]);
  t3576 = t3568*t3575;
  t3581 = t3577*t3580;
  t3582 = t3576 + t3581;
  t3567 = Sin(var1[5]);
  t3585 = t3577*t3575;
  t3586 = -1.*t3568*t3580;
  t3587 = t3585 + t3586;
  t3591 = Cos(var1[6]);
  t3583 = -1.*t3567*t3582;
  t3588 = t3584*t3587;
  t3589 = t3583 + t3588;
  t3566 = Sin(var1[6]);
  t3592 = t3584*t3582;
  t3593 = t3567*t3587;
  t3594 = t3592 + t3593;
  t3460 = -1.*t3400*t3458;
  t3470 = t3464*t3469;
  t3472 = 0. + t3460 + t3470;
  t3604 = t1100*t3569*t3539;
  t3605 = -1.*t3534*t3573;
  t3606 = t3604 + t3605;
  t3608 = -1.*t3569*t3534;
  t3609 = -1.*t1100*t3539*t3573;
  t3610 = t3608 + t3609;
  t3607 = -1.*t3570*t3606;
  t3611 = t3572*t3610;
  t3612 = t3607 + t3611;
  t3614 = t3572*t3606;
  t3615 = t3570*t3610;
  t3616 = t3614 + t3615;
  t3613 = t3568*t3612;
  t3617 = t3577*t3616;
  t3618 = t3613 + t3617;
  t3620 = t3577*t3612;
  t3621 = -1.*t3568*t3616;
  t3622 = t3620 + t3621;
  t3619 = -1.*t3567*t3618;
  t3623 = t3584*t3622;
  t3624 = t3619 + t3623;
  t3626 = t3584*t3618;
  t3627 = t3567*t3622;
  t3628 = t3626 + t3627;
  t3533 = 0. + t3526 + t3527;
  t3638 = t3569*t3534*t3539;
  t3639 = t1100*t3573;
  t3640 = t3638 + t3639;
  t3642 = t1100*t3569;
  t3643 = -1.*t3534*t3539*t3573;
  t3644 = t3642 + t3643;
  t3641 = -1.*t3570*t3640;
  t3645 = t3572*t3644;
  t3646 = t3641 + t3645;
  t3648 = t3572*t3640;
  t3649 = t3570*t3644;
  t3650 = t3648 + t3649;
  t3647 = t3568*t3646;
  t3651 = t3577*t3650;
  t3652 = t3647 + t3651;
  t3654 = t3577*t3646;
  t3655 = -1.*t3568*t3650;
  t3656 = t3654 + t3655;
  t3653 = -1.*t3567*t3652;
  t3657 = t3584*t3656;
  t3658 = t3653 + t3657;
  t3660 = t3584*t3652;
  t3661 = t3567*t3656;
  t3662 = t3660 + t3661;
  t3550 = -1.*t3234*t3403*t3515;
  t3551 = t3409*t3234*t3458;
  t3552 = 0. + t3550 + t3551;
  t3590 = t3566*t3589;
  t3595 = t3591*t3594;
  t3596 = t3590 + t3595;
  t3597 = 0.642788*t3596;
  t3598 = t3591*t3589;
  t3599 = -1.*t3566*t3594;
  t3600 = t3598 + t3599;
  t3601 = 0.766044*t3600;
  t3602 = t3597 + t3601;
  t3542 = t3234*t3403*t3464;
  t3543 = t3406*t3458;
  t3544 = 0. + t3542 + t3543;
  t3625 = t3566*t3624;
  t3629 = t3591*t3628;
  t3630 = t3625 + t3629;
  t3631 = 0.642788*t3630;
  t3632 = t3591*t3624;
  t3633 = -1.*t3566*t3628;
  t3634 = t3632 + t3633;
  t3635 = 0.766044*t3634;
  t3636 = t3631 + t3635;
  t3546 = -1.*t3409*t3234*t3464;
  t3547 = -1.*t3406*t3515;
  t3548 = 0. + t3546 + t3547;
  t3659 = t3566*t3658;
  t3663 = t3591*t3662;
  t3664 = t3659 + t3663;
  t3665 = 0.642788*t3664;
  t3666 = t3591*t3658;
  t3667 = -1.*t3566*t3662;
  t3668 = t3666 + t3667;
  t3669 = 0.766044*t3668;
  t3670 = t3665 + t3669;
  t3561 = t3234*t3403*t3522;
  t3562 = -1.*t3409*t3234*t3469;
  t3563 = 0. + t3561 + t3562;
  t3555 = -1.*t3234*t3403*t3400;
  t3556 = -1.*t3406*t3469;
  t3557 = 0. + t3555 + t3556;
  t3559 = 0. + t3519 + t3523;
  t3681 = -0.766044*t3596;
  t3682 = 0.642788*t3600;
  t3683 = t3681 + t3682;
  t3685 = -0.766044*t3630;
  t3686 = 0.642788*t3634;
  t3687 = t3685 + t3686;
  t3689 = -0.766044*t3664;
  t3690 = 0.642788*t3668;
  t3691 = t3689 + t3690;
  t3712 = -1.*t3258;
  t3713 = 1. + t3712;
  t3722 = -1.*t3263;
  t3723 = 1. + t3722;
  t3732 = -1.*t3225;
  t3733 = 1. + t3732;
  t3742 = -1.*t3209;
  t3743 = 1. + t3742;
  t3752 = -1.*t3167;
  t3753 = 1. + t3752;
  t3706 = -1.*t3234;
  t3707 = 1. + t3706;
  t3714 = -0.049*t3713;
  t3715 = -0.09*t3284;
  t3716 = 0. + t3714 + t3715;
  t3724 = -0.049*t3723;
  t3725 = -0.21*t3287;
  t3726 = 0. + t3724 + t3725;
  t3728 = -0.21*t3723;
  t3729 = 0.049*t3287;
  t3730 = 0. + t3728 + t3729;
  t3734 = -0.0016*t3733;
  t3735 = -0.2707*t3318;
  t3736 = 0. + t3734 + t3735;
  t3738 = -0.2707*t3733;
  t3739 = 0.0016*t3318;
  t3740 = 0. + t3738 + t3739;
  t3744 = 0.0184*t3743;
  t3745 = -0.7055*t3356;
  t3746 = 0. + t3744 + t3745;
  t3748 = -0.7055*t3743;
  t3749 = -0.0184*t3356;
  t3750 = 0. + t3748 + t3749;
  t3754 = -0.0216*t3753;
  t3755 = -1.1135*t3378;
  t3756 = 0. + t3754 + t3755;
  t3758 = -1.1135*t3753;
  t3759 = 0.0216*t3378;
  t3760 = 0. + t3758 + t3759;
  t3702 = -1.*t3409;
  t3703 = 1. + t3702;
  t3704 = -0.135*t3703;
  t3705 = -0.1305*t3409*t3234;
  t3708 = -0.135*t3707;
  t3709 = 0.049*t3406;
  t3710 = 0. + t3708 + t3709;
  t3711 = t3409*t3710;
  t3717 = t3409*t3406*t3716;
  t3718 = -0.09*t3713;
  t3719 = 0.049*t3284;
  t3720 = 0. + t3718 + t3719;
  t3721 = -1.*t3403*t3720;
  t3727 = t3476*t3726;
  t3731 = t3480*t3730;
  t3737 = t3482*t3736;
  t3741 = t3486*t3740;
  t3747 = t3490*t3746;
  t3751 = t3496*t3750;
  t3757 = t3499*t3756;
  t3761 = t3506*t3760;
  t3762 = 0.0306*t3508;
  t3763 = -1.1312*t3513;
  t3764 = 0. + t3704 + t3705 + t3711 + t3717 + t3721 + t3727 + t3731 + t3737 + t3741 + t3747 + t3751 + t3757 + t3761 + t3762 + t3763;
  t3766 = -0.049*t3707;
  t3767 = -0.004500000000000004*t3406;
  t3768 = t3234*t3716;
  t3769 = t3234*t3258*t3726;
  t3770 = -1.*t3234*t3284*t3730;
  t3771 = t3297*t3736;
  t3772 = t3316*t3740;
  t3773 = t3331*t3746;
  t3774 = t3352*t3750;
  t3775 = t3358*t3756;
  t3776 = t3372*t3760;
  t3777 = 0.0306*t3382;
  t3778 = -1.1312*t3389;
  t3779 = 0. + t3766 + t3767 + t3768 + t3769 + t3770 + t3771 + t3772 + t3773 + t3774 + t3775 + t3776 + t3777 + t3778;
  t3809 = -1.*t3572;
  t3810 = 1. + t3809;
  t3826 = -1.*t3577;
  t3827 = 1. + t3826;
  t3836 = -1.*t3584;
  t3837 = 1. + t3836;
  t3846 = -1.*t3591;
  t3847 = 1. + t3846;
  t3806 = -1.*t3114;
  t3807 = 1. + t3806;
  t3816 = -1.*t3569;
  t3817 = 1. + t3816;
  t3818 = -0.049*t3817;
  t3819 = -0.09*t3573;
  t3820 = 0. + t3818 + t3819;
  t3811 = -0.049*t3810;
  t3812 = -0.21*t3570;
  t3813 = 0. + t3811 + t3812;
  t3822 = -0.21*t3810;
  t3823 = 0.049*t3570;
  t3824 = 0. + t3822 + t3823;
  t3828 = -0.2707*t3827;
  t3829 = 0.0016*t3568;
  t3830 = 0. + t3828 + t3829;
  t3832 = -0.0016*t3827;
  t3833 = -0.2707*t3568;
  t3834 = 0. + t3832 + t3833;
  t3838 = 0.0184*t3837;
  t3839 = -0.7055*t3567;
  t3840 = 0. + t3838 + t3839;
  t3842 = -0.7055*t3837;
  t3843 = -0.0184*t3567;
  t3844 = 0. + t3842 + t3843;
  t3848 = -1.1135*t3847;
  t3849 = 0.0216*t3566;
  t3850 = 0. + t3848 + t3849;
  t3852 = -0.0216*t3847;
  t3853 = -1.1135*t3566;
  t3854 = 0. + t3852 + t3853;
  t3864 = 0.135*t3807;
  t3865 = 0.049*t3539;
  t3866 = 0. + t3864 + t3865;
  t3869 = -0.09*t3817;
  t3870 = 0.049*t3573;
  t3871 = 0. + t3869 + t3870;
  t3787 = 0.135*t3403;
  t3788 = -0.1305*t3234*t3403;
  t3789 = t3403*t3710;
  t3790 = t3403*t3406*t3716;
  t3791 = t3409*t3720;
  t3792 = t3412*t3726;
  t3793 = t3417*t3730;
  t3794 = t3421*t3736;
  t3795 = t3427*t3740;
  t3796 = t3430*t3746;
  t3797 = t3437*t3750;
  t3798 = t3439*t3756;
  t3799 = t3448*t3760;
  t3800 = 0.0306*t3451;
  t3801 = -1.1312*t3456;
  t3802 = 0. + t3787 + t3788 + t3789 + t3790 + t3791 + t3792 + t3793 + t3794 + t3795 + t3796 + t3797 + t3798 + t3799 + t3800 + t3801;
  t3765 = t3464*t3764;
  t3780 = -1.*t3779*t3515;
  t3781 = t3765 + t3780;
  t3808 = -0.049*t3807;
  t3814 = t3114*t3569*t3813;
  t3815 = 0.004500000000000004*t3539;
  t3821 = t3114*t3820;
  t3825 = -1.*t3114*t3824*t3573;
  t3831 = t3830*t3575;
  t3835 = t3834*t3580;
  t3841 = t3840*t3582;
  t3845 = t3844*t3587;
  t3851 = t3850*t3589;
  t3855 = t3854*t3594;
  t3856 = 0.0306*t3596;
  t3857 = -1.1312*t3600;
  t3858 = 0. + t3808 + t3814 + t3815 + t3821 + t3825 + t3831 + t3835 + t3841 + t3845 + t3851 + t3855 + t3856 + t3857;
  t3860 = -1.*t1100;
  t3861 = 1. + t3860;
  t3862 = 0.135*t3861;
  t3863 = 0.1305*t1100*t3114;
  t3867 = t1100*t3866;
  t3868 = t1100*t3539*t3820;
  t3872 = -1.*t3534*t3871;
  t3873 = t3813*t3606;
  t3874 = t3824*t3610;
  t3875 = t3830*t3612;
  t3876 = t3834*t3616;
  t3877 = t3840*t3618;
  t3878 = t3844*t3622;
  t3879 = t3850*t3624;
  t3880 = t3854*t3628;
  t3881 = 0.0306*t3630;
  t3882 = -1.1312*t3634;
  t3883 = 0. + t3862 + t3863 + t3867 + t3868 + t3872 + t3873 + t3874 + t3875 + t3876 + t3877 + t3878 + t3879 + t3880 + t3881 + t3882;
  t3885 = -0.135*t3534;
  t3886 = 0.1305*t3114*t3534;
  t3887 = t3534*t3866;
  t3888 = t3534*t3539*t3820;
  t3889 = t1100*t3871;
  t3890 = t3813*t3640;
  t3891 = t3824*t3644;
  t3892 = t3830*t3646;
  t3893 = t3834*t3650;
  t3894 = t3840*t3652;
  t3895 = t3844*t3656;
  t3896 = t3850*t3658;
  t3897 = t3854*t3662;
  t3898 = 0.0306*t3664;
  t3899 = -1.1312*t3668;
  t3900 = 0. + t3885 + t3886 + t3887 + t3888 + t3889 + t3890 + t3891 + t3892 + t3893 + t3894 + t3895 + t3896 + t3897 + t3898 + t3899;
  t3903 = t3409*t3234*t3779;
  t3904 = t3406*t3764;
  t3905 = t3903 + t3904;
  t3783 = t3400*t3764;
  t3784 = -1.*t3779*t3522;
  t3785 = t3783 + t3784;
  p_output1[0]=0. - 1.*t1100*t3114*t3472*t3531 - 1.*t3114*t3531*t3533*t3534 + t3531*t3538*t3539;
  p_output1[1]=0. - 1.*t1100*t3114*t3531*t3544 - 1.*t3114*t3531*t3534*t3548 + t3531*t3539*t3552;
  p_output1[2]=0. - 1.*t1100*t3114*t3531*t3557 - 1.*t3114*t3531*t3534*t3559 + t3531*t3539*t3563;
  p_output1[3]=0.;
  p_output1[4]=0. + t3531*t3538*t3602 + t3472*t3531*t3636 + t3531*t3533*t3670;
  p_output1[5]=0. + t3531*t3552*t3602 + t3531*t3544*t3636 + t3531*t3548*t3670;
  p_output1[6]=0. + t3531*t3563*t3602 + t3531*t3557*t3636 + t3531*t3559*t3670;
  p_output1[7]=0.;
  p_output1[8]=0. + t3531*t3538*t3683 + t3472*t3531*t3687 + t3531*t3533*t3691;
  p_output1[9]=0. + t3531*t3552*t3683 + t3531*t3544*t3687 + t3531*t3548*t3691;
  p_output1[10]=0. + t3531*t3563*t3683 + t3531*t3557*t3687 + t3531*t3559*t3691;
  p_output1[11]=0.;
  p_output1[12]=t3531*(-1.*t3469*t3781 + t3458*t3785 - 1.*t3528*t3802) + t3531*t3538*t3858 + t3472*t3531*t3883 + t3531*t3533*t3900;
  p_output1[13]=t3531*t3552*t3858 + t3531*t3544*t3883 + t3531*t3548*t3900 + t3531*(-1.*t3234*t3403*t3781 + t3517*t3802 - 1.*t3458*t3905);
  p_output1[14]=t3531*t3563*t3858 + t3531*t3557*t3883 + t3531*t3559*t3900 + t3531*(t3234*t3403*t3785 - 1.*t3524*t3802 + t3469*t3905);
  p_output1[15]=0. + (t3518 + t3525 + t3529)*t3531;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 14 && ncols == 1) && 
      !(mrows == 1 && ncols == 14))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 4, (mwSize) 4, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "H_RightToeBottom_to_LeftToeBottom_mex.hh"

namespace SymExpression
{

void H_RightToeBottom_to_LeftToeBottom_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
