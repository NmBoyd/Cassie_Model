/*
 * Automatically Generated from Mathematica.
 * Mon 2 Jul 2018 15:34:23 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t706;
  double t2073;
  double t1583;
  double t1603;
  double t2074;
  double t41;
  double t98;
  double t138;
  double t339;
  double t939;
  double t1986;
  double t2130;
  double t2301;
  double t2502;
  double t2650;
  double t2669;
  double t2700;
  double t27;
  double t2924;
  double t3072;
  double t3121;
  double t3215;
  double t3250;
  double t3391;
  double t3513;
  double t3683;
  double t3884;
  double t3916;
  double t4386;
  double t4398;
  double t4465;
  double t4560;
  double t4585;
  double t4616;
  double t4647;
  double t4741;
  double t4874;
  double t5015;
  double t5183;
  double t5195;
  double t5200;
  double t5239;
  double t5247;
  double t5249;
  double t5279;
  double t5433;
  double t5439;
  double t5443;
  double t5512;
  double t5518;
  double t5529;
  double t5546;
  double t5555;
  double t5578;
  double t5609;
  double t5645;
  double t5649;
  double t5651;
  double t5677;
  double t5679;
  double t5725;
  double t5742;
  double t5762;
  double t5773;
  double t5807;
  double t5818;
  double t5825;
  double t5832;
  double t5875;
  double t5879;
  double t5897;
  double t251;
  double t347;
  double t488;
  double t1190;
  double t1288;
  double t2507;
  double t2590;
  double t2602;
  double t2644;
  double t2758;
  double t2878;
  double t2885;
  double t5981;
  double t5990;
  double t6005;
  double t6023;
  double t6031;
  double t6034;
  double t3427;
  double t3519;
  double t3529;
  double t6045;
  double t6056;
  double t6058;
  double t4311;
  double t4341;
  double t4373;
  double t4639;
  double t4652;
  double t4657;
  double t6074;
  double t6084;
  double t6091;
  double t6123;
  double t6127;
  double t6132;
  double t5110;
  double t5129;
  double t5163;
  double t5264;
  double t5300;
  double t5423;
  double t6145;
  double t6155;
  double t6159;
  double t6178;
  double t6183;
  double t6184;
  double t5478;
  double t5493;
  double t5508;
  double t5604;
  double t5616;
  double t5635;
  double t6205;
  double t6208;
  double t6215;
  double t6230;
  double t6237;
  double t6242;
  double t5660;
  double t5661;
  double t5669;
  double t5788;
  double t5808;
  double t5816;
  double t6245;
  double t6252;
  double t6265;
  double t6279;
  double t6291;
  double t6293;
  double t5844;
  double t5845;
  double t5860;
  double t6296;
  double t6298;
  double t6301;
  double t6312;
  double t6316;
  double t6318;
  double t6386;
  double t6397;
  double t6399;
  double t6406;
  double t6413;
  double t6422;
  double t6460;
  double t6470;
  double t6471;
  double t6480;
  double t6481;
  double t6484;
  double t6490;
  double t6492;
  double t6495;
  double t6498;
  double t6500;
  double t6502;
  double t6508;
  double t6509;
  double t6511;
  double t6515;
  double t6517;
  double t6520;
  double t6534;
  double t6548;
  double t6550;
  double t6555;
  double t6556;
  double t6560;
  double t6565;
  double t6568;
  double t6569;
  double t6617;
  double t6618;
  double t6620;
  double t6625;
  double t6628;
  double t6631;
  double t6646;
  double t6647;
  double t6648;
  double t6660;
  double t6662;
  double t6688;
  double t6694;
  double t6695;
  double t6697;
  double t6709;
  double t6710;
  double t6711;
  double t6718;
  double t6722;
  double t6724;
  double t6730;
  double t6732;
  double t6737;
  double t6742;
  double t6746;
  double t6762;
  double t6766;
  double t6770;
  double t6774;
  double t6783;
  double t6788;
  double t6793;
  double t6837;
  double t6844;
  double t6855;
  double t6860;
  double t6864;
  double t6874;
  double t6893;
  double t6894;
  double t6897;
  double t6909;
  double t6913;
  double t6917;
  double t6922;
  double t6925;
  double t6926;
  double t6928;
  double t6939;
  double t6946;
  double t6956;
  double t6957;
  double t6959;
  double t6963;
  double t6967;
  double t6971;
  double t6977;
  double t6980;
  double t6981;
  double t6990;
  double t6993;
  double t6996;
  double t7000;
  double t7008;
  double t7013;
  double t7063;
  double t7065;
  double t7077;
  double t7096;
  double t7110;
  double t7079;
  double t7082;
  double t7092;
  double t7135;
  double t7137;
  double t7138;
  double t7151;
  double t7160;
  double t7161;
  double t7190;
  double t7191;
  double t7195;
  double t7211;
  double t7218;
  double t7225;
  double t7234;
  double t7238;
  double t7239;
  double t7249;
  double t7251;
  double t7254;
  double t7258;
  double t7273;
  double t7274;
  double t7290;
  double t7296;
  double t7304;
  double t7367;
  double t7379;
  double t7383;
  double t7419;
  double t7421;
  double t7423;
  double t7394;
  double t7409;
  double t7439;
  double t7443;
  double t7449;
  double t7468;
  double t7476;
  double t7481;
  double t7493;
  double t7494;
  double t7504;
  double t7516;
  double t7519;
  double t7521;
  double t7535;
  double t7543;
  double t7546;
  double t7556;
  double t7563;
  double t7568;
  double t7585;
  double t7589;
  double t7595;
  double t7617;
  double t7621;
  double t7624;
  double t7689;
  double t7690;
  double t7697;
  double t7672;
  double t7673;
  double t7676;
  double t7714;
  double t7715;
  double t7719;
  double t7727;
  double t7731;
  double t7732;
  double t7741;
  double t7746;
  double t7768;
  double t7774;
  double t7781;
  double t7796;
  double t7802;
  double t7805;
  double t7806;
  double t7818;
  double t7825;
  double t7828;
  double t7849;
  double t7856;
  double t7863;
  double t7866;
  double t7867;
  double t7869;
  double t7935;
  double t7938;
  double t7957;
  double t7967;
  double t7978;
  double t7982;
  double t7983;
  double t7986;
  double t7992;
  double t8000;
  double t8008;
  double t8013;
  double t8016;
  double t8018;
  double t8025;
  double t8026;
  double t8031;
  double t8035;
  double t8036;
  double t8037;
  double t8040;
  double t8051;
  double t8052;
  double t8072;
  double t8073;
  double t8083;
  double t8120;
  double t8121;
  double t8128;
  double t8156;
  double t8161;
  double t8138;
  double t8140;
  double t8174;
  double t8176;
  double t8178;
  double t8183;
  double t8188;
  double t8198;
  double t8210;
  double t8211;
  double t8216;
  double t8224;
  double t8226;
  double t8230;
  double t8236;
  double t8246;
  double t8247;
  double t8257;
  double t8259;
  double t8264;
  double t8270;
  double t8272;
  double t8275;
  double t8292;
  double t8294;
  double t8299;
  double t7682;
  double t7702;
  double t7707;
  double t7712;
  double t7724;
  double t7737;
  double t7772;
  double t7801;
  double t7807;
  double t7841;
  double t7865;
  double t7881;
  double t7891;
  double t7894;
  double t7897;
  double t7902;
  double t7904;
  double t7911;
  double t7914;
  double t7917;
  double t6099;
  double t6101;
  double t6113;
  double t8448;
  double t8450;
  double t8467;
  double t8472;
  double t8481;
  double t8485;
  double t8494;
  double t8496;
  double t8501;
  double t8507;
  double t8508;
  double t8513;
  double t8525;
  double t8528;
  double t8529;
  double t8536;
  double t8539;
  double t8543;
  double t8368;
  double t8369;
  double t8383;
  double t8399;
  double t8405;
  double t8587;
  double t8588;
  double t8593;
  double t8608;
  double t8615;
  double t8616;
  double t8652;
  double t8654;
  double t8657;
  double t8661;
  double t8665;
  double t8672;
  double t8678;
  double t8679;
  double t8680;
  double t8694;
  double t8698;
  double t8707;
  double t8716;
  double t8720;
  double t8725;
  double t8742;
  double t8746;
  double t8753;
  double t8803;
  double t8805;
  double t8806;
  double t8822;
  double t8827;
  double t8831;
  double t8868;
  double t8875;
  double t8877;
  double t8881;
  double t8884;
  double t8886;
  double t8895;
  double t8897;
  double t8898;
  double t8909;
  double t8910;
  double t8921;
  double t8924;
  double t8929;
  double t8933;
  double t8947;
  double t8951;
  double t8956;
  double t9059;
  double t9063;
  double t9073;
  double t9084;
  double t9103;
  double t9108;
  double t9112;
  double t9120;
  double t9128;
  double t9132;
  double t9133;
  double t9135;
  double t9136;
  double t9148;
  double t9154;
  double t9156;
  double t9163;
  double t9177;
  double t9184;
  double t9188;
  double t9022;
  double t9030;
  double t9036;
  double t9050;
  double t9053;
  double t9260;
  double t9266;
  double t9269;
  double t9289;
  double t9290;
  double t9306;
  double t9314;
  double t9315;
  double t9323;
  double t9334;
  double t9342;
  double t9352;
  double t9359;
  double t9361;
  double t9362;
  double t9365;
  double t9371;
  double t9375;
  double t9379;
  double t9381;
  double t9387;
  double t9395;
  double t9397;
  double t9398;
  double t9402;
  double t9413;
  double t9416;
  double t9511;
  double t9522;
  double t9531;
  double t9546;
  double t9547;
  double t9548;
  double t9559;
  double t9562;
  double t9573;
  double t9580;
  double t9585;
  double t9595;
  double t9602;
  double t9608;
  double t9613;
  double t9617;
  double t9622;
  double t9634;
  double t9652;
  double t9653;
  double t9655;
  double t9657;
  double t9662;
  double t9663;
  double t9675;
  double t9679;
  double t9683;
  double t9745;
  double t9753;
  double t9763;
  double t9769;
  double t9770;
  double t9778;
  double t9780;
  double t9799;
  double t9803;
  double t9805;
  double t9807;
  double t9813;
  double t9816;
  double t9707;
  double t9713;
  double t9721;
  double t9728;
  double t9731;
  double t9866;
  double t9867;
  double t9872;
  double t9890;
  double t9894;
  double t9897;
  double t9899;
  double t9908;
  double t9909;
  double t9910;
  double t9925;
  double t9934;
  double t9935;
  double t9956;
  double t9963;
  double t9966;
  double t9974;
  double t9977;
  double t9980;
  double t10023;
  double t10024;
  double t10027;
  double t10039;
  double t10040;
  double t10050;
  double t10052;
  double t10057;
  double t10061;
  double t10062;
  double t10067;
  double t10068;
  double t10075;
  double t10085;
  double t10089;
  double t10090;
  double t10103;
  double t10107;
  double t10111;
  double t10177;
  double t10182;
  double t10200;
  double t10202;
  double t10206;
  double t10209;
  double t10211;
  double t10162;
  double t10165;
  double t10170;
  double t10171;
  double t10173;
  double t10257;
  double t10260;
  double t10261;
  double t10265;
  double t10271;
  double t10276;
  double t10279;
  double t10285;
  double t10288;
  double t10292;
  double t10295;
  double t10296;
  double t10304;
  double t10341;
  double t10346;
  double t10347;
  double t10352;
  double t10357;
  double t10362;
  double t10364;
  double t10378;
  double t10379;
  double t10380;
  double t10383;
  double t10385;
  double t10386;
  double t10492;
  double t10493;
  double t6352;
  double t10443;
  double t10448;
  double t10454;
  double t10469;
  double t10474;
  double t10535;
  double t10536;
  double t10537;
  double t10549;
  double t10552;
  double t10560;
  double t10562;
  double t10597;
  double t10601;
  double t10610;
  double t10624;
  double t10629;
  double t10648;
  double t10649;
  double t10503;
  double t6354;
  double t6356;
  double t10696;
  double t10701;
  double t10709;
  double t10715;
  double t10723;
  double t10568;
  double t10748;
  double t10751;
  double t10753;
  double t10581;
  double t10654;
  double t10793;
  double t10794;
  double t10796;
  double t10686;
  t706 = Sin(var1[3]);
  t2073 = Cos(var1[3]);
  t1583 = Cos(var1[5]);
  t1603 = Sin(var1[4]);
  t2074 = Sin(var1[5]);
  t41 = Cos(var1[14]);
  t98 = -1.*t41;
  t138 = 1. + t98;
  t339 = Sin(var1[14]);
  t939 = Sin(var1[13]);
  t1986 = -1.*t1583*t706*t1603;
  t2130 = t2073*t2074;
  t2301 = t1986 + t2130;
  t2502 = Cos(var1[13]);
  t2650 = -1.*t2073*t1583;
  t2669 = -1.*t706*t1603*t2074;
  t2700 = t2650 + t2669;
  t27 = Cos(var1[4]);
  t2924 = t939*t2301;
  t3072 = t2502*t2700;
  t3121 = t2924 + t3072;
  t3215 = Cos(var1[15]);
  t3250 = -1.*t3215;
  t3391 = 1. + t3250;
  t3513 = Sin(var1[15]);
  t3683 = t2502*t2301;
  t3884 = -1.*t939*t2700;
  t3916 = t3683 + t3884;
  t4386 = -1.*t41*t27*t706;
  t4398 = t339*t3121;
  t4465 = t4386 + t4398;
  t4560 = Cos(var1[16]);
  t4585 = -1.*t4560;
  t4616 = 1. + t4585;
  t4647 = Sin(var1[16]);
  t4741 = t3513*t3916;
  t4874 = t3215*t4465;
  t5015 = t4741 + t4874;
  t5183 = t3215*t3916;
  t5195 = -1.*t3513*t4465;
  t5200 = t5183 + t5195;
  t5239 = Cos(var1[17]);
  t5247 = -1.*t5239;
  t5249 = 1. + t5247;
  t5279 = Sin(var1[17]);
  t5433 = -1.*t4647*t5015;
  t5439 = t4560*t5200;
  t5443 = t5433 + t5439;
  t5512 = t4560*t5015;
  t5518 = t4647*t5200;
  t5529 = t5512 + t5518;
  t5546 = Cos(var1[18]);
  t5555 = -1.*t5546;
  t5578 = 1. + t5555;
  t5609 = Sin(var1[18]);
  t5645 = t5279*t5443;
  t5649 = t5239*t5529;
  t5651 = t5645 + t5649;
  t5677 = t5239*t5443;
  t5679 = -1.*t5279*t5529;
  t5725 = t5677 + t5679;
  t5742 = Cos(var1[19]);
  t5762 = -1.*t5742;
  t5773 = 1. + t5762;
  t5807 = Sin(var1[19]);
  t5818 = -1.*t5609*t5651;
  t5825 = t5546*t5725;
  t5832 = t5818 + t5825;
  t5875 = t5546*t5651;
  t5879 = t5609*t5725;
  t5897 = t5875 + t5879;
  t251 = -0.049*t138;
  t347 = -0.135*t339;
  t488 = 0. + t251 + t347;
  t1190 = 0.135*t939;
  t1288 = 0. + t1190;
  t2507 = -1.*t2502;
  t2590 = 1. + t2507;
  t2602 = -0.135*t2590;
  t2644 = 0. + t2602;
  t2758 = -0.135*t138;
  t2878 = 0.049*t339;
  t2885 = 0. + t2758 + t2878;
  t5981 = t2073*t1583*t1603;
  t5990 = t706*t2074;
  t6005 = t5981 + t5990;
  t6023 = -1.*t1583*t706;
  t6031 = t2073*t1603*t2074;
  t6034 = t6023 + t6031;
  t3427 = -0.09*t3391;
  t3519 = 0.049*t3513;
  t3529 = 0. + t3427 + t3519;
  t6045 = t939*t6005;
  t6056 = t2502*t6034;
  t6058 = t6045 + t6056;
  t4311 = -0.049*t3391;
  t4341 = -0.09*t3513;
  t4373 = 0. + t4311 + t4341;
  t4639 = -0.049*t4616;
  t4652 = -0.21*t4647;
  t4657 = 0. + t4639 + t4652;
  t6074 = t2502*t6005;
  t6084 = -1.*t939*t6034;
  t6091 = t6074 + t6084;
  t6123 = t41*t2073*t27;
  t6127 = t339*t6058;
  t6132 = t6123 + t6127;
  t5110 = -0.21*t4616;
  t5129 = 0.049*t4647;
  t5163 = 0. + t5110 + t5129;
  t5264 = -0.2707*t5249;
  t5300 = 0.0016*t5279;
  t5423 = 0. + t5264 + t5300;
  t6145 = t3513*t6091;
  t6155 = t3215*t6132;
  t6159 = t6145 + t6155;
  t6178 = t3215*t6091;
  t6183 = -1.*t3513*t6132;
  t6184 = t6178 + t6183;
  t5478 = -0.0016*t5249;
  t5493 = -0.2707*t5279;
  t5508 = 0. + t5478 + t5493;
  t5604 = 0.0184*t5578;
  t5616 = -0.7055*t5609;
  t5635 = 0. + t5604 + t5616;
  t6205 = -1.*t4647*t6159;
  t6208 = t4560*t6184;
  t6215 = t6205 + t6208;
  t6230 = t4560*t6159;
  t6237 = t4647*t6184;
  t6242 = t6230 + t6237;
  t5660 = -0.7055*t5578;
  t5661 = -0.0184*t5609;
  t5669 = 0. + t5660 + t5661;
  t5788 = -1.1135*t5773;
  t5808 = 0.0216*t5807;
  t5816 = 0. + t5788 + t5808;
  t6245 = t5279*t6215;
  t6252 = t5239*t6242;
  t6265 = t6245 + t6252;
  t6279 = t5239*t6215;
  t6291 = -1.*t5279*t6242;
  t6293 = t6279 + t6291;
  t5844 = -0.0216*t5773;
  t5845 = -1.1135*t5807;
  t5860 = 0. + t5844 + t5845;
  t6296 = -1.*t5609*t6265;
  t6298 = t5546*t6293;
  t6301 = t6296 + t6298;
  t6312 = t5546*t6265;
  t6316 = t5609*t6293;
  t6318 = t6312 + t6316;
  t6386 = t2073*t27*t1583*t939;
  t6397 = t2502*t2073*t27*t2074;
  t6399 = t6386 + t6397;
  t6406 = t2502*t2073*t27*t1583;
  t6413 = -1.*t2073*t27*t939*t2074;
  t6422 = t6406 + t6413;
  t6460 = -1.*t41*t2073*t1603;
  t6470 = t339*t6399;
  t6471 = t6460 + t6470;
  t6480 = t3513*t6422;
  t6481 = t3215*t6471;
  t6484 = t6480 + t6481;
  t6490 = t3215*t6422;
  t6492 = -1.*t3513*t6471;
  t6495 = t6490 + t6492;
  t6498 = -1.*t4647*t6484;
  t6500 = t4560*t6495;
  t6502 = t6498 + t6500;
  t6508 = t4560*t6484;
  t6509 = t4647*t6495;
  t6511 = t6508 + t6509;
  t6515 = t5279*t6502;
  t6517 = t5239*t6511;
  t6520 = t6515 + t6517;
  t6534 = t5239*t6502;
  t6548 = -1.*t5279*t6511;
  t6550 = t6534 + t6548;
  t6555 = -1.*t5609*t6520;
  t6556 = t5546*t6550;
  t6560 = t6555 + t6556;
  t6565 = t5546*t6520;
  t6568 = t5609*t6550;
  t6569 = t6565 + t6568;
  t6617 = t27*t1583*t939*t706;
  t6618 = t2502*t27*t706*t2074;
  t6620 = t6617 + t6618;
  t6625 = t2502*t27*t1583*t706;
  t6628 = -1.*t27*t939*t706*t2074;
  t6631 = t6625 + t6628;
  t6646 = -1.*t41*t706*t1603;
  t6647 = t339*t6620;
  t6648 = t6646 + t6647;
  t6660 = t3513*t6631;
  t6662 = t3215*t6648;
  t6688 = t6660 + t6662;
  t6694 = t3215*t6631;
  t6695 = -1.*t3513*t6648;
  t6697 = t6694 + t6695;
  t6709 = -1.*t4647*t6688;
  t6710 = t4560*t6697;
  t6711 = t6709 + t6710;
  t6718 = t4560*t6688;
  t6722 = t4647*t6697;
  t6724 = t6718 + t6722;
  t6730 = t5279*t6711;
  t6732 = t5239*t6724;
  t6737 = t6730 + t6732;
  t6742 = t5239*t6711;
  t6746 = -1.*t5279*t6724;
  t6762 = t6742 + t6746;
  t6766 = -1.*t5609*t6737;
  t6770 = t5546*t6762;
  t6774 = t6766 + t6770;
  t6783 = t5546*t6737;
  t6788 = t5609*t6762;
  t6793 = t6783 + t6788;
  t6837 = -1.*t1583*t939*t1603;
  t6844 = -1.*t2502*t1603*t2074;
  t6855 = t6837 + t6844;
  t6860 = -1.*t2502*t1583*t1603;
  t6864 = t939*t1603*t2074;
  t6874 = t6860 + t6864;
  t6893 = -1.*t41*t27;
  t6894 = t339*t6855;
  t6897 = t6893 + t6894;
  t6909 = t3513*t6874;
  t6913 = t3215*t6897;
  t6917 = t6909 + t6913;
  t6922 = t3215*t6874;
  t6925 = -1.*t3513*t6897;
  t6926 = t6922 + t6925;
  t6928 = -1.*t4647*t6917;
  t6939 = t4560*t6926;
  t6946 = t6928 + t6939;
  t6956 = t4560*t6917;
  t6957 = t4647*t6926;
  t6959 = t6956 + t6957;
  t6963 = t5279*t6946;
  t6967 = t5239*t6959;
  t6971 = t6963 + t6967;
  t6977 = t5239*t6946;
  t6980 = -1.*t5279*t6959;
  t6981 = t6977 + t6980;
  t6990 = -1.*t5609*t6971;
  t6993 = t5546*t6981;
  t6996 = t6990 + t6993;
  t7000 = t5546*t6971;
  t7008 = t5609*t6981;
  t7013 = t7000 + t7008;
  t7063 = t1583*t706;
  t7065 = -1.*t2073*t1603*t2074;
  t7077 = t7063 + t7065;
  t7096 = t939*t7077;
  t7110 = t6074 + t7096;
  t7079 = -1.*t939*t6005;
  t7082 = t2502*t7077;
  t7092 = t7079 + t7082;
  t7135 = t3513*t7092;
  t7137 = t3215*t339*t7110;
  t7138 = t7135 + t7137;
  t7151 = t3215*t7092;
  t7160 = -1.*t339*t3513*t7110;
  t7161 = t7151 + t7160;
  t7190 = -1.*t4647*t7138;
  t7191 = t4560*t7161;
  t7195 = t7190 + t7191;
  t7211 = t4560*t7138;
  t7218 = t4647*t7161;
  t7225 = t7211 + t7218;
  t7234 = t5279*t7195;
  t7238 = t5239*t7225;
  t7239 = t7234 + t7238;
  t7249 = t5239*t7195;
  t7251 = -1.*t5279*t7225;
  t7254 = t7249 + t7251;
  t7258 = -1.*t5609*t7239;
  t7273 = t5546*t7254;
  t7274 = t7258 + t7273;
  t7290 = t5546*t7239;
  t7296 = t5609*t7254;
  t7304 = t7290 + t7296;
  t7367 = t1583*t706*t1603;
  t7379 = -1.*t2073*t2074;
  t7383 = t7367 + t7379;
  t7419 = t2502*t7383;
  t7421 = t939*t2700;
  t7423 = t7419 + t7421;
  t7394 = -1.*t939*t7383;
  t7409 = t7394 + t3072;
  t7439 = t3513*t7409;
  t7443 = t3215*t339*t7423;
  t7449 = t7439 + t7443;
  t7468 = t3215*t7409;
  t7476 = -1.*t339*t3513*t7423;
  t7481 = t7468 + t7476;
  t7493 = -1.*t4647*t7449;
  t7494 = t4560*t7481;
  t7504 = t7493 + t7494;
  t7516 = t4560*t7449;
  t7519 = t4647*t7481;
  t7521 = t7516 + t7519;
  t7535 = t5279*t7504;
  t7543 = t5239*t7521;
  t7546 = t7535 + t7543;
  t7556 = t5239*t7504;
  t7563 = -1.*t5279*t7521;
  t7568 = t7556 + t7563;
  t7585 = -1.*t5609*t7546;
  t7589 = t5546*t7568;
  t7595 = t7585 + t7589;
  t7617 = t5546*t7546;
  t7621 = t5609*t7568;
  t7624 = t7617 + t7621;
  t7689 = t2502*t27*t1583;
  t7690 = -1.*t27*t939*t2074;
  t7697 = t7689 + t7690;
  t7672 = -1.*t27*t1583*t939;
  t7673 = -1.*t2502*t27*t2074;
  t7676 = t7672 + t7673;
  t7714 = t3513*t7676;
  t7715 = t3215*t339*t7697;
  t7719 = t7714 + t7715;
  t7727 = t3215*t7676;
  t7731 = -1.*t339*t3513*t7697;
  t7732 = t7727 + t7731;
  t7741 = -1.*t4647*t7719;
  t7746 = t4560*t7732;
  t7768 = t7741 + t7746;
  t7774 = t4560*t7719;
  t7781 = t4647*t7732;
  t7796 = t7774 + t7781;
  t7802 = t5279*t7768;
  t7805 = t5239*t7796;
  t7806 = t7802 + t7805;
  t7818 = t5239*t7768;
  t7825 = -1.*t5279*t7796;
  t7828 = t7818 + t7825;
  t7849 = -1.*t5609*t7806;
  t7856 = t5546*t7828;
  t7863 = t7849 + t7856;
  t7866 = t5546*t7806;
  t7867 = t5609*t7828;
  t7869 = t7866 + t7867;
  t7935 = -1.*t2502*t6034;
  t7938 = t7079 + t7935;
  t7957 = t3513*t7938;
  t7967 = t3215*t339*t6091;
  t7978 = t7957 + t7967;
  t7982 = t3215*t7938;
  t7983 = -1.*t339*t3513*t6091;
  t7986 = t7982 + t7983;
  t7992 = -1.*t4647*t7978;
  t8000 = t4560*t7986;
  t8008 = t7992 + t8000;
  t8013 = t4560*t7978;
  t8016 = t4647*t7986;
  t8018 = t8013 + t8016;
  t8025 = t5279*t8008;
  t8026 = t5239*t8018;
  t8031 = t8025 + t8026;
  t8035 = t5239*t8008;
  t8036 = -1.*t5279*t8018;
  t8037 = t8035 + t8036;
  t8040 = -1.*t5609*t8031;
  t8051 = t5546*t8037;
  t8052 = t8040 + t8051;
  t8072 = t5546*t8031;
  t8073 = t5609*t8037;
  t8083 = t8072 + t8073;
  t8120 = t2073*t1583;
  t8121 = t706*t1603*t2074;
  t8128 = t8120 + t8121;
  t8156 = -1.*t939*t8128;
  t8161 = t7419 + t8156;
  t8138 = -1.*t2502*t8128;
  t8140 = t7394 + t8138;
  t8174 = t3513*t8140;
  t8176 = t3215*t339*t8161;
  t8178 = t8174 + t8176;
  t8183 = t3215*t8140;
  t8188 = -1.*t339*t3513*t8161;
  t8198 = t8183 + t8188;
  t8210 = -1.*t4647*t8178;
  t8211 = t4560*t8198;
  t8216 = t8210 + t8211;
  t8224 = t4560*t8178;
  t8226 = t4647*t8198;
  t8230 = t8224 + t8226;
  t8236 = t5279*t8216;
  t8246 = t5239*t8230;
  t8247 = t8236 + t8246;
  t8257 = t5239*t8216;
  t8259 = -1.*t5279*t8230;
  t8264 = t8257 + t8259;
  t8270 = -1.*t5609*t8247;
  t8272 = t5546*t8264;
  t8275 = t8270 + t8272;
  t8292 = t5546*t8247;
  t8294 = t5609*t8264;
  t8299 = t8292 + t8294;
  t7682 = t3529*t7676;
  t7702 = -0.1305*t41*t7697;
  t7707 = t2885*t7697;
  t7712 = t339*t4373*t7697;
  t7724 = t4657*t7719;
  t7737 = t5163*t7732;
  t7772 = t5423*t7768;
  t7801 = t5508*t7796;
  t7807 = t5635*t7806;
  t7841 = t5669*t7828;
  t7865 = t5816*t7863;
  t7881 = t5860*t7869;
  t7891 = t5807*t7863;
  t7894 = t5742*t7869;
  t7897 = t7891 + t7894;
  t7902 = -0.027251*t7897;
  t7904 = t5742*t7863;
  t7911 = -1.*t5807*t7869;
  t7914 = t7904 + t7911;
  t7917 = -1.200144*t7914;
  t6099 = -1.*t2073*t27*t339;
  t6101 = t41*t6058;
  t6113 = t6099 + t6101;
  t8448 = -1.*t4560*t3513*t6113;
  t8450 = -1.*t3215*t4647*t6113;
  t8467 = t8448 + t8450;
  t8472 = t3215*t4560*t6113;
  t8481 = -1.*t3513*t4647*t6113;
  t8485 = t8472 + t8481;
  t8494 = t5279*t8467;
  t8496 = t5239*t8485;
  t8501 = t8494 + t8496;
  t8507 = t5239*t8467;
  t8508 = -1.*t5279*t8485;
  t8513 = t8507 + t8508;
  t8525 = -1.*t5609*t8501;
  t8528 = t5546*t8513;
  t8529 = t8525 + t8528;
  t8536 = t5546*t8501;
  t8539 = t5609*t8513;
  t8543 = t8536 + t8539;
  t8368 = -0.135*t41;
  t8369 = -0.049*t339;
  t8383 = t8368 + t8369;
  t8399 = 0.049*t41;
  t8405 = t8399 + t347;
  t8587 = t939*t7383;
  t8588 = t2502*t8128;
  t8593 = t8587 + t8588;
  t8608 = -1.*t27*t339*t706;
  t8615 = t41*t8593;
  t8616 = t8608 + t8615;
  t8652 = -1.*t4560*t3513*t8616;
  t8654 = -1.*t3215*t4647*t8616;
  t8657 = t8652 + t8654;
  t8661 = t3215*t4560*t8616;
  t8665 = -1.*t3513*t4647*t8616;
  t8672 = t8661 + t8665;
  t8678 = t5279*t8657;
  t8679 = t5239*t8672;
  t8680 = t8678 + t8679;
  t8694 = t5239*t8657;
  t8698 = -1.*t5279*t8672;
  t8707 = t8694 + t8698;
  t8716 = -1.*t5609*t8680;
  t8720 = t5546*t8707;
  t8725 = t8716 + t8720;
  t8742 = t5546*t8680;
  t8746 = t5609*t8707;
  t8753 = t8742 + t8746;
  t8803 = t27*t1583*t939;
  t8805 = t2502*t27*t2074;
  t8806 = t8803 + t8805;
  t8822 = t339*t1603;
  t8827 = t41*t8806;
  t8831 = t8822 + t8827;
  t8868 = -1.*t4560*t3513*t8831;
  t8875 = -1.*t3215*t4647*t8831;
  t8877 = t8868 + t8875;
  t8881 = t3215*t4560*t8831;
  t8884 = -1.*t3513*t4647*t8831;
  t8886 = t8881 + t8884;
  t8895 = t5279*t8877;
  t8897 = t5239*t8886;
  t8898 = t8895 + t8897;
  t8909 = t5239*t8877;
  t8910 = -1.*t5279*t8886;
  t8921 = t8909 + t8910;
  t8924 = -1.*t5609*t8898;
  t8929 = t5546*t8921;
  t8933 = t8924 + t8929;
  t8947 = t5546*t8898;
  t8951 = t5609*t8921;
  t8956 = t8947 + t8951;
  t9059 = -1.*t3513*t6091;
  t9063 = -1.*t3215*t6132;
  t9073 = t9059 + t9063;
  t9084 = t4647*t9073;
  t9103 = t9084 + t6208;
  t9108 = t4560*t9073;
  t9112 = -1.*t4647*t6184;
  t9120 = t9108 + t9112;
  t9128 = -1.*t5279*t9103;
  t9132 = t5239*t9120;
  t9133 = t9128 + t9132;
  t9135 = t5239*t9103;
  t9136 = t5279*t9120;
  t9148 = t9135 + t9136;
  t9154 = t5609*t9133;
  t9156 = t5546*t9148;
  t9163 = t9154 + t9156;
  t9177 = t5546*t9133;
  t9184 = -1.*t5609*t9148;
  t9188 = t9177 + t9184;
  t9022 = 0.049*t3215;
  t9030 = t9022 + t4341;
  t9036 = -0.09*t3215;
  t9050 = -0.049*t3513;
  t9053 = t9036 + t9050;
  t9260 = t41*t27*t706;
  t9266 = t339*t8593;
  t9269 = t9260 + t9266;
  t9289 = -1.*t3513*t8161;
  t9290 = -1.*t3215*t9269;
  t9306 = t9289 + t9290;
  t9314 = t3215*t8161;
  t9315 = -1.*t3513*t9269;
  t9323 = t9314 + t9315;
  t9334 = t4647*t9306;
  t9342 = t4560*t9323;
  t9352 = t9334 + t9342;
  t9359 = t4560*t9306;
  t9361 = -1.*t4647*t9323;
  t9362 = t9359 + t9361;
  t9365 = -1.*t5279*t9352;
  t9371 = t5239*t9362;
  t9375 = t9365 + t9371;
  t9379 = t5239*t9352;
  t9381 = t5279*t9362;
  t9387 = t9379 + t9381;
  t9395 = t5609*t9375;
  t9397 = t5546*t9387;
  t9398 = t9395 + t9397;
  t9402 = t5546*t9375;
  t9413 = -1.*t5609*t9387;
  t9416 = t9402 + t9413;
  t9511 = -1.*t41*t1603;
  t9522 = t339*t8806;
  t9531 = t9511 + t9522;
  t9546 = -1.*t3513*t7697;
  t9547 = -1.*t3215*t9531;
  t9548 = t9546 + t9547;
  t9559 = t3215*t7697;
  t9562 = -1.*t3513*t9531;
  t9573 = t9559 + t9562;
  t9580 = t4647*t9548;
  t9585 = t4560*t9573;
  t9595 = t9580 + t9585;
  t9602 = t4560*t9548;
  t9608 = -1.*t4647*t9573;
  t9613 = t9602 + t9608;
  t9617 = -1.*t5279*t9595;
  t9622 = t5239*t9613;
  t9634 = t9617 + t9622;
  t9652 = t5239*t9595;
  t9653 = t5279*t9613;
  t9655 = t9652 + t9653;
  t9657 = t5609*t9634;
  t9662 = t5546*t9655;
  t9663 = t9657 + t9662;
  t9675 = t5546*t9634;
  t9679 = -1.*t5609*t9655;
  t9683 = t9675 + t9679;
  t9745 = -1.*t4560*t6159;
  t9753 = t9745 + t9112;
  t9763 = -1.*t5279*t6215;
  t9769 = t5239*t9753;
  t9770 = t9763 + t9769;
  t9778 = t5279*t9753;
  t9780 = t6279 + t9778;
  t9799 = t5609*t9770;
  t9803 = t5546*t9780;
  t9805 = t9799 + t9803;
  t9807 = t5546*t9770;
  t9813 = -1.*t5609*t9780;
  t9816 = t9807 + t9813;
  t9707 = -0.21*t4560;
  t9713 = -0.049*t4647;
  t9721 = t9707 + t9713;
  t9728 = 0.049*t4560;
  t9731 = t9728 + t4652;
  t9866 = t3513*t8161;
  t9867 = t3215*t9269;
  t9872 = t9866 + t9867;
  t9890 = -1.*t4647*t9872;
  t9894 = t9890 + t9342;
  t9897 = -1.*t4560*t9872;
  t9899 = t9897 + t9361;
  t9908 = -1.*t5279*t9894;
  t9909 = t5239*t9899;
  t9910 = t9908 + t9909;
  t9925 = t5239*t9894;
  t9934 = t5279*t9899;
  t9935 = t9925 + t9934;
  t9956 = t5609*t9910;
  t9963 = t5546*t9935;
  t9966 = t9956 + t9963;
  t9974 = t5546*t9910;
  t9977 = -1.*t5609*t9935;
  t9980 = t9974 + t9977;
  t10023 = t3513*t7697;
  t10024 = t3215*t9531;
  t10027 = t10023 + t10024;
  t10039 = -1.*t4647*t10027;
  t10040 = t10039 + t9585;
  t10050 = -1.*t4560*t10027;
  t10052 = t10050 + t9608;
  t10057 = -1.*t5279*t10040;
  t10061 = t5239*t10052;
  t10062 = t10057 + t10061;
  t10067 = t5239*t10040;
  t10068 = t5279*t10052;
  t10075 = t10067 + t10068;
  t10085 = t5609*t10062;
  t10089 = t5546*t10075;
  t10090 = t10085 + t10089;
  t10103 = t5546*t10062;
  t10107 = -1.*t5609*t10075;
  t10111 = t10103 + t10107;
  t10177 = -1.*t5239*t6242;
  t10182 = t9763 + t10177;
  t10200 = t5609*t10182;
  t10202 = t10200 + t6298;
  t10206 = t5546*t10182;
  t10209 = -1.*t5609*t6293;
  t10211 = t10206 + t10209;
  t10162 = 0.0016*t5239;
  t10165 = t10162 + t5493;
  t10170 = -0.2707*t5239;
  t10171 = -0.0016*t5279;
  t10173 = t10170 + t10171;
  t10257 = t4560*t9872;
  t10260 = t4647*t9323;
  t10261 = t10257 + t10260;
  t10265 = -1.*t5239*t10261;
  t10271 = t9908 + t10265;
  t10276 = -1.*t5279*t10261;
  t10279 = t9925 + t10276;
  t10285 = t5609*t10271;
  t10288 = t5546*t10279;
  t10292 = t10285 + t10288;
  t10295 = t5546*t10271;
  t10296 = -1.*t5609*t10279;
  t10304 = t10295 + t10296;
  t10341 = t4560*t10027;
  t10346 = t4647*t9573;
  t10347 = t10341 + t10346;
  t10352 = -1.*t5239*t10347;
  t10357 = t10057 + t10352;
  t10362 = -1.*t5279*t10347;
  t10364 = t10067 + t10362;
  t10378 = t5609*t10357;
  t10379 = t5546*t10364;
  t10380 = t10378 + t10379;
  t10383 = t5546*t10357;
  t10385 = -1.*t5609*t10364;
  t10386 = t10383 + t10385;
  t10492 = -1.*t5546*t6265;
  t10493 = t10492 + t10209;
  t6352 = t5742*t6301;
  t10443 = -0.7055*t5546;
  t10448 = 0.0184*t5609;
  t10454 = t10443 + t10448;
  t10469 = -0.0184*t5546;
  t10474 = t10469 + t5616;
  t10535 = t5279*t9894;
  t10536 = t5239*t10261;
  t10537 = t10535 + t10536;
  t10549 = -1.*t5609*t10537;
  t10552 = t10549 + t10288;
  t10560 = -1.*t5546*t10537;
  t10562 = t10560 + t10296;
  t10597 = t5279*t10040;
  t10601 = t5239*t10347;
  t10610 = t10597 + t10601;
  t10624 = -1.*t5609*t10610;
  t10629 = t10624 + t10379;
  t10648 = -1.*t5546*t10610;
  t10649 = t10648 + t10385;
  t10503 = -1.*t5807*t6301;
  t6354 = -1.*t5807*t6318;
  t6356 = t6352 + t6354;
  t10696 = 0.0216*t5742;
  t10701 = t10696 + t5845;
  t10709 = -1.1135*t5742;
  t10715 = -0.0216*t5807;
  t10723 = t10709 + t10715;
  t10568 = -1.*t5807*t10552;
  t10748 = t5546*t10537;
  t10751 = t5609*t10279;
  t10753 = t10748 + t10751;
  t10581 = t5742*t10552;
  t10654 = -1.*t5807*t10629;
  t10793 = t5546*t10610;
  t10794 = t5609*t10364;
  t10796 = t10793 + t10794;
  t10686 = t5742*t10629;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t1288*t2301 + t2644*t2700 + t2885*t3121 + t3529*t3916 + t4373*t4465 + t4657*t5015 + t5163*t5200 + t5423*t5443 + t5508*t5529 + t5635*t5651 + t5669*t5725 + t5816*t5832 + t5860*t5897 - 0.027251*(t5807*t5832 + t5742*t5897) - 1.200144*(t5742*t5832 - 1.*t5807*t5897) - 1.*t27*t488*t706 - 0.1305*(t3121*t41 + t27*t339*t706);
  p_output1[10]=t2073*t27*t488 + t1288*t6005 + t2644*t6034 + t2885*t6058 + t3529*t6091 - 0.1305*t6113 + t4373*t6132 + t4657*t6159 + t5163*t6184 + t5423*t6215 + t5508*t6242 + t5635*t6265 + t5669*t6293 + t5816*t6301 + t5860*t6318 - 0.027251*(t5807*t6301 + t5742*t6318) - 1.200144*t6356;
  p_output1[11]=0;
  p_output1[12]=t1288*t1583*t2073*t27 + t2073*t2074*t2644*t27 - 1.*t1603*t2073*t488 + t2885*t6399 - 0.1305*(t1603*t2073*t339 + t41*t6399) + t3529*t6422 + t4373*t6471 + t4657*t6484 + t5163*t6495 + t5423*t6502 + t5508*t6511 + t5635*t6520 + t5669*t6550 + t5816*t6560 + t5860*t6569 - 0.027251*(t5807*t6560 + t5742*t6569) - 1.200144*(t5742*t6560 - 1.*t5807*t6569);
  p_output1[13]=t2885*t6620 + t3529*t6631 + t4373*t6648 + t4657*t6688 + t5163*t6697 + t5423*t6711 + t5508*t6724 + t5635*t6737 + t5669*t6762 + t5816*t6774 + t5860*t6793 - 0.027251*(t5807*t6774 + t5742*t6793) - 1.200144*(t5742*t6774 - 1.*t5807*t6793) + t1288*t1583*t27*t706 + t2074*t2644*t27*t706 - 1.*t1603*t488*t706 - 0.1305*(t41*t6620 + t1603*t339*t706);
  p_output1[14]=-1.*t1288*t1583*t1603 - 1.*t1603*t2074*t2644 - 1.*t27*t488 + t2885*t6855 - 0.1305*(t27*t339 + t41*t6855) + t3529*t6874 + t4373*t6897 + t4657*t6917 + t5163*t6926 + t5423*t6946 + t5508*t6959 + t5635*t6971 + t5669*t6981 + t5816*t6996 + t5860*t7013 - 0.027251*(t5807*t6996 + t5742*t7013) - 1.200144*(t5742*t6996 - 1.*t5807*t7013);
  p_output1[15]=t2644*t6005 + t1288*t7077 + t3529*t7092 + t2885*t7110 - 0.1305*t41*t7110 + t339*t4373*t7110 + t4657*t7138 + t5163*t7161 + t5423*t7195 + t5508*t7225 + t5635*t7239 + t5669*t7254 + t5816*t7274 + t5860*t7304 - 0.027251*(t5807*t7274 + t5742*t7304) - 1.200144*(t5742*t7274 - 1.*t5807*t7304);
  p_output1[16]=t1288*t2700 + t2644*t7383 + t3529*t7409 + t2885*t7423 - 0.1305*t41*t7423 + t339*t4373*t7423 + t4657*t7449 + t5163*t7481 + t5423*t7504 + t5508*t7521 + t5635*t7546 + t5669*t7568 + t5816*t7595 + t5860*t7624 - 0.027251*(t5807*t7595 + t5742*t7624) - 1.200144*(t5742*t7595 - 1.*t5807*t7624);
  p_output1[17]=-1.*t1288*t2074*t27 + t1583*t2644*t27 + t7682 + t7702 + t7707 + t7712 + t7724 + t7737 + t7772 + t7801 + t7807 + t7841 + t7865 + t7881 + t7902 + t7917;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0.135*t2502*t6005 + t2885*t6091 - 0.1305*t41*t6091 + t339*t4373*t6091 + t3529*t7938 + t4657*t7978 + t5163*t7986 + t5423*t8008 + t5508*t8018 + t5635*t8031 + t5669*t8037 + t5816*t8052 + t5860*t8083 - 0.027251*(t5807*t8052 + t5742*t8083) - 1.200144*(t5742*t8052 - 1.*t5807*t8083) - 0.135*t6034*t939;
  p_output1[40]=0.135*t2502*t7383 + t3529*t8140 + t2885*t8161 - 0.1305*t41*t8161 + t339*t4373*t8161 + t4657*t8178 + t5163*t8198 + t5423*t8216 + t5508*t8230 + t5635*t8247 + t5669*t8264 + t5816*t8275 + t5860*t8299 - 0.027251*(t5807*t8275 + t5742*t8299) - 1.200144*(t5742*t8275 - 1.*t5807*t8299) - 0.135*t8128*t939;
  p_output1[41]=0.135*t1583*t2502*t27 + t7682 + t7702 + t7707 + t7712 + t7724 + t7737 + t7772 + t7801 + t7807 + t7841 + t7865 + t7881 + t7902 + t7917 - 0.135*t2074*t27*t939;
  p_output1[42]=-0.1305*(-1.*t2073*t27*t41 - 1.*t339*t6058) + t4373*t6113 + t3215*t4657*t6113 - 1.*t3513*t5163*t6113 + t2073*t27*t8383 + t6058*t8405 + t5423*t8467 + t5508*t8485 + t5635*t8501 + t5669*t8513 + t5816*t8529 + t5860*t8543 - 0.027251*(t5807*t8529 + t5742*t8543) - 1.200144*(t5742*t8529 - 1.*t5807*t8543);
  p_output1[43]=t27*t706*t8383 + t8405*t8593 - 0.1305*(t4386 - 1.*t339*t8593) + t4373*t8616 + t3215*t4657*t8616 - 1.*t3513*t5163*t8616 + t5423*t8657 + t5508*t8672 + t5635*t8680 + t5669*t8707 + t5816*t8725 + t5860*t8753 - 0.027251*(t5807*t8725 + t5742*t8753) - 1.200144*(t5742*t8725 - 1.*t5807*t8753);
  p_output1[44]=-1.*t1603*t8383 + t8405*t8806 - 0.1305*(t1603*t41 - 1.*t339*t8806) + t4373*t8831 + t3215*t4657*t8831 - 1.*t3513*t5163*t8831 + t5423*t8877 + t5508*t8886 + t5635*t8898 + t5669*t8921 + t5816*t8933 + t5860*t8956 - 0.027251*(t5807*t8933 + t5742*t8956) - 1.200144*(t5742*t8933 - 1.*t5807*t8956);
  p_output1[45]=t4657*t6184 + t6091*t9030 + t6132*t9053 + t5163*t9073 + t5508*t9103 + t5423*t9120 + t5669*t9133 + t5635*t9148 + t5860*t9163 + t5816*t9188 - 1.200144*(-1.*t5807*t9163 + t5742*t9188) - 0.027251*(t5742*t9163 + t5807*t9188);
  p_output1[46]=t8161*t9030 + t9053*t9269 + t5163*t9306 + t4657*t9323 + t5508*t9352 + t5423*t9362 + t5669*t9375 + t5635*t9387 + t5860*t9398 + t5816*t9416 - 1.200144*(-1.*t5807*t9398 + t5742*t9416) - 0.027251*(t5742*t9398 + t5807*t9416);
  p_output1[47]=t7697*t9030 + t9053*t9531 + t5163*t9548 + t4657*t9573 + t5508*t9595 + t5423*t9613 + t5669*t9634 + t5635*t9655 + t5860*t9663 + t5816*t9683 - 1.200144*(-1.*t5807*t9663 + t5742*t9683) - 0.027251*(t5742*t9663 + t5807*t9683);
  p_output1[48]=t5508*t6215 + t6159*t9721 + t6184*t9731 + t5423*t9753 + t5669*t9770 + t5635*t9780 + t5860*t9805 + t5816*t9816 - 1.200144*(-1.*t5807*t9805 + t5742*t9816) - 0.027251*(t5742*t9805 + t5807*t9816);
  p_output1[49]=t9323*t9731 + t9721*t9872 + t5508*t9894 + t5423*t9899 + t5669*t9910 + t5635*t9935 + t5860*t9966 + t5816*t9980 - 1.200144*(-1.*t5807*t9966 + t5742*t9980) - 0.027251*(t5742*t9966 + t5807*t9980);
  p_output1[50]=t10052*t5423 + t10040*t5508 + t10075*t5635 + t10062*t5669 - 1.200144*(t10111*t5742 - 1.*t10090*t5807) - 0.027251*(t10090*t5742 + t10111*t5807) + t10111*t5816 + t10090*t5860 + t10027*t9721 + t9573*t9731;
  p_output1[51]=t10182*t5669 - 1.200144*(t10211*t5742 - 1.*t10202*t5807) - 0.027251*(t10202*t5742 + t10211*t5807) + t10211*t5816 + t10202*t5860 + t10165*t6215 + t10173*t6242 + t5635*t6293;
  p_output1[52]=t10173*t10261 + t10279*t5635 + t10271*t5669 - 1.200144*(t10304*t5742 - 1.*t10292*t5807) - 0.027251*(t10292*t5742 + t10304*t5807) + t10304*t5816 + t10292*t5860 + t10165*t9894;
  p_output1[53]=t10040*t10165 + t10173*t10347 + t10364*t5635 + t10357*t5669 - 1.200144*(t10386*t5742 - 1.*t10380*t5807) - 0.027251*(t10380*t5742 + t10386*t5807) + t10386*t5816 + t10380*t5860;
  p_output1[54]=-1.200144*(t10503 + t10493*t5742) + t10493*t5816 + t10454*t6265 + t10474*t6293 + t5860*t6301 - 0.027251*(t10493*t5807 + t6352);
  p_output1[55]=t10279*t10474 + t10454*t10537 - 1.200144*(t10568 + t10562*t5742) - 0.027251*(t10581 + t10562*t5807) + t10562*t5816 + t10552*t5860;
  p_output1[56]=t10364*t10474 + t10454*t10610 - 1.200144*(t10654 + t10649*t5742) - 0.027251*(t10686 + t10649*t5807) + t10649*t5816 + t10629*t5860;
  p_output1[57]=t10701*t6301 + t10723*t6318 - 1.200144*(t10503 - 1.*t5742*t6318) - 0.027251*t6356;
  p_output1[58]=t10552*t10701 + t10723*t10753 - 1.200144*(t10568 - 1.*t10753*t5742) - 0.027251*(t10581 - 1.*t10753*t5807);
  p_output1[59]=t10629*t10701 + t10723*t10796 - 1.200144*(t10654 - 1.*t10796*t5742) - 0.027251*(t10686 - 1.*t10796*t5807);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "J_RightToeBack_mex.hh"

namespace SymExpression
{

void J_RightToeBack_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
