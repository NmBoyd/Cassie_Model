/*
 * Automatically Generated from Mathematica.
 * Fri 16 Mar 2018 11:08:05 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t3418;
  double t3431;
  double t3433;
  double t3416;
  double t3434;
  double t3385;
  double t3429;
  double t3435;
  double t3457;
  double t3462;
  double t3463;
  double t3465;
  double t3466;
  double t3489;
  double t3498;
  double t3502;
  double t3506;
  double t3482;
  double t3485;
  double t3488;
  double t3512;
  double t3546;
  double t3548;
  double t3549;
  double t3556;
  double t3540;
  double t3542;
  double t3543;
  double t3563;
  double t3564;
  double t3565;
  double t3581;
  double t3584;
  double t3586;
  double t3590;
  double t3598;
  double t3599;
  double t3600;
  double t3611;
  double t3612;
  double t3613;
  double t3615;
  double t3616;
  double t3617;
  double t3620;
  double t3624;
  double t3625;
  double t3626;
  double t3634;
  double t3635;
  double t3637;
  double t3640;
  double t3642;
  double t3645;
  double t3648;
  double t3652;
  double t3655;
  double t3656;
  double t3665;
  double t3667;
  double t3668;
  double t3389;
  double t3399;
  double t3413;
  double t3414;
  double t3478;
  double t3480;
  double t3682;
  double t3683;
  double t3684;
  double t3686;
  double t3687;
  double t3688;
  double t3505;
  double t3507;
  double t3510;
  double t3513;
  double t3515;
  double t3526;
  double t3690;
  double t3691;
  double t3692;
  double t3553;
  double t3558;
  double t3560;
  double t3566;
  double t3568;
  double t3570;
  double t3587;
  double t3594;
  double t3595;
  double t3702;
  double t3703;
  double t3704;
  double t3707;
  double t3708;
  double t3710;
  double t3606;
  double t3607;
  double t3610;
  double t3618;
  double t3621;
  double t3623;
  double t3713;
  double t3714;
  double t3715;
  double t3717;
  double t3719;
  double t3720;
  double t3629;
  double t3630;
  double t3632;
  double t3646;
  double t3649;
  double t3651;
  double t3723;
  double t3724;
  double t3727;
  double t3729;
  double t3730;
  double t3731;
  double t3662;
  double t3663;
  double t3664;
  double t3733;
  double t3734;
  double t3735;
  double t3737;
  double t3738;
  double t3739;
  double t3752;
  double t3753;
  double t3754;
  double t3761;
  double t3762;
  double t3763;
  double t3765;
  double t3766;
  double t3767;
  double t3769;
  double t3770;
  double t3771;
  double t3773;
  double t3774;
  double t3775;
  double t3777;
  double t3778;
  double t3779;
  double t3781;
  double t3782;
  double t3783;
  double t3785;
  double t3786;
  double t3787;
  double t3789;
  double t3790;
  double t3791;
  double t3804;
  double t3805;
  double t3806;
  double t3813;
  double t3814;
  double t3815;
  double t3817;
  double t3818;
  double t3819;
  double t3821;
  double t3822;
  double t3823;
  double t3825;
  double t3826;
  double t3827;
  double t3829;
  double t3830;
  double t3831;
  double t3833;
  double t3834;
  double t3835;
  double t3837;
  double t3838;
  double t3839;
  double t3841;
  double t3842;
  double t3843;
  double t3856;
  double t3857;
  double t3858;
  double t3865;
  double t3866;
  double t3867;
  double t3869;
  double t3870;
  double t3871;
  double t3873;
  double t3874;
  double t3875;
  double t3877;
  double t3878;
  double t3879;
  double t3881;
  double t3882;
  double t3883;
  double t3885;
  double t3886;
  double t3887;
  double t3889;
  double t3890;
  double t3891;
  double t3893;
  double t3894;
  double t3895;
  double t3907;
  double t3908;
  double t3909;
  double t3911;
  double t3912;
  double t3916;
  double t3917;
  double t3918;
  double t3920;
  double t3921;
  double t3922;
  double t3924;
  double t3925;
  double t3926;
  double t3928;
  double t3929;
  double t3930;
  double t3932;
  double t3933;
  double t3934;
  double t3936;
  double t3937;
  double t3938;
  double t3940;
  double t3941;
  double t3942;
  double t3953;
  double t3954;
  double t3955;
  double t3958;
  double t3959;
  double t3960;
  double t3964;
  double t3965;
  double t3967;
  double t3968;
  double t3969;
  double t3971;
  double t3972;
  double t3973;
  double t3975;
  double t3976;
  double t3977;
  double t3979;
  double t3980;
  double t3981;
  double t3983;
  double t3984;
  double t3985;
  double t3987;
  double t3988;
  double t3989;
  double t4002;
  double t4003;
  double t4004;
  double t4008;
  double t4009;
  double t4010;
  double t4012;
  double t4013;
  double t4014;
  double t4016;
  double t4017;
  double t4018;
  double t4020;
  double t4021;
  double t4022;
  double t4024;
  double t4025;
  double t4026;
  double t4028;
  double t4029;
  double t4030;
  double t4032;
  double t4033;
  double t4034;
  double t4050;
  double t4051;
  double t4053;
  double t4054;
  double t4055;
  double t4057;
  double t4058;
  double t4059;
  double t4061;
  double t4062;
  double t4063;
  double t4065;
  double t4066;
  double t4067;
  double t4069;
  double t4070;
  double t4071;
  double t4073;
  double t4074;
  double t4075;
  double t4087;
  double t4088;
  double t4089;
  double t4091;
  double t4092;
  double t4096;
  double t4097;
  double t4099;
  double t4100;
  double t4101;
  double t4103;
  double t4104;
  double t4105;
  double t4107;
  double t4108;
  double t4109;
  double t4111;
  double t4112;
  double t4113;
  double t4115;
  double t4116;
  double t4117;
  double t4119;
  double t4120;
  double t4121;
  double t4005;
  double t4006;
  double t4007;
  double t4011;
  double t4015;
  double t4019;
  double t4023;
  double t4027;
  double t4031;
  double t4035;
  double t4036;
  double t4037;
  double t4038;
  double t4039;
  double t4040;
  double t4041;
  double t4042;
  double t4043;
  double t3695;
  double t3697;
  double t3699;
  double t4149;
  double t4150;
  double t4151;
  double t4153;
  double t4154;
  double t4155;
  double t4157;
  double t4158;
  double t4159;
  double t4161;
  double t4162;
  double t4163;
  double t4135;
  double t4136;
  double t4137;
  double t4139;
  double t4140;
  double t4175;
  double t4176;
  double t4177;
  double t4179;
  double t4180;
  double t4181;
  double t4188;
  double t4189;
  double t4190;
  double t4192;
  double t4193;
  double t4194;
  double t4196;
  double t4197;
  double t4198;
  double t4200;
  double t4201;
  double t4202;
  double t4214;
  double t4215;
  double t4216;
  double t4218;
  double t4219;
  double t4220;
  double t4228;
  double t4229;
  double t4230;
  double t4232;
  double t4233;
  double t4234;
  double t4236;
  double t4237;
  double t4238;
  double t4240;
  double t4241;
  double t4242;
  double t4260;
  double t4261;
  double t4262;
  double t4265;
  double t4266;
  double t4268;
  double t4269;
  double t4270;
  double t4272;
  double t4273;
  double t4274;
  double t4276;
  double t4277;
  double t4278;
  double t4253;
  double t4254;
  double t4256;
  double t4257;
  double t4258;
  double t4290;
  double t4291;
  double t4292;
  double t4294;
  double t4295;
  double t4296;
  double t4298;
  double t4299;
  double t4300;
  double t4302;
  double t4303;
  double t4304;
  double t4306;
  double t4307;
  double t4308;
  double t4310;
  double t4311;
  double t4312;
  double t4314;
  double t4315;
  double t4316;
  double t4328;
  double t4329;
  double t4330;
  double t4332;
  double t4333;
  double t4334;
  double t4336;
  double t4337;
  double t4338;
  double t4340;
  double t4341;
  double t4342;
  double t4344;
  double t4345;
  double t4346;
  double t4348;
  double t4349;
  double t4350;
  double t4352;
  double t4353;
  double t4354;
  double t4373;
  double t4374;
  double t4376;
  double t4377;
  double t4378;
  double t4380;
  double t4381;
  double t4365;
  double t4366;
  double t4367;
  double t4369;
  double t4370;
  double t4392;
  double t4393;
  double t4394;
  double t4397;
  double t4398;
  double t4400;
  double t4401;
  double t4403;
  double t4404;
  double t4405;
  double t4407;
  double t4408;
  double t4409;
  double t4420;
  double t4421;
  double t4422;
  double t4425;
  double t4426;
  double t4428;
  double t4429;
  double t4431;
  double t4432;
  double t4433;
  double t4435;
  double t4436;
  double t4437;
  double t4455;
  double t4456;
  double t3742;
  double t4448;
  double t4449;
  double t4451;
  double t4452;
  double t4453;
  double t4468;
  double t4469;
  double t4470;
  double t4472;
  double t4473;
  double t4475;
  double t4476;
  double t4488;
  double t4489;
  double t4490;
  double t4492;
  double t4493;
  double t4495;
  double t4496;
  double t3741;
  double t3743;
  double t4463;
  double t4507;
  double t4508;
  double t4509;
  double t4511;
  double t4512;
  double t4519;
  double t4520;
  double t4521;
  double t4479;
  double t4483;
  double t4531;
  double t4532;
  double t4533;
  double t4499;
  double t4503;
  t3418 = Cos(var1[5]);
  t3431 = Sin(var1[3]);
  t3433 = Sin(var1[4]);
  t3416 = Cos(var1[3]);
  t3434 = Sin(var1[5]);
  t3385 = Cos(var1[6]);
  t3429 = -1.*t3416*t3418;
  t3435 = -1.*t3431*t3433*t3434;
  t3457 = t3429 + t3435;
  t3462 = -1.*t3418*t3431*t3433;
  t3463 = t3416*t3434;
  t3465 = t3462 + t3463;
  t3466 = Sin(var1[6]);
  t3489 = Cos(var1[7]);
  t3498 = -1.*t3489;
  t3502 = 1. + t3498;
  t3506 = Sin(var1[7]);
  t3482 = t3385*t3457;
  t3485 = t3465*t3466;
  t3488 = t3482 + t3485;
  t3512 = Cos(var1[4]);
  t3546 = Cos(var1[8]);
  t3548 = -1.*t3546;
  t3549 = 1. + t3548;
  t3556 = Sin(var1[8]);
  t3540 = -1.*t3512*t3489*t3431;
  t3542 = t3488*t3506;
  t3543 = t3540 + t3542;
  t3563 = t3385*t3465;
  t3564 = -1.*t3457*t3466;
  t3565 = t3563 + t3564;
  t3581 = Cos(var1[9]);
  t3584 = -1.*t3581;
  t3586 = 1. + t3584;
  t3590 = Sin(var1[9]);
  t3598 = t3546*t3543;
  t3599 = t3565*t3556;
  t3600 = t3598 + t3599;
  t3611 = t3546*t3565;
  t3612 = -1.*t3543*t3556;
  t3613 = t3611 + t3612;
  t3615 = Cos(var1[10]);
  t3616 = -1.*t3615;
  t3617 = 1. + t3616;
  t3620 = Sin(var1[10]);
  t3624 = -1.*t3590*t3600;
  t3625 = t3581*t3613;
  t3626 = t3624 + t3625;
  t3634 = t3581*t3600;
  t3635 = t3590*t3613;
  t3637 = t3634 + t3635;
  t3640 = Cos(var1[11]);
  t3642 = -1.*t3640;
  t3645 = 1. + t3642;
  t3648 = Sin(var1[11]);
  t3652 = t3620*t3626;
  t3655 = t3615*t3637;
  t3656 = t3652 + t3655;
  t3665 = t3615*t3626;
  t3667 = -1.*t3620*t3637;
  t3668 = t3665 + t3667;
  t3389 = -1.*t3385;
  t3399 = 1. + t3389;
  t3413 = 0.135*t3399;
  t3414 = 0. + t3413;
  t3478 = -0.135*t3466;
  t3480 = 0. + t3478;
  t3682 = -1.*t3418*t3431;
  t3683 = t3416*t3433*t3434;
  t3684 = t3682 + t3683;
  t3686 = t3416*t3418*t3433;
  t3687 = t3431*t3434;
  t3688 = t3686 + t3687;
  t3505 = 0.135*t3502;
  t3507 = 0.049*t3506;
  t3510 = 0. + t3505 + t3507;
  t3513 = -0.049*t3502;
  t3515 = 0.135*t3506;
  t3526 = 0. + t3513 + t3515;
  t3690 = t3385*t3684;
  t3691 = t3688*t3466;
  t3692 = t3690 + t3691;
  t3553 = -0.049*t3549;
  t3558 = -0.09*t3556;
  t3560 = 0. + t3553 + t3558;
  t3566 = -0.09*t3549;
  t3568 = 0.049*t3556;
  t3570 = 0. + t3566 + t3568;
  t3587 = -0.049*t3586;
  t3594 = -0.21*t3590;
  t3595 = 0. + t3587 + t3594;
  t3702 = t3416*t3512*t3489;
  t3703 = t3692*t3506;
  t3704 = t3702 + t3703;
  t3707 = t3385*t3688;
  t3708 = -1.*t3684*t3466;
  t3710 = t3707 + t3708;
  t3606 = -0.21*t3586;
  t3607 = 0.049*t3590;
  t3610 = 0. + t3606 + t3607;
  t3618 = -0.2707*t3617;
  t3621 = 0.0016*t3620;
  t3623 = 0. + t3618 + t3621;
  t3713 = t3546*t3704;
  t3714 = t3710*t3556;
  t3715 = t3713 + t3714;
  t3717 = t3546*t3710;
  t3719 = -1.*t3704*t3556;
  t3720 = t3717 + t3719;
  t3629 = -0.0016*t3617;
  t3630 = -0.2707*t3620;
  t3632 = 0. + t3629 + t3630;
  t3646 = 0.0184*t3645;
  t3649 = -0.7055*t3648;
  t3651 = 0. + t3646 + t3649;
  t3723 = -1.*t3590*t3715;
  t3724 = t3581*t3720;
  t3727 = t3723 + t3724;
  t3729 = t3581*t3715;
  t3730 = t3590*t3720;
  t3731 = t3729 + t3730;
  t3662 = -0.7055*t3645;
  t3663 = -0.0184*t3648;
  t3664 = 0. + t3662 + t3663;
  t3733 = t3620*t3727;
  t3734 = t3615*t3731;
  t3735 = t3733 + t3734;
  t3737 = t3615*t3727;
  t3738 = -1.*t3620*t3731;
  t3739 = t3737 + t3738;
  t3752 = t3416*t3512*t3385*t3434;
  t3753 = t3416*t3512*t3418*t3466;
  t3754 = t3752 + t3753;
  t3761 = -1.*t3416*t3489*t3433;
  t3762 = t3754*t3506;
  t3763 = t3761 + t3762;
  t3765 = t3416*t3512*t3418*t3385;
  t3766 = -1.*t3416*t3512*t3434*t3466;
  t3767 = t3765 + t3766;
  t3769 = t3546*t3763;
  t3770 = t3767*t3556;
  t3771 = t3769 + t3770;
  t3773 = t3546*t3767;
  t3774 = -1.*t3763*t3556;
  t3775 = t3773 + t3774;
  t3777 = -1.*t3590*t3771;
  t3778 = t3581*t3775;
  t3779 = t3777 + t3778;
  t3781 = t3581*t3771;
  t3782 = t3590*t3775;
  t3783 = t3781 + t3782;
  t3785 = t3620*t3779;
  t3786 = t3615*t3783;
  t3787 = t3785 + t3786;
  t3789 = t3615*t3779;
  t3790 = -1.*t3620*t3783;
  t3791 = t3789 + t3790;
  t3804 = t3512*t3385*t3431*t3434;
  t3805 = t3512*t3418*t3431*t3466;
  t3806 = t3804 + t3805;
  t3813 = -1.*t3489*t3431*t3433;
  t3814 = t3806*t3506;
  t3815 = t3813 + t3814;
  t3817 = t3512*t3418*t3385*t3431;
  t3818 = -1.*t3512*t3431*t3434*t3466;
  t3819 = t3817 + t3818;
  t3821 = t3546*t3815;
  t3822 = t3819*t3556;
  t3823 = t3821 + t3822;
  t3825 = t3546*t3819;
  t3826 = -1.*t3815*t3556;
  t3827 = t3825 + t3826;
  t3829 = -1.*t3590*t3823;
  t3830 = t3581*t3827;
  t3831 = t3829 + t3830;
  t3833 = t3581*t3823;
  t3834 = t3590*t3827;
  t3835 = t3833 + t3834;
  t3837 = t3620*t3831;
  t3838 = t3615*t3835;
  t3839 = t3837 + t3838;
  t3841 = t3615*t3831;
  t3842 = -1.*t3620*t3835;
  t3843 = t3841 + t3842;
  t3856 = -1.*t3385*t3433*t3434;
  t3857 = -1.*t3418*t3433*t3466;
  t3858 = t3856 + t3857;
  t3865 = -1.*t3512*t3489;
  t3866 = t3858*t3506;
  t3867 = t3865 + t3866;
  t3869 = -1.*t3418*t3385*t3433;
  t3870 = t3433*t3434*t3466;
  t3871 = t3869 + t3870;
  t3873 = t3546*t3867;
  t3874 = t3871*t3556;
  t3875 = t3873 + t3874;
  t3877 = t3546*t3871;
  t3878 = -1.*t3867*t3556;
  t3879 = t3877 + t3878;
  t3881 = -1.*t3590*t3875;
  t3882 = t3581*t3879;
  t3883 = t3881 + t3882;
  t3885 = t3581*t3875;
  t3886 = t3590*t3879;
  t3887 = t3885 + t3886;
  t3889 = t3620*t3883;
  t3890 = t3615*t3887;
  t3891 = t3889 + t3890;
  t3893 = t3615*t3883;
  t3894 = -1.*t3620*t3887;
  t3895 = t3893 + t3894;
  t3907 = t3418*t3431;
  t3908 = -1.*t3416*t3433*t3434;
  t3909 = t3907 + t3908;
  t3911 = t3909*t3466;
  t3912 = t3707 + t3911;
  t3916 = t3385*t3909;
  t3917 = -1.*t3688*t3466;
  t3918 = t3916 + t3917;
  t3920 = t3546*t3912*t3506;
  t3921 = t3918*t3556;
  t3922 = t3920 + t3921;
  t3924 = t3546*t3918;
  t3925 = -1.*t3912*t3506*t3556;
  t3926 = t3924 + t3925;
  t3928 = -1.*t3590*t3922;
  t3929 = t3581*t3926;
  t3930 = t3928 + t3929;
  t3932 = t3581*t3922;
  t3933 = t3590*t3926;
  t3934 = t3932 + t3933;
  t3936 = t3620*t3930;
  t3937 = t3615*t3934;
  t3938 = t3936 + t3937;
  t3940 = t3615*t3930;
  t3941 = -1.*t3620*t3934;
  t3942 = t3940 + t3941;
  t3953 = t3418*t3431*t3433;
  t3954 = -1.*t3416*t3434;
  t3955 = t3953 + t3954;
  t3958 = t3385*t3955;
  t3959 = t3457*t3466;
  t3960 = t3958 + t3959;
  t3964 = -1.*t3955*t3466;
  t3965 = t3482 + t3964;
  t3967 = t3546*t3960*t3506;
  t3968 = t3965*t3556;
  t3969 = t3967 + t3968;
  t3971 = t3546*t3965;
  t3972 = -1.*t3960*t3506*t3556;
  t3973 = t3971 + t3972;
  t3975 = -1.*t3590*t3969;
  t3976 = t3581*t3973;
  t3977 = t3975 + t3976;
  t3979 = t3581*t3969;
  t3980 = t3590*t3973;
  t3981 = t3979 + t3980;
  t3983 = t3620*t3977;
  t3984 = t3615*t3981;
  t3985 = t3983 + t3984;
  t3987 = t3615*t3977;
  t3988 = -1.*t3620*t3981;
  t3989 = t3987 + t3988;
  t4002 = t3512*t3418*t3385;
  t4003 = -1.*t3512*t3434*t3466;
  t4004 = t4002 + t4003;
  t4008 = -1.*t3512*t3385*t3434;
  t4009 = -1.*t3512*t3418*t3466;
  t4010 = t4008 + t4009;
  t4012 = t3546*t4004*t3506;
  t4013 = t4010*t3556;
  t4014 = t4012 + t4013;
  t4016 = t3546*t4010;
  t4017 = -1.*t4004*t3506*t3556;
  t4018 = t4016 + t4017;
  t4020 = -1.*t3590*t4014;
  t4021 = t3581*t4018;
  t4022 = t4020 + t4021;
  t4024 = t3581*t4014;
  t4025 = t3590*t4018;
  t4026 = t4024 + t4025;
  t4028 = t3620*t4022;
  t4029 = t3615*t4026;
  t4030 = t4028 + t4029;
  t4032 = t3615*t4022;
  t4033 = -1.*t3620*t4026;
  t4034 = t4032 + t4033;
  t4050 = -1.*t3385*t3684;
  t4051 = t4050 + t3917;
  t4053 = t3546*t3710*t3506;
  t4054 = t4051*t3556;
  t4055 = t4053 + t4054;
  t4057 = t3546*t4051;
  t4058 = -1.*t3710*t3506*t3556;
  t4059 = t4057 + t4058;
  t4061 = -1.*t3590*t4055;
  t4062 = t3581*t4059;
  t4063 = t4061 + t4062;
  t4065 = t3581*t4055;
  t4066 = t3590*t4059;
  t4067 = t4065 + t4066;
  t4069 = t3620*t4063;
  t4070 = t3615*t4067;
  t4071 = t4069 + t4070;
  t4073 = t3615*t4063;
  t4074 = -1.*t3620*t4067;
  t4075 = t4073 + t4074;
  t4087 = t3416*t3418;
  t4088 = t3431*t3433*t3434;
  t4089 = t4087 + t4088;
  t4091 = -1.*t4089*t3466;
  t4092 = t3958 + t4091;
  t4096 = -1.*t3385*t4089;
  t4097 = t4096 + t3964;
  t4099 = t3546*t4092*t3506;
  t4100 = t4097*t3556;
  t4101 = t4099 + t4100;
  t4103 = t3546*t4097;
  t4104 = -1.*t4092*t3506*t3556;
  t4105 = t4103 + t4104;
  t4107 = -1.*t3590*t4101;
  t4108 = t3581*t4105;
  t4109 = t4107 + t4108;
  t4111 = t3581*t4101;
  t4112 = t3590*t4105;
  t4113 = t4111 + t4112;
  t4115 = t3620*t4109;
  t4116 = t3615*t4113;
  t4117 = t4115 + t4116;
  t4119 = t3615*t4109;
  t4120 = -1.*t3620*t4113;
  t4121 = t4119 + t4120;
  t4005 = 0.1305*t3489*t4004;
  t4006 = t4004*t3510;
  t4007 = t4004*t3506*t3560;
  t4011 = t4010*t3570;
  t4015 = t3595*t4014;
  t4019 = t3610*t4018;
  t4023 = t3623*t4022;
  t4027 = t3632*t4026;
  t4031 = t3651*t4030;
  t4035 = t3664*t4034;
  t4036 = -1.*t3648*t4030;
  t4037 = t3640*t4034;
  t4038 = t4036 + t4037;
  t4039 = -0.7055*t4038;
  t4040 = t3640*t4030;
  t4041 = t3648*t4034;
  t4042 = t4040 + t4041;
  t4043 = 0.0184*t4042;
  t3695 = t3489*t3692;
  t3697 = -1.*t3416*t3512*t3506;
  t3699 = t3695 + t3697;
  t4149 = -1.*t3546*t3590*t3699;
  t4150 = -1.*t3581*t3699*t3556;
  t4151 = t4149 + t4150;
  t4153 = t3581*t3546*t3699;
  t4154 = -1.*t3590*t3699*t3556;
  t4155 = t4153 + t4154;
  t4157 = t3620*t4151;
  t4158 = t3615*t4155;
  t4159 = t4157 + t4158;
  t4161 = t3615*t4151;
  t4162 = -1.*t3620*t4155;
  t4163 = t4161 + t4162;
  t4135 = 0.135*t3489;
  t4136 = -0.049*t3506;
  t4137 = t4135 + t4136;
  t4139 = 0.049*t3489;
  t4140 = t4139 + t3515;
  t4175 = t3385*t4089;
  t4176 = t3955*t3466;
  t4177 = t4175 + t4176;
  t4179 = t3489*t4177;
  t4180 = -1.*t3512*t3431*t3506;
  t4181 = t4179 + t4180;
  t4188 = -1.*t3546*t3590*t4181;
  t4189 = -1.*t3581*t4181*t3556;
  t4190 = t4188 + t4189;
  t4192 = t3581*t3546*t4181;
  t4193 = -1.*t3590*t4181*t3556;
  t4194 = t4192 + t4193;
  t4196 = t3620*t4190;
  t4197 = t3615*t4194;
  t4198 = t4196 + t4197;
  t4200 = t3615*t4190;
  t4201 = -1.*t3620*t4194;
  t4202 = t4200 + t4201;
  t4214 = t3512*t3385*t3434;
  t4215 = t3512*t3418*t3466;
  t4216 = t4214 + t4215;
  t4218 = t3489*t4216;
  t4219 = t3433*t3506;
  t4220 = t4218 + t4219;
  t4228 = -1.*t3546*t3590*t4220;
  t4229 = -1.*t3581*t4220*t3556;
  t4230 = t4228 + t4229;
  t4232 = t3581*t3546*t4220;
  t4233 = -1.*t3590*t4220*t3556;
  t4234 = t4232 + t4233;
  t4236 = t3620*t4230;
  t4237 = t3615*t4234;
  t4238 = t4236 + t4237;
  t4240 = t3615*t4230;
  t4241 = -1.*t3620*t4234;
  t4242 = t4240 + t4241;
  t4260 = -1.*t3546*t3704;
  t4261 = -1.*t3710*t3556;
  t4262 = t4260 + t4261;
  t4265 = t3590*t4262;
  t4266 = t4265 + t3724;
  t4268 = t3581*t4262;
  t4269 = -1.*t3590*t3720;
  t4270 = t4268 + t4269;
  t4272 = -1.*t3620*t4266;
  t4273 = t3615*t4270;
  t4274 = t4272 + t4273;
  t4276 = t3615*t4266;
  t4277 = t3620*t4270;
  t4278 = t4276 + t4277;
  t4253 = 0.049*t3546;
  t4254 = t4253 + t3558;
  t4256 = -0.09*t3546;
  t4257 = -0.049*t3556;
  t4258 = t4256 + t4257;
  t4290 = t3512*t3489*t3431;
  t4291 = t4177*t3506;
  t4292 = t4290 + t4291;
  t4294 = -1.*t3546*t4292;
  t4295 = -1.*t4092*t3556;
  t4296 = t4294 + t4295;
  t4298 = t3546*t4092;
  t4299 = -1.*t4292*t3556;
  t4300 = t4298 + t4299;
  t4302 = t3590*t4296;
  t4303 = t3581*t4300;
  t4304 = t4302 + t4303;
  t4306 = t3581*t4296;
  t4307 = -1.*t3590*t4300;
  t4308 = t4306 + t4307;
  t4310 = -1.*t3620*t4304;
  t4311 = t3615*t4308;
  t4312 = t4310 + t4311;
  t4314 = t3615*t4304;
  t4315 = t3620*t4308;
  t4316 = t4314 + t4315;
  t4328 = -1.*t3489*t3433;
  t4329 = t4216*t3506;
  t4330 = t4328 + t4329;
  t4332 = -1.*t3546*t4330;
  t4333 = -1.*t4004*t3556;
  t4334 = t4332 + t4333;
  t4336 = t3546*t4004;
  t4337 = -1.*t4330*t3556;
  t4338 = t4336 + t4337;
  t4340 = t3590*t4334;
  t4341 = t3581*t4338;
  t4342 = t4340 + t4341;
  t4344 = t3581*t4334;
  t4345 = -1.*t3590*t4338;
  t4346 = t4344 + t4345;
  t4348 = -1.*t3620*t4342;
  t4349 = t3615*t4346;
  t4350 = t4348 + t4349;
  t4352 = t3615*t4342;
  t4353 = t3620*t4346;
  t4354 = t4352 + t4353;
  t4373 = -1.*t3581*t3715;
  t4374 = t4373 + t4269;
  t4376 = -1.*t3620*t3727;
  t4377 = t3615*t4374;
  t4378 = t4376 + t4377;
  t4380 = t3620*t4374;
  t4381 = t3737 + t4380;
  t4365 = -0.21*t3581;
  t4366 = -0.049*t3590;
  t4367 = t4365 + t4366;
  t4369 = 0.049*t3581;
  t4370 = t4369 + t3594;
  t4392 = t3546*t4292;
  t4393 = t4092*t3556;
  t4394 = t4392 + t4393;
  t4397 = -1.*t3590*t4394;
  t4398 = t4397 + t4303;
  t4400 = -1.*t3581*t4394;
  t4401 = t4400 + t4307;
  t4403 = -1.*t3620*t4398;
  t4404 = t3615*t4401;
  t4405 = t4403 + t4404;
  t4407 = t3615*t4398;
  t4408 = t3620*t4401;
  t4409 = t4407 + t4408;
  t4420 = t3546*t4330;
  t4421 = t4004*t3556;
  t4422 = t4420 + t4421;
  t4425 = -1.*t3590*t4422;
  t4426 = t4425 + t4341;
  t4428 = -1.*t3581*t4422;
  t4429 = t4428 + t4345;
  t4431 = -1.*t3620*t4426;
  t4432 = t3615*t4429;
  t4433 = t4431 + t4432;
  t4435 = t3615*t4426;
  t4436 = t3620*t4429;
  t4437 = t4435 + t4436;
  t4455 = -1.*t3615*t3731;
  t4456 = t4376 + t4455;
  t3742 = t3640*t3739;
  t4448 = 0.0016*t3615;
  t4449 = t4448 + t3630;
  t4451 = -0.2707*t3615;
  t4452 = -0.0016*t3620;
  t4453 = t4451 + t4452;
  t4468 = t3581*t4394;
  t4469 = t3590*t4300;
  t4470 = t4468 + t4469;
  t4472 = -1.*t3615*t4470;
  t4473 = t4403 + t4472;
  t4475 = -1.*t3620*t4470;
  t4476 = t4407 + t4475;
  t4488 = t3581*t4422;
  t4489 = t3590*t4338;
  t4490 = t4488 + t4489;
  t4492 = -1.*t3615*t4490;
  t4493 = t4431 + t4492;
  t4495 = -1.*t3620*t4490;
  t4496 = t4435 + t4495;
  t3741 = -1.*t3648*t3735;
  t3743 = t3741 + t3742;
  t4463 = -1.*t3648*t3739;
  t4507 = -0.7055*t3640;
  t4508 = 0.0184*t3648;
  t4509 = t4507 + t4508;
  t4511 = -0.0184*t3640;
  t4512 = t4511 + t3649;
  t4519 = t3620*t4398;
  t4520 = t3615*t4470;
  t4521 = t4519 + t4520;
  t4479 = t3640*t4476;
  t4483 = -1.*t3648*t4476;
  t4531 = t3620*t4426;
  t4532 = t3615*t4490;
  t4533 = t4531 + t4532;
  t4499 = t3640*t4496;
  t4503 = -1.*t3648*t4496;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t3414*t3457 + t3465*t3480 + t3488*t3510 + 0.1305*(t3488*t3489 + t3431*t3506*t3512) - 1.*t3431*t3512*t3526 + t3543*t3560 + t3565*t3570 + t3595*t3600 + t3610*t3613 + t3623*t3626 + t3632*t3637 + t3651*t3656 + t3664*t3668 - 0.7055*(-1.*t3648*t3656 + t3640*t3668) + 0.0184*(t3640*t3656 + t3648*t3668);
  p_output1[10]=t3416*t3512*t3526 + t3414*t3684 + t3480*t3688 + t3510*t3692 + 0.1305*t3699 + t3560*t3704 + t3570*t3710 + t3595*t3715 + t3610*t3720 + t3623*t3727 + t3632*t3731 + t3651*t3735 + t3664*t3739 + 0.0184*(t3640*t3735 + t3648*t3739) - 0.7055*t3743;
  p_output1[11]=0;
  p_output1[12]=t3414*t3416*t3434*t3512 + t3416*t3418*t3480*t3512 - 1.*t3416*t3433*t3526 + t3510*t3754 + 0.1305*(t3416*t3433*t3506 + t3489*t3754) + t3560*t3763 + t3570*t3767 + t3595*t3771 + t3610*t3775 + t3623*t3779 + t3632*t3783 + t3651*t3787 + t3664*t3791 - 0.7055*(-1.*t3648*t3787 + t3640*t3791) + 0.0184*(t3640*t3787 + t3648*t3791);
  p_output1[13]=t3414*t3431*t3434*t3512 + t3418*t3431*t3480*t3512 - 1.*t3431*t3433*t3526 + t3510*t3806 + 0.1305*(t3431*t3433*t3506 + t3489*t3806) + t3560*t3815 + t3570*t3819 + t3595*t3823 + t3610*t3827 + t3623*t3831 + t3632*t3835 + t3651*t3839 + t3664*t3843 - 0.7055*(-1.*t3648*t3839 + t3640*t3843) + 0.0184*(t3640*t3839 + t3648*t3843);
  p_output1[14]=-1.*t3414*t3433*t3434 - 1.*t3418*t3433*t3480 - 1.*t3512*t3526 + t3510*t3858 + 0.1305*(t3506*t3512 + t3489*t3858) + t3560*t3867 + t3570*t3871 + t3595*t3875 + t3610*t3879 + t3623*t3883 + t3632*t3887 + t3651*t3891 + t3664*t3895 - 0.7055*(-1.*t3648*t3891 + t3640*t3895) + 0.0184*(t3640*t3891 + t3648*t3895);
  p_output1[15]=t3414*t3688 + t3480*t3909 + 0.1305*t3489*t3912 + t3510*t3912 + t3506*t3560*t3912 + t3570*t3918 + t3595*t3922 + t3610*t3926 + t3623*t3930 + t3632*t3934 + t3651*t3938 + t3664*t3942 - 0.7055*(-1.*t3648*t3938 + t3640*t3942) + 0.0184*(t3640*t3938 + t3648*t3942);
  p_output1[16]=t3457*t3480 + t3414*t3955 + 0.1305*t3489*t3960 + t3510*t3960 + t3506*t3560*t3960 + t3570*t3965 + t3595*t3969 + t3610*t3973 + t3623*t3977 + t3632*t3981 + t3651*t3985 + t3664*t3989 - 0.7055*(-1.*t3648*t3985 + t3640*t3989) + 0.0184*(t3640*t3985 + t3648*t3989);
  p_output1[17]=t3414*t3418*t3512 - 1.*t3434*t3480*t3512 + t4005 + t4006 + t4007 + t4011 + t4015 + t4019 + t4023 + t4027 + t4031 + t4035 + t4039 + t4043;
  p_output1[18]=0.135*t3466*t3684 - 0.135*t3385*t3688 + 0.1305*t3489*t3710 + t3510*t3710 + t3506*t3560*t3710 + t3570*t4051 + t3595*t4055 + t3610*t4059 + t3623*t4063 + t3632*t4067 + t3651*t4071 + t3664*t4075 - 0.7055*(-1.*t3648*t4071 + t3640*t4075) + 0.0184*(t3640*t4071 + t3648*t4075);
  p_output1[19]=-0.135*t3385*t3955 + 0.135*t3466*t4089 + 0.1305*t3489*t4092 + t3510*t4092 + t3506*t3560*t4092 + t3570*t4097 + t3595*t4101 + t3610*t4105 + t3623*t4109 + t3632*t4113 + t3651*t4117 + t3664*t4121 - 0.7055*(-1.*t3648*t4117 + t3640*t4121) + 0.0184*(t3640*t4117 + t3648*t4121);
  p_output1[20]=-0.135*t3385*t3418*t3512 + 0.135*t3434*t3466*t3512 + t4005 + t4006 + t4007 + t4011 + t4015 + t4019 + t4023 + t4027 + t4031 + t4035 + t4039 + t4043;
  p_output1[21]=0.1305*(-1.*t3416*t3489*t3512 - 1.*t3506*t3692) + t3560*t3699 + t3546*t3595*t3699 - 1.*t3556*t3610*t3699 + t3416*t3512*t4137 + t3692*t4140 + t3623*t4151 + t3632*t4155 + t3651*t4159 + t3664*t4163 - 0.7055*(-1.*t3648*t4159 + t3640*t4163) + 0.0184*(t3640*t4159 + t3648*t4163);
  p_output1[22]=t3431*t3512*t4137 + t4140*t4177 + 0.1305*(t3540 - 1.*t3506*t4177) + t3560*t4181 + t3546*t3595*t4181 - 1.*t3556*t3610*t4181 + t3623*t4190 + t3632*t4194 + t3651*t4198 + t3664*t4202 - 0.7055*(-1.*t3648*t4198 + t3640*t4202) + 0.0184*(t3640*t4198 + t3648*t4202);
  p_output1[23]=-1.*t3433*t4137 + t4140*t4216 + 0.1305*(t3433*t3489 - 1.*t3506*t4216) + t3560*t4220 + t3546*t3595*t4220 - 1.*t3556*t3610*t4220 + t3623*t4230 + t3632*t4234 + t3651*t4238 + t3664*t4242 - 0.7055*(-1.*t3648*t4238 + t3640*t4242) + 0.0184*(t3640*t4238 + t3648*t4242);
  p_output1[24]=t3595*t3720 + t3710*t4254 + t3704*t4258 + t3610*t4262 + t3632*t4266 + t3623*t4270 + t3664*t4274 + t3651*t4278 + 0.0184*(t3648*t4274 + t3640*t4278) - 0.7055*(t3640*t4274 - 1.*t3648*t4278);
  p_output1[25]=t4092*t4254 + t4258*t4292 + t3610*t4296 + t3595*t4300 + t3632*t4304 + t3623*t4308 + t3664*t4312 + t3651*t4316 + 0.0184*(t3648*t4312 + t3640*t4316) - 0.7055*(t3640*t4312 - 1.*t3648*t4316);
  p_output1[26]=t4004*t4254 + t4258*t4330 + t3610*t4334 + t3595*t4338 + t3632*t4342 + t3623*t4346 + t3664*t4350 + t3651*t4354 + 0.0184*(t3648*t4350 + t3640*t4354) - 0.7055*(t3640*t4350 - 1.*t3648*t4354);
  p_output1[27]=t3632*t3727 + t3715*t4367 + t3720*t4370 + t3623*t4374 + t3664*t4378 + t3651*t4381 + 0.0184*(t3648*t4378 + t3640*t4381) - 0.7055*(t3640*t4378 - 1.*t3648*t4381);
  p_output1[28]=t4300*t4370 + t4367*t4394 + t3632*t4398 + t3623*t4401 + t3664*t4405 + t3651*t4409 + 0.0184*(t3648*t4405 + t3640*t4409) - 0.7055*(t3640*t4405 - 1.*t3648*t4409);
  p_output1[29]=t4338*t4370 + t4367*t4422 + t3632*t4426 + t3623*t4429 + t3664*t4433 + t3651*t4437 + 0.0184*(t3648*t4433 + t3640*t4437) - 0.7055*(t3640*t4433 - 1.*t3648*t4437);
  p_output1[30]=t3651*t3739 + t3727*t4449 + t3731*t4453 + t3664*t4456 + 0.0184*(t3742 + t3648*t4456) - 0.7055*(t3640*t4456 + t4463);
  p_output1[31]=t4398*t4449 + t4453*t4470 + t3664*t4473 + t3651*t4476 + 0.0184*(t3648*t4473 + t4479) - 0.7055*(t3640*t4473 + t4483);
  p_output1[32]=t4426*t4449 + t4453*t4490 + t3664*t4493 + t3651*t4496 + 0.0184*(t3648*t4493 + t4499) - 0.7055*(t3640*t4493 + t4503);
  p_output1[33]=0.0184*t3743 - 0.7055*(-1.*t3640*t3735 + t4463) + t3735*t4509 + t3739*t4512;
  p_output1[34]=t4476*t4512 + t4509*t4521 - 0.7055*(t4483 - 1.*t3640*t4521) + 0.0184*(t4479 - 1.*t3648*t4521);
  p_output1[35]=t4496*t4512 + t4509*t4533 - 0.7055*(t4503 - 1.*t3640*t4533) + 0.0184*(t4499 - 1.*t3648*t4533);
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "J_ankle_joint_left_mex.hh"

namespace SymExpression
{

void J_ankle_joint_left_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
