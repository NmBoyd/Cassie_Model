/*
 * Automatically Generated from Mathematica.
 * Mon 2 Jul 2018 15:33:49 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t785;
  double t1894;
  double t1316;
  double t1694;
  double t1916;
  double t130;
  double t176;
  double t213;
  double t583;
  double t860;
  double t1846;
  double t1991;
  double t2039;
  double t2121;
  double t2637;
  double t2652;
  double t2682;
  double t23;
  double t2999;
  double t3011;
  double t3195;
  double t3206;
  double t3212;
  double t3284;
  double t3305;
  double t3507;
  double t3572;
  double t3960;
  double t4339;
  double t4414;
  double t4611;
  double t4659;
  double t4684;
  double t4839;
  double t4942;
  double t4946;
  double t4977;
  double t4980;
  double t5014;
  double t5032;
  double t5055;
  double t5058;
  double t5071;
  double t5104;
  double t5114;
  double t5180;
  double t5189;
  double t5203;
  double t5239;
  double t5241;
  double t5247;
  double t5262;
  double t5271;
  double t5286;
  double t5329;
  double t5361;
  double t5367;
  double t5371;
  double t5386;
  double t5404;
  double t5408;
  double t247;
  double t685;
  double t689;
  double t951;
  double t1272;
  double t2259;
  double t2316;
  double t2357;
  double t2426;
  double t2780;
  double t2961;
  double t2989;
  double t6364;
  double t6495;
  double t6507;
  double t6743;
  double t6809;
  double t6844;
  double t3288;
  double t3386;
  double t3460;
  double t6879;
  double t6881;
  double t6907;
  double t4222;
  double t4257;
  double t4320;
  double t4899;
  double t4943;
  double t4945;
  double t6923;
  double t6940;
  double t6981;
  double t7120;
  double t7158;
  double t7185;
  double t4990;
  double t4995;
  double t5011;
  double t5113;
  double t5119;
  double t5162;
  double t7210;
  double t7216;
  double t7234;
  double t7282;
  double t7312;
  double t7324;
  double t5227;
  double t5231;
  double t5235;
  double t5303;
  double t5337;
  double t5340;
  double t7344;
  double t7348;
  double t7373;
  double t7399;
  double t7406;
  double t7422;
  double t5380;
  double t5383;
  double t5384;
  double t7503;
  double t7581;
  double t7658;
  double t7671;
  double t7674;
  double t7710;
  double t7960;
  double t7964;
  double t8003;
  double t8080;
  double t8086;
  double t8087;
  double t8200;
  double t8234;
  double t8253;
  double t8375;
  double t8396;
  double t8410;
  double t8424;
  double t8434;
  double t8448;
  double t8483;
  double t8498;
  double t8531;
  double t8550;
  double t8558;
  double t8561;
  double t8575;
  double t8584;
  double t8601;
  double t8615;
  double t8638;
  double t8649;
  double t8843;
  double t8851;
  double t8885;
  double t8922;
  double t8969;
  double t8982;
  double t9121;
  double t9145;
  double t9168;
  double t9174;
  double t9191;
  double t9202;
  double t9229;
  double t9234;
  double t9236;
  double t9246;
  double t9250;
  double t9262;
  double t9307;
  double t9311;
  double t9317;
  double t9352;
  double t9353;
  double t9354;
  double t9357;
  double t9382;
  double t9384;
  double t9478;
  double t9480;
  double t9486;
  double t9522;
  double t9533;
  double t9541;
  double t9585;
  double t9592;
  double t9595;
  double t9604;
  double t9619;
  double t9620;
  double t9636;
  double t9643;
  double t9647;
  double t9660;
  double t9665;
  double t9666;
  double t9675;
  double t9676;
  double t9677;
  double t9681;
  double t9686;
  double t9689;
  double t9694;
  double t9701;
  double t9707;
  double t9777;
  double t9779;
  double t9781;
  double t9801;
  double t9809;
  double t9791;
  double t9792;
  double t9794;
  double t9848;
  double t9853;
  double t9876;
  double t9881;
  double t9889;
  double t9890;
  double t9895;
  double t9896;
  double t9901;
  double t9908;
  double t9911;
  double t9913;
  double t9915;
  double t9917;
  double t9923;
  double t9938;
  double t9957;
  double t9959;
  double t10023;
  double t10040;
  double t10046;
  double t10067;
  double t10068;
  double t10069;
  double t10057;
  double t10062;
  double t10093;
  double t10096;
  double t10111;
  double t10117;
  double t10127;
  double t10129;
  double t10137;
  double t10138;
  double t10139;
  double t10145;
  double t10150;
  double t10156;
  double t10160;
  double t10162;
  double t10165;
  double t10190;
  double t10191;
  double t10198;
  double t10362;
  double t10367;
  double t10369;
  double t10337;
  double t10346;
  double t10349;
  double t10385;
  double t10390;
  double t10393;
  double t10399;
  double t10400;
  double t10401;
  double t10406;
  double t10409;
  double t10410;
  double t10420;
  double t10421;
  double t10426;
  double t10435;
  double t10436;
  double t10439;
  double t10456;
  double t10468;
  double t10471;
  double t10510;
  double t10511;
  double t10543;
  double t10547;
  double t10553;
  double t10562;
  double t10563;
  double t10566;
  double t10570;
  double t10571;
  double t10572;
  double t10576;
  double t10579;
  double t10580;
  double t10595;
  double t10599;
  double t10600;
  double t10612;
  double t10615;
  double t10631;
  double t10682;
  double t10685;
  double t10686;
  double t10711;
  double t10715;
  double t10693;
  double t10698;
  double t10732;
  double t10734;
  double t10738;
  double t10747;
  double t10753;
  double t10756;
  double t10760;
  double t10770;
  double t10771;
  double t10779;
  double t10780;
  double t10784;
  double t10786;
  double t10787;
  double t10788;
  double t10790;
  double t10791;
  double t10792;
  double t10360;
  double t10377;
  double t10378;
  double t10379;
  double t10394;
  double t10403;
  double t10414;
  double t10430;
  double t10455;
  double t10481;
  double t10482;
  double t10483;
  double t10485;
  double t10487;
  double t10492;
  double t10496;
  double t10497;
  double t10500;
  double t7055;
  double t7066;
  double t7072;
  double t10861;
  double t10864;
  double t10865;
  double t10871;
  double t10874;
  double t10880;
  double t10883;
  double t10885;
  double t10887;
  double t10889;
  double t10890;
  double t10891;
  double t10835;
  double t10838;
  double t10839;
  double t10844;
  double t10845;
  double t10916;
  double t10917;
  double t10918;
  double t10920;
  double t10921;
  double t10922;
  double t10931;
  double t10933;
  double t10934;
  double t10936;
  double t10937;
  double t10939;
  double t10941;
  double t10942;
  double t10943;
  double t10946;
  double t10947;
  double t10948;
  double t10960;
  double t10961;
  double t10962;
  double t10964;
  double t10965;
  double t10966;
  double t10974;
  double t10975;
  double t10976;
  double t10978;
  double t10979;
  double t10980;
  double t10982;
  double t10983;
  double t10984;
  double t10986;
  double t10987;
  double t10988;
  double t11006;
  double t11007;
  double t11008;
  double t11011;
  double t11012;
  double t11014;
  double t11015;
  double t11016;
  double t11018;
  double t11019;
  double t11020;
  double t11022;
  double t11023;
  double t11024;
  double t10999;
  double t11000;
  double t11002;
  double t11003;
  double t11004;
  double t11036;
  double t11037;
  double t11038;
  double t11040;
  double t11041;
  double t11042;
  double t11044;
  double t11045;
  double t11046;
  double t11048;
  double t11049;
  double t11050;
  double t11052;
  double t11053;
  double t11054;
  double t11056;
  double t11057;
  double t11058;
  double t11060;
  double t11061;
  double t11062;
  double t11074;
  double t11075;
  double t11076;
  double t11078;
  double t11079;
  double t11080;
  double t11082;
  double t11083;
  double t11084;
  double t11086;
  double t11087;
  double t11088;
  double t11090;
  double t11091;
  double t11092;
  double t11094;
  double t11095;
  double t11096;
  double t11098;
  double t11099;
  double t11100;
  double t11119;
  double t11120;
  double t11122;
  double t11123;
  double t11124;
  double t11126;
  double t11127;
  double t11111;
  double t11112;
  double t11113;
  double t11115;
  double t11116;
  double t11138;
  double t11139;
  double t11140;
  double t11143;
  double t11144;
  double t11146;
  double t11147;
  double t11149;
  double t11150;
  double t11151;
  double t11153;
  double t11154;
  double t11155;
  double t11166;
  double t11167;
  double t11168;
  double t11171;
  double t11172;
  double t11174;
  double t11175;
  double t11177;
  double t11178;
  double t11179;
  double t11181;
  double t11182;
  double t11183;
  double t11201;
  double t11202;
  double t7720;
  double t11194;
  double t11195;
  double t11197;
  double t11198;
  double t11199;
  double t11214;
  double t11215;
  double t11216;
  double t11218;
  double t11219;
  double t11221;
  double t11222;
  double t11234;
  double t11235;
  double t11236;
  double t11238;
  double t11239;
  double t11241;
  double t11242;
  double t7715;
  double t7724;
  double t11209;
  double t11253;
  double t11254;
  double t11255;
  double t11257;
  double t11258;
  double t11265;
  double t11266;
  double t11267;
  double t11225;
  double t11229;
  double t11277;
  double t11278;
  double t11279;
  double t11245;
  double t11249;
  t785 = Sin(var1[3]);
  t1894 = Cos(var1[3]);
  t1316 = Cos(var1[5]);
  t1694 = Sin(var1[4]);
  t1916 = Sin(var1[5]);
  t130 = Cos(var1[14]);
  t176 = -1.*t130;
  t213 = 1. + t176;
  t583 = Sin(var1[14]);
  t860 = Sin(var1[13]);
  t1846 = -1.*t1316*t785*t1694;
  t1991 = t1894*t1916;
  t2039 = t1846 + t1991;
  t2121 = Cos(var1[13]);
  t2637 = -1.*t1894*t1316;
  t2652 = -1.*t785*t1694*t1916;
  t2682 = t2637 + t2652;
  t23 = Cos(var1[4]);
  t2999 = t860*t2039;
  t3011 = t2121*t2682;
  t3195 = t2999 + t3011;
  t3206 = Cos(var1[15]);
  t3212 = -1.*t3206;
  t3284 = 1. + t3212;
  t3305 = Sin(var1[15]);
  t3507 = t2121*t2039;
  t3572 = -1.*t860*t2682;
  t3960 = t3507 + t3572;
  t4339 = -1.*t130*t23*t785;
  t4414 = t583*t3195;
  t4611 = t4339 + t4414;
  t4659 = Cos(var1[16]);
  t4684 = -1.*t4659;
  t4839 = 1. + t4684;
  t4942 = Sin(var1[16]);
  t4946 = t3305*t3960;
  t4977 = t3206*t4611;
  t4980 = t4946 + t4977;
  t5014 = t3206*t3960;
  t5032 = -1.*t3305*t4611;
  t5055 = t5014 + t5032;
  t5058 = Cos(var1[17]);
  t5071 = -1.*t5058;
  t5104 = 1. + t5071;
  t5114 = Sin(var1[17]);
  t5180 = -1.*t4942*t4980;
  t5189 = t4659*t5055;
  t5203 = t5180 + t5189;
  t5239 = t4659*t4980;
  t5241 = t4942*t5055;
  t5247 = t5239 + t5241;
  t5262 = Cos(var1[18]);
  t5271 = -1.*t5262;
  t5286 = 1. + t5271;
  t5329 = Sin(var1[18]);
  t5361 = t5114*t5203;
  t5367 = t5058*t5247;
  t5371 = t5361 + t5367;
  t5386 = t5058*t5203;
  t5404 = -1.*t5114*t5247;
  t5408 = t5386 + t5404;
  t247 = -0.049*t213;
  t685 = -0.135*t583;
  t689 = 0. + t247 + t685;
  t951 = 0.135*t860;
  t1272 = 0. + t951;
  t2259 = -1.*t2121;
  t2316 = 1. + t2259;
  t2357 = -0.135*t2316;
  t2426 = 0. + t2357;
  t2780 = -0.135*t213;
  t2961 = 0.049*t583;
  t2989 = 0. + t2780 + t2961;
  t6364 = t1894*t1316*t1694;
  t6495 = t785*t1916;
  t6507 = t6364 + t6495;
  t6743 = -1.*t1316*t785;
  t6809 = t1894*t1694*t1916;
  t6844 = t6743 + t6809;
  t3288 = -0.09*t3284;
  t3386 = 0.049*t3305;
  t3460 = 0. + t3288 + t3386;
  t6879 = t860*t6507;
  t6881 = t2121*t6844;
  t6907 = t6879 + t6881;
  t4222 = -0.049*t3284;
  t4257 = -0.09*t3305;
  t4320 = 0. + t4222 + t4257;
  t4899 = -0.049*t4839;
  t4943 = -0.21*t4942;
  t4945 = 0. + t4899 + t4943;
  t6923 = t2121*t6507;
  t6940 = -1.*t860*t6844;
  t6981 = t6923 + t6940;
  t7120 = t130*t1894*t23;
  t7158 = t583*t6907;
  t7185 = t7120 + t7158;
  t4990 = -0.21*t4839;
  t4995 = 0.049*t4942;
  t5011 = 0. + t4990 + t4995;
  t5113 = -0.2707*t5104;
  t5119 = 0.0016*t5114;
  t5162 = 0. + t5113 + t5119;
  t7210 = t3305*t6981;
  t7216 = t3206*t7185;
  t7234 = t7210 + t7216;
  t7282 = t3206*t6981;
  t7312 = -1.*t3305*t7185;
  t7324 = t7282 + t7312;
  t5227 = -0.0016*t5104;
  t5231 = -0.2707*t5114;
  t5235 = 0. + t5227 + t5231;
  t5303 = 0.0184*t5286;
  t5337 = -0.7055*t5329;
  t5340 = 0. + t5303 + t5337;
  t7344 = -1.*t4942*t7234;
  t7348 = t4659*t7324;
  t7373 = t7344 + t7348;
  t7399 = t4659*t7234;
  t7406 = t4942*t7324;
  t7422 = t7399 + t7406;
  t5380 = -0.7055*t5286;
  t5383 = -0.0184*t5329;
  t5384 = 0. + t5380 + t5383;
  t7503 = t5114*t7373;
  t7581 = t5058*t7422;
  t7658 = t7503 + t7581;
  t7671 = t5058*t7373;
  t7674 = -1.*t5114*t7422;
  t7710 = t7671 + t7674;
  t7960 = t1894*t23*t1316*t860;
  t7964 = t2121*t1894*t23*t1916;
  t8003 = t7960 + t7964;
  t8080 = t2121*t1894*t23*t1316;
  t8086 = -1.*t1894*t23*t860*t1916;
  t8087 = t8080 + t8086;
  t8200 = -1.*t130*t1894*t1694;
  t8234 = t583*t8003;
  t8253 = t8200 + t8234;
  t8375 = t3305*t8087;
  t8396 = t3206*t8253;
  t8410 = t8375 + t8396;
  t8424 = t3206*t8087;
  t8434 = -1.*t3305*t8253;
  t8448 = t8424 + t8434;
  t8483 = -1.*t4942*t8410;
  t8498 = t4659*t8448;
  t8531 = t8483 + t8498;
  t8550 = t4659*t8410;
  t8558 = t4942*t8448;
  t8561 = t8550 + t8558;
  t8575 = t5114*t8531;
  t8584 = t5058*t8561;
  t8601 = t8575 + t8584;
  t8615 = t5058*t8531;
  t8638 = -1.*t5114*t8561;
  t8649 = t8615 + t8638;
  t8843 = t23*t1316*t860*t785;
  t8851 = t2121*t23*t785*t1916;
  t8885 = t8843 + t8851;
  t8922 = t2121*t23*t1316*t785;
  t8969 = -1.*t23*t860*t785*t1916;
  t8982 = t8922 + t8969;
  t9121 = -1.*t130*t785*t1694;
  t9145 = t583*t8885;
  t9168 = t9121 + t9145;
  t9174 = t3305*t8982;
  t9191 = t3206*t9168;
  t9202 = t9174 + t9191;
  t9229 = t3206*t8982;
  t9234 = -1.*t3305*t9168;
  t9236 = t9229 + t9234;
  t9246 = -1.*t4942*t9202;
  t9250 = t4659*t9236;
  t9262 = t9246 + t9250;
  t9307 = t4659*t9202;
  t9311 = t4942*t9236;
  t9317 = t9307 + t9311;
  t9352 = t5114*t9262;
  t9353 = t5058*t9317;
  t9354 = t9352 + t9353;
  t9357 = t5058*t9262;
  t9382 = -1.*t5114*t9317;
  t9384 = t9357 + t9382;
  t9478 = -1.*t1316*t860*t1694;
  t9480 = -1.*t2121*t1694*t1916;
  t9486 = t9478 + t9480;
  t9522 = -1.*t2121*t1316*t1694;
  t9533 = t860*t1694*t1916;
  t9541 = t9522 + t9533;
  t9585 = -1.*t130*t23;
  t9592 = t583*t9486;
  t9595 = t9585 + t9592;
  t9604 = t3305*t9541;
  t9619 = t3206*t9595;
  t9620 = t9604 + t9619;
  t9636 = t3206*t9541;
  t9643 = -1.*t3305*t9595;
  t9647 = t9636 + t9643;
  t9660 = -1.*t4942*t9620;
  t9665 = t4659*t9647;
  t9666 = t9660 + t9665;
  t9675 = t4659*t9620;
  t9676 = t4942*t9647;
  t9677 = t9675 + t9676;
  t9681 = t5114*t9666;
  t9686 = t5058*t9677;
  t9689 = t9681 + t9686;
  t9694 = t5058*t9666;
  t9701 = -1.*t5114*t9677;
  t9707 = t9694 + t9701;
  t9777 = t1316*t785;
  t9779 = -1.*t1894*t1694*t1916;
  t9781 = t9777 + t9779;
  t9801 = t860*t9781;
  t9809 = t6923 + t9801;
  t9791 = -1.*t860*t6507;
  t9792 = t2121*t9781;
  t9794 = t9791 + t9792;
  t9848 = t3305*t9794;
  t9853 = t3206*t583*t9809;
  t9876 = t9848 + t9853;
  t9881 = t3206*t9794;
  t9889 = -1.*t583*t3305*t9809;
  t9890 = t9881 + t9889;
  t9895 = -1.*t4942*t9876;
  t9896 = t4659*t9890;
  t9901 = t9895 + t9896;
  t9908 = t4659*t9876;
  t9911 = t4942*t9890;
  t9913 = t9908 + t9911;
  t9915 = t5114*t9901;
  t9917 = t5058*t9913;
  t9923 = t9915 + t9917;
  t9938 = t5058*t9901;
  t9957 = -1.*t5114*t9913;
  t9959 = t9938 + t9957;
  t10023 = t1316*t785*t1694;
  t10040 = -1.*t1894*t1916;
  t10046 = t10023 + t10040;
  t10067 = t2121*t10046;
  t10068 = t860*t2682;
  t10069 = t10067 + t10068;
  t10057 = -1.*t860*t10046;
  t10062 = t10057 + t3011;
  t10093 = t3305*t10062;
  t10096 = t3206*t583*t10069;
  t10111 = t10093 + t10096;
  t10117 = t3206*t10062;
  t10127 = -1.*t583*t3305*t10069;
  t10129 = t10117 + t10127;
  t10137 = -1.*t4942*t10111;
  t10138 = t4659*t10129;
  t10139 = t10137 + t10138;
  t10145 = t4659*t10111;
  t10150 = t4942*t10129;
  t10156 = t10145 + t10150;
  t10160 = t5114*t10139;
  t10162 = t5058*t10156;
  t10165 = t10160 + t10162;
  t10190 = t5058*t10139;
  t10191 = -1.*t5114*t10156;
  t10198 = t10190 + t10191;
  t10362 = t2121*t23*t1316;
  t10367 = -1.*t23*t860*t1916;
  t10369 = t10362 + t10367;
  t10337 = -1.*t23*t1316*t860;
  t10346 = -1.*t2121*t23*t1916;
  t10349 = t10337 + t10346;
  t10385 = t3305*t10349;
  t10390 = t3206*t583*t10369;
  t10393 = t10385 + t10390;
  t10399 = t3206*t10349;
  t10400 = -1.*t583*t3305*t10369;
  t10401 = t10399 + t10400;
  t10406 = -1.*t4942*t10393;
  t10409 = t4659*t10401;
  t10410 = t10406 + t10409;
  t10420 = t4659*t10393;
  t10421 = t4942*t10401;
  t10426 = t10420 + t10421;
  t10435 = t5114*t10410;
  t10436 = t5058*t10426;
  t10439 = t10435 + t10436;
  t10456 = t5058*t10410;
  t10468 = -1.*t5114*t10426;
  t10471 = t10456 + t10468;
  t10510 = -1.*t2121*t6844;
  t10511 = t9791 + t10510;
  t10543 = t3305*t10511;
  t10547 = t3206*t583*t6981;
  t10553 = t10543 + t10547;
  t10562 = t3206*t10511;
  t10563 = -1.*t583*t3305*t6981;
  t10566 = t10562 + t10563;
  t10570 = -1.*t4942*t10553;
  t10571 = t4659*t10566;
  t10572 = t10570 + t10571;
  t10576 = t4659*t10553;
  t10579 = t4942*t10566;
  t10580 = t10576 + t10579;
  t10595 = t5114*t10572;
  t10599 = t5058*t10580;
  t10600 = t10595 + t10599;
  t10612 = t5058*t10572;
  t10615 = -1.*t5114*t10580;
  t10631 = t10612 + t10615;
  t10682 = t1894*t1316;
  t10685 = t785*t1694*t1916;
  t10686 = t10682 + t10685;
  t10711 = -1.*t860*t10686;
  t10715 = t10067 + t10711;
  t10693 = -1.*t2121*t10686;
  t10698 = t10057 + t10693;
  t10732 = t3305*t10698;
  t10734 = t3206*t583*t10715;
  t10738 = t10732 + t10734;
  t10747 = t3206*t10698;
  t10753 = -1.*t583*t3305*t10715;
  t10756 = t10747 + t10753;
  t10760 = -1.*t4942*t10738;
  t10770 = t4659*t10756;
  t10771 = t10760 + t10770;
  t10779 = t4659*t10738;
  t10780 = t4942*t10756;
  t10784 = t10779 + t10780;
  t10786 = t5114*t10771;
  t10787 = t5058*t10784;
  t10788 = t10786 + t10787;
  t10790 = t5058*t10771;
  t10791 = -1.*t5114*t10784;
  t10792 = t10790 + t10791;
  t10360 = t3460*t10349;
  t10377 = -0.1305*t130*t10369;
  t10378 = t2989*t10369;
  t10379 = t583*t4320*t10369;
  t10394 = t4945*t10393;
  t10403 = t5011*t10401;
  t10414 = t5162*t10410;
  t10430 = t5235*t10426;
  t10455 = t5340*t10439;
  t10481 = t5384*t10471;
  t10482 = -1.*t5329*t10439;
  t10483 = t5262*t10471;
  t10485 = t10482 + t10483;
  t10487 = -0.7055*t10485;
  t10492 = t5262*t10439;
  t10496 = t5329*t10471;
  t10497 = t10492 + t10496;
  t10500 = 0.0184*t10497;
  t7055 = -1.*t1894*t23*t583;
  t7066 = t130*t6907;
  t7072 = t7055 + t7066;
  t10861 = -1.*t4659*t3305*t7072;
  t10864 = -1.*t3206*t4942*t7072;
  t10865 = t10861 + t10864;
  t10871 = t3206*t4659*t7072;
  t10874 = -1.*t3305*t4942*t7072;
  t10880 = t10871 + t10874;
  t10883 = t5114*t10865;
  t10885 = t5058*t10880;
  t10887 = t10883 + t10885;
  t10889 = t5058*t10865;
  t10890 = -1.*t5114*t10880;
  t10891 = t10889 + t10890;
  t10835 = -0.135*t130;
  t10838 = -0.049*t583;
  t10839 = t10835 + t10838;
  t10844 = 0.049*t130;
  t10845 = t10844 + t685;
  t10916 = t860*t10046;
  t10917 = t2121*t10686;
  t10918 = t10916 + t10917;
  t10920 = -1.*t23*t583*t785;
  t10921 = t130*t10918;
  t10922 = t10920 + t10921;
  t10931 = -1.*t4659*t3305*t10922;
  t10933 = -1.*t3206*t4942*t10922;
  t10934 = t10931 + t10933;
  t10936 = t3206*t4659*t10922;
  t10937 = -1.*t3305*t4942*t10922;
  t10939 = t10936 + t10937;
  t10941 = t5114*t10934;
  t10942 = t5058*t10939;
  t10943 = t10941 + t10942;
  t10946 = t5058*t10934;
  t10947 = -1.*t5114*t10939;
  t10948 = t10946 + t10947;
  t10960 = t23*t1316*t860;
  t10961 = t2121*t23*t1916;
  t10962 = t10960 + t10961;
  t10964 = t583*t1694;
  t10965 = t130*t10962;
  t10966 = t10964 + t10965;
  t10974 = -1.*t4659*t3305*t10966;
  t10975 = -1.*t3206*t4942*t10966;
  t10976 = t10974 + t10975;
  t10978 = t3206*t4659*t10966;
  t10979 = -1.*t3305*t4942*t10966;
  t10980 = t10978 + t10979;
  t10982 = t5114*t10976;
  t10983 = t5058*t10980;
  t10984 = t10982 + t10983;
  t10986 = t5058*t10976;
  t10987 = -1.*t5114*t10980;
  t10988 = t10986 + t10987;
  t11006 = -1.*t3305*t6981;
  t11007 = -1.*t3206*t7185;
  t11008 = t11006 + t11007;
  t11011 = t4942*t11008;
  t11012 = t11011 + t7348;
  t11014 = t4659*t11008;
  t11015 = -1.*t4942*t7324;
  t11016 = t11014 + t11015;
  t11018 = -1.*t5114*t11012;
  t11019 = t5058*t11016;
  t11020 = t11018 + t11019;
  t11022 = t5058*t11012;
  t11023 = t5114*t11016;
  t11024 = t11022 + t11023;
  t10999 = 0.049*t3206;
  t11000 = t10999 + t4257;
  t11002 = -0.09*t3206;
  t11003 = -0.049*t3305;
  t11004 = t11002 + t11003;
  t11036 = t130*t23*t785;
  t11037 = t583*t10918;
  t11038 = t11036 + t11037;
  t11040 = -1.*t3305*t10715;
  t11041 = -1.*t3206*t11038;
  t11042 = t11040 + t11041;
  t11044 = t3206*t10715;
  t11045 = -1.*t3305*t11038;
  t11046 = t11044 + t11045;
  t11048 = t4942*t11042;
  t11049 = t4659*t11046;
  t11050 = t11048 + t11049;
  t11052 = t4659*t11042;
  t11053 = -1.*t4942*t11046;
  t11054 = t11052 + t11053;
  t11056 = -1.*t5114*t11050;
  t11057 = t5058*t11054;
  t11058 = t11056 + t11057;
  t11060 = t5058*t11050;
  t11061 = t5114*t11054;
  t11062 = t11060 + t11061;
  t11074 = -1.*t130*t1694;
  t11075 = t583*t10962;
  t11076 = t11074 + t11075;
  t11078 = -1.*t3305*t10369;
  t11079 = -1.*t3206*t11076;
  t11080 = t11078 + t11079;
  t11082 = t3206*t10369;
  t11083 = -1.*t3305*t11076;
  t11084 = t11082 + t11083;
  t11086 = t4942*t11080;
  t11087 = t4659*t11084;
  t11088 = t11086 + t11087;
  t11090 = t4659*t11080;
  t11091 = -1.*t4942*t11084;
  t11092 = t11090 + t11091;
  t11094 = -1.*t5114*t11088;
  t11095 = t5058*t11092;
  t11096 = t11094 + t11095;
  t11098 = t5058*t11088;
  t11099 = t5114*t11092;
  t11100 = t11098 + t11099;
  t11119 = -1.*t4659*t7234;
  t11120 = t11119 + t11015;
  t11122 = -1.*t5114*t7373;
  t11123 = t5058*t11120;
  t11124 = t11122 + t11123;
  t11126 = t5114*t11120;
  t11127 = t7671 + t11126;
  t11111 = -0.21*t4659;
  t11112 = -0.049*t4942;
  t11113 = t11111 + t11112;
  t11115 = 0.049*t4659;
  t11116 = t11115 + t4943;
  t11138 = t3305*t10715;
  t11139 = t3206*t11038;
  t11140 = t11138 + t11139;
  t11143 = -1.*t4942*t11140;
  t11144 = t11143 + t11049;
  t11146 = -1.*t4659*t11140;
  t11147 = t11146 + t11053;
  t11149 = -1.*t5114*t11144;
  t11150 = t5058*t11147;
  t11151 = t11149 + t11150;
  t11153 = t5058*t11144;
  t11154 = t5114*t11147;
  t11155 = t11153 + t11154;
  t11166 = t3305*t10369;
  t11167 = t3206*t11076;
  t11168 = t11166 + t11167;
  t11171 = -1.*t4942*t11168;
  t11172 = t11171 + t11087;
  t11174 = -1.*t4659*t11168;
  t11175 = t11174 + t11091;
  t11177 = -1.*t5114*t11172;
  t11178 = t5058*t11175;
  t11179 = t11177 + t11178;
  t11181 = t5058*t11172;
  t11182 = t5114*t11175;
  t11183 = t11181 + t11182;
  t11201 = -1.*t5058*t7422;
  t11202 = t11122 + t11201;
  t7720 = t5262*t7710;
  t11194 = 0.0016*t5058;
  t11195 = t11194 + t5231;
  t11197 = -0.2707*t5058;
  t11198 = -0.0016*t5114;
  t11199 = t11197 + t11198;
  t11214 = t4659*t11140;
  t11215 = t4942*t11046;
  t11216 = t11214 + t11215;
  t11218 = -1.*t5058*t11216;
  t11219 = t11149 + t11218;
  t11221 = -1.*t5114*t11216;
  t11222 = t11153 + t11221;
  t11234 = t4659*t11168;
  t11235 = t4942*t11084;
  t11236 = t11234 + t11235;
  t11238 = -1.*t5058*t11236;
  t11239 = t11177 + t11238;
  t11241 = -1.*t5114*t11236;
  t11242 = t11181 + t11241;
  t7715 = -1.*t5329*t7658;
  t7724 = t7715 + t7720;
  t11209 = -1.*t5329*t7710;
  t11253 = -0.7055*t5262;
  t11254 = 0.0184*t5329;
  t11255 = t11253 + t11254;
  t11257 = -0.0184*t5262;
  t11258 = t11257 + t5337;
  t11265 = t5114*t11144;
  t11266 = t5058*t11216;
  t11267 = t11265 + t11266;
  t11225 = t5262*t11222;
  t11229 = -1.*t5329*t11222;
  t11277 = t5114*t11172;
  t11278 = t5058*t11236;
  t11279 = t11277 + t11278;
  t11245 = t5262*t11242;
  t11249 = -1.*t5329*t11242;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t1272*t2039 + t2426*t2682 + t2989*t3195 + t3460*t3960 + t4320*t4611 + t4945*t4980 + t5011*t5055 + t5162*t5203 + t5235*t5247 + t5340*t5371 + t5384*t5408 - 0.7055*(-1.*t5329*t5371 + t5262*t5408) + 0.0184*(t5262*t5371 + t5329*t5408) - 1.*t23*t689*t785 - 0.1305*(t130*t3195 + t23*t583*t785);
  p_output1[10]=t1272*t6507 + t2426*t6844 + t1894*t23*t689 + t2989*t6907 + t3460*t6981 - 0.1305*t7072 + t4320*t7185 + t4945*t7234 + t5011*t7324 + t5162*t7373 + t5235*t7422 + t5340*t7658 + t5384*t7710 + 0.0184*(t5262*t7658 + t5329*t7710) - 0.7055*t7724;
  p_output1[11]=0;
  p_output1[12]=t1272*t1316*t1894*t23 + t1894*t1916*t23*t2426 - 1.*t1694*t1894*t689 + t2989*t8003 - 0.1305*(t1694*t1894*t583 + t130*t8003) + t3460*t8087 + t4320*t8253 + t4945*t8410 + t5011*t8448 + t5162*t8531 + t5235*t8561 + t5340*t8601 + t5384*t8649 - 0.7055*(-1.*t5329*t8601 + t5262*t8649) + 0.0184*(t5262*t8601 + t5329*t8649);
  p_output1[13]=t1272*t1316*t23*t785 + t1916*t23*t2426*t785 - 1.*t1694*t689*t785 + t2989*t8885 - 0.1305*(t1694*t583*t785 + t130*t8885) + t3460*t8982 + t4320*t9168 + t4945*t9202 + t5011*t9236 + t5162*t9262 + t5235*t9317 + t5340*t9354 + t5384*t9384 - 0.7055*(-1.*t5329*t9354 + t5262*t9384) + 0.0184*(t5262*t9354 + t5329*t9384);
  p_output1[14]=-1.*t1272*t1316*t1694 - 1.*t1694*t1916*t2426 - 1.*t23*t689 + t2989*t9486 - 0.1305*(t23*t583 + t130*t9486) + t3460*t9541 + t4320*t9595 + t4945*t9620 + t5011*t9647 + t5162*t9666 + t5235*t9677 + t5340*t9689 + t5384*t9707 - 0.7055*(-1.*t5329*t9689 + t5262*t9707) + 0.0184*(t5262*t9689 + t5329*t9707);
  p_output1[15]=t2426*t6507 + t1272*t9781 + t3460*t9794 - 0.1305*t130*t9809 + t2989*t9809 + t4320*t583*t9809 + t4945*t9876 + t5011*t9890 + t5162*t9901 + t5235*t9913 + t5340*t9923 + t5384*t9959 - 0.7055*(-1.*t5329*t9923 + t5262*t9959) + 0.0184*(t5262*t9923 + t5329*t9959);
  p_output1[16]=-0.1305*t10069*t130 + t10046*t2426 + t1272*t2682 + t10069*t2989 + t10062*t3460 + t10111*t4945 + t10129*t5011 + t10139*t5162 + t10156*t5235 - 0.7055*(t10198*t5262 - 1.*t10165*t5329) + 0.0184*(t10165*t5262 + t10198*t5329) + t10165*t5340 + t10198*t5384 + t10069*t4320*t583;
  p_output1[17]=t10360 + t10377 + t10378 + t10379 + t10394 + t10403 + t10414 + t10430 + t10455 + t10481 + t10487 + t10500 - 1.*t1272*t1916*t23 + t1316*t23*t2426;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=t10511*t3460 + t10553*t4945 + t10566*t5011 + t10572*t5162 + t10580*t5235 - 0.7055*(t10631*t5262 - 1.*t10600*t5329) + 0.0184*(t10600*t5262 + t10631*t5329) + t10600*t5340 + t10631*t5384 + 0.135*t2121*t6507 - 0.1305*t130*t6981 + t2989*t6981 + t4320*t583*t6981 - 0.135*t6844*t860;
  p_output1[40]=-0.1305*t10715*t130 + 0.135*t10046*t2121 + t10715*t2989 + t10698*t3460 + t10738*t4945 + t10756*t5011 + t10771*t5162 + t10784*t5235 - 0.7055*(t10792*t5262 - 1.*t10788*t5329) + 0.0184*(t10788*t5262 + t10792*t5329) + t10788*t5340 + t10792*t5384 + t10715*t4320*t583 - 0.135*t10686*t860;
  p_output1[41]=t10360 + t10377 + t10378 + t10379 + t10394 + t10403 + t10414 + t10430 + t10455 + t10481 + t10487 + t10500 + 0.135*t1316*t2121*t23 - 0.135*t1916*t23*t860;
  p_output1[42]=t10839*t1894*t23 + t10865*t5162 + t10880*t5235 - 0.7055*(t10891*t5262 - 1.*t10887*t5329) + 0.0184*(t10887*t5262 + t10891*t5329) + t10887*t5340 + t10891*t5384 + t10845*t6907 - 0.1305*(-1.*t130*t1894*t23 - 1.*t583*t6907) + t4320*t7072 + t3206*t4945*t7072 - 1.*t3305*t5011*t7072;
  p_output1[43]=t10845*t10918 + t10922*t4320 + t10922*t3206*t4945 - 1.*t10922*t3305*t5011 + t10934*t5162 + t10939*t5235 - 0.7055*(t10948*t5262 - 1.*t10943*t5329) + 0.0184*(t10943*t5262 + t10948*t5329) + t10943*t5340 + t10948*t5384 - 0.1305*(t4339 - 1.*t10918*t583) + t10839*t23*t785;
  p_output1[44]=t10845*t10962 - 1.*t10839*t1694 + t10966*t4320 + t10966*t3206*t4945 - 1.*t10966*t3305*t5011 + t10976*t5162 + t10980*t5235 - 0.7055*(t10988*t5262 - 1.*t10984*t5329) + 0.0184*(t10984*t5262 + t10988*t5329) + t10984*t5340 + t10988*t5384 - 0.1305*(t130*t1694 - 1.*t10962*t583);
  p_output1[45]=t11008*t5011 + t11016*t5162 + t11012*t5235 + 0.0184*(t11024*t5262 + t11020*t5329) - 0.7055*(t11020*t5262 - 1.*t11024*t5329) + t11024*t5340 + t11020*t5384 + t11000*t6981 + t11004*t7185 + t4945*t7324;
  p_output1[46]=t10715*t11000 + t11004*t11038 + t11046*t4945 + t11042*t5011 + t11054*t5162 + t11050*t5235 + 0.0184*(t11062*t5262 + t11058*t5329) - 0.7055*(t11058*t5262 - 1.*t11062*t5329) + t11062*t5340 + t11058*t5384;
  p_output1[47]=t10369*t11000 + t11004*t11076 + t11084*t4945 + t11080*t5011 + t11092*t5162 + t11088*t5235 + 0.0184*(t11100*t5262 + t11096*t5329) - 0.7055*(t11096*t5262 - 1.*t11100*t5329) + t11100*t5340 + t11096*t5384;
  p_output1[48]=t11120*t5162 + 0.0184*(t11127*t5262 + t11124*t5329) - 0.7055*(t11124*t5262 - 1.*t11127*t5329) + t11127*t5340 + t11124*t5384 + t11113*t7234 + t11116*t7324 + t5235*t7373;
  p_output1[49]=t11046*t11116 + t11113*t11140 + t11147*t5162 + t11144*t5235 + 0.0184*(t11155*t5262 + t11151*t5329) - 0.7055*(t11151*t5262 - 1.*t11155*t5329) + t11155*t5340 + t11151*t5384;
  p_output1[50]=t11084*t11116 + t11113*t11168 + t11175*t5162 + t11172*t5235 + 0.0184*(t11183*t5262 + t11179*t5329) - 0.7055*(t11179*t5262 - 1.*t11183*t5329) + t11183*t5340 + t11179*t5384;
  p_output1[51]=-0.7055*(t11209 + t11202*t5262) + t11202*t5384 + t11195*t7373 + t11199*t7422 + t5340*t7710 + 0.0184*(t11202*t5329 + t7720);
  p_output1[52]=t11144*t11195 + t11199*t11216 - 0.7055*(t11229 + t11219*t5262) + 0.0184*(t11225 + t11219*t5329) + t11222*t5340 + t11219*t5384;
  p_output1[53]=t11172*t11195 + t11199*t11236 - 0.7055*(t11249 + t11239*t5262) + 0.0184*(t11245 + t11239*t5329) + t11242*t5340 + t11239*t5384;
  p_output1[54]=t11255*t7658 - 0.7055*(t11209 - 1.*t5262*t7658) + t11258*t7710 + 0.0184*t7724;
  p_output1[55]=t11222*t11258 + t11255*t11267 - 0.7055*(t11229 - 1.*t11267*t5262) + 0.0184*(t11225 - 1.*t11267*t5329);
  p_output1[56]=t11242*t11258 + t11255*t11279 - 0.7055*(t11249 - 1.*t11279*t5262) + 0.0184*(t11245 - 1.*t11279*t5329);
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "J_ankle_joint_right_mex.hh"

namespace SymExpression
{

void J_ankle_joint_right_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
