/*
 * Automatically Generated from Mathematica.
 * Mon 2 Jul 2018 15:33:17 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t452;
  double t739;
  double t753;
  double t448;
  double t1019;
  double t16;
  double t503;
  double t1314;
  double t1429;
  double t1580;
  double t1690;
  double t1704;
  double t1717;
  double t2420;
  double t2517;
  double t2553;
  double t2759;
  double t2175;
  double t2215;
  double t2277;
  double t3010;
  double t3736;
  double t4087;
  double t4107;
  double t4268;
  double t3536;
  double t3561;
  double t3627;
  double t4358;
  double t4376;
  double t4437;
  double t4554;
  double t4670;
  double t4758;
  double t4994;
  double t5279;
  double t5283;
  double t5308;
  double t5628;
  double t5641;
  double t5699;
  double t5846;
  double t5946;
  double t5951;
  double t6000;
  double t6195;
  double t6274;
  double t6300;
  double t6464;
  double t6567;
  double t6589;
  double t6605;
  double t6606;
  double t6610;
  double t6656;
  double t6824;
  double t6911;
  double t6924;
  double t6974;
  double t6995;
  double t6997;
  double t7025;
  double t7046;
  double t7054;
  double t7111;
  double t7179;
  double t7184;
  double t7203;
  double t7325;
  double t7326;
  double t7329;
  double t55;
  double t176;
  double t354;
  double t413;
  double t1814;
  double t1876;
  double t7434;
  double t7443;
  double t7466;
  double t7508;
  double t7519;
  double t7526;
  double t2619;
  double t2825;
  double t2997;
  double t3013;
  double t3101;
  double t3134;
  double t7533;
  double t7536;
  double t7553;
  double t4168;
  double t4286;
  double t4292;
  double t4451;
  double t4475;
  double t4524;
  double t4890;
  double t5120;
  double t5177;
  double t7637;
  double t7651;
  double t7688;
  double t7706;
  double t7723;
  double t7731;
  double t5459;
  double t5607;
  double t5610;
  double t5984;
  double t6105;
  double t6128;
  double t7777;
  double t7793;
  double t7802;
  double t7829;
  double t7835;
  double t7856;
  double t6381;
  double t6416;
  double t6455;
  double t6614;
  double t6661;
  double t6710;
  double t7911;
  double t7916;
  double t7920;
  double t7976;
  double t7978;
  double t7980;
  double t6958;
  double t6969;
  double t6972;
  double t7090;
  double t7119;
  double t7142;
  double t8006;
  double t8011;
  double t8016;
  double t8019;
  double t8025;
  double t8028;
  double t7235;
  double t7240;
  double t7302;
  double t8031;
  double t8039;
  double t8057;
  double t8073;
  double t8090;
  double t8099;
  double t8182;
  double t8196;
  double t8209;
  double t8263;
  double t8267;
  double t8269;
  double t8284;
  double t8294;
  double t8304;
  double t8320;
  double t8325;
  double t8327;
  double t8342;
  double t8344;
  double t8352;
  double t8358;
  double t8361;
  double t8364;
  double t8374;
  double t8380;
  double t8382;
  double t8385;
  double t8388;
  double t8393;
  double t8397;
  double t8406;
  double t8409;
  double t8418;
  double t8420;
  double t8425;
  double t8449;
  double t8455;
  double t8460;
  double t8533;
  double t8534;
  double t8550;
  double t8580;
  double t8586;
  double t8587;
  double t8597;
  double t8598;
  double t8608;
  double t8620;
  double t8623;
  double t8625;
  double t8632;
  double t8633;
  double t8640;
  double t8644;
  double t8646;
  double t8647;
  double t8658;
  double t8659;
  double t8668;
  double t8673;
  double t8679;
  double t8684;
  double t8688;
  double t8697;
  double t8708;
  double t8713;
  double t8719;
  double t8725;
  double t8736;
  double t8742;
  double t8746;
  double t8801;
  double t8802;
  double t8804;
  double t8845;
  double t8859;
  double t8867;
  double t8881;
  double t8882;
  double t8891;
  double t8902;
  double t8904;
  double t8908;
  double t8937;
  double t8944;
  double t8949;
  double t8955;
  double t8960;
  double t8961;
  double t8964;
  double t8967;
  double t8968;
  double t8977;
  double t8978;
  double t8979;
  double t8986;
  double t8990;
  double t8991;
  double t8997;
  double t9005;
  double t9006;
  double t9014;
  double t9016;
  double t9019;
  double t9051;
  double t9052;
  double t9058;
  double t9062;
  double t9068;
  double t9082;
  double t9088;
  double t9091;
  double t9099;
  double t9102;
  double t9104;
  double t9109;
  double t9114;
  double t9116;
  double t9120;
  double t9123;
  double t9124;
  double t9128;
  double t9129;
  double t9133;
  double t9135;
  double t9136;
  double t9137;
  double t9143;
  double t9149;
  double t9155;
  double t9162;
  double t9169;
  double t9170;
  double t9179;
  double t9186;
  double t9188;
  double t9224;
  double t9230;
  double t9233;
  double t9255;
  double t9257;
  double t9263;
  double t9272;
  double t9275;
  double t9283;
  double t9284;
  double t9285;
  double t9293;
  double t9294;
  double t9296;
  double t9312;
  double t9319;
  double t9322;
  double t9327;
  double t9328;
  double t9333;
  double t9336;
  double t9343;
  double t9345;
  double t9348;
  double t9349;
  double t9351;
  double t9359;
  double t9362;
  double t9364;
  double t9369;
  double t9372;
  double t9381;
  double t9435;
  double t9438;
  double t9442;
  double t9461;
  double t9468;
  double t9472;
  double t9478;
  double t9479;
  double t9484;
  double t9488;
  double t9489;
  double t9491;
  double t9496;
  double t9497;
  double t9502;
  double t9504;
  double t9510;
  double t9511;
  double t9524;
  double t9529;
  double t9531;
  double t9535;
  double t9539;
  double t9547;
  double t9559;
  double t9560;
  double t9562;
  double t9579;
  double t9589;
  double t9594;
  double t9644;
  double t9651;
  double t9660;
  double t9674;
  double t9680;
  double t9696;
  double t9704;
  double t9707;
  double t9716;
  double t9717;
  double t9720;
  double t9724;
  double t9725;
  double t9729;
  double t9733;
  double t9736;
  double t9737;
  double t9739;
  double t9743;
  double t9748;
  double t9750;
  double t9751;
  double t9757;
  double t9765;
  double t9767;
  double t9768;
  double t9819;
  double t9823;
  double t9824;
  double t9830;
  double t9832;
  double t9846;
  double t9851;
  double t9861;
  double t9862;
  double t9863;
  double t9873;
  double t9876;
  double t9880;
  double t9889;
  double t9893;
  double t9894;
  double t9899;
  double t9901;
  double t9902;
  double t9908;
  double t9909;
  double t9911;
  double t9914;
  double t9922;
  double t9928;
  double t9931;
  double t9932;
  double t9935;
  double t9939;
  double t9951;
  double t9952;
  double t9445;
  double t9446;
  double t9459;
  double t9475;
  double t9485;
  double t9493;
  double t9503;
  double t9515;
  double t9532;
  double t9551;
  double t9576;
  double t9600;
  double t9603;
  double t9604;
  double t9612;
  double t9613;
  double t9615;
  double t9617;
  double t9621;
  double t9626;
  double t7582;
  double t7601;
  double t7627;
  double t10057;
  double t10065;
  double t10068;
  double t10072;
  double t10075;
  double t10076;
  double t10083;
  double t10084;
  double t10087;
  double t10094;
  double t10095;
  double t10097;
  double t10107;
  double t10109;
  double t10110;
  double t10113;
  double t10115;
  double t10116;
  double t10007;
  double t10012;
  double t10013;
  double t10020;
  double t10021;
  double t10149;
  double t10152;
  double t10153;
  double t10159;
  double t10162;
  double t10163;
  double t10178;
  double t10179;
  double t10181;
  double t10184;
  double t10186;
  double t10187;
  double t10190;
  double t10194;
  double t10195;
  double t10197;
  double t10198;
  double t10199;
  double t10206;
  double t10208;
  double t10209;
  double t10213;
  double t10214;
  double t10215;
  double t10250;
  double t10251;
  double t10254;
  double t10256;
  double t10258;
  double t10262;
  double t10283;
  double t10284;
  double t10285;
  double t10288;
  double t10289;
  double t10291;
  double t10296;
  double t10299;
  double t10300;
  double t10306;
  double t10310;
  double t10311;
  double t10319;
  double t10321;
  double t10322;
  double t10324;
  double t10325;
  double t10326;
  double t10358;
  double t10359;
  double t10360;
  double t10363;
  double t10365;
  double t10369;
  double t10371;
  double t10372;
  double t10375;
  double t10376;
  double t10378;
  double t10381;
  double t10382;
  double t10384;
  double t10388;
  double t10390;
  double t10391;
  double t10393;
  double t10394;
  double t10395;
  double t10345;
  double t10348;
  double t10353;
  double t10354;
  double t10355;
  double t10411;
  double t10412;
  double t10413;
  double t10415;
  double t10417;
  double t10418;
  double t10421;
  double t10423;
  double t10424;
  double t10426;
  double t10427;
  double t10428;
  double t10430;
  double t10431;
  double t10432;
  double t10434;
  double t10435;
  double t10436;
  double t10438;
  double t10439;
  double t10440;
  double t10442;
  double t10443;
  double t10444;
  double t10446;
  double t10447;
  double t10448;
  double t10460;
  double t10461;
  double t10462;
  double t10464;
  double t10465;
  double t10466;
  double t10468;
  double t10469;
  double t10470;
  double t10472;
  double t10473;
  double t10474;
  double t10476;
  double t10477;
  double t10478;
  double t10480;
  double t10481;
  double t10482;
  double t10484;
  double t10485;
  double t10486;
  double t10488;
  double t10489;
  double t10490;
  double t10492;
  double t10493;
  double t10494;
  double t10513;
  double t10514;
  double t10516;
  double t10517;
  double t10518;
  double t10520;
  double t10521;
  double t10523;
  double t10524;
  double t10525;
  double t10527;
  double t10528;
  double t10529;
  double t10505;
  double t10506;
  double t10507;
  double t10509;
  double t10510;
  double t10540;
  double t10541;
  double t10542;
  double t10545;
  double t10546;
  double t10548;
  double t10549;
  double t10551;
  double t10552;
  double t10553;
  double t10555;
  double t10556;
  double t10557;
  double t10559;
  double t10560;
  double t10561;
  double t10563;
  double t10564;
  double t10565;
  double t10576;
  double t10577;
  double t10578;
  double t10581;
  double t10582;
  double t10584;
  double t10585;
  double t10587;
  double t10588;
  double t10589;
  double t10591;
  double t10592;
  double t10593;
  double t10595;
  double t10596;
  double t10597;
  double t10599;
  double t10600;
  double t10601;
  double t10619;
  double t10620;
  double t10623;
  double t10624;
  double t10626;
  double t10627;
  double t10628;
  double t10612;
  double t10613;
  double t10615;
  double t10616;
  double t10617;
  double t10640;
  double t10641;
  double t10642;
  double t10644;
  double t10645;
  double t10647;
  double t10648;
  double t10650;
  double t10651;
  double t10652;
  double t10654;
  double t10655;
  double t10656;
  double t10668;
  double t10669;
  double t10670;
  double t10672;
  double t10673;
  double t10675;
  double t10676;
  double t10678;
  double t10679;
  double t10680;
  double t10682;
  double t10683;
  double t10684;
  double t10703;
  double t10704;
  double t8131;
  double t10695;
  double t10696;
  double t10697;
  double t10699;
  double t10700;
  double t10714;
  double t10715;
  double t10716;
  double t10719;
  double t10720;
  double t10722;
  double t10723;
  double t10734;
  double t10735;
  double t10736;
  double t10739;
  double t10740;
  double t10742;
  double t10743;
  double t10706;
  double t8138;
  double t8151;
  double t10754;
  double t10755;
  double t10757;
  double t10758;
  double t10759;
  double t10725;
  double t10767;
  double t10768;
  double t10769;
  double t10729;
  double t10745;
  double t10779;
  double t10780;
  double t10781;
  double t10749;
  t452 = Cos(var1[5]);
  t739 = Sin(var1[3]);
  t753 = Sin(var1[4]);
  t448 = Cos(var1[3]);
  t1019 = Sin(var1[5]);
  t16 = Cos(var1[6]);
  t503 = -1.*t448*t452;
  t1314 = -1.*t739*t753*t1019;
  t1429 = t503 + t1314;
  t1580 = -1.*t452*t739*t753;
  t1690 = t448*t1019;
  t1704 = t1580 + t1690;
  t1717 = Sin(var1[6]);
  t2420 = Cos(var1[7]);
  t2517 = -1.*t2420;
  t2553 = 1. + t2517;
  t2759 = Sin(var1[7]);
  t2175 = t16*t1429;
  t2215 = t1704*t1717;
  t2277 = t2175 + t2215;
  t3010 = Cos(var1[4]);
  t3736 = Cos(var1[8]);
  t4087 = -1.*t3736;
  t4107 = 1. + t4087;
  t4268 = Sin(var1[8]);
  t3536 = -1.*t3010*t2420*t739;
  t3561 = t2277*t2759;
  t3627 = t3536 + t3561;
  t4358 = t16*t1704;
  t4376 = -1.*t1429*t1717;
  t4437 = t4358 + t4376;
  t4554 = Cos(var1[9]);
  t4670 = -1.*t4554;
  t4758 = 1. + t4670;
  t4994 = Sin(var1[9]);
  t5279 = t3736*t3627;
  t5283 = t4437*t4268;
  t5308 = t5279 + t5283;
  t5628 = t3736*t4437;
  t5641 = -1.*t3627*t4268;
  t5699 = t5628 + t5641;
  t5846 = Cos(var1[10]);
  t5946 = -1.*t5846;
  t5951 = 1. + t5946;
  t6000 = Sin(var1[10]);
  t6195 = -1.*t4994*t5308;
  t6274 = t4554*t5699;
  t6300 = t6195 + t6274;
  t6464 = t4554*t5308;
  t6567 = t4994*t5699;
  t6589 = t6464 + t6567;
  t6605 = Cos(var1[11]);
  t6606 = -1.*t6605;
  t6610 = 1. + t6606;
  t6656 = Sin(var1[11]);
  t6824 = t6000*t6300;
  t6911 = t5846*t6589;
  t6924 = t6824 + t6911;
  t6974 = t5846*t6300;
  t6995 = -1.*t6000*t6589;
  t6997 = t6974 + t6995;
  t7025 = Cos(var1[12]);
  t7046 = -1.*t7025;
  t7054 = 1. + t7046;
  t7111 = Sin(var1[12]);
  t7179 = -1.*t6656*t6924;
  t7184 = t6605*t6997;
  t7203 = t7179 + t7184;
  t7325 = t6605*t6924;
  t7326 = t6656*t6997;
  t7329 = t7325 + t7326;
  t55 = -1.*t16;
  t176 = 1. + t55;
  t354 = 0.135*t176;
  t413 = 0. + t354;
  t1814 = -0.135*t1717;
  t1876 = 0. + t1814;
  t7434 = -1.*t452*t739;
  t7443 = t448*t753*t1019;
  t7466 = t7434 + t7443;
  t7508 = t448*t452*t753;
  t7519 = t739*t1019;
  t7526 = t7508 + t7519;
  t2619 = 0.135*t2553;
  t2825 = 0.049*t2759;
  t2997 = 0. + t2619 + t2825;
  t3013 = -0.049*t2553;
  t3101 = 0.135*t2759;
  t3134 = 0. + t3013 + t3101;
  t7533 = t16*t7466;
  t7536 = t7526*t1717;
  t7553 = t7533 + t7536;
  t4168 = -0.049*t4107;
  t4286 = -0.09*t4268;
  t4292 = 0. + t4168 + t4286;
  t4451 = -0.09*t4107;
  t4475 = 0.049*t4268;
  t4524 = 0. + t4451 + t4475;
  t4890 = -0.049*t4758;
  t5120 = -0.21*t4994;
  t5177 = 0. + t4890 + t5120;
  t7637 = t448*t3010*t2420;
  t7651 = t7553*t2759;
  t7688 = t7637 + t7651;
  t7706 = t16*t7526;
  t7723 = -1.*t7466*t1717;
  t7731 = t7706 + t7723;
  t5459 = -0.21*t4758;
  t5607 = 0.049*t4994;
  t5610 = 0. + t5459 + t5607;
  t5984 = -0.2707*t5951;
  t6105 = 0.0016*t6000;
  t6128 = 0. + t5984 + t6105;
  t7777 = t3736*t7688;
  t7793 = t7731*t4268;
  t7802 = t7777 + t7793;
  t7829 = t3736*t7731;
  t7835 = -1.*t7688*t4268;
  t7856 = t7829 + t7835;
  t6381 = -0.0016*t5951;
  t6416 = -0.2707*t6000;
  t6455 = 0. + t6381 + t6416;
  t6614 = 0.0184*t6610;
  t6661 = -0.7055*t6656;
  t6710 = 0. + t6614 + t6661;
  t7911 = -1.*t4994*t7802;
  t7916 = t4554*t7856;
  t7920 = t7911 + t7916;
  t7976 = t4554*t7802;
  t7978 = t4994*t7856;
  t7980 = t7976 + t7978;
  t6958 = -0.7055*t6610;
  t6969 = -0.0184*t6656;
  t6972 = 0. + t6958 + t6969;
  t7090 = -1.1135*t7054;
  t7119 = 0.0216*t7111;
  t7142 = 0. + t7090 + t7119;
  t8006 = t6000*t7920;
  t8011 = t5846*t7980;
  t8016 = t8006 + t8011;
  t8019 = t5846*t7920;
  t8025 = -1.*t6000*t7980;
  t8028 = t8019 + t8025;
  t7235 = -0.0216*t7054;
  t7240 = -1.1135*t7111;
  t7302 = 0. + t7235 + t7240;
  t8031 = -1.*t6656*t8016;
  t8039 = t6605*t8028;
  t8057 = t8031 + t8039;
  t8073 = t6605*t8016;
  t8090 = t6656*t8028;
  t8099 = t8073 + t8090;
  t8182 = t448*t3010*t16*t1019;
  t8196 = t448*t3010*t452*t1717;
  t8209 = t8182 + t8196;
  t8263 = -1.*t448*t2420*t753;
  t8267 = t8209*t2759;
  t8269 = t8263 + t8267;
  t8284 = t448*t3010*t452*t16;
  t8294 = -1.*t448*t3010*t1019*t1717;
  t8304 = t8284 + t8294;
  t8320 = t3736*t8269;
  t8325 = t8304*t4268;
  t8327 = t8320 + t8325;
  t8342 = t3736*t8304;
  t8344 = -1.*t8269*t4268;
  t8352 = t8342 + t8344;
  t8358 = -1.*t4994*t8327;
  t8361 = t4554*t8352;
  t8364 = t8358 + t8361;
  t8374 = t4554*t8327;
  t8380 = t4994*t8352;
  t8382 = t8374 + t8380;
  t8385 = t6000*t8364;
  t8388 = t5846*t8382;
  t8393 = t8385 + t8388;
  t8397 = t5846*t8364;
  t8406 = -1.*t6000*t8382;
  t8409 = t8397 + t8406;
  t8418 = -1.*t6656*t8393;
  t8420 = t6605*t8409;
  t8425 = t8418 + t8420;
  t8449 = t6605*t8393;
  t8455 = t6656*t8409;
  t8460 = t8449 + t8455;
  t8533 = t3010*t16*t739*t1019;
  t8534 = t3010*t452*t739*t1717;
  t8550 = t8533 + t8534;
  t8580 = -1.*t2420*t739*t753;
  t8586 = t8550*t2759;
  t8587 = t8580 + t8586;
  t8597 = t3010*t452*t16*t739;
  t8598 = -1.*t3010*t739*t1019*t1717;
  t8608 = t8597 + t8598;
  t8620 = t3736*t8587;
  t8623 = t8608*t4268;
  t8625 = t8620 + t8623;
  t8632 = t3736*t8608;
  t8633 = -1.*t8587*t4268;
  t8640 = t8632 + t8633;
  t8644 = -1.*t4994*t8625;
  t8646 = t4554*t8640;
  t8647 = t8644 + t8646;
  t8658 = t4554*t8625;
  t8659 = t4994*t8640;
  t8668 = t8658 + t8659;
  t8673 = t6000*t8647;
  t8679 = t5846*t8668;
  t8684 = t8673 + t8679;
  t8688 = t5846*t8647;
  t8697 = -1.*t6000*t8668;
  t8708 = t8688 + t8697;
  t8713 = -1.*t6656*t8684;
  t8719 = t6605*t8708;
  t8725 = t8713 + t8719;
  t8736 = t6605*t8684;
  t8742 = t6656*t8708;
  t8746 = t8736 + t8742;
  t8801 = -1.*t16*t753*t1019;
  t8802 = -1.*t452*t753*t1717;
  t8804 = t8801 + t8802;
  t8845 = -1.*t3010*t2420;
  t8859 = t8804*t2759;
  t8867 = t8845 + t8859;
  t8881 = -1.*t452*t16*t753;
  t8882 = t753*t1019*t1717;
  t8891 = t8881 + t8882;
  t8902 = t3736*t8867;
  t8904 = t8891*t4268;
  t8908 = t8902 + t8904;
  t8937 = t3736*t8891;
  t8944 = -1.*t8867*t4268;
  t8949 = t8937 + t8944;
  t8955 = -1.*t4994*t8908;
  t8960 = t4554*t8949;
  t8961 = t8955 + t8960;
  t8964 = t4554*t8908;
  t8967 = t4994*t8949;
  t8968 = t8964 + t8967;
  t8977 = t6000*t8961;
  t8978 = t5846*t8968;
  t8979 = t8977 + t8978;
  t8986 = t5846*t8961;
  t8990 = -1.*t6000*t8968;
  t8991 = t8986 + t8990;
  t8997 = -1.*t6656*t8979;
  t9005 = t6605*t8991;
  t9006 = t8997 + t9005;
  t9014 = t6605*t8979;
  t9016 = t6656*t8991;
  t9019 = t9014 + t9016;
  t9051 = t452*t739;
  t9052 = -1.*t448*t753*t1019;
  t9058 = t9051 + t9052;
  t9062 = t9058*t1717;
  t9068 = t7706 + t9062;
  t9082 = t16*t9058;
  t9088 = -1.*t7526*t1717;
  t9091 = t9082 + t9088;
  t9099 = t3736*t9068*t2759;
  t9102 = t9091*t4268;
  t9104 = t9099 + t9102;
  t9109 = t3736*t9091;
  t9114 = -1.*t9068*t2759*t4268;
  t9116 = t9109 + t9114;
  t9120 = -1.*t4994*t9104;
  t9123 = t4554*t9116;
  t9124 = t9120 + t9123;
  t9128 = t4554*t9104;
  t9129 = t4994*t9116;
  t9133 = t9128 + t9129;
  t9135 = t6000*t9124;
  t9136 = t5846*t9133;
  t9137 = t9135 + t9136;
  t9143 = t5846*t9124;
  t9149 = -1.*t6000*t9133;
  t9155 = t9143 + t9149;
  t9162 = -1.*t6656*t9137;
  t9169 = t6605*t9155;
  t9170 = t9162 + t9169;
  t9179 = t6605*t9137;
  t9186 = t6656*t9155;
  t9188 = t9179 + t9186;
  t9224 = t452*t739*t753;
  t9230 = -1.*t448*t1019;
  t9233 = t9224 + t9230;
  t9255 = t16*t9233;
  t9257 = t1429*t1717;
  t9263 = t9255 + t9257;
  t9272 = -1.*t9233*t1717;
  t9275 = t2175 + t9272;
  t9283 = t3736*t9263*t2759;
  t9284 = t9275*t4268;
  t9285 = t9283 + t9284;
  t9293 = t3736*t9275;
  t9294 = -1.*t9263*t2759*t4268;
  t9296 = t9293 + t9294;
  t9312 = -1.*t4994*t9285;
  t9319 = t4554*t9296;
  t9322 = t9312 + t9319;
  t9327 = t4554*t9285;
  t9328 = t4994*t9296;
  t9333 = t9327 + t9328;
  t9336 = t6000*t9322;
  t9343 = t5846*t9333;
  t9345 = t9336 + t9343;
  t9348 = t5846*t9322;
  t9349 = -1.*t6000*t9333;
  t9351 = t9348 + t9349;
  t9359 = -1.*t6656*t9345;
  t9362 = t6605*t9351;
  t9364 = t9359 + t9362;
  t9369 = t6605*t9345;
  t9372 = t6656*t9351;
  t9381 = t9369 + t9372;
  t9435 = t3010*t452*t16;
  t9438 = -1.*t3010*t1019*t1717;
  t9442 = t9435 + t9438;
  t9461 = -1.*t3010*t16*t1019;
  t9468 = -1.*t3010*t452*t1717;
  t9472 = t9461 + t9468;
  t9478 = t3736*t9442*t2759;
  t9479 = t9472*t4268;
  t9484 = t9478 + t9479;
  t9488 = t3736*t9472;
  t9489 = -1.*t9442*t2759*t4268;
  t9491 = t9488 + t9489;
  t9496 = -1.*t4994*t9484;
  t9497 = t4554*t9491;
  t9502 = t9496 + t9497;
  t9504 = t4554*t9484;
  t9510 = t4994*t9491;
  t9511 = t9504 + t9510;
  t9524 = t6000*t9502;
  t9529 = t5846*t9511;
  t9531 = t9524 + t9529;
  t9535 = t5846*t9502;
  t9539 = -1.*t6000*t9511;
  t9547 = t9535 + t9539;
  t9559 = -1.*t6656*t9531;
  t9560 = t6605*t9547;
  t9562 = t9559 + t9560;
  t9579 = t6605*t9531;
  t9589 = t6656*t9547;
  t9594 = t9579 + t9589;
  t9644 = -1.*t16*t7466;
  t9651 = t9644 + t9088;
  t9660 = t3736*t7731*t2759;
  t9674 = t9651*t4268;
  t9680 = t9660 + t9674;
  t9696 = t3736*t9651;
  t9704 = -1.*t7731*t2759*t4268;
  t9707 = t9696 + t9704;
  t9716 = -1.*t4994*t9680;
  t9717 = t4554*t9707;
  t9720 = t9716 + t9717;
  t9724 = t4554*t9680;
  t9725 = t4994*t9707;
  t9729 = t9724 + t9725;
  t9733 = t6000*t9720;
  t9736 = t5846*t9729;
  t9737 = t9733 + t9736;
  t9739 = t5846*t9720;
  t9743 = -1.*t6000*t9729;
  t9748 = t9739 + t9743;
  t9750 = -1.*t6656*t9737;
  t9751 = t6605*t9748;
  t9757 = t9750 + t9751;
  t9765 = t6605*t9737;
  t9767 = t6656*t9748;
  t9768 = t9765 + t9767;
  t9819 = t448*t452;
  t9823 = t739*t753*t1019;
  t9824 = t9819 + t9823;
  t9830 = -1.*t9824*t1717;
  t9832 = t9255 + t9830;
  t9846 = -1.*t16*t9824;
  t9851 = t9846 + t9272;
  t9861 = t3736*t9832*t2759;
  t9862 = t9851*t4268;
  t9863 = t9861 + t9862;
  t9873 = t3736*t9851;
  t9876 = -1.*t9832*t2759*t4268;
  t9880 = t9873 + t9876;
  t9889 = -1.*t4994*t9863;
  t9893 = t4554*t9880;
  t9894 = t9889 + t9893;
  t9899 = t4554*t9863;
  t9901 = t4994*t9880;
  t9902 = t9899 + t9901;
  t9908 = t6000*t9894;
  t9909 = t5846*t9902;
  t9911 = t9908 + t9909;
  t9914 = t5846*t9894;
  t9922 = -1.*t6000*t9902;
  t9928 = t9914 + t9922;
  t9931 = -1.*t6656*t9911;
  t9932 = t6605*t9928;
  t9935 = t9931 + t9932;
  t9939 = t6605*t9911;
  t9951 = t6656*t9928;
  t9952 = t9939 + t9951;
  t9445 = 0.1305*t2420*t9442;
  t9446 = t9442*t2997;
  t9459 = t9442*t2759*t4292;
  t9475 = t9472*t4524;
  t9485 = t5177*t9484;
  t9493 = t5610*t9491;
  t9503 = t6128*t9502;
  t9515 = t6455*t9511;
  t9532 = t6710*t9531;
  t9551 = t6972*t9547;
  t9576 = t7142*t9562;
  t9600 = t7302*t9594;
  t9603 = t7111*t9562;
  t9604 = t7025*t9594;
  t9612 = t9603 + t9604;
  t9613 = -0.0216*t9612;
  t9615 = t7025*t9562;
  t9617 = -1.*t7111*t9594;
  t9621 = t9615 + t9617;
  t9626 = -1.1135*t9621;
  t7582 = t2420*t7553;
  t7601 = -1.*t448*t3010*t2759;
  t7627 = t7582 + t7601;
  t10057 = -1.*t3736*t4994*t7627;
  t10065 = -1.*t4554*t7627*t4268;
  t10068 = t10057 + t10065;
  t10072 = t4554*t3736*t7627;
  t10075 = -1.*t4994*t7627*t4268;
  t10076 = t10072 + t10075;
  t10083 = t6000*t10068;
  t10084 = t5846*t10076;
  t10087 = t10083 + t10084;
  t10094 = t5846*t10068;
  t10095 = -1.*t6000*t10076;
  t10097 = t10094 + t10095;
  t10107 = -1.*t6656*t10087;
  t10109 = t6605*t10097;
  t10110 = t10107 + t10109;
  t10113 = t6605*t10087;
  t10115 = t6656*t10097;
  t10116 = t10113 + t10115;
  t10007 = 0.135*t2420;
  t10012 = -0.049*t2759;
  t10013 = t10007 + t10012;
  t10020 = 0.049*t2420;
  t10021 = t10020 + t3101;
  t10149 = t16*t9824;
  t10152 = t9233*t1717;
  t10153 = t10149 + t10152;
  t10159 = t2420*t10153;
  t10162 = -1.*t3010*t739*t2759;
  t10163 = t10159 + t10162;
  t10178 = -1.*t3736*t4994*t10163;
  t10179 = -1.*t4554*t10163*t4268;
  t10181 = t10178 + t10179;
  t10184 = t4554*t3736*t10163;
  t10186 = -1.*t4994*t10163*t4268;
  t10187 = t10184 + t10186;
  t10190 = t6000*t10181;
  t10194 = t5846*t10187;
  t10195 = t10190 + t10194;
  t10197 = t5846*t10181;
  t10198 = -1.*t6000*t10187;
  t10199 = t10197 + t10198;
  t10206 = -1.*t6656*t10195;
  t10208 = t6605*t10199;
  t10209 = t10206 + t10208;
  t10213 = t6605*t10195;
  t10214 = t6656*t10199;
  t10215 = t10213 + t10214;
  t10250 = t3010*t16*t1019;
  t10251 = t3010*t452*t1717;
  t10254 = t10250 + t10251;
  t10256 = t2420*t10254;
  t10258 = t753*t2759;
  t10262 = t10256 + t10258;
  t10283 = -1.*t3736*t4994*t10262;
  t10284 = -1.*t4554*t10262*t4268;
  t10285 = t10283 + t10284;
  t10288 = t4554*t3736*t10262;
  t10289 = -1.*t4994*t10262*t4268;
  t10291 = t10288 + t10289;
  t10296 = t6000*t10285;
  t10299 = t5846*t10291;
  t10300 = t10296 + t10299;
  t10306 = t5846*t10285;
  t10310 = -1.*t6000*t10291;
  t10311 = t10306 + t10310;
  t10319 = -1.*t6656*t10300;
  t10321 = t6605*t10311;
  t10322 = t10319 + t10321;
  t10324 = t6605*t10300;
  t10325 = t6656*t10311;
  t10326 = t10324 + t10325;
  t10358 = -1.*t3736*t7688;
  t10359 = -1.*t7731*t4268;
  t10360 = t10358 + t10359;
  t10363 = t4994*t10360;
  t10365 = t10363 + t7916;
  t10369 = t4554*t10360;
  t10371 = -1.*t4994*t7856;
  t10372 = t10369 + t10371;
  t10375 = -1.*t6000*t10365;
  t10376 = t5846*t10372;
  t10378 = t10375 + t10376;
  t10381 = t5846*t10365;
  t10382 = t6000*t10372;
  t10384 = t10381 + t10382;
  t10388 = t6656*t10378;
  t10390 = t6605*t10384;
  t10391 = t10388 + t10390;
  t10393 = t6605*t10378;
  t10394 = -1.*t6656*t10384;
  t10395 = t10393 + t10394;
  t10345 = 0.049*t3736;
  t10348 = t10345 + t4286;
  t10353 = -0.09*t3736;
  t10354 = -0.049*t4268;
  t10355 = t10353 + t10354;
  t10411 = t3010*t2420*t739;
  t10412 = t10153*t2759;
  t10413 = t10411 + t10412;
  t10415 = -1.*t3736*t10413;
  t10417 = -1.*t9832*t4268;
  t10418 = t10415 + t10417;
  t10421 = t3736*t9832;
  t10423 = -1.*t10413*t4268;
  t10424 = t10421 + t10423;
  t10426 = t4994*t10418;
  t10427 = t4554*t10424;
  t10428 = t10426 + t10427;
  t10430 = t4554*t10418;
  t10431 = -1.*t4994*t10424;
  t10432 = t10430 + t10431;
  t10434 = -1.*t6000*t10428;
  t10435 = t5846*t10432;
  t10436 = t10434 + t10435;
  t10438 = t5846*t10428;
  t10439 = t6000*t10432;
  t10440 = t10438 + t10439;
  t10442 = t6656*t10436;
  t10443 = t6605*t10440;
  t10444 = t10442 + t10443;
  t10446 = t6605*t10436;
  t10447 = -1.*t6656*t10440;
  t10448 = t10446 + t10447;
  t10460 = -1.*t2420*t753;
  t10461 = t10254*t2759;
  t10462 = t10460 + t10461;
  t10464 = -1.*t3736*t10462;
  t10465 = -1.*t9442*t4268;
  t10466 = t10464 + t10465;
  t10468 = t3736*t9442;
  t10469 = -1.*t10462*t4268;
  t10470 = t10468 + t10469;
  t10472 = t4994*t10466;
  t10473 = t4554*t10470;
  t10474 = t10472 + t10473;
  t10476 = t4554*t10466;
  t10477 = -1.*t4994*t10470;
  t10478 = t10476 + t10477;
  t10480 = -1.*t6000*t10474;
  t10481 = t5846*t10478;
  t10482 = t10480 + t10481;
  t10484 = t5846*t10474;
  t10485 = t6000*t10478;
  t10486 = t10484 + t10485;
  t10488 = t6656*t10482;
  t10489 = t6605*t10486;
  t10490 = t10488 + t10489;
  t10492 = t6605*t10482;
  t10493 = -1.*t6656*t10486;
  t10494 = t10492 + t10493;
  t10513 = -1.*t4554*t7802;
  t10514 = t10513 + t10371;
  t10516 = -1.*t6000*t7920;
  t10517 = t5846*t10514;
  t10518 = t10516 + t10517;
  t10520 = t6000*t10514;
  t10521 = t8019 + t10520;
  t10523 = t6656*t10518;
  t10524 = t6605*t10521;
  t10525 = t10523 + t10524;
  t10527 = t6605*t10518;
  t10528 = -1.*t6656*t10521;
  t10529 = t10527 + t10528;
  t10505 = -0.21*t4554;
  t10506 = -0.049*t4994;
  t10507 = t10505 + t10506;
  t10509 = 0.049*t4554;
  t10510 = t10509 + t5120;
  t10540 = t3736*t10413;
  t10541 = t9832*t4268;
  t10542 = t10540 + t10541;
  t10545 = -1.*t4994*t10542;
  t10546 = t10545 + t10427;
  t10548 = -1.*t4554*t10542;
  t10549 = t10548 + t10431;
  t10551 = -1.*t6000*t10546;
  t10552 = t5846*t10549;
  t10553 = t10551 + t10552;
  t10555 = t5846*t10546;
  t10556 = t6000*t10549;
  t10557 = t10555 + t10556;
  t10559 = t6656*t10553;
  t10560 = t6605*t10557;
  t10561 = t10559 + t10560;
  t10563 = t6605*t10553;
  t10564 = -1.*t6656*t10557;
  t10565 = t10563 + t10564;
  t10576 = t3736*t10462;
  t10577 = t9442*t4268;
  t10578 = t10576 + t10577;
  t10581 = -1.*t4994*t10578;
  t10582 = t10581 + t10473;
  t10584 = -1.*t4554*t10578;
  t10585 = t10584 + t10477;
  t10587 = -1.*t6000*t10582;
  t10588 = t5846*t10585;
  t10589 = t10587 + t10588;
  t10591 = t5846*t10582;
  t10592 = t6000*t10585;
  t10593 = t10591 + t10592;
  t10595 = t6656*t10589;
  t10596 = t6605*t10593;
  t10597 = t10595 + t10596;
  t10599 = t6605*t10589;
  t10600 = -1.*t6656*t10593;
  t10601 = t10599 + t10600;
  t10619 = -1.*t5846*t7980;
  t10620 = t10516 + t10619;
  t10623 = t6656*t10620;
  t10624 = t10623 + t8039;
  t10626 = t6605*t10620;
  t10627 = -1.*t6656*t8028;
  t10628 = t10626 + t10627;
  t10612 = 0.0016*t5846;
  t10613 = t10612 + t6416;
  t10615 = -0.2707*t5846;
  t10616 = -0.0016*t6000;
  t10617 = t10615 + t10616;
  t10640 = t4554*t10542;
  t10641 = t4994*t10424;
  t10642 = t10640 + t10641;
  t10644 = -1.*t5846*t10642;
  t10645 = t10551 + t10644;
  t10647 = -1.*t6000*t10642;
  t10648 = t10555 + t10647;
  t10650 = t6656*t10645;
  t10651 = t6605*t10648;
  t10652 = t10650 + t10651;
  t10654 = t6605*t10645;
  t10655 = -1.*t6656*t10648;
  t10656 = t10654 + t10655;
  t10668 = t4554*t10578;
  t10669 = t4994*t10470;
  t10670 = t10668 + t10669;
  t10672 = -1.*t5846*t10670;
  t10673 = t10587 + t10672;
  t10675 = -1.*t6000*t10670;
  t10676 = t10591 + t10675;
  t10678 = t6656*t10673;
  t10679 = t6605*t10676;
  t10680 = t10678 + t10679;
  t10682 = t6605*t10673;
  t10683 = -1.*t6656*t10676;
  t10684 = t10682 + t10683;
  t10703 = -1.*t6605*t8016;
  t10704 = t10703 + t10627;
  t8131 = t7025*t8057;
  t10695 = -0.7055*t6605;
  t10696 = 0.0184*t6656;
  t10697 = t10695 + t10696;
  t10699 = -0.0184*t6605;
  t10700 = t10699 + t6661;
  t10714 = t6000*t10546;
  t10715 = t5846*t10642;
  t10716 = t10714 + t10715;
  t10719 = -1.*t6656*t10716;
  t10720 = t10719 + t10651;
  t10722 = -1.*t6605*t10716;
  t10723 = t10722 + t10655;
  t10734 = t6000*t10582;
  t10735 = t5846*t10670;
  t10736 = t10734 + t10735;
  t10739 = -1.*t6656*t10736;
  t10740 = t10739 + t10679;
  t10742 = -1.*t6605*t10736;
  t10743 = t10742 + t10683;
  t10706 = -1.*t7111*t8057;
  t8138 = -1.*t7111*t8099;
  t8151 = t8131 + t8138;
  t10754 = 0.0216*t7025;
  t10755 = t10754 + t7240;
  t10757 = -1.1135*t7025;
  t10758 = -0.0216*t7111;
  t10759 = t10757 + t10758;
  t10725 = -1.*t7111*t10720;
  t10767 = t6605*t10716;
  t10768 = t6656*t10648;
  t10769 = t10767 + t10768;
  t10729 = t7025*t10720;
  t10745 = -1.*t7111*t10740;
  t10779 = t6605*t10736;
  t10780 = t6656*t10676;
  t10781 = t10779 + t10780;
  t10749 = t7025*t10740;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t1704*t1876 + t2277*t2997 + t1429*t413 + t3627*t4292 + t4437*t4524 + t5177*t5308 + t5610*t5699 + t6128*t6300 + t6455*t6589 + t6710*t6924 + t6972*t6997 + t7142*t7203 + t7302*t7329 - 0.0216*(t7111*t7203 + t7025*t7329) - 1.1135*(t7025*t7203 - 1.*t7111*t7329) - 1.*t3010*t3134*t739 + 0.1305*(t2277*t2420 + t2759*t3010*t739);
  p_output1[10]=t3010*t3134*t448 + t413*t7466 + t1876*t7526 + t2997*t7553 + 0.1305*t7627 + t4292*t7688 + t4524*t7731 + t5177*t7802 + t5610*t7856 + t6128*t7920 + t6455*t7980 + t6710*t8016 + t6972*t8028 + t7142*t8057 + t7302*t8099 - 0.0216*(t7111*t8057 + t7025*t8099) - 1.1135*t8151;
  p_output1[11]=0;
  p_output1[12]=t1019*t3010*t413*t448 + t1876*t3010*t448*t452 - 1.*t3134*t448*t753 + t2997*t8209 + 0.1305*(t2759*t448*t753 + t2420*t8209) + t4292*t8269 + t4524*t8304 + t5177*t8327 + t5610*t8352 + t6128*t8364 + t6455*t8382 + t6710*t8393 + t6972*t8409 + t7142*t8425 + t7302*t8460 - 0.0216*(t7111*t8425 + t7025*t8460) - 1.1135*(t7025*t8425 - 1.*t7111*t8460);
  p_output1[13]=t1019*t3010*t413*t739 + t1876*t3010*t452*t739 - 1.*t3134*t739*t753 + t2997*t8550 + 0.1305*(t2759*t739*t753 + t2420*t8550) + t4292*t8587 + t4524*t8608 + t5177*t8625 + t5610*t8640 + t6128*t8647 + t6455*t8668 + t6710*t8684 + t6972*t8708 + t7142*t8725 + t7302*t8746 - 0.0216*(t7111*t8725 + t7025*t8746) - 1.1135*(t7025*t8725 - 1.*t7111*t8746);
  p_output1[14]=-1.*t3010*t3134 - 1.*t1019*t413*t753 - 1.*t1876*t452*t753 + t2997*t8804 + 0.1305*(t2759*t3010 + t2420*t8804) + t4292*t8867 + t4524*t8891 + t5177*t8908 + t5610*t8949 + t6128*t8961 + t6455*t8968 + t6710*t8979 + t6972*t8991 + t7142*t9006 + t7302*t9019 - 0.0216*(t7111*t9006 + t7025*t9019) - 1.1135*(t7025*t9006 - 1.*t7111*t9019);
  p_output1[15]=t413*t7526 + t1876*t9058 + 0.1305*t2420*t9068 + t2997*t9068 + t2759*t4292*t9068 + t4524*t9091 + t5177*t9104 + t5610*t9116 + t6128*t9124 + t6455*t9133 + t6710*t9137 + t6972*t9155 + t7142*t9170 + t7302*t9188 - 0.0216*(t7111*t9170 + t7025*t9188) - 1.1135*(t7025*t9170 - 1.*t7111*t9188);
  p_output1[16]=t1429*t1876 + t413*t9233 + 0.1305*t2420*t9263 + t2997*t9263 + t2759*t4292*t9263 + t4524*t9275 + t5177*t9285 + t5610*t9296 + t6128*t9322 + t6455*t9333 + t6710*t9345 + t6972*t9351 + t7142*t9364 + t7302*t9381 - 0.0216*(t7111*t9364 + t7025*t9381) - 1.1135*(t7025*t9364 - 1.*t7111*t9381);
  p_output1[17]=-1.*t1019*t1876*t3010 + t3010*t413*t452 + t9445 + t9446 + t9459 + t9475 + t9485 + t9493 + t9503 + t9515 + t9532 + t9551 + t9576 + t9600 + t9613 + t9626;
  p_output1[18]=0.135*t1717*t7466 - 0.135*t16*t7526 + 0.1305*t2420*t7731 + t2997*t7731 + t2759*t4292*t7731 + t4524*t9651 + t5177*t9680 + t5610*t9707 + t6128*t9720 + t6455*t9729 + t6710*t9737 + t6972*t9748 + t7142*t9757 + t7302*t9768 - 0.0216*(t7111*t9757 + t7025*t9768) - 1.1135*(t7025*t9757 - 1.*t7111*t9768);
  p_output1[19]=-0.135*t16*t9233 + 0.135*t1717*t9824 + 0.1305*t2420*t9832 + t2997*t9832 + t2759*t4292*t9832 + t4524*t9851 + t5177*t9863 + t5610*t9880 + t6128*t9894 + t6455*t9902 + t6710*t9911 + t6972*t9928 + t7142*t9935 + t7302*t9952 - 0.0216*(t7111*t9935 + t7025*t9952) - 1.1135*(t7025*t9935 - 1.*t7111*t9952);
  p_output1[20]=0.135*t1019*t1717*t3010 - 0.135*t16*t3010*t452 + t9445 + t9446 + t9459 + t9475 + t9485 + t9493 + t9503 + t9515 + t9532 + t9551 + t9576 + t9600 + t9613 + t9626;
  p_output1[21]=t10013*t3010*t448 + t10068*t6128 + t10076*t6455 + t10087*t6710 + t10097*t6972 - 0.0216*(t10116*t7025 + t10110*t7111) - 1.1135*(t10110*t7025 - 1.*t10116*t7111) + t10110*t7142 + t10116*t7302 + t10021*t7553 + 0.1305*(-1.*t2420*t3010*t448 - 1.*t2759*t7553) + t4292*t7627 + t3736*t5177*t7627 - 1.*t4268*t5610*t7627;
  p_output1[22]=t10021*t10153 + 0.1305*(-1.*t10153*t2759 + t3536) + t10163*t4292 + t10163*t3736*t5177 - 1.*t10163*t4268*t5610 + t10181*t6128 + t10187*t6455 + t10195*t6710 + t10199*t6972 - 0.0216*(t10215*t7025 + t10209*t7111) - 1.1135*(t10209*t7025 - 1.*t10215*t7111) + t10209*t7142 + t10215*t7302 + t10013*t3010*t739;
  p_output1[23]=t10021*t10254 + t10262*t4292 + t10262*t3736*t5177 - 1.*t10262*t4268*t5610 + t10285*t6128 + t10291*t6455 + t10300*t6710 + t10311*t6972 - 0.0216*(t10326*t7025 + t10322*t7111) - 1.1135*(t10322*t7025 - 1.*t10326*t7111) + t10322*t7142 + t10326*t7302 - 1.*t10013*t753 + 0.1305*(-1.*t10254*t2759 + t2420*t753);
  p_output1[24]=t10360*t5610 + t10372*t6128 + t10365*t6455 + t10384*t6710 + t10378*t6972 - 1.1135*(t10395*t7025 - 1.*t10391*t7111) - 0.0216*(t10391*t7025 + t10395*t7111) + t10395*t7142 + t10391*t7302 + t10355*t7688 + t10348*t7731 + t5177*t7856;
  p_output1[25]=t10355*t10413 + t10424*t5177 + t10418*t5610 + t10432*t6128 + t10428*t6455 + t10440*t6710 + t10436*t6972 - 1.1135*(t10448*t7025 - 1.*t10444*t7111) - 0.0216*(t10444*t7025 + t10448*t7111) + t10448*t7142 + t10444*t7302 + t10348*t9832;
  p_output1[26]=t10355*t10462 + t10470*t5177 + t10466*t5610 + t10478*t6128 + t10474*t6455 + t10486*t6710 + t10482*t6972 - 1.1135*(t10494*t7025 - 1.*t10490*t7111) - 0.0216*(t10490*t7025 + t10494*t7111) + t10494*t7142 + t10490*t7302 + t10348*t9442;
  p_output1[27]=t10514*t6128 + t10521*t6710 + t10518*t6972 - 1.1135*(t10529*t7025 - 1.*t10525*t7111) - 0.0216*(t10525*t7025 + t10529*t7111) + t10529*t7142 + t10525*t7302 + t10507*t7802 + t10510*t7856 + t6455*t7920;
  p_output1[28]=t10424*t10510 + t10507*t10542 + t10549*t6128 + t10546*t6455 + t10557*t6710 + t10553*t6972 - 1.1135*(t10565*t7025 - 1.*t10561*t7111) - 0.0216*(t10561*t7025 + t10565*t7111) + t10565*t7142 + t10561*t7302;
  p_output1[29]=t10470*t10510 + t10507*t10578 + t10585*t6128 + t10582*t6455 + t10593*t6710 + t10589*t6972 - 1.1135*(t10601*t7025 - 1.*t10597*t7111) - 0.0216*(t10597*t7025 + t10601*t7111) + t10601*t7142 + t10597*t7302;
  p_output1[30]=t10620*t6972 - 1.1135*(t10628*t7025 - 1.*t10624*t7111) - 0.0216*(t10624*t7025 + t10628*t7111) + t10628*t7142 + t10624*t7302 + t10613*t7920 + t10617*t7980 + t6710*t8028;
  p_output1[31]=t10546*t10613 + t10617*t10642 + t10648*t6710 + t10645*t6972 - 1.1135*(t10656*t7025 - 1.*t10652*t7111) - 0.0216*(t10652*t7025 + t10656*t7111) + t10656*t7142 + t10652*t7302;
  p_output1[32]=t10582*t10613 + t10617*t10670 + t10676*t6710 + t10673*t6972 - 1.1135*(t10684*t7025 - 1.*t10680*t7111) - 0.0216*(t10680*t7025 + t10684*t7111) + t10684*t7142 + t10680*t7302;
  p_output1[33]=-1.1135*(t10706 + t10704*t7025) + t10704*t7142 + t10697*t8016 + t10700*t8028 + t7302*t8057 - 0.0216*(t10704*t7111 + t8131);
  p_output1[34]=t10648*t10700 + t10697*t10716 - 1.1135*(t10725 + t10723*t7025) - 0.0216*(t10729 + t10723*t7111) + t10723*t7142 + t10720*t7302;
  p_output1[35]=t10676*t10700 + t10697*t10736 - 1.1135*(t10745 + t10743*t7025) - 0.0216*(t10749 + t10743*t7111) + t10743*t7142 + t10740*t7302;
  p_output1[36]=t10755*t8057 + t10759*t8099 - 1.1135*(t10706 - 1.*t7025*t8099) - 0.0216*t8151;
  p_output1[37]=t10720*t10755 + t10759*t10769 - 1.1135*(t10725 - 1.*t10769*t7025) - 0.0216*(t10729 - 1.*t10769*t7111);
  p_output1[38]=t10740*t10755 + t10759*t10781 - 1.1135*(t10745 - 1.*t10781*t7025) - 0.0216*(t10749 - 1.*t10781*t7111);
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "J_toe_joint_left_mex.hh"

namespace SymExpression
{

void J_toe_joint_left_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
