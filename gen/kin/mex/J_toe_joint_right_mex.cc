/*
 * Automatically Generated from Mathematica.
 * Mon 2 Jul 2018 15:33:54 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t1880;
  double t2753;
  double t2375;
  double t2601;
  double t2972;
  double t1062;
  double t1417;
  double t1557;
  double t1702;
  double t2084;
  double t2606;
  double t2974;
  double t3068;
  double t3613;
  double t4269;
  double t4552;
  double t4696;
  double t991;
  double t5199;
  double t5209;
  double t5236;
  double t5308;
  double t5446;
  double t5491;
  double t5915;
  double t6361;
  double t6412;
  double t6573;
  double t6862;
  double t6912;
  double t6916;
  double t6953;
  double t7014;
  double t7026;
  double t7107;
  double t7147;
  double t7158;
  double t7189;
  double t7249;
  double t7253;
  double t7292;
  double t7386;
  double t7388;
  double t7398;
  double t7408;
  double t7415;
  double t7417;
  double t7421;
  double t7628;
  double t7631;
  double t7632;
  double t7661;
  double t7669;
  double t7689;
  double t7691;
  double t7719;
  double t7723;
  double t7737;
  double t7798;
  double t7831;
  double t7833;
  double t7874;
  double t7912;
  double t7930;
  double t7942;
  double t7957;
  double t7965;
  double t7975;
  double t8044;
  double t8052;
  double t8063;
  double t1592;
  double t1742;
  double t1801;
  double t2133;
  double t2364;
  double t3836;
  double t3846;
  double t3920;
  double t4124;
  double t5042;
  double t5074;
  double t5146;
  double t8189;
  double t8190;
  double t8196;
  double t8260;
  double t8275;
  double t8299;
  double t5836;
  double t6060;
  double t6081;
  double t8312;
  double t8350;
  double t8366;
  double t6809;
  double t6812;
  double t6836;
  double t7094;
  double t7120;
  double t7131;
  double t8391;
  double t8399;
  double t8423;
  double t8537;
  double t8550;
  double t8581;
  double t7210;
  double t7231;
  double t7241;
  double t7399;
  double t7411;
  double t7414;
  double t8606;
  double t8661;
  double t8683;
  double t8700;
  double t8706;
  double t8709;
  double t7556;
  double t7608;
  double t7626;
  double t7690;
  double t7700;
  double t7712;
  double t8737;
  double t8749;
  double t8752;
  double t8764;
  double t8777;
  double t8779;
  double t7761;
  double t7772;
  double t7797;
  double t7941;
  double t7946;
  double t7948;
  double t8786;
  double t8787;
  double t8789;
  double t8803;
  double t8805;
  double t8818;
  double t7988;
  double t8001;
  double t8023;
  double t8823;
  double t8825;
  double t8832;
  double t8859;
  double t8865;
  double t8868;
  double t8964;
  double t8978;
  double t8982;
  double t8995;
  double t9000;
  double t9014;
  double t9031;
  double t9032;
  double t9035;
  double t9043;
  double t9044;
  double t9050;
  double t9077;
  double t9082;
  double t9084;
  double t9106;
  double t9114;
  double t9119;
  double t9140;
  double t9177;
  double t9178;
  double t9191;
  double t9194;
  double t9197;
  double t9216;
  double t9225;
  double t9226;
  double t9239;
  double t9243;
  double t9244;
  double t9250;
  double t9262;
  double t9293;
  double t9399;
  double t9416;
  double t9417;
  double t9422;
  double t9438;
  double t9445;
  double t9464;
  double t9471;
  double t9475;
  double t9485;
  double t9493;
  double t9498;
  double t9503;
  double t9507;
  double t9509;
  double t9515;
  double t9519;
  double t9520;
  double t9528;
  double t9532;
  double t9533;
  double t9549;
  double t9550;
  double t9551;
  double t9570;
  double t9571;
  double t9572;
  double t9592;
  double t9600;
  double t9611;
  double t9615;
  double t9618;
  double t9626;
  double t9703;
  double t9714;
  double t9717;
  double t9728;
  double t9732;
  double t9738;
  double t9780;
  double t9781;
  double t9786;
  double t9790;
  double t9793;
  double t9794;
  double t9797;
  double t9798;
  double t9799;
  double t9802;
  double t9803;
  double t9804;
  double t9813;
  double t9815;
  double t9820;
  double t9852;
  double t9853;
  double t9881;
  double t9885;
  double t9890;
  double t9891;
  double t9901;
  double t9903;
  double t9908;
  double t9916;
  double t9917;
  double t9918;
  double t9977;
  double t9980;
  double t9983;
  double t10012;
  double t10015;
  double t9993;
  double t9995;
  double t10000;
  double t10031;
  double t10045;
  double t10051;
  double t10066;
  double t10067;
  double t10068;
  double t10089;
  double t10090;
  double t10093;
  double t10108;
  double t10117;
  double t10121;
  double t10126;
  double t10131;
  double t10139;
  double t10144;
  double t10145;
  double t10152;
  double t10158;
  double t10160;
  double t10162;
  double t10195;
  double t10198;
  double t10203;
  double t10278;
  double t10281;
  double t10286;
  double t10312;
  double t10323;
  double t10328;
  double t10296;
  double t10304;
  double t10361;
  double t10374;
  double t10383;
  double t10396;
  double t10399;
  double t10410;
  double t10420;
  double t10421;
  double t10436;
  double t10450;
  double t10456;
  double t10460;
  double t10469;
  double t10492;
  double t10496;
  double t10505;
  double t10511;
  double t10523;
  double t10538;
  double t10546;
  double t10551;
  double t10562;
  double t10566;
  double t10567;
  double t10677;
  double t10682;
  double t10685;
  double t10656;
  double t10665;
  double t10668;
  double t10732;
  double t10734;
  double t10740;
  double t10756;
  double t10757;
  double t10770;
  double t10775;
  double t10779;
  double t10780;
  double t10790;
  double t10800;
  double t10809;
  double t10818;
  double t10820;
  double t10826;
  double t10843;
  double t10844;
  double t10849;
  double t10856;
  double t10868;
  double t10881;
  double t10885;
  double t10888;
  double t10889;
  double t10936;
  double t10941;
  double t10954;
  double t10956;
  double t10957;
  double t10960;
  double t10961;
  double t10964;
  double t10969;
  double t10970;
  double t10973;
  double t10977;
  double t10981;
  double t10982;
  double t10986;
  double t10990;
  double t10992;
  double t10994;
  double t10996;
  double t10998;
  double t11001;
  double t11003;
  double t11004;
  double t11010;
  double t11013;
  double t11017;
  double t11048;
  double t11049;
  double t11052;
  double t11063;
  double t11064;
  double t11057;
  double t11059;
  double t11068;
  double t11070;
  double t11071;
  double t11077;
  double t11080;
  double t11085;
  double t11090;
  double t11093;
  double t11095;
  double t11102;
  double t11103;
  double t11106;
  double t11111;
  double t11113;
  double t11114;
  double t11117;
  double t11118;
  double t11120;
  double t11123;
  double t11125;
  double t11126;
  double t11129;
  double t11130;
  double t11131;
  double t10671;
  double t10707;
  double t10717;
  double t10718;
  double t10747;
  double t10771;
  double t10786;
  double t10817;
  double t10829;
  double t10853;
  double t10883;
  double t10894;
  double t10895;
  double t10901;
  double t10904;
  double t10905;
  double t10908;
  double t10910;
  double t10913;
  double t10921;
  double t8452;
  double t8525;
  double t8526;
  double t11190;
  double t11192;
  double t11194;
  double t11203;
  double t11204;
  double t11207;
  double t11211;
  double t11213;
  double t11214;
  double t11217;
  double t11220;
  double t11224;
  double t11230;
  double t11231;
  double t11233;
  double t11235;
  double t11239;
  double t11240;
  double t11161;
  double t11163;
  double t11165;
  double t11170;
  double t11173;
  double t11257;
  double t11258;
  double t11259;
  double t11263;
  double t11264;
  double t11265;
  double t11274;
  double t11275;
  double t11276;
  double t11278;
  double t11280;
  double t11281;
  double t11283;
  double t11284;
  double t11285;
  double t11287;
  double t11288;
  double t11289;
  double t11291;
  double t11292;
  double t11293;
  double t11295;
  double t11296;
  double t11297;
  double t11309;
  double t11310;
  double t11311;
  double t11313;
  double t11314;
  double t11315;
  double t11323;
  double t11324;
  double t11325;
  double t11327;
  double t11328;
  double t11329;
  double t11331;
  double t11332;
  double t11333;
  double t11335;
  double t11336;
  double t11337;
  double t11339;
  double t11340;
  double t11341;
  double t11343;
  double t11344;
  double t11345;
  double t11363;
  double t11364;
  double t11365;
  double t11368;
  double t11369;
  double t11371;
  double t11372;
  double t11373;
  double t11375;
  double t11376;
  double t11377;
  double t11379;
  double t11380;
  double t11381;
  double t11383;
  double t11384;
  double t11385;
  double t11387;
  double t11388;
  double t11389;
  double t11356;
  double t11357;
  double t11359;
  double t11360;
  double t11361;
  double t11401;
  double t11402;
  double t11403;
  double t11405;
  double t11406;
  double t11407;
  double t11409;
  double t11410;
  double t11411;
  double t11413;
  double t11414;
  double t11415;
  double t11417;
  double t11418;
  double t11419;
  double t11421;
  double t11422;
  double t11423;
  double t11425;
  double t11426;
  double t11427;
  double t11429;
  double t11430;
  double t11431;
  double t11433;
  double t11434;
  double t11435;
  double t11447;
  double t11448;
  double t11449;
  double t11451;
  double t11452;
  double t11453;
  double t11455;
  double t11456;
  double t11457;
  double t11459;
  double t11460;
  double t11461;
  double t11463;
  double t11464;
  double t11465;
  double t11467;
  double t11468;
  double t11469;
  double t11471;
  double t11472;
  double t11473;
  double t11475;
  double t11476;
  double t11477;
  double t11479;
  double t11480;
  double t11481;
  double t11500;
  double t11501;
  double t11503;
  double t11504;
  double t11505;
  double t11507;
  double t11508;
  double t11510;
  double t11511;
  double t11512;
  double t11514;
  double t11515;
  double t11516;
  double t11492;
  double t11493;
  double t11494;
  double t11496;
  double t11497;
  double t11527;
  double t11528;
  double t11529;
  double t11532;
  double t11533;
  double t11535;
  double t11536;
  double t11538;
  double t11539;
  double t11540;
  double t11542;
  double t11543;
  double t11544;
  double t11546;
  double t11547;
  double t11548;
  double t11550;
  double t11551;
  double t11552;
  double t11563;
  double t11564;
  double t11565;
  double t11568;
  double t11569;
  double t11571;
  double t11572;
  double t11574;
  double t11575;
  double t11576;
  double t11578;
  double t11579;
  double t11580;
  double t11582;
  double t11583;
  double t11584;
  double t11586;
  double t11587;
  double t11588;
  double t11606;
  double t11607;
  double t11610;
  double t11611;
  double t11613;
  double t11614;
  double t11615;
  double t11599;
  double t11600;
  double t11602;
  double t11603;
  double t11604;
  double t11627;
  double t11628;
  double t11629;
  double t11631;
  double t11632;
  double t11634;
  double t11635;
  double t11637;
  double t11638;
  double t11639;
  double t11641;
  double t11642;
  double t11643;
  double t11655;
  double t11656;
  double t11657;
  double t11659;
  double t11660;
  double t11662;
  double t11663;
  double t11665;
  double t11666;
  double t11667;
  double t11669;
  double t11670;
  double t11671;
  double t11690;
  double t11691;
  double t8922;
  double t11682;
  double t11683;
  double t11684;
  double t11686;
  double t11687;
  double t11701;
  double t11702;
  double t11703;
  double t11706;
  double t11707;
  double t11709;
  double t11710;
  double t11721;
  double t11722;
  double t11723;
  double t11726;
  double t11727;
  double t11729;
  double t11730;
  double t11693;
  double t8931;
  double t8938;
  double t11741;
  double t11742;
  double t11744;
  double t11745;
  double t11746;
  double t11712;
  double t11754;
  double t11755;
  double t11756;
  double t11716;
  double t11732;
  double t11766;
  double t11767;
  double t11768;
  double t11736;
  t1880 = Sin(var1[3]);
  t2753 = Cos(var1[3]);
  t2375 = Cos(var1[5]);
  t2601 = Sin(var1[4]);
  t2972 = Sin(var1[5]);
  t1062 = Cos(var1[14]);
  t1417 = -1.*t1062;
  t1557 = 1. + t1417;
  t1702 = Sin(var1[14]);
  t2084 = Sin(var1[13]);
  t2606 = -1.*t2375*t1880*t2601;
  t2974 = t2753*t2972;
  t3068 = t2606 + t2974;
  t3613 = Cos(var1[13]);
  t4269 = -1.*t2753*t2375;
  t4552 = -1.*t1880*t2601*t2972;
  t4696 = t4269 + t4552;
  t991 = Cos(var1[4]);
  t5199 = t2084*t3068;
  t5209 = t3613*t4696;
  t5236 = t5199 + t5209;
  t5308 = Cos(var1[15]);
  t5446 = -1.*t5308;
  t5491 = 1. + t5446;
  t5915 = Sin(var1[15]);
  t6361 = t3613*t3068;
  t6412 = -1.*t2084*t4696;
  t6573 = t6361 + t6412;
  t6862 = -1.*t1062*t991*t1880;
  t6912 = t1702*t5236;
  t6916 = t6862 + t6912;
  t6953 = Cos(var1[16]);
  t7014 = -1.*t6953;
  t7026 = 1. + t7014;
  t7107 = Sin(var1[16]);
  t7147 = t5915*t6573;
  t7158 = t5308*t6916;
  t7189 = t7147 + t7158;
  t7249 = t5308*t6573;
  t7253 = -1.*t5915*t6916;
  t7292 = t7249 + t7253;
  t7386 = Cos(var1[17]);
  t7388 = -1.*t7386;
  t7398 = 1. + t7388;
  t7408 = Sin(var1[17]);
  t7415 = -1.*t7107*t7189;
  t7417 = t6953*t7292;
  t7421 = t7415 + t7417;
  t7628 = t6953*t7189;
  t7631 = t7107*t7292;
  t7632 = t7628 + t7631;
  t7661 = Cos(var1[18]);
  t7669 = -1.*t7661;
  t7689 = 1. + t7669;
  t7691 = Sin(var1[18]);
  t7719 = t7408*t7421;
  t7723 = t7386*t7632;
  t7737 = t7719 + t7723;
  t7798 = t7386*t7421;
  t7831 = -1.*t7408*t7632;
  t7833 = t7798 + t7831;
  t7874 = Cos(var1[19]);
  t7912 = -1.*t7874;
  t7930 = 1. + t7912;
  t7942 = Sin(var1[19]);
  t7957 = -1.*t7691*t7737;
  t7965 = t7661*t7833;
  t7975 = t7957 + t7965;
  t8044 = t7661*t7737;
  t8052 = t7691*t7833;
  t8063 = t8044 + t8052;
  t1592 = -0.049*t1557;
  t1742 = -0.135*t1702;
  t1801 = 0. + t1592 + t1742;
  t2133 = 0.135*t2084;
  t2364 = 0. + t2133;
  t3836 = -1.*t3613;
  t3846 = 1. + t3836;
  t3920 = -0.135*t3846;
  t4124 = 0. + t3920;
  t5042 = -0.135*t1557;
  t5074 = 0.049*t1702;
  t5146 = 0. + t5042 + t5074;
  t8189 = t2753*t2375*t2601;
  t8190 = t1880*t2972;
  t8196 = t8189 + t8190;
  t8260 = -1.*t2375*t1880;
  t8275 = t2753*t2601*t2972;
  t8299 = t8260 + t8275;
  t5836 = -0.09*t5491;
  t6060 = 0.049*t5915;
  t6081 = 0. + t5836 + t6060;
  t8312 = t2084*t8196;
  t8350 = t3613*t8299;
  t8366 = t8312 + t8350;
  t6809 = -0.049*t5491;
  t6812 = -0.09*t5915;
  t6836 = 0. + t6809 + t6812;
  t7094 = -0.049*t7026;
  t7120 = -0.21*t7107;
  t7131 = 0. + t7094 + t7120;
  t8391 = t3613*t8196;
  t8399 = -1.*t2084*t8299;
  t8423 = t8391 + t8399;
  t8537 = t1062*t2753*t991;
  t8550 = t1702*t8366;
  t8581 = t8537 + t8550;
  t7210 = -0.21*t7026;
  t7231 = 0.049*t7107;
  t7241 = 0. + t7210 + t7231;
  t7399 = -0.2707*t7398;
  t7411 = 0.0016*t7408;
  t7414 = 0. + t7399 + t7411;
  t8606 = t5915*t8423;
  t8661 = t5308*t8581;
  t8683 = t8606 + t8661;
  t8700 = t5308*t8423;
  t8706 = -1.*t5915*t8581;
  t8709 = t8700 + t8706;
  t7556 = -0.0016*t7398;
  t7608 = -0.2707*t7408;
  t7626 = 0. + t7556 + t7608;
  t7690 = 0.0184*t7689;
  t7700 = -0.7055*t7691;
  t7712 = 0. + t7690 + t7700;
  t8737 = -1.*t7107*t8683;
  t8749 = t6953*t8709;
  t8752 = t8737 + t8749;
  t8764 = t6953*t8683;
  t8777 = t7107*t8709;
  t8779 = t8764 + t8777;
  t7761 = -0.7055*t7689;
  t7772 = -0.0184*t7691;
  t7797 = 0. + t7761 + t7772;
  t7941 = -1.1135*t7930;
  t7946 = 0.0216*t7942;
  t7948 = 0. + t7941 + t7946;
  t8786 = t7408*t8752;
  t8787 = t7386*t8779;
  t8789 = t8786 + t8787;
  t8803 = t7386*t8752;
  t8805 = -1.*t7408*t8779;
  t8818 = t8803 + t8805;
  t7988 = -0.0216*t7930;
  t8001 = -1.1135*t7942;
  t8023 = 0. + t7988 + t8001;
  t8823 = -1.*t7691*t8789;
  t8825 = t7661*t8818;
  t8832 = t8823 + t8825;
  t8859 = t7661*t8789;
  t8865 = t7691*t8818;
  t8868 = t8859 + t8865;
  t8964 = t2753*t991*t2375*t2084;
  t8978 = t3613*t2753*t991*t2972;
  t8982 = t8964 + t8978;
  t8995 = t3613*t2753*t991*t2375;
  t9000 = -1.*t2753*t991*t2084*t2972;
  t9014 = t8995 + t9000;
  t9031 = -1.*t1062*t2753*t2601;
  t9032 = t1702*t8982;
  t9035 = t9031 + t9032;
  t9043 = t5915*t9014;
  t9044 = t5308*t9035;
  t9050 = t9043 + t9044;
  t9077 = t5308*t9014;
  t9082 = -1.*t5915*t9035;
  t9084 = t9077 + t9082;
  t9106 = -1.*t7107*t9050;
  t9114 = t6953*t9084;
  t9119 = t9106 + t9114;
  t9140 = t6953*t9050;
  t9177 = t7107*t9084;
  t9178 = t9140 + t9177;
  t9191 = t7408*t9119;
  t9194 = t7386*t9178;
  t9197 = t9191 + t9194;
  t9216 = t7386*t9119;
  t9225 = -1.*t7408*t9178;
  t9226 = t9216 + t9225;
  t9239 = -1.*t7691*t9197;
  t9243 = t7661*t9226;
  t9244 = t9239 + t9243;
  t9250 = t7661*t9197;
  t9262 = t7691*t9226;
  t9293 = t9250 + t9262;
  t9399 = t991*t2375*t2084*t1880;
  t9416 = t3613*t991*t1880*t2972;
  t9417 = t9399 + t9416;
  t9422 = t3613*t991*t2375*t1880;
  t9438 = -1.*t991*t2084*t1880*t2972;
  t9445 = t9422 + t9438;
  t9464 = -1.*t1062*t1880*t2601;
  t9471 = t1702*t9417;
  t9475 = t9464 + t9471;
  t9485 = t5915*t9445;
  t9493 = t5308*t9475;
  t9498 = t9485 + t9493;
  t9503 = t5308*t9445;
  t9507 = -1.*t5915*t9475;
  t9509 = t9503 + t9507;
  t9515 = -1.*t7107*t9498;
  t9519 = t6953*t9509;
  t9520 = t9515 + t9519;
  t9528 = t6953*t9498;
  t9532 = t7107*t9509;
  t9533 = t9528 + t9532;
  t9549 = t7408*t9520;
  t9550 = t7386*t9533;
  t9551 = t9549 + t9550;
  t9570 = t7386*t9520;
  t9571 = -1.*t7408*t9533;
  t9572 = t9570 + t9571;
  t9592 = -1.*t7691*t9551;
  t9600 = t7661*t9572;
  t9611 = t9592 + t9600;
  t9615 = t7661*t9551;
  t9618 = t7691*t9572;
  t9626 = t9615 + t9618;
  t9703 = -1.*t2375*t2084*t2601;
  t9714 = -1.*t3613*t2601*t2972;
  t9717 = t9703 + t9714;
  t9728 = -1.*t3613*t2375*t2601;
  t9732 = t2084*t2601*t2972;
  t9738 = t9728 + t9732;
  t9780 = -1.*t1062*t991;
  t9781 = t1702*t9717;
  t9786 = t9780 + t9781;
  t9790 = t5915*t9738;
  t9793 = t5308*t9786;
  t9794 = t9790 + t9793;
  t9797 = t5308*t9738;
  t9798 = -1.*t5915*t9786;
  t9799 = t9797 + t9798;
  t9802 = -1.*t7107*t9794;
  t9803 = t6953*t9799;
  t9804 = t9802 + t9803;
  t9813 = t6953*t9794;
  t9815 = t7107*t9799;
  t9820 = t9813 + t9815;
  t9852 = t7408*t9804;
  t9853 = t7386*t9820;
  t9881 = t9852 + t9853;
  t9885 = t7386*t9804;
  t9890 = -1.*t7408*t9820;
  t9891 = t9885 + t9890;
  t9901 = -1.*t7691*t9881;
  t9903 = t7661*t9891;
  t9908 = t9901 + t9903;
  t9916 = t7661*t9881;
  t9917 = t7691*t9891;
  t9918 = t9916 + t9917;
  t9977 = t2375*t1880;
  t9980 = -1.*t2753*t2601*t2972;
  t9983 = t9977 + t9980;
  t10012 = t2084*t9983;
  t10015 = t8391 + t10012;
  t9993 = -1.*t2084*t8196;
  t9995 = t3613*t9983;
  t10000 = t9993 + t9995;
  t10031 = t5915*t10000;
  t10045 = t5308*t1702*t10015;
  t10051 = t10031 + t10045;
  t10066 = t5308*t10000;
  t10067 = -1.*t1702*t5915*t10015;
  t10068 = t10066 + t10067;
  t10089 = -1.*t7107*t10051;
  t10090 = t6953*t10068;
  t10093 = t10089 + t10090;
  t10108 = t6953*t10051;
  t10117 = t7107*t10068;
  t10121 = t10108 + t10117;
  t10126 = t7408*t10093;
  t10131 = t7386*t10121;
  t10139 = t10126 + t10131;
  t10144 = t7386*t10093;
  t10145 = -1.*t7408*t10121;
  t10152 = t10144 + t10145;
  t10158 = -1.*t7691*t10139;
  t10160 = t7661*t10152;
  t10162 = t10158 + t10160;
  t10195 = t7661*t10139;
  t10198 = t7691*t10152;
  t10203 = t10195 + t10198;
  t10278 = t2375*t1880*t2601;
  t10281 = -1.*t2753*t2972;
  t10286 = t10278 + t10281;
  t10312 = t3613*t10286;
  t10323 = t2084*t4696;
  t10328 = t10312 + t10323;
  t10296 = -1.*t2084*t10286;
  t10304 = t10296 + t5209;
  t10361 = t5915*t10304;
  t10374 = t5308*t1702*t10328;
  t10383 = t10361 + t10374;
  t10396 = t5308*t10304;
  t10399 = -1.*t1702*t5915*t10328;
  t10410 = t10396 + t10399;
  t10420 = -1.*t7107*t10383;
  t10421 = t6953*t10410;
  t10436 = t10420 + t10421;
  t10450 = t6953*t10383;
  t10456 = t7107*t10410;
  t10460 = t10450 + t10456;
  t10469 = t7408*t10436;
  t10492 = t7386*t10460;
  t10496 = t10469 + t10492;
  t10505 = t7386*t10436;
  t10511 = -1.*t7408*t10460;
  t10523 = t10505 + t10511;
  t10538 = -1.*t7691*t10496;
  t10546 = t7661*t10523;
  t10551 = t10538 + t10546;
  t10562 = t7661*t10496;
  t10566 = t7691*t10523;
  t10567 = t10562 + t10566;
  t10677 = t3613*t991*t2375;
  t10682 = -1.*t991*t2084*t2972;
  t10685 = t10677 + t10682;
  t10656 = -1.*t991*t2375*t2084;
  t10665 = -1.*t3613*t991*t2972;
  t10668 = t10656 + t10665;
  t10732 = t5915*t10668;
  t10734 = t5308*t1702*t10685;
  t10740 = t10732 + t10734;
  t10756 = t5308*t10668;
  t10757 = -1.*t1702*t5915*t10685;
  t10770 = t10756 + t10757;
  t10775 = -1.*t7107*t10740;
  t10779 = t6953*t10770;
  t10780 = t10775 + t10779;
  t10790 = t6953*t10740;
  t10800 = t7107*t10770;
  t10809 = t10790 + t10800;
  t10818 = t7408*t10780;
  t10820 = t7386*t10809;
  t10826 = t10818 + t10820;
  t10843 = t7386*t10780;
  t10844 = -1.*t7408*t10809;
  t10849 = t10843 + t10844;
  t10856 = -1.*t7691*t10826;
  t10868 = t7661*t10849;
  t10881 = t10856 + t10868;
  t10885 = t7661*t10826;
  t10888 = t7691*t10849;
  t10889 = t10885 + t10888;
  t10936 = -1.*t3613*t8299;
  t10941 = t9993 + t10936;
  t10954 = t5915*t10941;
  t10956 = t5308*t1702*t8423;
  t10957 = t10954 + t10956;
  t10960 = t5308*t10941;
  t10961 = -1.*t1702*t5915*t8423;
  t10964 = t10960 + t10961;
  t10969 = -1.*t7107*t10957;
  t10970 = t6953*t10964;
  t10973 = t10969 + t10970;
  t10977 = t6953*t10957;
  t10981 = t7107*t10964;
  t10982 = t10977 + t10981;
  t10986 = t7408*t10973;
  t10990 = t7386*t10982;
  t10992 = t10986 + t10990;
  t10994 = t7386*t10973;
  t10996 = -1.*t7408*t10982;
  t10998 = t10994 + t10996;
  t11001 = -1.*t7691*t10992;
  t11003 = t7661*t10998;
  t11004 = t11001 + t11003;
  t11010 = t7661*t10992;
  t11013 = t7691*t10998;
  t11017 = t11010 + t11013;
  t11048 = t2753*t2375;
  t11049 = t1880*t2601*t2972;
  t11052 = t11048 + t11049;
  t11063 = -1.*t2084*t11052;
  t11064 = t10312 + t11063;
  t11057 = -1.*t3613*t11052;
  t11059 = t10296 + t11057;
  t11068 = t5915*t11059;
  t11070 = t5308*t1702*t11064;
  t11071 = t11068 + t11070;
  t11077 = t5308*t11059;
  t11080 = -1.*t1702*t5915*t11064;
  t11085 = t11077 + t11080;
  t11090 = -1.*t7107*t11071;
  t11093 = t6953*t11085;
  t11095 = t11090 + t11093;
  t11102 = t6953*t11071;
  t11103 = t7107*t11085;
  t11106 = t11102 + t11103;
  t11111 = t7408*t11095;
  t11113 = t7386*t11106;
  t11114 = t11111 + t11113;
  t11117 = t7386*t11095;
  t11118 = -1.*t7408*t11106;
  t11120 = t11117 + t11118;
  t11123 = -1.*t7691*t11114;
  t11125 = t7661*t11120;
  t11126 = t11123 + t11125;
  t11129 = t7661*t11114;
  t11130 = t7691*t11120;
  t11131 = t11129 + t11130;
  t10671 = t6081*t10668;
  t10707 = -0.1305*t1062*t10685;
  t10717 = t5146*t10685;
  t10718 = t1702*t6836*t10685;
  t10747 = t7131*t10740;
  t10771 = t7241*t10770;
  t10786 = t7414*t10780;
  t10817 = t7626*t10809;
  t10829 = t7712*t10826;
  t10853 = t7797*t10849;
  t10883 = t7948*t10881;
  t10894 = t8023*t10889;
  t10895 = t7942*t10881;
  t10901 = t7874*t10889;
  t10904 = t10895 + t10901;
  t10905 = -0.0216*t10904;
  t10908 = t7874*t10881;
  t10910 = -1.*t7942*t10889;
  t10913 = t10908 + t10910;
  t10921 = -1.1135*t10913;
  t8452 = -1.*t2753*t991*t1702;
  t8525 = t1062*t8366;
  t8526 = t8452 + t8525;
  t11190 = -1.*t6953*t5915*t8526;
  t11192 = -1.*t5308*t7107*t8526;
  t11194 = t11190 + t11192;
  t11203 = t5308*t6953*t8526;
  t11204 = -1.*t5915*t7107*t8526;
  t11207 = t11203 + t11204;
  t11211 = t7408*t11194;
  t11213 = t7386*t11207;
  t11214 = t11211 + t11213;
  t11217 = t7386*t11194;
  t11220 = -1.*t7408*t11207;
  t11224 = t11217 + t11220;
  t11230 = -1.*t7691*t11214;
  t11231 = t7661*t11224;
  t11233 = t11230 + t11231;
  t11235 = t7661*t11214;
  t11239 = t7691*t11224;
  t11240 = t11235 + t11239;
  t11161 = -0.135*t1062;
  t11163 = -0.049*t1702;
  t11165 = t11161 + t11163;
  t11170 = 0.049*t1062;
  t11173 = t11170 + t1742;
  t11257 = t2084*t10286;
  t11258 = t3613*t11052;
  t11259 = t11257 + t11258;
  t11263 = -1.*t991*t1702*t1880;
  t11264 = t1062*t11259;
  t11265 = t11263 + t11264;
  t11274 = -1.*t6953*t5915*t11265;
  t11275 = -1.*t5308*t7107*t11265;
  t11276 = t11274 + t11275;
  t11278 = t5308*t6953*t11265;
  t11280 = -1.*t5915*t7107*t11265;
  t11281 = t11278 + t11280;
  t11283 = t7408*t11276;
  t11284 = t7386*t11281;
  t11285 = t11283 + t11284;
  t11287 = t7386*t11276;
  t11288 = -1.*t7408*t11281;
  t11289 = t11287 + t11288;
  t11291 = -1.*t7691*t11285;
  t11292 = t7661*t11289;
  t11293 = t11291 + t11292;
  t11295 = t7661*t11285;
  t11296 = t7691*t11289;
  t11297 = t11295 + t11296;
  t11309 = t991*t2375*t2084;
  t11310 = t3613*t991*t2972;
  t11311 = t11309 + t11310;
  t11313 = t1702*t2601;
  t11314 = t1062*t11311;
  t11315 = t11313 + t11314;
  t11323 = -1.*t6953*t5915*t11315;
  t11324 = -1.*t5308*t7107*t11315;
  t11325 = t11323 + t11324;
  t11327 = t5308*t6953*t11315;
  t11328 = -1.*t5915*t7107*t11315;
  t11329 = t11327 + t11328;
  t11331 = t7408*t11325;
  t11332 = t7386*t11329;
  t11333 = t11331 + t11332;
  t11335 = t7386*t11325;
  t11336 = -1.*t7408*t11329;
  t11337 = t11335 + t11336;
  t11339 = -1.*t7691*t11333;
  t11340 = t7661*t11337;
  t11341 = t11339 + t11340;
  t11343 = t7661*t11333;
  t11344 = t7691*t11337;
  t11345 = t11343 + t11344;
  t11363 = -1.*t5915*t8423;
  t11364 = -1.*t5308*t8581;
  t11365 = t11363 + t11364;
  t11368 = t7107*t11365;
  t11369 = t11368 + t8749;
  t11371 = t6953*t11365;
  t11372 = -1.*t7107*t8709;
  t11373 = t11371 + t11372;
  t11375 = -1.*t7408*t11369;
  t11376 = t7386*t11373;
  t11377 = t11375 + t11376;
  t11379 = t7386*t11369;
  t11380 = t7408*t11373;
  t11381 = t11379 + t11380;
  t11383 = t7691*t11377;
  t11384 = t7661*t11381;
  t11385 = t11383 + t11384;
  t11387 = t7661*t11377;
  t11388 = -1.*t7691*t11381;
  t11389 = t11387 + t11388;
  t11356 = 0.049*t5308;
  t11357 = t11356 + t6812;
  t11359 = -0.09*t5308;
  t11360 = -0.049*t5915;
  t11361 = t11359 + t11360;
  t11401 = t1062*t991*t1880;
  t11402 = t1702*t11259;
  t11403 = t11401 + t11402;
  t11405 = -1.*t5915*t11064;
  t11406 = -1.*t5308*t11403;
  t11407 = t11405 + t11406;
  t11409 = t5308*t11064;
  t11410 = -1.*t5915*t11403;
  t11411 = t11409 + t11410;
  t11413 = t7107*t11407;
  t11414 = t6953*t11411;
  t11415 = t11413 + t11414;
  t11417 = t6953*t11407;
  t11418 = -1.*t7107*t11411;
  t11419 = t11417 + t11418;
  t11421 = -1.*t7408*t11415;
  t11422 = t7386*t11419;
  t11423 = t11421 + t11422;
  t11425 = t7386*t11415;
  t11426 = t7408*t11419;
  t11427 = t11425 + t11426;
  t11429 = t7691*t11423;
  t11430 = t7661*t11427;
  t11431 = t11429 + t11430;
  t11433 = t7661*t11423;
  t11434 = -1.*t7691*t11427;
  t11435 = t11433 + t11434;
  t11447 = -1.*t1062*t2601;
  t11448 = t1702*t11311;
  t11449 = t11447 + t11448;
  t11451 = -1.*t5915*t10685;
  t11452 = -1.*t5308*t11449;
  t11453 = t11451 + t11452;
  t11455 = t5308*t10685;
  t11456 = -1.*t5915*t11449;
  t11457 = t11455 + t11456;
  t11459 = t7107*t11453;
  t11460 = t6953*t11457;
  t11461 = t11459 + t11460;
  t11463 = t6953*t11453;
  t11464 = -1.*t7107*t11457;
  t11465 = t11463 + t11464;
  t11467 = -1.*t7408*t11461;
  t11468 = t7386*t11465;
  t11469 = t11467 + t11468;
  t11471 = t7386*t11461;
  t11472 = t7408*t11465;
  t11473 = t11471 + t11472;
  t11475 = t7691*t11469;
  t11476 = t7661*t11473;
  t11477 = t11475 + t11476;
  t11479 = t7661*t11469;
  t11480 = -1.*t7691*t11473;
  t11481 = t11479 + t11480;
  t11500 = -1.*t6953*t8683;
  t11501 = t11500 + t11372;
  t11503 = -1.*t7408*t8752;
  t11504 = t7386*t11501;
  t11505 = t11503 + t11504;
  t11507 = t7408*t11501;
  t11508 = t8803 + t11507;
  t11510 = t7691*t11505;
  t11511 = t7661*t11508;
  t11512 = t11510 + t11511;
  t11514 = t7661*t11505;
  t11515 = -1.*t7691*t11508;
  t11516 = t11514 + t11515;
  t11492 = -0.21*t6953;
  t11493 = -0.049*t7107;
  t11494 = t11492 + t11493;
  t11496 = 0.049*t6953;
  t11497 = t11496 + t7120;
  t11527 = t5915*t11064;
  t11528 = t5308*t11403;
  t11529 = t11527 + t11528;
  t11532 = -1.*t7107*t11529;
  t11533 = t11532 + t11414;
  t11535 = -1.*t6953*t11529;
  t11536 = t11535 + t11418;
  t11538 = -1.*t7408*t11533;
  t11539 = t7386*t11536;
  t11540 = t11538 + t11539;
  t11542 = t7386*t11533;
  t11543 = t7408*t11536;
  t11544 = t11542 + t11543;
  t11546 = t7691*t11540;
  t11547 = t7661*t11544;
  t11548 = t11546 + t11547;
  t11550 = t7661*t11540;
  t11551 = -1.*t7691*t11544;
  t11552 = t11550 + t11551;
  t11563 = t5915*t10685;
  t11564 = t5308*t11449;
  t11565 = t11563 + t11564;
  t11568 = -1.*t7107*t11565;
  t11569 = t11568 + t11460;
  t11571 = -1.*t6953*t11565;
  t11572 = t11571 + t11464;
  t11574 = -1.*t7408*t11569;
  t11575 = t7386*t11572;
  t11576 = t11574 + t11575;
  t11578 = t7386*t11569;
  t11579 = t7408*t11572;
  t11580 = t11578 + t11579;
  t11582 = t7691*t11576;
  t11583 = t7661*t11580;
  t11584 = t11582 + t11583;
  t11586 = t7661*t11576;
  t11587 = -1.*t7691*t11580;
  t11588 = t11586 + t11587;
  t11606 = -1.*t7386*t8779;
  t11607 = t11503 + t11606;
  t11610 = t7691*t11607;
  t11611 = t11610 + t8825;
  t11613 = t7661*t11607;
  t11614 = -1.*t7691*t8818;
  t11615 = t11613 + t11614;
  t11599 = 0.0016*t7386;
  t11600 = t11599 + t7608;
  t11602 = -0.2707*t7386;
  t11603 = -0.0016*t7408;
  t11604 = t11602 + t11603;
  t11627 = t6953*t11529;
  t11628 = t7107*t11411;
  t11629 = t11627 + t11628;
  t11631 = -1.*t7386*t11629;
  t11632 = t11538 + t11631;
  t11634 = -1.*t7408*t11629;
  t11635 = t11542 + t11634;
  t11637 = t7691*t11632;
  t11638 = t7661*t11635;
  t11639 = t11637 + t11638;
  t11641 = t7661*t11632;
  t11642 = -1.*t7691*t11635;
  t11643 = t11641 + t11642;
  t11655 = t6953*t11565;
  t11656 = t7107*t11457;
  t11657 = t11655 + t11656;
  t11659 = -1.*t7386*t11657;
  t11660 = t11574 + t11659;
  t11662 = -1.*t7408*t11657;
  t11663 = t11578 + t11662;
  t11665 = t7691*t11660;
  t11666 = t7661*t11663;
  t11667 = t11665 + t11666;
  t11669 = t7661*t11660;
  t11670 = -1.*t7691*t11663;
  t11671 = t11669 + t11670;
  t11690 = -1.*t7661*t8789;
  t11691 = t11690 + t11614;
  t8922 = t7874*t8832;
  t11682 = -0.7055*t7661;
  t11683 = 0.0184*t7691;
  t11684 = t11682 + t11683;
  t11686 = -0.0184*t7661;
  t11687 = t11686 + t7700;
  t11701 = t7408*t11533;
  t11702 = t7386*t11629;
  t11703 = t11701 + t11702;
  t11706 = -1.*t7691*t11703;
  t11707 = t11706 + t11638;
  t11709 = -1.*t7661*t11703;
  t11710 = t11709 + t11642;
  t11721 = t7408*t11569;
  t11722 = t7386*t11657;
  t11723 = t11721 + t11722;
  t11726 = -1.*t7691*t11723;
  t11727 = t11726 + t11666;
  t11729 = -1.*t7661*t11723;
  t11730 = t11729 + t11670;
  t11693 = -1.*t7942*t8832;
  t8931 = -1.*t7942*t8868;
  t8938 = t8922 + t8931;
  t11741 = 0.0216*t7874;
  t11742 = t11741 + t8001;
  t11744 = -1.1135*t7874;
  t11745 = -0.0216*t7942;
  t11746 = t11744 + t11745;
  t11712 = -1.*t7942*t11707;
  t11754 = t7661*t11703;
  t11755 = t7691*t11635;
  t11756 = t11754 + t11755;
  t11716 = t7874*t11707;
  t11732 = -1.*t7942*t11727;
  t11766 = t7661*t11723;
  t11767 = t7691*t11663;
  t11768 = t11766 + t11767;
  t11736 = t7874*t11727;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t2364*t3068 + t4124*t4696 + t5146*t5236 + t6081*t6573 + t6836*t6916 + t7131*t7189 + t7241*t7292 + t7414*t7421 + t7626*t7632 + t7712*t7737 + t7797*t7833 + t7948*t7975 + t8023*t8063 - 0.0216*(t7942*t7975 + t7874*t8063) - 1.1135*(t7874*t7975 - 1.*t7942*t8063) - 1.*t1801*t1880*t991 - 0.1305*(t1062*t5236 + t1702*t1880*t991);
  p_output1[10]=t2364*t8196 + t4124*t8299 + t5146*t8366 + t6081*t8423 - 0.1305*t8526 + t6836*t8581 + t7131*t8683 + t7241*t8709 + t7414*t8752 + t7626*t8779 + t7712*t8789 + t7797*t8818 + t7948*t8832 + t8023*t8868 - 0.0216*(t7942*t8832 + t7874*t8868) - 1.1135*t8938 + t1801*t2753*t991;
  p_output1[11]=0;
  p_output1[12]=-1.*t1801*t2601*t2753 + t5146*t8982 - 0.1305*(t1702*t2601*t2753 + t1062*t8982) + t6081*t9014 + t6836*t9035 + t7131*t9050 + t7241*t9084 + t7414*t9119 + t7626*t9178 + t7712*t9197 + t7797*t9226 + t7948*t9244 + t8023*t9293 - 0.0216*(t7942*t9244 + t7874*t9293) - 1.1135*(t7874*t9244 - 1.*t7942*t9293) + t2364*t2375*t2753*t991 + t2753*t2972*t4124*t991;
  p_output1[13]=-1.*t1801*t1880*t2601 + t5146*t9417 - 0.1305*(t1702*t1880*t2601 + t1062*t9417) + t6081*t9445 + t6836*t9475 + t7131*t9498 + t7241*t9509 + t7414*t9520 + t7626*t9533 + t7712*t9551 + t7797*t9572 + t7948*t9611 + t8023*t9626 - 0.0216*(t7942*t9611 + t7874*t9626) - 1.1135*(t7874*t9611 - 1.*t7942*t9626) + t1880*t2364*t2375*t991 + t1880*t2972*t4124*t991;
  p_output1[14]=-1.*t2364*t2375*t2601 - 1.*t2601*t2972*t4124 + t5146*t9717 + t6081*t9738 + t6836*t9786 + t7131*t9794 + t7241*t9799 + t7414*t9804 + t7626*t9820 + t7712*t9881 + t7797*t9891 + t7948*t9908 - 1.*t1801*t991 - 0.1305*(t1062*t9717 + t1702*t991) + t8023*t9918 - 0.0216*(t7942*t9908 + t7874*t9918) - 1.1135*(t7874*t9908 - 1.*t7942*t9918);
  p_output1[15]=-0.1305*t10015*t1062 + t10015*t5146 + t10000*t6081 + t10015*t1702*t6836 + t10051*t7131 + t10068*t7241 + t10093*t7414 + t10121*t7626 + t10139*t7712 + t10152*t7797 - 0.0216*(t10203*t7874 + t10162*t7942) - 1.1135*(t10162*t7874 - 1.*t10203*t7942) + t10162*t7948 + t10203*t8023 + t4124*t8196 + t2364*t9983;
  p_output1[16]=-0.1305*t10328*t1062 + t10286*t4124 + t2364*t4696 + t10328*t5146 + t10304*t6081 + t10328*t1702*t6836 + t10383*t7131 + t10410*t7241 + t10436*t7414 + t10460*t7626 + t10496*t7712 + t10523*t7797 - 0.0216*(t10567*t7874 + t10551*t7942) - 1.1135*(t10551*t7874 - 1.*t10567*t7942) + t10551*t7948 + t10567*t8023;
  p_output1[17]=t10671 + t10707 + t10717 + t10718 + t10747 + t10771 + t10786 + t10817 + t10829 + t10853 + t10883 + t10894 + t10905 + t10921 - 1.*t2364*t2972*t991 + t2375*t4124*t991;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=t10941*t6081 + t10957*t7131 + t10964*t7241 + t10973*t7414 + t10982*t7626 + t10992*t7712 + t10998*t7797 - 0.0216*(t11017*t7874 + t11004*t7942) - 1.1135*(t11004*t7874 - 1.*t11017*t7942) + t11004*t7948 + t11017*t8023 + 0.135*t3613*t8196 - 0.135*t2084*t8299 - 0.1305*t1062*t8423 + t5146*t8423 + t1702*t6836*t8423;
  p_output1[40]=-0.1305*t1062*t11064 - 0.135*t11052*t2084 + 0.135*t10286*t3613 + t11064*t5146 + t11059*t6081 + t11064*t1702*t6836 + t11071*t7131 + t11085*t7241 + t11095*t7414 + t11106*t7626 + t11114*t7712 + t11120*t7797 - 0.0216*(t11131*t7874 + t11126*t7942) - 1.1135*(t11126*t7874 - 1.*t11131*t7942) + t11126*t7948 + t11131*t8023;
  p_output1[41]=t10671 + t10707 + t10717 + t10718 + t10747 + t10771 + t10786 + t10817 + t10829 + t10853 + t10883 + t10894 + t10905 + t10921 - 0.135*t2084*t2972*t991 + 0.135*t2375*t3613*t991;
  p_output1[42]=t11194*t7414 + t11207*t7626 + t11214*t7712 + t11224*t7797 - 0.0216*(t11240*t7874 + t11233*t7942) - 1.1135*(t11233*t7874 - 1.*t11240*t7942) + t11233*t7948 + t11240*t8023 + t11173*t8366 + t6836*t8526 + t5308*t7131*t8526 - 1.*t5915*t7241*t8526 + t11165*t2753*t991 - 0.1305*(-1.*t1702*t8366 - 1.*t1062*t2753*t991);
  p_output1[43]=t11173*t11259 + t11265*t6836 - 0.1305*(-1.*t11259*t1702 + t6862) + t11265*t5308*t7131 - 1.*t11265*t5915*t7241 + t11276*t7414 + t11281*t7626 + t11285*t7712 + t11289*t7797 - 0.0216*(t11297*t7874 + t11293*t7942) - 1.1135*(t11293*t7874 - 1.*t11297*t7942) + t11293*t7948 + t11297*t8023 + t11165*t1880*t991;
  p_output1[44]=t11173*t11311 - 1.*t11165*t2601 - 0.1305*(-1.*t11311*t1702 + t1062*t2601) + t11315*t6836 + t11315*t5308*t7131 - 1.*t11315*t5915*t7241 + t11325*t7414 + t11329*t7626 + t11333*t7712 + t11337*t7797 - 0.0216*(t11345*t7874 + t11341*t7942) - 1.1135*(t11341*t7874 - 1.*t11345*t7942) + t11341*t7948 + t11345*t8023;
  p_output1[45]=t11365*t7241 + t11373*t7414 + t11369*t7626 + t11381*t7712 + t11377*t7797 - 1.1135*(t11389*t7874 - 1.*t11385*t7942) - 0.0216*(t11385*t7874 + t11389*t7942) + t11389*t7948 + t11385*t8023 + t11357*t8423 + t11361*t8581 + t7131*t8709;
  p_output1[46]=t11064*t11357 + t11361*t11403 + t11411*t7131 + t11407*t7241 + t11419*t7414 + t11415*t7626 + t11427*t7712 + t11423*t7797 - 1.1135*(t11435*t7874 - 1.*t11431*t7942) - 0.0216*(t11431*t7874 + t11435*t7942) + t11435*t7948 + t11431*t8023;
  p_output1[47]=t10685*t11357 + t11361*t11449 + t11457*t7131 + t11453*t7241 + t11465*t7414 + t11461*t7626 + t11473*t7712 + t11469*t7797 - 1.1135*(t11481*t7874 - 1.*t11477*t7942) - 0.0216*(t11477*t7874 + t11481*t7942) + t11481*t7948 + t11477*t8023;
  p_output1[48]=t11501*t7414 + t11508*t7712 + t11505*t7797 - 1.1135*(t11516*t7874 - 1.*t11512*t7942) - 0.0216*(t11512*t7874 + t11516*t7942) + t11516*t7948 + t11512*t8023 + t11494*t8683 + t11497*t8709 + t7626*t8752;
  p_output1[49]=t11411*t11497 + t11494*t11529 + t11536*t7414 + t11533*t7626 + t11544*t7712 + t11540*t7797 - 1.1135*(t11552*t7874 - 1.*t11548*t7942) - 0.0216*(t11548*t7874 + t11552*t7942) + t11552*t7948 + t11548*t8023;
  p_output1[50]=t11457*t11497 + t11494*t11565 + t11572*t7414 + t11569*t7626 + t11580*t7712 + t11576*t7797 - 1.1135*(t11588*t7874 - 1.*t11584*t7942) - 0.0216*(t11584*t7874 + t11588*t7942) + t11588*t7948 + t11584*t8023;
  p_output1[51]=t11607*t7797 - 1.1135*(t11615*t7874 - 1.*t11611*t7942) - 0.0216*(t11611*t7874 + t11615*t7942) + t11615*t7948 + t11611*t8023 + t11600*t8752 + t11604*t8779 + t7712*t8818;
  p_output1[52]=t11533*t11600 + t11604*t11629 + t11635*t7712 + t11632*t7797 - 1.1135*(t11643*t7874 - 1.*t11639*t7942) - 0.0216*(t11639*t7874 + t11643*t7942) + t11643*t7948 + t11639*t8023;
  p_output1[53]=t11569*t11600 + t11604*t11657 + t11663*t7712 + t11660*t7797 - 1.1135*(t11671*t7874 - 1.*t11667*t7942) - 0.0216*(t11667*t7874 + t11671*t7942) + t11671*t7948 + t11667*t8023;
  p_output1[54]=-1.1135*(t11693 + t11691*t7874) + t11691*t7948 + t11684*t8789 + t11687*t8818 + t8023*t8832 - 0.0216*(t11691*t7942 + t8922);
  p_output1[55]=t11635*t11687 + t11684*t11703 - 1.1135*(t11712 + t11710*t7874) - 0.0216*(t11716 + t11710*t7942) + t11710*t7948 + t11707*t8023;
  p_output1[56]=t11663*t11687 + t11684*t11723 - 1.1135*(t11732 + t11730*t7874) - 0.0216*(t11736 + t11730*t7942) + t11730*t7948 + t11727*t8023;
  p_output1[57]=t11742*t8832 + t11746*t8868 - 1.1135*(t11693 - 1.*t7874*t8868) - 0.0216*t8938;
  p_output1[58]=t11707*t11742 + t11746*t11756 - 1.1135*(t11712 - 1.*t11756*t7874) - 0.0216*(t11716 - 1.*t11756*t7942);
  p_output1[59]=t11727*t11742 + t11746*t11768 - 1.1135*(t11732 - 1.*t11768*t7874) - 0.0216*(t11736 - 1.*t11768*t7942);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "J_toe_joint_right_mex.hh"

namespace SymExpression
{

void J_toe_joint_right_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
