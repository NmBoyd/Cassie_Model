/*
 * Automatically Generated from Mathematica.
 * Tue 17 Oct 2017 12:33:05 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t78598;
  double t78411;
  double t78569;
  double t78599;
  double t78603;
  double t78597;
  double t78600;
  double t78601;
  double t78243;
  double t78631;
  double t78785;
  double t78942;
  double t78954;
  double t78602;
  double t78943;
  double t78944;
  double t78096;
  double t78964;
  double t78974;
  double t78984;
  double t79035;
  double t78948;
  double t78999;
  double t79011;
  double t77972;
  double t79045;
  double t79046;
  double t79047;
  double t79051;
  double t79023;
  double t79048;
  double t79049;
  double t77888;
  double t79052;
  double t79064;
  double t79076;
  double t79077;
  double t79098;
  double t79050;
  double t79078;
  double t79082;
  double t77788;
  double t79108;
  double t79118;
  double t79130;
  double t77338;
  double t79167;
  double t79168;
  double t79169;
  double t79088;
  double t79142;
  double t79154;
  double t79170;
  double t76900;
  double t79260;
  double t79264;
  double t79268;
  double t79272;
  double t79276;
  double t79302;
  double t79332;
  double t79333;
  double t79301;
  double t79353;
  double t79354;
  double t79374;
  double t79375;
  double t79376;
  double t79373;
  double t79377;
  double t79378;
  double t79380;
  double t79381;
  double t79382;
  double t79379;
  double t79383;
  double t79384;
  double t79386;
  double t79387;
  double t79406;
  double t79174;
  double t79186;
  double t79198;
  double t79200;
  double t79410;
  double t79411;
  double t79412;
  double t79385;
  double t79407;
  double t79408;
  double t79432;
  double t79440;
  double t79166;
  double t79171;
  double t79172;
  double t79173;
  double t79199;
  double t79205;
  double t79213;
  double t79223;
  double t79233;
  double t79243;
  double t79247;
  double t79251;
  double t79487;
  double t79491;
  double t79495;
  double t79499;
  double t79450;
  double t79460;
  double t79470;
  double t79474;
  double t79409;
  double t79413;
  double t79414;
  double t79415;
  double t79416;
  double t79417;
  double t79418;
  double t79419;
  double t79420;
  double t79421;
  double t79422;
  double t79423;
  double t79427;
  double t79577;
  double t79578;
  double t79579;
  double t79478;
  double t79483;
  double t79503;
  double t79573;
  double t79574;
  double t79588;
  double t79589;
  double t79590;
  double t79587;
  double t79591;
  double t79592;
  double t79594;
  double t79595;
  double t79593;
  double t79596;
  double t79597;
  double t79599;
  double t79600;
  double t79601;
  double t79598;
  double t79602;
  double t79603;
  double t79605;
  double t79610;
  double t79618;
  double t79604;
  double t79628;
  double t79638;
  double t79694;
  double t79695;
  double t79720;
  double t79737;
  double t79738;
  double t79739;
  double t79648;
  double t79734;
  double t79735;
  double t79801;
  double t79811;
  double t79844;
  double t79845;
  double t79846;
  double t79847;
  double t79848;
  double t79824;
  double t79825;
  double t79839;
  double t79840;
  double t79841;
  double t79791;
  double t79913;
  double t79914;
  double t79915;
  double t79843;
  double t79867;
  double t79877;
  double t79887;
  double t79736;
  double t79740;
  double t79741;
  double t79742;
  double t79743;
  double t79744;
  double t79745;
  double t79756;
  double t79757;
  double t79768;
  double t79769;
  double t79770;
  double t79981;
  double t79982;
  double t79983;
  double t79987;
  double t79990;
  double t79991;
  double t79929;
  double t79930;
  double t79935;
  double t79943;
  double t79953;
  double t79963;
  double t79973;
  double t79927;
  double t80031;
  double t80032;
  double t80033;
  double t79928;
  double t80027;
  double t80028;
  double t80029;
  double t80047;
  double t80048;
  double t80055;
  double t80056;
  double t80057;
  double t80061;
  double t80067;
  double t80049;
  double t80050;
  double t80051;
  double t80052;
  double t80053;
  double t80045;
  double t80103;
  double t80104;
  double t80108;
  double t80046;
  double t80099;
  double t80100;
  double t80101;
  double t80134;
  double t80135;
  double t80142;
  double t80146;
  double t80152;
  double t80153;
  double t80154;
  double t80136;
  double t80137;
  double t80138;
  double t80139;
  double t80140;
  double t80160;
  double t80161;
  double t80162;
  double t80156;
  double t80157;
  double t80158;
  double t80185;
  double t80186;
  double t80187;
  double t80181;
  double t80182;
  double t80183;
  double t80200;
  double t80141;
  double t80217;
  double t80218;
  double t80163;
  double t80219;
  double t80220;
  double t80221;
  double t80222;
  double t80224;
  double t80225;
  double t80226;
  double t80227;
  double t80228;
  double t80167;
  double t80176;
  double t80171;
  double t80172;
  double t80230;
  double t80232;
  double t80184;
  double t80188;
  double t80189;
  double t80190;
  double t80191;
  double t80192;
  double t80193;
  double t80194;
  double t80195;
  double t80196;
  double t80197;
  double t80198;
  double t80244;
  double t80245;
  double t80253;
  double t80254;
  double t80255;
  double t80236;
  double t80237;
  double t80264;
  double t80265;
  double t80266;
  double t80252;
  double t80223;
  double t80231;
  double t80302;
  double t80303;
  double t80304;
  double t80305;
  double t80295;
  double t80296;
  double t80297;
  double t80298;
  double t80299;
  double t80300;
  double t80246;
  double t80311;
  double t80312;
  double t80313;
  double t80307;
  double t80308;
  double t80309;
  double t80240;
  double t80258;
  double t80321;
  double t80322;
  double t80333;
  double t80334;
  double t80335;
  double t80276;
  double t80317;
  double t80318;
  double t80344;
  double t80345;
  double t80346;
  double t80337;
  double t80284;
  double t80286;
  double t80387;
  double t80388;
  double t80389;
  double t80390;
  double t80391;
  double t80392;
  double t80382;
  double t80383;
  double t80384;
  double t80385;
  double t80398;
  double t80399;
  double t80400;
  double t80394;
  double t80395;
  double t80396;
  double t80408;
  double t80409;
  double t80420;
  double t80421;
  double t80422;
  double t80356;
  double t80404;
  double t80405;
  double t80430;
  double t80431;
  double t80432;
  double t80369;
  double t80464;
  double t80465;
  double t80466;
  double t80487;
  double t80488;
  double t80489;
  double t80498;
  double t80499;
  double t80500;
  double t80502;
  double t80503;
  double t80504;
  double t80501;
  double t80505;
  double t80506;
  double t80514;
  double t80515;
  double t80516;
  double t80518;
  double t80519;
  double t80520;
  double t80541;
  double t80542;
  double t80508;
  double t80509;
  double t80537;
  double t80538;
  double t80539;
  double t80521;
  double t80468;
  double t80469;
  double t80470;
  double t80576;
  double t80577;
  double t80578;
  double t80525;
  double t80528;
  double t80589;
  double t80590;
  double t80591;
  double t80593;
  double t80594;
  double t80595;
  double t80579;
  double t80580;
  double t80581;
  double t80583;
  double t80584;
  double t80585;
  double t80592;
  double t80596;
  double t80597;
  double t80472;
  double t80473;
  double t80474;
  double t80534;
  double t80543;
  double t80549;
  double t80552;
  double t80622;
  double t80623;
  double t80557;
  double t80608;
  double t80609;
  double t80561;
  double t80618;
  double t80619;
  double t80620;
  double t80568;
  double t80483;
  double t80484;
  double t80485;
  double t79516;
  double t79541;
  double t79542;
  double t79555;
  double t79556;
  double t79569;
  double t79571;
  double t79572;
  double t79575;
  double t79576;
  double t79580;
  double t79581;
  double t79582;
  double t79584;
  double t79585;
  double t79586;
  double t80492;
  double t80493;
  double t80494;
  double t79842;
  double t79849;
  double t79850;
  double t79852;
  double t79853;
  double t79854;
  double t79855;
  double t79856;
  double t79861;
  double t79897;
  double t79910;
  double t79911;
  double t79912;
  double t79916;
  double t79917;
  double t79919;
  double t79920;
  double t79921;
  double t79922;
  double t79923;
  double t79977;
  double t79995;
  double t79999;
  double t80004;
  double t80007;
  double t80008;
  double t80009;
  double t80010;
  double t80023;
  double t80024;
  double t80025;
  double t80026;
  double t80030;
  double t80034;
  double t80035;
  double t80037;
  double t80038;
  double t80039;
  double t80040;
  double t80041;
  double t80054;
  double t80077;
  double t80087;
  double t80089;
  double t80090;
  double t80091;
  double t80092;
  double t80093;
  double t80095;
  double t80096;
  double t80097;
  double t80098;
  double t80102;
  double t80114;
  double t80124;
  double t80126;
  double t80127;
  double t80128;
  double t80129;
  double t80130;
  double t80155;
  double t80159;
  double t80164;
  double t80165;
  double t80166;
  double t80168;
  double t80169;
  double t80170;
  double t80173;
  double t80174;
  double t80175;
  double t80177;
  double t80178;
  double t80179;
  double t80180;
  double t80201;
  double t80202;
  double t80204;
  double t80205;
  double t80206;
  double t80208;
  double t80209;
  double t80210;
  double t80212;
  double t80213;
  double t80229;
  double t80233;
  double t80234;
  double t80235;
  double t80238;
  double t80239;
  double t80241;
  double t80242;
  double t80243;
  double t80247;
  double t80248;
  double t80249;
  double t80250;
  double t80687;
  double t80688;
  double t80689;
  double t80256;
  double t80257;
  double t80259;
  double t80260;
  double t80261;
  double t80262;
  double t80267;
  double t80268;
  double t80269;
  double t80270;
  double t80271;
  double t80273;
  double t80274;
  double t80275;
  double t80277;
  double t80278;
  double t80279;
  double t80280;
  double t80282;
  double t80283;
  double t80285;
  double t80287;
  double t80288;
  double t80289;
  double t80290;
  double t80291;
  double t80301;
  double t80306;
  double t80310;
  double t80314;
  double t80315;
  double t80316;
  double t80319;
  double t80320;
  double t80323;
  double t80324;
  double t80325;
  double t80326;
  double t80327;
  double t80328;
  double t80329;
  double t80330;
  double t80331;
  double t80336;
  double t80338;
  double t80339;
  double t80340;
  double t80341;
  double t80342;
  double t80347;
  double t80348;
  double t80349;
  double t80350;
  double t80351;
  double t80353;
  double t80354;
  double t80355;
  double t80357;
  double t80358;
  double t80359;
  double t80360;
  double t80361;
  double t80362;
  double t80363;
  double t80364;
  double t80366;
  double t80367;
  double t80368;
  double t80370;
  double t80371;
  double t80372;
  double t80373;
  double t80374;
  double t80375;
  double t80376;
  double t80377;
  double t80378;
  double t80386;
  double t80393;
  double t80397;
  double t80401;
  double t80402;
  double t80403;
  double t80406;
  double t80407;
  double t80410;
  double t80411;
  double t80412;
  double t80413;
  double t80414;
  double t80415;
  double t80416;
  double t80417;
  double t80418;
  double t80423;
  double t80424;
  double t80425;
  double t80426;
  double t80427;
  double t80428;
  double t80433;
  double t80434;
  double t80435;
  double t80436;
  double t80438;
  double t80439;
  double t80440;
  double t80441;
  double t80442;
  double t80443;
  double t80444;
  double t80445;
  double t80446;
  double t80447;
  double t80449;
  double t80450;
  double t80451;
  double t80452;
  double t80453;
  double t80454;
  double t80455;
  double t80456;
  double t80457;
  double t80458;
  double t80459;
  double t80460;
  double t80486;
  double t80490;
  double t80491;
  double t80495;
  double t80496;
  double t80507;
  double t80510;
  double t80511;
  double t80512;
  double t80517;
  double t80522;
  double t80523;
  double t80524;
  double t80526;
  double t80527;
  double t80529;
  double t80530;
  double t80531;
  double t80533;
  double t80535;
  double t80536;
  double t80540;
  double t80544;
  double t80545;
  double t80546;
  double t80547;
  double t80550;
  double t80551;
  double t80553;
  double t80554;
  double t80555;
  double t80556;
  double t80558;
  double t80559;
  double t80560;
  double t80562;
  double t80563;
  double t80564;
  double t80565;
  double t80567;
  double t80569;
  double t80570;
  double t80571;
  double t80572;
  double t80582;
  double t80586;
  double t80587;
  double t80588;
  double t80598;
  double t80599;
  double t80600;
  double t80601;
  double t80602;
  double t80603;
  double t80604;
  double t80605;
  double t80607;
  double t80610;
  double t80611;
  double t80612;
  double t80614;
  double t80615;
  double t80616;
  double t80617;
  double t80621;
  double t80624;
  double t80625;
  double t80626;
  double t80627;
  double t80628;
  double t80630;
  double t80631;
  double t80632;
  double t80633;
  double t80634;
  double t80635;
  double t80636;
  double t80637;
  double t80638;
  double t80639;
  double t80640;
  double t80641;
  double t80642;
  double t80643;
  double t80644;
  double t80645;
  double t80646;
  double t80648;
  double t80649;
  double t80650;
  double t80651;
  double t80652;
  double t80653;
  double t80467;
  double t80471;
  double t80475;
  double t80476;
  double t80477;
  double t80718;
  double t80719;
  double t80720;
  double t80721;
  double t80722;
  double t80823;
  double t80853;
  double t80852;
  double t80854;
  double t80856;
  double t80857;
  double t80858;
  double t80860;
  double t80861;
  double t80862;
  double t80864;
  double t80865;
  double t80866;
  double t80875;
  double t80876;
  double t80877;
  double t80882;
  double t80883;
  double t80884;
  double t80885;
  double t80886;
  double t80814;
  double t80815;
  double t80816;
  double t80817;
  double t80818;
  double t80819;
  double t80606;
  double t80613;
  double t80629;
  double t80647;
  double t80654;
  double t80655;
  double t80736;
  double t80737;
  double t80738;
  double t80739;
  double t80740;
  double t80741;
  double t80952;
  double t80982;
  double t80871;
  double t80872;
  double t80873;
  double t80932;
  double t80933;
  double t80934;
  double t80981;
  double t80983;
  double t80985;
  double t80986;
  double t80987;
  double t80989;
  double t80990;
  double t80991;
  double t80993;
  double t80994;
  double t80995;
  double t80890;
  double t80891;
  double t80892;
  double t81005;
  double t81006;
  double t81007;
  double t81008;
  double t81009;
  double t80901;
  double t80902;
  double t80903;
  double t80904;
  double t80913;
  double t80914;
  double t80915;
  double t80807;
  double t80808;
  double t80809;
  double t80810;
  double t80811;
  double t80812;
  double t80513;
  double t80532;
  double t80548;
  double t80566;
  double t80573;
  double t80574;
  double t80729;
  double t80730;
  double t80731;
  double t80732;
  double t80733;
  double t80734;
  double t80929;
  double t80930;
  double t80931;
  double t80935;
  double t80936;
  double t80937;
  double t81056;
  double t81086;
  double t81085;
  double t81087;
  double t81089;
  double t81090;
  double t81091;
  double t81093;
  double t81094;
  double t81095;
  double t81097;
  double t81098;
  double t81099;
  double t81109;
  double t81110;
  double t81111;
  double t81112;
  double t81113;
  double t80794;
  double t80795;
  double t80796;
  double t80797;
  double t80798;
  double t80799;
  double t80419;
  double t80429;
  double t80437;
  double t80448;
  double t80461;
  double t80462;
  double t80711;
  double t80712;
  double t80713;
  double t80714;
  double t80715;
  double t80716;
  double t81026;
  double t81027;
  double t81028;
  double t81029;
  double t81030;
  double t81031;
  double t80910;
  double t80911;
  double t80912;
  double t80916;
  double t80917;
  double t80918;
  double t81088;
  double t81092;
  double t81096;
  double t81100;
  double t81122;
  double t81123;
  double t81124;
  double t81125;
  double t81126;
  double t81127;
  double t81128;
  double t80787;
  double t80788;
  double t80789;
  double t80790;
  double t80791;
  double t80792;
  double t80332;
  double t80343;
  double t80352;
  double t80365;
  double t80379;
  double t80380;
  double t80704;
  double t80705;
  double t80706;
  double t80707;
  double t80708;
  double t80709;
  double t81138;
  double t81139;
  double t81140;
  double t81141;
  double t81142;
  double t81018;
  double t81019;
  double t81020;
  double t81021;
  double t81022;
  double t81023;
  double t81145;
  double t81146;
  double t81147;
  double t81148;
  double t81149;
  double t80898;
  double t80899;
  double t80900;
  double t80905;
  double t80906;
  double t80907;
  double t81190;
  double t81191;
  double t81192;
  double t81193;
  double t81194;
  double t81195;
  double t81196;
  double t81114;
  double t81115;
  double t81116;
  double t81117;
  double t81118;
  double t81119;
  double t81120;
  double t80780;
  double t80781;
  double t80782;
  double t80783;
  double t80784;
  double t80785;
  double t80251;
  double t80263;
  double t80272;
  double t80281;
  double t80292;
  double t80293;
  double t80697;
  double t80698;
  double t80699;
  double t80700;
  double t80701;
  double t80702;
  double t81010;
  double t81011;
  double t81012;
  double t81013;
  double t81014;
  double t81015;
  double t80887;
  double t80888;
  double t80889;
  double t80893;
  double t80894;
  double t80895;
  double t81265;
  double t81296;
  double t81246;
  double t81247;
  double t81248;
  double t81249;
  double t81250;
  double t81251;
  double t81295;
  double t81297;
  double t81299;
  double t81300;
  double t81301;
  double t81303;
  double t81304;
  double t81305;
  double t81307;
  double t81308;
  double t81294;
  double t81298;
  double t81302;
  double t81306;
  double t81309;
  double t81182;
  double t81183;
  double t81184;
  double t81185;
  double t81186;
  double t81187;
  double t81101;
  double t81102;
  double t81103;
  double t81104;
  double t81105;
  double t81106;
  double t80773;
  double t80774;
  double t80775;
  double t80776;
  double t80777;
  double t80778;
  double t80199;
  double t80203;
  double t80207;
  double t80211;
  double t80214;
  double t80215;
  double t80690;
  double t80691;
  double t80692;
  double t80693;
  double t80694;
  double t80695;
  double t80997;
  double t80998;
  double t80999;
  double t81000;
  double t81001;
  double t81002;
  double t80868;
  double t80869;
  double t80870;
  double t80874;
  double t80878;
  double t80879;
  double t81288;
  double t81289;
  double t81290;
  double t81291;
  double t81292;
  double t81235;
  double t81236;
  double t81237;
  double t81238;
  double t81239;
  double t81176;
  double t81177;
  double t81178;
  double t81179;
  double t81180;
  double t81079;
  double t81080;
  double t81081;
  double t81082;
  double t81083;
  double t80767;
  double t80768;
  double t80769;
  double t80770;
  double t80771;
  double t80088;
  double t80094;
  double t80125;
  double t80131;
  double t80132;
  double t80681;
  double t80682;
  double t80683;
  double t80684;
  double t80685;
  double t80975;
  double t80976;
  double t80977;
  double t80978;
  double t80979;
  double t80846;
  double t80847;
  double t80848;
  double t80849;
  double t80850;
  double t81360;
  double t81361;
  double t81362;
  double t81363;
  double t81364;
  double t81282;
  double t81283;
  double t81284;
  double t81285;
  double t81286;
  double t81229;
  double t81230;
  double t81231;
  double t81232;
  double t81233;
  double t81170;
  double t81171;
  double t81172;
  double t81173;
  double t81174;
  double t81073;
  double t81074;
  double t81075;
  double t81076;
  double t81077;
  double t80761;
  double t80762;
  double t80763;
  double t80764;
  double t80765;
  double t80000;
  double t80011;
  double t80036;
  double t80042;
  double t80043;
  double t80675;
  double t80676;
  double t80677;
  double t80678;
  double t80679;
  double t80969;
  double t80970;
  double t80971;
  double t80972;
  double t80973;
  double t80840;
  double t80841;
  double t80842;
  double t80843;
  double t80844;
  double t81391;
  double t81392;
  double t81393;
  double t81394;
  double t81395;
  double t81354;
  double t81355;
  double t81356;
  double t81357;
  double t81358;
  double t81276;
  double t81277;
  double t81278;
  double t81279;
  double t81280;
  double t81223;
  double t81224;
  double t81225;
  double t81226;
  double t81227;
  double t81164;
  double t81165;
  double t81166;
  double t81167;
  double t81168;
  double t81067;
  double t81068;
  double t81069;
  double t81070;
  double t81071;
  double t80755;
  double t80756;
  double t80757;
  double t80758;
  double t80759;
  double t79851;
  double t79857;
  double t79918;
  double t79924;
  double t79925;
  double t80669;
  double t80670;
  double t80671;
  double t80672;
  double t80673;
  double t80963;
  double t80964;
  double t80965;
  double t80966;
  double t80967;
  double t80834;
  double t80835;
  double t80836;
  double t80837;
  double t80838;
  double t81417;
  double t81418;
  double t81419;
  double t81420;
  double t81421;
  double t81385;
  double t81386;
  double t81387;
  double t81388;
  double t81389;
  double t81348;
  double t81349;
  double t81350;
  double t81351;
  double t81352;
  double t81270;
  double t81271;
  double t81272;
  double t81273;
  double t81274;
  double t81217;
  double t81218;
  double t81219;
  double t81220;
  double t81221;
  double t81158;
  double t81159;
  double t81160;
  double t81161;
  double t81162;
  double t81061;
  double t81062;
  double t81063;
  double t81064;
  double t81065;
  double t80749;
  double t80750;
  double t80751;
  double t80752;
  double t80753;
  double t79517;
  double t79570;
  double t79583;
  double t79771;
  double t79775;
  double t80663;
  double t80664;
  double t80665;
  double t80666;
  double t80667;
  double t80957;
  double t80958;
  double t80959;
  double t80960;
  double t80961;
  double t80828;
  double t80829;
  double t80830;
  double t80831;
  double t80832;
  double t81440;
  double t81441;
  double t81442;
  double t81413;
  double t81414;
  double t81415;
  double t81381;
  double t81382;
  double t81383;
  double t81344;
  double t81345;
  double t81346;
  double t81266;
  double t81267;
  double t81268;
  double t81213;
  double t81214;
  double t81215;
  double t81154;
  double t81155;
  double t81156;
  double t81057;
  double t81058;
  double t81059;
  double t80745;
  double t80746;
  double t80747;
  double t79256;
  double t79424;
  double t79425;
  double t80659;
  double t80660;
  double t80661;
  double t80953;
  double t80954;
  double t80955;
  double t80824;
  double t80825;
  double t80826;
  t78598 = Cos(var1[20]);
  t78411 = Cos(var1[21]);
  t78569 = Sin(var1[20]);
  t78599 = Sin(var1[21]);
  t78603 = Cos(var1[19]);
  t78597 = -1.*t78411*t78569;
  t78600 = -1.*t78598*t78599;
  t78601 = t78597 + t78600;
  t78243 = Sin(var1[19]);
  t78631 = t78598*t78411;
  t78785 = -1.*t78569*t78599;
  t78942 = t78631 + t78785;
  t78954 = Cos(var1[18]);
  t78602 = t78243*t78601;
  t78943 = t78603*t78942;
  t78944 = t78602 + t78943;
  t78096 = Sin(var1[18]);
  t78964 = t78603*t78601;
  t78974 = -1.*t78243*t78942;
  t78984 = t78964 + t78974;
  t79035 = Cos(var1[17]);
  t78948 = -1.*t78096*t78944;
  t78999 = t78954*t78984;
  t79011 = t78948 + t78999;
  t77972 = Sin(var1[17]);
  t79045 = t78954*t78944;
  t79046 = t78096*t78984;
  t79047 = t79045 + t79046;
  t79051 = Cos(var1[15]);
  t79023 = t77972*t79011;
  t79048 = t79035*t79047;
  t79049 = t79023 + t79048;
  t77888 = Sin(var1[15]);
  t79052 = Sin(var1[16]);
  t79064 = t79035*t79011;
  t79076 = -1.*t77972*t79047;
  t79077 = t79064 + t79076;
  t79098 = Sin(var1[14]);
  t79050 = -1.*t77888*t79049;
  t79078 = t79051*t79052*t79077;
  t79082 = t79050 + t79078;
  t77788 = Cos(var1[14]);
  t79108 = t79051*t79049;
  t79118 = t77888*t79052*t79077;
  t79130 = t79108 + t79118;
  t77338 = Cos(var1[5]);
  t79167 = t79098*t79082;
  t79168 = t77788*t79130;
  t79169 = t79167 + t79168;
  t79088 = t77788*t79082;
  t79142 = -1.*t79098*t79130;
  t79154 = t79088 + t79142;
  t79170 = Sin(var1[5]);
  t76900 = Sin(var1[3]);
  t79260 = t78411*t78569;
  t79264 = t78598*t78599;
  t79268 = t79260 + t79264;
  t79272 = -1.*t78243*t79268;
  t79276 = t79272 + t78943;
  t79302 = t78603*t79268;
  t79332 = t78243*t78942;
  t79333 = t79302 + t79332;
  t79301 = t78096*t79276;
  t79353 = t78954*t79333;
  t79354 = t79301 + t79353;
  t79374 = t78954*t79276;
  t79375 = -1.*t78096*t79333;
  t79376 = t79374 + t79375;
  t79373 = -1.*t77972*t79354;
  t79377 = t79035*t79376;
  t79378 = t79373 + t79377;
  t79380 = t79035*t79354;
  t79381 = t77972*t79376;
  t79382 = t79380 + t79381;
  t79379 = t77888*t79052*t79378;
  t79383 = t79051*t79382;
  t79384 = t79379 + t79383;
  t79386 = t79051*t79052*t79378;
  t79387 = -1.*t77888*t79382;
  t79406 = t79386 + t79387;
  t79174 = Cos(var1[3]);
  t79186 = Cos(var1[16]);
  t79198 = Cos(var1[4]);
  t79200 = Sin(var1[4]);
  t79410 = t77788*t79384;
  t79411 = t79098*t79406;
  t79412 = t79410 + t79411;
  t79385 = -1.*t79098*t79384;
  t79407 = t77788*t79406;
  t79408 = t79385 + t79407;
  t79432 = -1.*t78411;
  t79440 = 1. + t79432;
  t79166 = t77338*t79154;
  t79171 = -1.*t79169*t79170;
  t79172 = t79166 + t79171;
  t79173 = -1.*t76900*t79172;
  t79199 = t79186*t79198*t79077;
  t79205 = t77338*t79169;
  t79213 = t79154*t79170;
  t79223 = t79205 + t79213;
  t79233 = t79200*t79223;
  t79243 = t79199 + t79233;
  t79247 = t79174*t79243;
  t79251 = t79173 + t79247;
  t79487 = -0.0216*t79440;
  t79491 = 0.0059*t78411;
  t79495 = 0.0047*t78599;
  t79499 = t79487 + t79491 + t79495;
  t79450 = -1.1135*t79440;
  t79460 = -1.1182*t78411;
  t79470 = 0.0275*t78599;
  t79474 = t79450 + t79460 + t79470;
  t79409 = t77338*t79408;
  t79413 = -1.*t79412*t79170;
  t79414 = t79409 + t79413;
  t79415 = -1.*t76900*t79414;
  t79416 = t79186*t79198*t79378;
  t79417 = t77338*t79412;
  t79418 = t79408*t79170;
  t79419 = t79417 + t79418;
  t79420 = t79200*t79419;
  t79421 = t79416 + t79420;
  t79422 = t79174*t79421;
  t79423 = t79415 + t79422;
  t79427 = -0.7055*t78411;
  t79577 = 0.0047*t78411;
  t79578 = -0.0275*t78599;
  t79579 = t79577 + t79578;
  t79478 = -1.*t78411*t79474;
  t79483 = -0.0184*t78599;
  t79503 = t79499*t78599;
  t79573 = 0.0275*t78411;
  t79574 = t79573 + t79495;
  t79588 = -1.*t78598*t78411;
  t79589 = t78569*t78599;
  t79590 = t79588 + t79589;
  t79587 = t78243*t79268;
  t79591 = t78603*t79590;
  t79592 = t79587 + t79591;
  t79594 = -1.*t78243*t79590;
  t79595 = t79302 + t79594;
  t79593 = -1.*t78096*t79592;
  t79596 = t78954*t79595;
  t79597 = t79593 + t79596;
  t79599 = t78954*t79592;
  t79600 = t78096*t79595;
  t79601 = t79599 + t79600;
  t79598 = t77972*t79597;
  t79602 = t79035*t79601;
  t79603 = t79598 + t79602;
  t79605 = t79035*t79597;
  t79610 = -1.*t77972*t79601;
  t79618 = t79605 + t79610;
  t79604 = -1.*t77888*t79603;
  t79628 = t79051*t79052*t79618;
  t79638 = t79604 + t79628;
  t79694 = t79051*t79603;
  t79695 = t77888*t79052*t79618;
  t79720 = t79694 + t79695;
  t79737 = t79098*t79638;
  t79738 = t77788*t79720;
  t79739 = t79737 + t79738;
  t79648 = t77788*t79638;
  t79734 = -1.*t79098*t79720;
  t79735 = t79648 + t79734;
  t79801 = -1.*t78598;
  t79811 = 1. + t79801;
  t79844 = -0.7055*t79811;
  t79845 = -0.0184*t78569;
  t79846 = t78569*t79499;
  t79847 = t78598*t79474;
  t79848 = t79844 + t79845 + t79846 + t79847;
  t79824 = 0.0184*t79811;
  t79825 = -0.7055*t78569;
  t79839 = t78598*t79499;
  t79840 = -1.*t78569*t79474;
  t79841 = t79824 + t79825 + t79839 + t79840;
  t79791 = 0.0016*t79268;
  t79913 = t78569*t79579;
  t79914 = t78598*t79574;
  t79915 = t79913 + t79914;
  t79843 = -0.2707*t78942;
  t79867 = t78598*t79579;
  t79877 = -1.*t78569*t79574;
  t79887 = t79867 + t79877;
  t79736 = t77338*t79735;
  t79740 = -1.*t79739*t79170;
  t79741 = t79736 + t79740;
  t79742 = -1.*t76900*t79741;
  t79743 = t79186*t79198*t79618;
  t79744 = t77338*t79739;
  t79745 = t79735*t79170;
  t79756 = t79744 + t79745;
  t79757 = t79200*t79756;
  t79768 = t79743 + t79757;
  t79769 = t79174*t79768;
  t79770 = t79742 + t79769;
  t79981 = -1. + t78603;
  t79982 = 0.0016*t79981;
  t79983 = -0.2707*t78243;
  t79987 = -1.*t78243*t79848;
  t79990 = t78603*t79841;
  t79991 = t79982 + t79983 + t79987 + t79990;
  t79929 = -1.*t78603;
  t79930 = 1. + t79929;
  t79935 = -0.2707*t79930;
  t79943 = 0.0016*t78243;
  t79953 = t78603*t79848;
  t79963 = t78243*t79841;
  t79973 = t79935 + t79943 + t79953 + t79963;
  t79927 = -0.21*t79276;
  t80031 = -1.*t78243*t79915;
  t80032 = t78603*t79887;
  t80033 = t80031 + t80032;
  t79928 = 0.049*t79333;
  t80027 = t78603*t79915;
  t80028 = t78243*t79887;
  t80029 = t80027 + t80028;
  t80047 = -1.*t78954;
  t80048 = 1. + t80047;
  t80055 = -0.21*t80048;
  t80056 = 0.049*t78096;
  t80057 = t78096*t79991;
  t80061 = t78954*t79973;
  t80067 = t80055 + t80056 + t80057 + t80061;
  t80049 = -0.049*t80048;
  t80050 = -0.21*t78096;
  t80051 = t78954*t79991;
  t80052 = -1.*t78096*t79973;
  t80053 = t80049 + t80050 + t80051 + t80052;
  t80045 = 0.049*t79354;
  t80103 = t78096*t80033;
  t80104 = t78954*t80029;
  t80108 = t80103 + t80104;
  t80046 = -0.09*t79376;
  t80099 = t78954*t80033;
  t80100 = -1.*t78096*t80029;
  t80101 = t80099 + t80100;
  t80134 = -1.*t79035;
  t80135 = 1. + t80134;
  t80142 = -0.049*t80135;
  t80146 = -0.09*t77972;
  t80152 = -1.*t77972*t80067;
  t80153 = t79035*t80053;
  t80154 = t80142 + t80146 + t80152 + t80153;
  t80136 = -0.09*t80135;
  t80137 = 0.049*t77972;
  t80138 = t79035*t80067;
  t80139 = t77972*t80053;
  t80140 = t80136 + t80137 + t80138 + t80139;
  t80160 = t79035*t80108;
  t80161 = t77972*t80101;
  t80162 = t80160 + t80161;
  t80156 = -1.*t77972*t80108;
  t80157 = t79035*t80101;
  t80158 = t80156 + t80157;
  t80185 = -1.*t79051*t79186*t79098;
  t80186 = -1.*t77788*t79186*t77888;
  t80187 = t80185 + t80186;
  t80181 = -1.*t77788*t79051*t79186;
  t80182 = t79186*t79098*t77888;
  t80183 = t80181 + t80182;
  t80200 = -0.135*t79378;
  t80141 = t80140*t79049;
  t80217 = -1.*t79186;
  t80218 = 1. + t80217;
  t80163 = t80162*t79382;
  t80219 = -0.049*t80218;
  t80220 = -0.0044*t79052;
  t80221 = t79186*t80154;
  t80222 = t80219 + t80220 + t80221;
  t80224 = -0.135*t80218;
  t80225 = -0.1306*t79186;
  t80226 = 0.049*t79052;
  t80227 = t79052*t80154;
  t80228 = t80224 + t80225 + t80226 + t80227;
  t80167 = t80140*t79382;
  t80176 = -1.*t80140*t79603;
  t80171 = -1.*t80140*t79382;
  t80172 = -1.*t80162*t79603;
  t80230 = Power(t79186,2);
  t80232 = Power(t79052,2);
  t80184 = t77338*t80183;
  t80188 = -1.*t80187*t79170;
  t80189 = t80184 + t80188;
  t80190 = -1.*t76900*t80189;
  t80191 = t79198*t79052;
  t80192 = t77338*t80187;
  t80193 = t80183*t79170;
  t80194 = t80192 + t80193;
  t80195 = t79200*t80194;
  t80196 = t80191 + t80195;
  t80197 = t79174*t80196;
  t80198 = t80190 + t80197;
  t80244 = -1.*t79186*t80222*t79378;
  t80245 = -1.*t79052*t80228*t79378;
  t80253 = -1.*t79052*t80222;
  t80254 = t79186*t80228;
  t80255 = t80253 + t80254;
  t80236 = t79186*t80222*t79378;
  t80237 = t79052*t80228*t79378;
  t80264 = t79052*t80222;
  t80265 = -1.*t79186*t80228;
  t80266 = t80264 + t80265;
  t80252 = 0.135*t79382;
  t80223 = t79186*t80222*t79077;
  t80231 = t80230*t80158*t79378;
  t80302 = 0.135*t77888;
  t80303 = t77888*t80228;
  t80304 = t79051*t80140;
  t80305 = t80302 + t80303 + t80304;
  t80295 = -1.*t79051;
  t80296 = 1. + t80295;
  t80297 = -0.135*t80296;
  t80298 = t79051*t80228;
  t80299 = -1.*t77888*t80140;
  t80300 = t80297 + t80298 + t80299;
  t80246 = -1.*t80230*t80158*t79618;
  t80311 = t79051*t79052*t80158;
  t80312 = -1.*t77888*t80162;
  t80313 = t80311 + t80312;
  t80307 = t77888*t79052*t80158;
  t80308 = t79051*t80162;
  t80309 = t80307 + t80308;
  t80240 = -1.*t79186*t80222*t79618;
  t80258 = t79186*t80222*t79618;
  t80321 = -1.*t80305*t79384;
  t80322 = -1.*t80300*t79406;
  t80333 = t79186*t77888*t80305;
  t80334 = t79051*t79186*t80300;
  t80335 = t80253 + t80333 + t80334;
  t80276 = t80230*t80158*t79618;
  t80317 = t80305*t79384;
  t80318 = t80300*t79406;
  t80344 = -1.*t79186*t77888*t80305;
  t80345 = -1.*t79051*t79186*t80300;
  t80346 = t80264 + t80344 + t80345;
  t80337 = 0.135*t79384;
  t80284 = -1.*t79186*t80222*t79077;
  t80286 = -1.*t80230*t80158*t79378;
  t80387 = -1.*t77788;
  t80388 = 1. + t80387;
  t80389 = -0.135*t80388;
  t80390 = -1.*t79098*t80305;
  t80391 = t77788*t80300;
  t80392 = t80389 + t80390 + t80391;
  t80382 = 0.135*t79098;
  t80383 = t77788*t80305;
  t80384 = t79098*t80300;
  t80385 = t80382 + t80383 + t80384;
  t80398 = t77788*t80309;
  t80399 = t79098*t80313;
  t80400 = t80398 + t80399;
  t80394 = -1.*t79098*t80309;
  t80395 = t77788*t80313;
  t80396 = t80394 + t80395;
  t80408 = -1.*t80392*t79408;
  t80409 = -1.*t80385*t79412;
  t80420 = -1.*t80183*t80392;
  t80421 = -1.*t80187*t80385;
  t80422 = t80420 + t80421 + t80253;
  t80356 = -1.*t79186*t79052*t80158;
  t80404 = t80392*t79408;
  t80405 = t80385*t79412;
  t80430 = t80183*t80392;
  t80431 = t80187*t80385;
  t80432 = t80430 + t80431 + t80264;
  t80369 = t79186*t79052*t80158;
  t80464 = -1.*t79186*t79378*t79200;
  t80465 = t79198*t79419;
  t80466 = t80464 + t80465;
  t80487 = t79174*t79414;
  t80488 = t76900*t79421;
  t80489 = t80487 + t80488;
  t80498 = t77338*t80385;
  t80499 = t80392*t79170;
  t80500 = t80498 + t80499;
  t80502 = t77338*t80392;
  t80503 = -1.*t80385*t79170;
  t80504 = t80502 + t80503;
  t80501 = t80194*t80500;
  t80505 = t80189*t80504;
  t80506 = t80264 + t80501 + t80505;
  t80514 = t77338*t80400;
  t80515 = t80396*t79170;
  t80516 = t80514 + t80515;
  t80518 = t77338*t80396;
  t80519 = -1.*t80400*t79170;
  t80520 = t80518 + t80519;
  t80541 = t80500*t79419;
  t80542 = t80504*t79414;
  t80508 = -1.*t80500*t79419;
  t80509 = -1.*t80504*t79414;
  t80537 = -1.*t80194*t80500;
  t80538 = -1.*t80189*t80504;
  t80539 = t80253 + t80537 + t80538;
  t80521 = t80189*t80520;
  t80468 = -1.*t79186*t79077*t79200;
  t80469 = t79198*t79223;
  t80470 = t80468 + t80469;
  t80576 = -1.*t79052*t79200;
  t80577 = t79198*t80194;
  t80578 = t80576 + t80577;
  t80525 = -1.*t80504*t79172;
  t80528 = -1.*t80520*t79414;
  t80589 = -1.*t80222*t79200;
  t80590 = t79198*t80500;
  t80591 = t80589 + t80590;
  t80593 = t79198*t80222;
  t80594 = t79200*t80500;
  t80595 = t80593 + t80594;
  t80579 = -1.*t79186*t80158*t79200;
  t80580 = t79198*t80516;
  t80581 = t80579 + t80580;
  t80583 = t79186*t79198*t80158;
  t80584 = t79200*t80516;
  t80585 = t80583 + t80584;
  t80592 = t80578*t80591;
  t80596 = t80196*t80595;
  t80597 = t80505 + t80592 + t80596;
  t80472 = -1.*t79186*t79618*t79200;
  t80473 = t79198*t79756;
  t80474 = t80472 + t80473;
  t80534 = -1.*t80189*t80520;
  t80543 = t80520*t79741;
  t80549 = t80504*t79172;
  t80552 = t80520*t79414;
  t80622 = t80591*t80466;
  t80623 = t80595*t79421;
  t80557 = -1.*t80520*t79741;
  t80608 = -1.*t80591*t80466;
  t80609 = -1.*t80595*t79421;
  t80561 = -1.*t80504*t79741;
  t80618 = -1.*t80578*t80591;
  t80619 = -1.*t80196*t80595;
  t80620 = t80538 + t80618 + t80619;
  t80568 = t80504*t79741;
  t80483 = t79174*t79172;
  t80484 = t76900*t79243;
  t80485 = t80483 + t80484;
  t79516 = t79427 + t79478 + t79483 + t79503;
  t79541 = 0.0184*t78411;
  t79542 = -1.*t78411*t79499;
  t79555 = -0.7055*t78599;
  t79556 = -1.*t79474*t78599;
  t79569 = t79541 + t79542 + t79555 + t79556;
  t79571 = -0.0184*t78411;
  t79572 = t78411*t79499;
  t79575 = -1.*t78411*t79574;
  t79576 = 0.7055*t78599;
  t79580 = t79579*t78599;
  t79581 = t79474*t78599;
  t79582 = t79571 + t79572 + t79575 + t79576 + t79580 + t79581;
  t79584 = -1.*t78411*t79579;
  t79585 = -1.*t79574*t78599;
  t79586 = t79427 + t79584 + t79478 + t79483 + t79503 + t79585;
  t80492 = t79174*t79741;
  t80493 = t76900*t79768;
  t80494 = t80492 + t80493;
  t79842 = t79841*t79268;
  t79849 = t79848*t79590;
  t79850 = t79791 + t79842 + t79843 + t79849;
  t79852 = -0.2707*t79268;
  t79853 = -1.*t79848*t79268;
  t79854 = -1.*t79841*t78942;
  t79855 = 0.0016*t79590;
  t79856 = t79852 + t79853 + t79854 + t79855;
  t79861 = -0.2707*t78601;
  t79897 = t79887*t79268;
  t79910 = t79848*t79268;
  t79911 = 0.0016*t78942;
  t79912 = t79841*t78942;
  t79916 = t79915*t79590;
  t79917 = t79861 + t79897 + t79910 + t79911 + t79912 + t79916;
  t79919 = -1.*t79841*t78601;
  t79920 = -1.*t79915*t79268;
  t79921 = -1.*t79887*t78942;
  t79922 = -1.*t79848*t78942;
  t79923 = t79919 + t79791 + t79920 + t79843 + t79921 + t79922;
  t79977 = t79973*t79592;
  t79995 = t79991*t79595;
  t79999 = t79927 + t79928 + t79977 + t79995;
  t80004 = -1.*t79991*t79276;
  t80007 = -1.*t79973*t79333;
  t80008 = 0.049*t79592;
  t80009 = -0.21*t79595;
  t80010 = t80004 + t80007 + t80008 + t80009;
  t80023 = 0.049*t78944;
  t80024 = t79991*t79276;
  t80025 = -0.21*t78984;
  t80026 = t79973*t79333;
  t80030 = t80029*t79592;
  t80034 = t80033*t79595;
  t80035 = t80023 + t80024 + t80025 + t80026 + t80030 + t80034;
  t80037 = -1.*t79973*t78944;
  t80038 = -1.*t80033*t79276;
  t80039 = -1.*t79991*t78984;
  t80040 = -1.*t80029*t79333;
  t80041 = t80037 + t79927 + t80038 + t80039 + t79928 + t80040;
  t80054 = t80053*t79597;
  t80077 = t80067*t79601;
  t80087 = t80045 + t80046 + t80054 + t80077;
  t80089 = -1.*t80067*t79354;
  t80090 = -1.*t80053*t79376;
  t80091 = -0.09*t79597;
  t80092 = 0.049*t79601;
  t80093 = t80089 + t80090 + t80091 + t80092;
  t80095 = -0.09*t79011;
  t80096 = 0.049*t79047;
  t80097 = t80067*t79354;
  t80098 = t80053*t79376;
  t80102 = t80101*t79597;
  t80114 = t80108*t79601;
  t80124 = t80095 + t80096 + t80097 + t80098 + t80102 + t80114;
  t80126 = -1.*t80053*t79011;
  t80127 = -1.*t80067*t79047;
  t80128 = -1.*t80108*t79354;
  t80129 = -1.*t80101*t79376;
  t80130 = t80126 + t80127 + t80045 + t80128 + t80046 + t80129;
  t80155 = t80154*t79077;
  t80159 = t80158*t79378;
  t80164 = t80141 + t80155 + t80159 + t80163;
  t80165 = t79603*t80164;
  t80166 = t80154*t79378;
  t80168 = t80166 + t80167;
  t80169 = t79382*t80168;
  t80170 = -1.*t80154*t79378;
  t80173 = -1.*t80158*t79618;
  t80174 = t80170 + t80171 + t80172 + t80173;
  t80175 = t79382*t80174;
  t80177 = -1.*t80154*t79618;
  t80178 = t80176 + t80177;
  t80179 = t79049*t80178;
  t80180 = t80165 + t80169 + t80175 + t80179;
  t80201 = -0.1306*t79603;
  t80202 = t80200 + t80201;
  t80204 = -0.135*t79077;
  t80205 = -0.1306*t79382;
  t80206 = t80204 + t80205;
  t80208 = 0.1306*t79382;
  t80209 = -0.135*t79618;
  t80210 = t80208 + t80209;
  t80212 = 0.1306*t79049;
  t80213 = t80212 + t80200;
  t80229 = t79052*t80228*t79077;
  t80233 = t80232*t80158*t79378;
  t80234 = t80141 + t80223 + t80229 + t80231 + t80233 + t80163;
  t80235 = t79186*t79618*t80234;
  t80238 = t80236 + t80237 + t80167;
  t80239 = t79186*t79378*t80238;
  t80241 = -1.*t79052*t80228*t79618;
  t80242 = t80176 + t80240 + t80241;
  t80243 = t79186*t79077*t80242;
  t80247 = -1.*t80232*t80158*t79618;
  t80248 = t80244 + t80245 + t80171 + t80172 + t80246 + t80247;
  t80249 = t79186*t79378*t80248;
  t80250 = t80235 + t80239 + t80243 + t80249;
  t80687 = t79174*t80189;
  t80688 = t76900*t80196;
  t80689 = t80687 + t80688;
  t80256 = t79186*t80255*t79618;
  t80257 = t80140*t79603;
  t80259 = t79052*t80228*t79618;
  t80260 = t80257 + t80258 + t80259;
  t80261 = t79052*t80260;
  t80262 = t80252 + t80256 + t80261;
  t80267 = t79186*t80266*t79378;
  t80268 = 0.135*t79603;
  t80269 = t80244 + t80245 + t80171;
  t80270 = t79052*t80269;
  t80271 = t80267 + t80268 + t80270;
  t80273 = 0.135*t79049;
  t80274 = t79186*t80255*t79378;
  t80275 = t80162*t79603;
  t80277 = t80232*t80158*t79618;
  t80278 = t80236 + t80237 + t80167 + t80275 + t80276 + t80277;
  t80279 = t79052*t80278;
  t80280 = t80273 + t80274 + t80279;
  t80282 = t79186*t80266*t79077;
  t80283 = -1.*t80140*t79049;
  t80285 = -1.*t79052*t80228*t79077;
  t80287 = -1.*t80232*t80158*t79378;
  t80288 = -1.*t80162*t79382;
  t80289 = t80283 + t80284 + t80285 + t80286 + t80287 + t80288;
  t80290 = t79052*t80289;
  t80291 = t80282 + t80252 + t80290;
  t80301 = t80300*t79082;
  t80306 = t80305*t79130;
  t80310 = t80309*t79384;
  t80314 = t80313*t79406;
  t80315 = t80223 + t80231 + t80301 + t80306 + t80310 + t80314;
  t80316 = t79186*t79618*t80315;
  t80319 = t80236 + t80317 + t80318;
  t80320 = t79186*t79378*t80319;
  t80323 = -1.*t80313*t79638;
  t80324 = -1.*t80309*t79720;
  t80325 = t80244 + t80246 + t80321 + t80322 + t80323 + t80324;
  t80326 = t79186*t79378*t80325;
  t80327 = -1.*t80300*t79638;
  t80328 = -1.*t80305*t79720;
  t80329 = t80240 + t80327 + t80328;
  t80330 = t79186*t79077*t80329;
  t80331 = t80316 + t80320 + t80326 + t80330;
  t80336 = t79186*t80335*t79618;
  t80338 = t80300*t79638;
  t80339 = t80305*t79720;
  t80340 = t80258 + t80338 + t80339;
  t80341 = t79052*t80340;
  t80342 = t80336 + t80337 + t80341;
  t80347 = t79186*t80346*t79378;
  t80348 = 0.135*t79720;
  t80349 = t80244 + t80321 + t80322;
  t80350 = t79052*t80349;
  t80351 = t80347 + t80348 + t80350;
  t80353 = t79186*t80335*t79378;
  t80354 = t79186*t77888*t80309;
  t80355 = t79051*t79186*t80313;
  t80357 = t80354 + t80355 + t80356;
  t80358 = t79186*t80357*t79618;
  t80359 = 0.135*t79130;
  t80360 = t80313*t79638;
  t80361 = t80309*t79720;
  t80362 = t80236 + t80276 + t80317 + t80318 + t80360 + t80361;
  t80363 = t79052*t80362;
  t80364 = t80353 + t80358 + t80359 + t80363;
  t80366 = t79186*t80346*t79077;
  t80367 = -1.*t79186*t77888*t80309;
  t80368 = -1.*t79051*t79186*t80313;
  t80370 = t80367 + t80368 + t80369;
  t80371 = t79186*t80370*t79378;
  t80372 = -1.*t80300*t79082;
  t80373 = -1.*t80305*t79130;
  t80374 = -1.*t80309*t79384;
  t80375 = -1.*t80313*t79406;
  t80376 = t80284 + t80286 + t80372 + t80373 + t80374 + t80375;
  t80377 = t79052*t80376;
  t80378 = t80366 + t80371 + t80337 + t80377;
  t80386 = t80385*t79169;
  t80393 = t80392*t79154;
  t80397 = t80396*t79408;
  t80401 = t80400*t79412;
  t80402 = t80223 + t80231 + t80386 + t80393 + t80397 + t80401;
  t80403 = t79186*t79618*t80402;
  t80406 = t80236 + t80404 + t80405;
  t80407 = t79186*t79378*t80406;
  t80410 = -1.*t80400*t79739;
  t80411 = -1.*t80396*t79735;
  t80412 = t80244 + t80246 + t80408 + t80409 + t80410 + t80411;
  t80413 = t79186*t79378*t80412;
  t80414 = -1.*t80385*t79739;
  t80415 = -1.*t80392*t79735;
  t80416 = t80240 + t80414 + t80415;
  t80417 = t79186*t79077*t80416;
  t80418 = t80403 + t80407 + t80413 + t80417;
  t80423 = t79186*t80422*t79618;
  t80424 = t80385*t79739;
  t80425 = t80392*t79735;
  t80426 = t80258 + t80424 + t80425;
  t80427 = t79052*t80426;
  t80428 = t80423 + t80427;
  t80433 = t79186*t80432*t79378;
  t80434 = t80244 + t80408 + t80409;
  t80435 = t79052*t80434;
  t80436 = t80433 + t80435;
  t80438 = t79186*t80422*t79378;
  t80439 = -1.*t80183*t80396;
  t80440 = -1.*t80187*t80400;
  t80441 = t80439 + t80440 + t80356;
  t80442 = t79186*t80441*t79618;
  t80443 = t80400*t79739;
  t80444 = t80396*t79735;
  t80445 = t80236 + t80276 + t80404 + t80405 + t80443 + t80444;
  t80446 = t79052*t80445;
  t80447 = t80438 + t80442 + t80446;
  t80449 = t79186*t80432*t79077;
  t80450 = t80183*t80396;
  t80451 = t80187*t80400;
  t80452 = t80450 + t80451 + t80369;
  t80453 = t79186*t80452*t79378;
  t80454 = -1.*t80385*t79169;
  t80455 = -1.*t80392*t79154;
  t80456 = -1.*t80396*t79408;
  t80457 = -1.*t80400*t79412;
  t80458 = t80284 + t80286 + t80454 + t80455 + t80456 + t80457;
  t80459 = t79052*t80458;
  t80460 = t80449 + t80453 + t80459;
  t80486 = 0.15*t80485*t79423;
  t80490 = 0.15*t79251*t80489;
  t80491 = 0.15*t80489*t79770;
  t80495 = 0.15*t79423*t80494;
  t80496 = t80486 + t80490 + t80491 + t80495;
  t80507 = t79414*t80506;
  t80510 = t80244 + t80508 + t80509;
  t80511 = t80189*t80510;
  t80512 = t80507 + t80511;
  t80517 = t80194*t80516;
  t80522 = t80369 + t80517 + t80521;
  t80523 = t79414*t80522;
  t80524 = t79172*t80506;
  t80526 = -1.*t80500*t79223;
  t80527 = -1.*t80516*t79419;
  t80529 = t80284 + t80286 + t80525 + t80526 + t80527 + t80528;
  t80530 = t80189*t80529;
  t80531 = t80523 + t80524 + t80530;
  t80533 = -1.*t80194*t80516;
  t80535 = t80356 + t80533 + t80534;
  t80536 = t79741*t80535;
  t80540 = t79414*t80539;
  t80544 = t80516*t79756;
  t80545 = t80236 + t80276 + t80541 + t80542 + t80543 + t80544;
  t80546 = t80189*t80545;
  t80547 = t80536 + t80540 + t80546;
  t80550 = t80500*t79223;
  t80551 = t80516*t79419;
  t80553 = t80223 + t80231 + t80549 + t80550 + t80551 + t80552;
  t80554 = t79741*t80553;
  t80555 = t80236 + t80541 + t80542;
  t80556 = t79414*t80555;
  t80558 = -1.*t80516*t79756;
  t80559 = t80244 + t80246 + t80508 + t80509 + t80557 + t80558;
  t80560 = t79414*t80559;
  t80562 = -1.*t80500*t79756;
  t80563 = t80240 + t80561 + t80562;
  t80564 = t79172*t80563;
  t80565 = t80554 + t80556 + t80560 + t80564;
  t80567 = t79741*t80539;
  t80569 = t80500*t79756;
  t80570 = t80258 + t80568 + t80569;
  t80571 = t80189*t80570;
  t80572 = t80567 + t80571;
  t80582 = t80578*t80581;
  t80586 = t80196*t80585;
  t80587 = t80521 + t80582 + t80586;
  t80588 = t80466*t80587;
  t80598 = t80470*t80597;
  t80599 = -1.*t80591*t80470;
  t80600 = -1.*t80595*t79243;
  t80601 = -1.*t80581*t80466;
  t80602 = -1.*t80585*t79421;
  t80603 = t80525 + t80528 + t80599 + t80600 + t80601 + t80602;
  t80604 = t80578*t80603;
  t80605 = t80588 + t80598 + t80604;
  t80607 = t80466*t80597;
  t80610 = t80509 + t80608 + t80609;
  t80611 = t80578*t80610;
  t80612 = t80607 + t80611;
  t80614 = -1.*t80578*t80581;
  t80615 = -1.*t80196*t80585;
  t80616 = t80534 + t80614 + t80615;
  t80617 = t80474*t80616;
  t80621 = t80466*t80620;
  t80624 = t80581*t80474;
  t80625 = t80585*t79768;
  t80626 = t80542 + t80543 + t80622 + t80623 + t80624 + t80625;
  t80627 = t80578*t80626;
  t80628 = t80617 + t80621 + t80627;
  t80630 = t80591*t80470;
  t80631 = t80595*t79243;
  t80632 = t80581*t80466;
  t80633 = t80585*t79421;
  t80634 = t80549 + t80552 + t80630 + t80631 + t80632 + t80633;
  t80635 = t80474*t80634;
  t80636 = t80542 + t80622 + t80623;
  t80637 = t80466*t80636;
  t80638 = -1.*t80581*t80474;
  t80639 = -1.*t80585*t79768;
  t80640 = t80509 + t80557 + t80608 + t80609 + t80638 + t80639;
  t80641 = t80466*t80640;
  t80642 = -1.*t80591*t80474;
  t80643 = -1.*t80595*t79768;
  t80644 = t80561 + t80642 + t80643;
  t80645 = t80470*t80644;
  t80646 = t80635 + t80637 + t80641 + t80645;
  t80648 = t80474*t80620;
  t80649 = t80591*t80474;
  t80650 = t80595*t79768;
  t80651 = t80568 + t80649 + t80650;
  t80652 = t80578*t80651;
  t80653 = t80648 + t80652;
  t80467 = 0.15*t80466*t79251;
  t80471 = 0.15*t80470*t79423;
  t80475 = 0.15*t80474*t79423;
  t80476 = 0.15*t80466*t79770;
  t80477 = t80467 + t80471 + t80475 + t80476;
  t80718 = 0.15*t80466*t80485;
  t80719 = 0.15*t80470*t80489;
  t80720 = 0.15*t80474*t80489;
  t80721 = 0.15*t80466*t80494;
  t80722 = t80718 + t80719 + t80720 + t80721;
  t80823 = 1.e-6*t80466;
  t80853 = -0.000099*t80466;
  t80852 = 0.000171*t80470;
  t80854 = t80852 + t80853;
  t80856 = -0.000099*t80470;
  t80857 = 0.000287*t80466;
  t80858 = t80856 + t80857;
  t80860 = 0.000171*t80466;
  t80861 = -0.000099*t80474;
  t80862 = t80860 + t80861;
  t80864 = 1.e-6*t80578;
  t80865 = 0.000287*t80474;
  t80866 = t80864 + t80853 + t80865;
  t80875 = t80474*t80636;
  t80876 = t80466*t80644;
  t80877 = t80875 + t80876;
  t80882 = 1.e-6*t79052*t80466;
  t80883 = t79186*t79378*t80854;
  t80884 = t79186*t79618*t80858;
  t80885 = t79186*t79077*t80862;
  t80886 = t79186*t79378*t80866;
  t80814 = 0.15*t80474*t80605;
  t80815 = 0.15*t80466*t80612;
  t80816 = 0.15*t80466*t80628;
  t80817 = 0.15*t80578*t80646;
  t80818 = 0.15*t80470*t80653;
  t80819 = t80814 + t80815 + t80816 + t80817 + t80818;
  t80606 = 0.15*t79770*t80605;
  t80613 = 0.15*t79423*t80612;
  t80629 = 0.15*t79423*t80628;
  t80647 = 0.15*t80198*t80646;
  t80654 = 0.15*t79251*t80653;
  t80655 = t80606 + t80613 + t80629 + t80647 + t80654;
  t80736 = 0.15*t80494*t80605;
  t80737 = 0.15*t80489*t80612;
  t80738 = 0.15*t80489*t80628;
  t80739 = 0.15*t80689*t80646;
  t80740 = 0.15*t80485*t80653;
  t80741 = t80736 + t80737 + t80738 + t80739 + t80740;
  t80952 = 1.e-6*t79414;
  t80982 = -0.000099*t79414;
  t80871 = t79603*t80168;
  t80872 = t79382*t80178;
  t80873 = -0.049 + t80871 + t80872;
  t80932 = t79741*t80555;
  t80933 = t79414*t80563;
  t80934 = t80932 + t80933;
  t80981 = 0.000171*t79172;
  t80983 = t80981 + t80982;
  t80985 = -0.000099*t79172;
  t80986 = 0.000287*t79414;
  t80987 = t80985 + t80986;
  t80989 = 0.000171*t79414;
  t80990 = -0.000099*t79741;
  t80991 = t80989 + t80990;
  t80993 = 1.e-6*t80189;
  t80994 = 0.000287*t79741;
  t80995 = t80993 + t80982 + t80994;
  t80890 = t79186*t79618*t80238;
  t80891 = t79186*t79378*t80242;
  t80892 = t80890 + t80891;
  t81005 = 1.e-6*t79052*t79414;
  t81006 = t79186*t79378*t80983;
  t81007 = t79186*t79618*t80987;
  t81008 = t79186*t79077*t80991;
  t81009 = t79186*t79378*t80995;
  t80901 = -0.135*t79186*t77888;
  t80902 = t79186*t79618*t80319;
  t80903 = t79186*t79378*t80329;
  t80904 = t80901 + t80902 + t80903;
  t80913 = t79186*t79618*t80406;
  t80914 = t79186*t79378*t80416;
  t80915 = t80913 + t80914;
  t80807 = 0.15*t80474*t80531;
  t80808 = 0.15*t80466*t80512;
  t80809 = 0.15*t80466*t80547;
  t80810 = 0.15*t80578*t80565;
  t80811 = 0.15*t80470*t80572;
  t80812 = t80807 + t80808 + t80809 + t80810 + t80811;
  t80513 = 0.15*t79423*t80512;
  t80532 = 0.15*t80531*t79770;
  t80548 = 0.15*t79423*t80547;
  t80566 = 0.15*t80198*t80565;
  t80573 = 0.15*t79251*t80572;
  t80574 = t80513 + t80532 + t80548 + t80566 + t80573;
  t80729 = 0.15*t80489*t80512;
  t80730 = 0.15*t80531*t80494;
  t80731 = 0.15*t80489*t80547;
  t80732 = 0.15*t80689*t80565;
  t80733 = 0.15*t80485*t80572;
  t80734 = t80729 + t80730 + t80731 + t80732 + t80733;
  t80929 = 0.15*t80512*t80605;
  t80930 = 0.15*t80531*t80612;
  t80931 = 0.15*t80572*t80628;
  t80935 = 0.15*t80934*t80646;
  t80936 = 0.15*t80565*t80877;
  t80937 = 0.15*t80547*t80653;
  t81056 = 1.e-6*t79186*t79378;
  t81086 = -0.000099*t79186*t79378;
  t81085 = 0.000171*t79186*t79077;
  t81087 = t81085 + t81086;
  t81089 = -0.000099*t79186*t79077;
  t81090 = 0.000287*t79186*t79378;
  t81091 = t81089 + t81090;
  t81093 = 0.000171*t79186*t79378;
  t81094 = -0.000099*t79186*t79618;
  t81095 = t81093 + t81094;
  t81097 = 1.e-6*t79052;
  t81098 = 0.000287*t79186*t79618;
  t81099 = t81097 + t81086 + t81098;
  t81109 = 1.e-6*t79186*t79052*t79378;
  t81110 = t79186*t79378*t81087;
  t81111 = t79186*t79618*t81091;
  t81112 = t79186*t79077*t81095;
  t81113 = t79186*t79378*t81099;
  t80794 = 0.15*t80418*t80578;
  t80795 = 0.15*t80428*t80470;
  t80796 = 0.15*t80436*t80466;
  t80797 = 0.15*t80447*t80466;
  t80798 = 0.15*t80460*t80474;
  t80799 = t80794 + t80795 + t80796 + t80797 + t80798;
  t80419 = 0.15*t80418*t80198;
  t80429 = 0.15*t80428*t79251;
  t80437 = 0.15*t80436*t79423;
  t80448 = 0.15*t80447*t79423;
  t80461 = 0.15*t80460*t79770;
  t80462 = t80419 + t80429 + t80437 + t80448 + t80461;
  t80711 = 0.15*t80418*t80689;
  t80712 = 0.15*t80428*t80485;
  t80713 = 0.15*t80436*t80489;
  t80714 = 0.15*t80447*t80489;
  t80715 = 0.15*t80460*t80494;
  t80716 = t80711 + t80712 + t80713 + t80714 + t80715;
  t81026 = 0.15*t80436*t80531;
  t81027 = 0.15*t80460*t80512;
  t81028 = 0.15*t80428*t80547;
  t81029 = 0.15*t80915*t80565;
  t81030 = 0.15*t80418*t80934;
  t81031 = 0.15*t80447*t80572;
  t80910 = 0.15*t80436*t80605;
  t80911 = 0.15*t80460*t80612;
  t80912 = 0.15*t80428*t80628;
  t80916 = 0.15*t80915*t80646;
  t80917 = 0.15*t80418*t80877;
  t80918 = 0.15*t80447*t80653;
  t81088 = t79382*t81087;
  t81092 = t79603*t81091;
  t81096 = t79049*t81095;
  t81100 = t79382*t81099;
  t81122 = 0.15*t80351*t80460;
  t81123 = 0.15*t80378*t80436;
  t81124 = 0.15*t80342*t80447;
  t81125 = 0.15*t80904*t80418;
  t81126 = 0.15*t80331*t80915;
  t81127 = 0.15*t80364*t80428;
  t81128 = t81109 + t81110 + t81111 + t81112 + t81113 + t81122 + t81123 + t81124 + t81125 + t81126 + t81127;
  t80787 = 0.15*t80331*t80578;
  t80788 = 0.15*t80342*t80470;
  t80789 = 0.15*t80351*t80466;
  t80790 = 0.15*t80364*t80466;
  t80791 = 0.15*t80378*t80474;
  t80792 = t80787 + t80788 + t80789 + t80790 + t80791;
  t80332 = 0.15*t80331*t80198;
  t80343 = 0.15*t80342*t79251;
  t80352 = 0.15*t80351*t79423;
  t80365 = 0.15*t80364*t79423;
  t80379 = 0.15*t80378*t79770;
  t80380 = t80332 + t80343 + t80352 + t80365 + t80379;
  t80704 = 0.15*t80331*t80689;
  t80705 = 0.15*t80342*t80485;
  t80706 = 0.15*t80351*t80489;
  t80707 = 0.15*t80364*t80489;
  t80708 = 0.15*t80378*t80494;
  t80709 = t80704 + t80705 + t80706 + t80707 + t80708;
  t81138 = 1.e-6*t79186*t79378*t80189;
  t81139 = t81095*t79172;
  t81140 = t81087*t79414;
  t81141 = t81099*t79414;
  t81142 = t81091*t79741;
  t81018 = 0.15*t80351*t80531;
  t81019 = 0.15*t80378*t80512;
  t81020 = 0.15*t80342*t80547;
  t81021 = 0.15*t80904*t80565;
  t81022 = 0.15*t80331*t80934;
  t81023 = 0.15*t80364*t80572;
  t81145 = 1.e-6*t79186*t79378*t80578;
  t81146 = t81095*t80470;
  t81147 = t81087*t80466;
  t81148 = t81099*t80466;
  t81149 = t81091*t80474;
  t80898 = 0.15*t80351*t80605;
  t80899 = 0.15*t80378*t80612;
  t80900 = 0.15*t80342*t80628;
  t80905 = 0.15*t80904*t80646;
  t80906 = 0.15*t80331*t80877;
  t80907 = 0.15*t80364*t80653;
  t81190 = 0.15*t80271*t80378;
  t81191 = 0.15*t80291*t80351;
  t81192 = 0.15*t80262*t80364;
  t81193 = 0.15*t80892*t80331;
  t81194 = 0.15*t80250*t80904;
  t81195 = 0.15*t80280*t80342;
  t81196 = t81109 + t81110 + t81111 + t81112 + t81113 + t81190 + t81191 + t81192 + t81193 + t81194 + t81195;
  t81114 = 0.15*t80271*t80460;
  t81115 = 0.15*t80291*t80436;
  t81116 = 0.15*t80262*t80447;
  t81117 = 0.15*t80892*t80418;
  t81118 = 0.15*t80250*t80915;
  t81119 = 0.15*t80280*t80428;
  t81120 = t81109 + t81110 + t81111 + t81112 + t81113 + t81114 + t81115 + t81116 + t81117 + t81118 + t81119;
  t80780 = 0.15*t80250*t80578;
  t80781 = 0.15*t80262*t80470;
  t80782 = 0.15*t80271*t80466;
  t80783 = 0.15*t80280*t80466;
  t80784 = 0.15*t80291*t80474;
  t80785 = t80780 + t80781 + t80782 + t80783 + t80784;
  t80251 = 0.15*t80250*t80198;
  t80263 = 0.15*t80262*t79251;
  t80272 = 0.15*t80271*t79423;
  t80281 = 0.15*t80280*t79423;
  t80292 = 0.15*t80291*t79770;
  t80293 = t80251 + t80263 + t80272 + t80281 + t80292;
  t80697 = 0.15*t80250*t80689;
  t80698 = 0.15*t80262*t80485;
  t80699 = 0.15*t80271*t80489;
  t80700 = 0.15*t80280*t80489;
  t80701 = 0.15*t80291*t80494;
  t80702 = t80697 + t80698 + t80699 + t80700 + t80701;
  t81010 = 0.15*t80271*t80531;
  t81011 = 0.15*t80291*t80512;
  t81012 = 0.15*t80262*t80547;
  t81013 = 0.15*t80892*t80565;
  t81014 = 0.15*t80250*t80934;
  t81015 = 0.15*t80280*t80572;
  t80887 = 0.15*t80271*t80605;
  t80888 = 0.15*t80291*t80612;
  t80889 = 0.15*t80262*t80628;
  t80893 = 0.15*t80892*t80646;
  t80894 = 0.15*t80250*t80877;
  t80895 = 0.15*t80280*t80653;
  t81265 = 1.e-6*t79382;
  t81296 = -0.000099*t79382;
  t81246 = 0.15*t80210*t80291;
  t81247 = 0.15*t80213*t80271;
  t81248 = 0.15*t80206*t80262;
  t81249 = 0.15*t80202*t80280;
  t81250 = 0.15*t80892*t80180;
  t81251 = 0.15*t80250*t80873;
  t81295 = 0.000171*t79049;
  t81297 = t81295 + t81296;
  t81299 = -0.000099*t79049;
  t81300 = 0.000287*t79382;
  t81301 = t81299 + t81300;
  t81303 = 0.000171*t79382;
  t81304 = -0.000099*t79603;
  t81305 = t81303 + t81304;
  t81307 = 0.000287*t79603;
  t81308 = t81296 + t81307;
  t81294 = 1.e-6*t79052*t79382;
  t81298 = t79186*t79378*t81297;
  t81302 = t79186*t79618*t81301;
  t81306 = t79186*t79077*t81305;
  t81309 = t79186*t79378*t81308;
  t81182 = 0.15*t80210*t80378;
  t81183 = 0.15*t80213*t80351;
  t81184 = 0.15*t80202*t80364;
  t81185 = 0.15*t80873*t80331;
  t81186 = 0.15*t80180*t80904;
  t81187 = 0.15*t80206*t80342;
  t81101 = 0.15*t80210*t80460;
  t81102 = 0.15*t80213*t80436;
  t81103 = 0.15*t80202*t80447;
  t81104 = 0.15*t80873*t80418;
  t81105 = 0.15*t80180*t80915;
  t81106 = 0.15*t80206*t80428;
  t80773 = 0.15*t80180*t80578;
  t80774 = 0.15*t80202*t80470;
  t80775 = 0.15*t80206*t80466;
  t80776 = 0.15*t80210*t80466;
  t80777 = 0.15*t80213*t80474;
  t80778 = t80773 + t80774 + t80775 + t80776 + t80777;
  t80199 = 0.15*t80180*t80198;
  t80203 = 0.15*t80202*t79251;
  t80207 = 0.15*t80206*t79423;
  t80211 = 0.15*t80210*t79423;
  t80214 = 0.15*t80213*t79770;
  t80215 = t80199 + t80203 + t80207 + t80211 + t80214;
  t80690 = 0.15*t80180*t80689;
  t80691 = 0.15*t80202*t80485;
  t80692 = 0.15*t80206*t80489;
  t80693 = 0.15*t80210*t80489;
  t80694 = 0.15*t80213*t80494;
  t80695 = t80690 + t80691 + t80692 + t80693 + t80694;
  t80997 = 0.15*t80210*t80531;
  t80998 = 0.15*t80213*t80512;
  t80999 = 0.15*t80202*t80547;
  t81000 = 0.15*t80873*t80565;
  t81001 = 0.15*t80180*t80934;
  t81002 = 0.15*t80206*t80572;
  t80868 = 0.15*t80210*t80605;
  t80869 = 0.15*t80213*t80612;
  t80870 = 0.15*t80202*t80628;
  t80874 = 0.15*t80873*t80646;
  t80878 = 0.15*t80180*t80877;
  t80879 = 0.15*t80206*t80653;
  t81288 = 0.15*t80093*t80213;
  t81289 = 0.15*t80087*t80206;
  t81290 = 0.15*t80124*t80202;
  t81291 = 0.15*t80130*t80210;
  t81292 = t81265 + t81288 + t81289 + t81290 + t81291;
  t81235 = 0.15*t80093*t80291;
  t81236 = 0.15*t80130*t80271;
  t81237 = 0.15*t80124*t80262;
  t81238 = 0.15*t80087*t80280;
  t81239 = t81056 + t81235 + t81236 + t81237 + t81238;
  t81176 = 0.15*t80093*t80378;
  t81177 = 0.15*t80130*t80351;
  t81178 = 0.15*t80087*t80364;
  t81179 = 0.15*t80124*t80342;
  t81180 = t81056 + t81176 + t81177 + t81178 + t81179;
  t81079 = 0.15*t80093*t80460;
  t81080 = 0.15*t80130*t80436;
  t81081 = 0.15*t80087*t80447;
  t81082 = 0.15*t80124*t80428;
  t81083 = t81056 + t81079 + t81080 + t81081 + t81082;
  t80767 = 0.15*t80087*t80470;
  t80768 = 0.15*t80093*t80466;
  t80769 = 0.15*t80124*t80466;
  t80770 = 0.15*t80130*t80474;
  t80771 = t80767 + t80768 + t80769 + t80770;
  t80088 = 0.15*t80087*t79251;
  t80094 = 0.15*t80093*t79423;
  t80125 = 0.15*t80124*t79423;
  t80131 = 0.15*t80130*t79770;
  t80132 = t80088 + t80094 + t80125 + t80131;
  t80681 = 0.15*t80087*t80485;
  t80682 = 0.15*t80093*t80489;
  t80683 = 0.15*t80124*t80489;
  t80684 = 0.15*t80130*t80494;
  t80685 = t80681 + t80682 + t80683 + t80684;
  t80975 = 0.15*t80093*t80531;
  t80976 = 0.15*t80130*t80512;
  t80977 = 0.15*t80087*t80547;
  t80978 = 0.15*t80124*t80572;
  t80979 = t80952 + t80975 + t80976 + t80977 + t80978;
  t80846 = 0.15*t80093*t80605;
  t80847 = 0.15*t80130*t80612;
  t80848 = 0.15*t80087*t80628;
  t80849 = 0.15*t80124*t80653;
  t80850 = t80823 + t80846 + t80847 + t80848 + t80849;
  t81360 = 0.15*t80010*t80130;
  t81361 = 0.15*t80041*t80093;
  t81362 = 0.15*t79999*t80124;
  t81363 = 0.15*t80035*t80087;
  t81364 = t81360 + t81361 + t81362 + t81363;
  t81282 = 0.15*t80010*t80213;
  t81283 = 0.15*t79999*t80206;
  t81284 = 0.15*t80035*t80202;
  t81285 = 0.15*t80041*t80210;
  t81286 = t81265 + t81282 + t81283 + t81284 + t81285;
  t81229 = 0.15*t80010*t80291;
  t81230 = 0.15*t80041*t80271;
  t81231 = 0.15*t80035*t80262;
  t81232 = 0.15*t79999*t80280;
  t81233 = t81056 + t81229 + t81230 + t81231 + t81232;
  t81170 = 0.15*t80010*t80378;
  t81171 = 0.15*t80041*t80351;
  t81172 = 0.15*t79999*t80364;
  t81173 = 0.15*t80035*t80342;
  t81174 = t81056 + t81170 + t81171 + t81172 + t81173;
  t81073 = 0.15*t80010*t80460;
  t81074 = 0.15*t80041*t80436;
  t81075 = 0.15*t79999*t80447;
  t81076 = 0.15*t80035*t80428;
  t81077 = t81056 + t81073 + t81074 + t81075 + t81076;
  t80761 = 0.15*t79999*t80470;
  t80762 = 0.15*t80010*t80466;
  t80763 = 0.15*t80035*t80466;
  t80764 = 0.15*t80041*t80474;
  t80765 = t80761 + t80762 + t80763 + t80764;
  t80000 = 0.15*t79999*t79251;
  t80011 = 0.15*t80010*t79423;
  t80036 = 0.15*t80035*t79423;
  t80042 = 0.15*t80041*t79770;
  t80043 = t80000 + t80011 + t80036 + t80042;
  t80675 = 0.15*t79999*t80485;
  t80676 = 0.15*t80010*t80489;
  t80677 = 0.15*t80035*t80489;
  t80678 = 0.15*t80041*t80494;
  t80679 = t80675 + t80676 + t80677 + t80678;
  t80969 = 0.15*t80010*t80531;
  t80970 = 0.15*t80041*t80512;
  t80971 = 0.15*t79999*t80547;
  t80972 = 0.15*t80035*t80572;
  t80973 = t80952 + t80969 + t80970 + t80971 + t80972;
  t80840 = 0.15*t80010*t80605;
  t80841 = 0.15*t80041*t80612;
  t80842 = 0.15*t79999*t80628;
  t80843 = 0.15*t80035*t80653;
  t80844 = t80823 + t80840 + t80841 + t80842 + t80843;
  t81391 = 0.15*t79856*t80041;
  t81392 = 0.15*t79923*t80010;
  t81393 = 0.15*t79850*t80035;
  t81394 = 0.15*t79917*t79999;
  t81395 = t81391 + t81392 + t81393 + t81394;
  t81354 = 0.15*t79856*t80130;
  t81355 = 0.15*t79923*t80093;
  t81356 = 0.15*t79850*t80124;
  t81357 = 0.15*t79917*t80087;
  t81358 = t81354 + t81355 + t81356 + t81357;
  t81276 = 0.15*t79856*t80213;
  t81277 = 0.15*t79850*t80206;
  t81278 = 0.15*t79917*t80202;
  t81279 = 0.15*t79923*t80210;
  t81280 = t81265 + t81276 + t81277 + t81278 + t81279;
  t81223 = 0.15*t79856*t80291;
  t81224 = 0.15*t79923*t80271;
  t81225 = 0.15*t79917*t80262;
  t81226 = 0.15*t79850*t80280;
  t81227 = t81056 + t81223 + t81224 + t81225 + t81226;
  t81164 = 0.15*t79856*t80378;
  t81165 = 0.15*t79923*t80351;
  t81166 = 0.15*t79850*t80364;
  t81167 = 0.15*t79917*t80342;
  t81168 = t81056 + t81164 + t81165 + t81166 + t81167;
  t81067 = 0.15*t79856*t80460;
  t81068 = 0.15*t79923*t80436;
  t81069 = 0.15*t79850*t80447;
  t81070 = 0.15*t79917*t80428;
  t81071 = t81056 + t81067 + t81068 + t81069 + t81070;
  t80755 = 0.15*t79850*t80470;
  t80756 = 0.15*t79856*t80466;
  t80757 = 0.15*t79917*t80466;
  t80758 = 0.15*t79923*t80474;
  t80759 = t80755 + t80756 + t80757 + t80758;
  t79851 = 0.15*t79850*t79251;
  t79857 = 0.15*t79856*t79423;
  t79918 = 0.15*t79917*t79423;
  t79924 = 0.15*t79923*t79770;
  t79925 = t79851 + t79857 + t79918 + t79924;
  t80669 = 0.15*t79850*t80485;
  t80670 = 0.15*t79856*t80489;
  t80671 = 0.15*t79917*t80489;
  t80672 = 0.15*t79923*t80494;
  t80673 = t80669 + t80670 + t80671 + t80672;
  t80963 = 0.15*t79856*t80531;
  t80964 = 0.15*t79923*t80512;
  t80965 = 0.15*t79850*t80547;
  t80966 = 0.15*t79917*t80572;
  t80967 = t80952 + t80963 + t80964 + t80965 + t80966;
  t80834 = 0.15*t79856*t80605;
  t80835 = 0.15*t79923*t80612;
  t80836 = 0.15*t79850*t80628;
  t80837 = 0.15*t79917*t80653;
  t80838 = t80823 + t80834 + t80835 + t80836 + t80837;
  t81417 = 0.15*t79569*t79923;
  t81418 = 0.15*t79586*t79856;
  t81419 = 0.15*t79516*t79917;
  t81420 = 0.15*t79582*t79850;
  t81421 = t81417 + t81418 + t81419 + t81420;
  t81385 = 0.15*t79569*t80041;
  t81386 = 0.15*t79586*t80010;
  t81387 = 0.15*t79516*t80035;
  t81388 = 0.15*t79582*t79999;
  t81389 = t81385 + t81386 + t81387 + t81388;
  t81348 = 0.15*t79569*t80130;
  t81349 = 0.15*t79586*t80093;
  t81350 = 0.15*t79516*t80124;
  t81351 = 0.15*t79582*t80087;
  t81352 = t81348 + t81349 + t81350 + t81351;
  t81270 = 0.15*t79569*t80213;
  t81271 = 0.15*t79516*t80206;
  t81272 = 0.15*t79582*t80202;
  t81273 = 0.15*t79586*t80210;
  t81274 = t81265 + t81270 + t81271 + t81272 + t81273;
  t81217 = 0.15*t79569*t80291;
  t81218 = 0.15*t79586*t80271;
  t81219 = 0.15*t79582*t80262;
  t81220 = 0.15*t79516*t80280;
  t81221 = t81056 + t81217 + t81218 + t81219 + t81220;
  t81158 = 0.15*t79569*t80378;
  t81159 = 0.15*t79586*t80351;
  t81160 = 0.15*t79516*t80364;
  t81161 = 0.15*t79582*t80342;
  t81162 = t81056 + t81158 + t81159 + t81160 + t81161;
  t81061 = 0.15*t79569*t80460;
  t81062 = 0.15*t79586*t80436;
  t81063 = 0.15*t79516*t80447;
  t81064 = 0.15*t79582*t80428;
  t81065 = t81056 + t81061 + t81062 + t81063 + t81064;
  t80749 = 0.15*t79516*t80470;
  t80750 = 0.15*t79569*t80466;
  t80751 = 0.15*t79582*t80466;
  t80752 = 0.15*t79586*t80474;
  t80753 = t80749 + t80750 + t80751 + t80752;
  t79517 = 0.15*t79516*t79251;
  t79570 = 0.15*t79569*t79423;
  t79583 = 0.15*t79582*t79423;
  t79771 = 0.15*t79586*t79770;
  t79775 = t79517 + t79570 + t79583 + t79771;
  t80663 = 0.15*t79516*t80485;
  t80664 = 0.15*t79569*t80489;
  t80665 = 0.15*t79582*t80489;
  t80666 = 0.15*t79586*t80494;
  t80667 = t80663 + t80664 + t80665 + t80666;
  t80957 = 0.15*t79569*t80531;
  t80958 = 0.15*t79586*t80512;
  t80959 = 0.15*t79516*t80547;
  t80960 = 0.15*t79582*t80572;
  t80961 = t80952 + t80957 + t80958 + t80959 + t80960;
  t80828 = 0.15*t79569*t80605;
  t80829 = 0.15*t79586*t80612;
  t80830 = 0.15*t79516*t80628;
  t80831 = 0.15*t79582*t80653;
  t80832 = t80823 + t80828 + t80829 + t80830 + t80831;
  t81440 = -0.004125*t79586;
  t81441 = 0.000705*t79582;
  t81442 = t81440 + t81441;
  t81413 = -0.004125*t79923;
  t81414 = 0.000705*t79917;
  t81415 = t81413 + t81414;
  t81381 = -0.004125*t80041;
  t81382 = 0.000705*t80035;
  t81383 = t81381 + t81382;
  t81344 = -0.004125*t80130;
  t81345 = 0.000705*t80124;
  t81346 = t81344 + t81345;
  t81266 = -0.004125*t80213;
  t81267 = 0.000705*t80206;
  t81268 = t81265 + t81266 + t81267;
  t81213 = -0.004125*t80291;
  t81214 = 0.000705*t80280;
  t81215 = t81056 + t81213 + t81214;
  t81154 = -0.004125*t80378;
  t81155 = 0.000705*t80364;
  t81156 = t81056 + t81154 + t81155;
  t81057 = -0.004125*t80460;
  t81058 = 0.000705*t80447;
  t81059 = t81056 + t81057 + t81058;
  t80745 = 0.000705*t80470;
  t80746 = -0.004125*t80466;
  t80747 = t80745 + t80746;
  t79256 = 0.000705*t79251;
  t79424 = -0.004125*t79423;
  t79425 = t79256 + t79424;
  t80659 = 0.000705*t80485;
  t80660 = -0.004125*t80489;
  t80661 = t80659 + t80660;
  t80953 = -0.004125*t80531;
  t80954 = 0.000705*t80547;
  t80955 = t80952 + t80953 + t80954;
  t80824 = -0.004125*t80605;
  t80825 = 0.000705*t80628;
  t80826 = t80823 + t80824 + t80825;
  p_output1[0]=var2[21]*(-0.5*(0.3*t79251*t79423 + 0.3*t79423*t79770)*var2[0] - 0.5*t80496*var2[1] - 0.5*t80477*var2[2] - 0.5*t80655*var2[3] - 0.5*t80574*var2[4] - 0.5*t80462*var2[5] - 0.5*t80380*var2[14] - 0.5*t80293*var2[15] - 0.5*t80215*var2[16] - 0.5*t80132*var2[17] - 0.5*t80043*var2[18] - 0.5*t79925*var2[19] - 0.5*t79775*var2[20] - 0.5*t79425*var2[21]);
  p_output1[1]=var2[21]*(-0.5*t80496*var2[0] - 0.5*(0.3*t80485*t80489 + 0.3*t80489*t80494)*var2[1] - 0.5*t80722*var2[2] - 0.5*t80741*var2[3] - 0.5*t80734*var2[4] - 0.5*t80716*var2[5] - 0.5*t80709*var2[14] - 0.5*t80702*var2[15] - 0.5*t80695*var2[16] - 0.5*t80685*var2[17] - 0.5*t80679*var2[18] - 0.5*t80673*var2[19] - 0.5*t80667*var2[20] - 0.5*t80661*var2[21]);
  p_output1[2]=var2[21]*(-0.5*t80477*var2[0] - 0.5*t80722*var2[1] - 0.5*(0.3*t80466*t80470 + 0.3*t80466*t80474)*var2[2] - 0.5*t80819*var2[3] - 0.5*t80812*var2[4] - 0.5*t80799*var2[5] - 0.5*t80792*var2[14] - 0.5*t80785*var2[15] - 0.5*t80778*var2[16] - 0.5*t80771*var2[17] - 0.5*t80765*var2[18] - 0.5*t80759*var2[19] - 0.5*t80753*var2[20] - 0.5*t80747*var2[21]);
  p_output1[3]=var2[21]*(-0.5*t80655*var2[0] - 0.5*t80741*var2[1] - 0.5*t80819*var2[2] - 0.5*(1.e-6*t80466*t80578 + 0.3*t80605*t80612 + 0.3*t80628*t80653 + t80466*t80854 + t80474*t80858 + t80470*t80862 + t80466*t80866 + 0.3*t80646*t80877)*var2[3] - 0.5*(1.e-6*t80189*t80466 + t79414*t80854 + t79741*t80858 + t79172*t80862 + t79414*t80866 + t80929 + t80930 + t80931 + t80935 + t80936 + t80937)*var2[4] - 0.5*(t80882 + t80883 + t80884 + t80885 + t80886 + t80910 + t80911 + t80912 + t80916 + t80917 + t80918)*var2[5] - 0.5*(t80882 + t80883 + t80884 + t80885 + t80886 + t80898 + t80899 + t80900 + t80905 + t80906 + t80907)*var2[14] - 0.5*(t80882 + t80883 + t80884 + t80885 + t80886 + t80887 + t80888 + t80889 + t80893 + t80894 + t80895)*var2[15] - 0.5*(t79382*t80854 + t79603*t80858 + t79049*t80862 + t79382*t80866 + t80868 + t80869 + t80870 + t80874 + t80878 + t80879)*var2[16] - 0.5*t80850*var2[17] - 0.5*t80844*var2[18] - 0.5*t80838*var2[19] - 0.5*t80832*var2[20] - 0.5*t80826*var2[21]);
  p_output1[4]=var2[21]*(-0.5*t80574*var2[0] - 0.5*t80734*var2[1] - 0.5*t80812*var2[2] - 0.5*(1.e-6*t79414*t80578 + t80929 + t80930 + t80931 + t80935 + t80936 + t80937 + t80466*t80983 + t80474*t80987 + t80470*t80991 + t80466*t80995)*var2[3] - 0.5*(1.e-6*t79414*t80189 + 0.3*t80512*t80531 + 0.3*t80547*t80572 + 0.3*t80565*t80934 + t79414*t80983 + t79741*t80987 + t79172*t80991 + t79414*t80995)*var2[4] - 0.5*(t81005 + t81006 + t81007 + t81008 + t81009 + t81026 + t81027 + t81028 + t81029 + t81030 + t81031)*var2[5] - 0.5*(t81005 + t81006 + t81007 + t81008 + t81009 + t81018 + t81019 + t81020 + t81021 + t81022 + t81023)*var2[14] - 0.5*(t81005 + t81006 + t81007 + t81008 + t81009 + t81010 + t81011 + t81012 + t81013 + t81014 + t81015)*var2[15] - 0.5*(t79382*t80983 + t79603*t80987 + t79049*t80991 + t79382*t80995 + t80997 + t80998 + t80999 + t81000 + t81001 + t81002)*var2[16] - 0.5*t80979*var2[17] - 0.5*t80973*var2[18] - 0.5*t80967*var2[19] - 0.5*t80961*var2[20] - 0.5*t80955*var2[21]);
  p_output1[5]=var2[21]*(-0.5*t80462*var2[0] - 0.5*t80716*var2[1] - 0.5*t80799*var2[2] - 0.5*(t80910 + t80911 + t80912 + t80916 + t80917 + t80918 + t81145 + t81146 + t81147 + t81148 + t81149)*var2[3] - 0.5*(t81026 + t81027 + t81028 + t81029 + t81030 + t81031 + t81138 + t81139 + t81140 + t81141 + t81142)*var2[4] - 0.5*(0.3*t80428*t80447 + 0.3*t80436*t80460 + 0.3*t80418*t80915 + t81109 + t81110 + t81111 + t81112 + t81113)*var2[5] - 0.5*t81128*var2[14] - 0.5*t81120*var2[15] - 0.5*(t81088 + t81092 + t81096 + t81100 + t81101 + t81102 + t81103 + t81104 + t81105 + t81106)*var2[16] - 0.5*t81083*var2[17] - 0.5*t81077*var2[18] - 0.5*t81071*var2[19] - 0.5*t81065*var2[20] - 0.5*t81059*var2[21]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=var2[21]*(-0.5*t80380*var2[0] - 0.5*t80709*var2[1] - 0.5*t80792*var2[2] - 0.5*(t80898 + t80899 + t80900 + t80905 + t80906 + t80907 + t81145 + t81146 + t81147 + t81148 + t81149)*var2[3] - 0.5*(t81018 + t81019 + t81020 + t81021 + t81022 + t81023 + t81138 + t81139 + t81140 + t81141 + t81142)*var2[4] - 0.5*t81128*var2[5] - 0.5*(0.3*t80342*t80364 + 0.3*t80351*t80378 + 0.3*t80331*t80904 + t81109 + t81110 + t81111 + t81112 + t81113)*var2[14] - 0.5*t81196*var2[15] - 0.5*(t81088 + t81092 + t81096 + t81100 + t81182 + t81183 + t81184 + t81185 + t81186 + t81187)*var2[16] - 0.5*t81180*var2[17] - 0.5*t81174*var2[18] - 0.5*t81168*var2[19] - 0.5*t81162*var2[20] - 0.5*t81156*var2[21]);
  p_output1[15]=var2[21]*(-0.5*t80293*var2[0] - 0.5*t80702*var2[1] - 0.5*t80785*var2[2] - 0.5*(t80887 + t80888 + t80889 + t80893 + t80894 + t80895 + t81145 + t81146 + t81147 + t81148 + t81149)*var2[3] - 0.5*(t81010 + t81011 + t81012 + t81013 + t81014 + t81015 + t81138 + t81139 + t81140 + t81141 + t81142)*var2[4] - 0.5*t81120*var2[5] - 0.5*t81196*var2[14] - 0.5*(0.3*t80262*t80280 + 0.3*t80271*t80291 + 0.3*t80250*t80892 + t81109 + t81110 + t81111 + t81112 + t81113)*var2[15] - 0.5*(t81088 + t81092 + t81096 + t81100 + t81246 + t81247 + t81248 + t81249 + t81250 + t81251)*var2[16] - 0.5*t81239*var2[17] - 0.5*t81233*var2[18] - 0.5*t81227*var2[19] - 0.5*t81221*var2[20] - 0.5*t81215*var2[21]);
  p_output1[16]=var2[21]*(-0.5*t80215*var2[0] - 0.5*t80695*var2[1] - 0.5*t80778*var2[2] - 0.5*(1.e-6*t79382*t80578 + t80868 + t80869 + t80870 + t80874 + t80878 + t80879 + t80466*t81297 + t80474*t81301 + t80470*t81305 + t80466*t81308)*var2[3] - 0.5*(1.e-6*t79382*t80189 + t80997 + t80998 + t80999 + t81000 + t81001 + t81002 + t79414*t81297 + t79741*t81301 + t79172*t81305 + t79414*t81308)*var2[4] - 0.5*(t81101 + t81102 + t81103 + t81104 + t81105 + t81106 + t81294 + t81298 + t81302 + t81306 + t81309)*var2[5] - 0.5*(t81182 + t81183 + t81184 + t81185 + t81186 + t81187 + t81294 + t81298 + t81302 + t81306 + t81309)*var2[14] - 0.5*(t81246 + t81247 + t81248 + t81249 + t81250 + t81251 + t81294 + t81298 + t81302 + t81306 + t81309)*var2[15] - 0.5*(0.3*t80202*t80206 + 0.3*t80210*t80213 + 0.3*t80180*t80873 + t79382*t81297 + t79603*t81301 + t79049*t81305 + t79382*t81308)*var2[16] - 0.5*t81292*var2[17] - 0.5*t81286*var2[18] - 0.5*t81280*var2[19] - 0.5*t81274*var2[20] - 0.5*t81268*var2[21]);
  p_output1[17]=var2[21]*(-0.5*t80132*var2[0] - 0.5*t80685*var2[1] - 0.5*t80771*var2[2] - 0.5*t80850*var2[3] - 0.5*t80979*var2[4] - 0.5*t81083*var2[5] - 0.5*t81180*var2[14] - 0.5*t81239*var2[15] - 0.5*t81292*var2[16] - 0.5*(0.3*t80087*t80124 + 0.3*t80093*t80130)*var2[17] - 0.5*t81364*var2[18] - 0.5*t81358*var2[19] - 0.5*t81352*var2[20] - 0.5*t81346*var2[21]);
  p_output1[18]=var2[21]*(-0.5*t80043*var2[0] - 0.5*t80679*var2[1] - 0.5*t80765*var2[2] - 0.5*t80844*var2[3] - 0.5*t80973*var2[4] - 0.5*t81077*var2[5] - 0.5*t81174*var2[14] - 0.5*t81233*var2[15] - 0.5*t81286*var2[16] - 0.5*t81364*var2[17] - 0.5*(0.3*t79999*t80035 + 0.3*t80010*t80041)*var2[18] - 0.5*t81395*var2[19] - 0.5*t81389*var2[20] - 0.5*t81383*var2[21]);
  p_output1[19]=var2[21]*(-0.5*t79925*var2[0] - 0.5*t80673*var2[1] - 0.5*t80759*var2[2] - 0.5*t80838*var2[3] - 0.5*t80967*var2[4] - 0.5*t81071*var2[5] - 0.5*t81168*var2[14] - 0.5*t81227*var2[15] - 0.5*t81280*var2[16] - 0.5*t81358*var2[17] - 0.5*t81395*var2[18] - 0.5*(0.3*t79850*t79917 + 0.3*t79856*t79923)*var2[19] - 0.5*t81421*var2[20] - 0.5*t81415*var2[21]);
  p_output1[20]=var2[21]*(-0.5*t79775*var2[0] - 0.5*t80667*var2[1] - 0.5*t80753*var2[2] - 0.5*t80832*var2[3] - 0.5*t80961*var2[4] - 0.5*t81065*var2[5] - 0.5*t81162*var2[14] - 0.5*t81221*var2[15] - 0.5*t81274*var2[16] - 0.5*t81352*var2[17] - 0.5*t81389*var2[18] - 0.5*t81421*var2[19] - 0.5*(0.3*t79516*t79582 + 0.3*t79569*t79586)*var2[20] - 0.5*t81442*var2[21]);
  p_output1[21]=(-0.5*t79425*var2[0] - 0.5*t80661*var2[1] - 0.5*t80747*var2[2] - 0.5*t80826*var2[3] - 0.5*t80955*var2[4] - 0.5*t81059*var2[5] - 0.5*t81156*var2[14] - 0.5*t81215*var2[15] - 0.5*t81268*var2[16] - 0.5*t81346*var2[17] - 0.5*t81383*var2[18] - 0.5*t81415*var2[19] - 0.5*t81442*var2[20])*var2[21];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 22, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce2_vec22_cassie.hh"

namespace SymFunction
{

void Ce2_vec22_cassie_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
