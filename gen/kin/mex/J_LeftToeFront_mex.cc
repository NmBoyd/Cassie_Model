/*
 * Automatically Generated from Mathematica.
 * Mon 2 Jul 2018 15:34:03 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t1232;
  double t1370;
  double t1457;
  double t1001;
  double t1477;
  double t181;
  double t1354;
  double t1478;
  double t1499;
  double t1590;
  double t1628;
  double t1664;
  double t1756;
  double t2005;
  double t2224;
  double t2248;
  double t2269;
  double t1840;
  double t1870;
  double t2003;
  double t2430;
  double t3007;
  double t3085;
  double t3088;
  double t3298;
  double t2759;
  double t2943;
  double t3004;
  double t3355;
  double t3472;
  double t3592;
  double t3954;
  double t3988;
  double t4040;
  double t4079;
  double t4131;
  double t4152;
  double t4157;
  double t4540;
  double t4558;
  double t4646;
  double t4663;
  double t4672;
  double t4681;
  double t4737;
  double t4807;
  double t4840;
  double t4847;
  double t4938;
  double t4989;
  double t5041;
  double t5080;
  double t5120;
  double t5126;
  double t5141;
  double t5213;
  double t5242;
  double t5252;
  double t5278;
  double t5281;
  double t5284;
  double t5291;
  double t5304;
  double t5305;
  double t5314;
  double t5330;
  double t5336;
  double t5348;
  double t5402;
  double t5419;
  double t5441;
  double t321;
  double t569;
  double t582;
  double t870;
  double t1758;
  double t1763;
  double t5533;
  double t5550;
  double t5558;
  double t5588;
  double t5589;
  double t5607;
  double t2251;
  double t2348;
  double t2389;
  double t2445;
  double t2485;
  double t2538;
  double t5614;
  double t5615;
  double t5624;
  double t3248;
  double t3303;
  double t3308;
  double t3812;
  double t3864;
  double t3903;
  double t4044;
  double t4084;
  double t4112;
  double t5657;
  double t5693;
  double t5703;
  double t5740;
  double t5770;
  double t5775;
  double t4291;
  double t4423;
  double t4526;
  double t4726;
  double t4771;
  double t4801;
  double t5806;
  double t5814;
  double t5850;
  double t5858;
  double t5867;
  double t5872;
  double t4890;
  double t4915;
  double t4918;
  double t5133;
  double t5177;
  double t5200;
  double t5875;
  double t5880;
  double t5882;
  double t5916;
  double t5918;
  double t5922;
  double t5266;
  double t5269;
  double t5277;
  double t5310;
  double t5322;
  double t5327;
  double t5937;
  double t5979;
  double t5987;
  double t6012;
  double t6014;
  double t6024;
  double t5365;
  double t5381;
  double t5396;
  double t6041;
  double t6044;
  double t6104;
  double t6148;
  double t6166;
  double t6171;
  double t6336;
  double t6349;
  double t6371;
  double t6412;
  double t6420;
  double t6426;
  double t6440;
  double t6445;
  double t6446;
  double t6465;
  double t6466;
  double t6473;
  double t6487;
  double t6493;
  double t6496;
  double t6501;
  double t6510;
  double t6511;
  double t6530;
  double t6536;
  double t6538;
  double t6542;
  double t6543;
  double t6561;
  double t6574;
  double t6592;
  double t6599;
  double t6631;
  double t6634;
  double t6636;
  double t6643;
  double t6650;
  double t6653;
  double t6766;
  double t6767;
  double t6773;
  double t6839;
  double t6841;
  double t6846;
  double t6859;
  double t6860;
  double t6865;
  double t6872;
  double t6890;
  double t6892;
  double t6901;
  double t6903;
  double t6912;
  double t6924;
  double t6932;
  double t6937;
  double t6951;
  double t6952;
  double t6954;
  double t6966;
  double t6979;
  double t7003;
  double t7016;
  double t7024;
  double t7027;
  double t7033;
  double t7041;
  double t7047;
  double t7056;
  double t7062;
  double t7064;
  double t7148;
  double t7149;
  double t7168;
  double t7200;
  double t7206;
  double t7209;
  double t7227;
  double t7229;
  double t7230;
  double t7248;
  double t7252;
  double t7256;
  double t7264;
  double t7270;
  double t7272;
  double t7311;
  double t7316;
  double t7317;
  double t7328;
  double t7330;
  double t7337;
  double t7347;
  double t7351;
  double t7358;
  double t7360;
  double t7371;
  double t7372;
  double t7378;
  double t7391;
  double t7403;
  double t7420;
  double t7424;
  double t7427;
  double t7476;
  double t7480;
  double t7486;
  double t7495;
  double t7496;
  double t7510;
  double t7521;
  double t7523;
  double t7530;
  double t7535;
  double t7538;
  double t7541;
  double t7542;
  double t7545;
  double t7559;
  double t7565;
  double t7566;
  double t7588;
  double t7602;
  double t7603;
  double t7608;
  double t7609;
  double t7610;
  double t7630;
  double t7634;
  double t7636;
  double t7643;
  double t7647;
  double t7650;
  double t7656;
  double t7660;
  double t7665;
  double t7712;
  double t7727;
  double t7729;
  double t7758;
  double t7759;
  double t7762;
  double t7775;
  double t7777;
  double t7784;
  double t7785;
  double t7793;
  double t7814;
  double t7815;
  double t7817;
  double t7825;
  double t7829;
  double t7835;
  double t7845;
  double t7849;
  double t7850;
  double t7854;
  double t7862;
  double t7869;
  double t7885;
  double t7886;
  double t7892;
  double t7897;
  double t7903;
  double t7908;
  double t7914;
  double t7923;
  double t7937;
  double t8004;
  double t8005;
  double t8009;
  double t8023;
  double t8027;
  double t8028;
  double t8036;
  double t8047;
  double t8049;
  double t8061;
  double t8063;
  double t8068;
  double t8074;
  double t8079;
  double t8084;
  double t8096;
  double t8100;
  double t8109;
  double t8112;
  double t8121;
  double t8124;
  double t8133;
  double t8137;
  double t8139;
  double t8144;
  double t8147;
  double t8152;
  double t8160;
  double t8165;
  double t8179;
  double t8243;
  double t8251;
  double t8253;
  double t8255;
  double t8258;
  double t8272;
  double t8273;
  double t8274;
  double t8280;
  double t8283;
  double t8285;
  double t8293;
  double t8296;
  double t8303;
  double t8311;
  double t8315;
  double t8316;
  double t8325;
  double t8327;
  double t8337;
  double t8350;
  double t8357;
  double t8360;
  double t8370;
  double t8373;
  double t8376;
  double t8424;
  double t8425;
  double t8427;
  double t8434;
  double t8442;
  double t8456;
  double t8463;
  double t8476;
  double t8477;
  double t8480;
  double t8492;
  double t8495;
  double t8503;
  double t8506;
  double t8508;
  double t8522;
  double t8548;
  double t8549;
  double t8550;
  double t8559;
  double t8562;
  double t8570;
  double t8576;
  double t8579;
  double t8589;
  double t8595;
  double t8599;
  double t8602;
  double t8607;
  double t8611;
  double t8616;
  double t8011;
  double t8013;
  double t8020;
  double t8035;
  double t8057;
  double t8072;
  double t8086;
  double t8111;
  double t8128;
  double t8143;
  double t8156;
  double t8183;
  double t8191;
  double t8195;
  double t8203;
  double t8204;
  double t8215;
  double t8221;
  double t8222;
  double t8226;
  double t5638;
  double t5644;
  double t5647;
  double t8722;
  double t8726;
  double t8729;
  double t8733;
  double t8734;
  double t8738;
  double t8741;
  double t8748;
  double t8758;
  double t8772;
  double t8776;
  double t8780;
  double t8801;
  double t8802;
  double t8809;
  double t8825;
  double t8831;
  double t8833;
  double t8665;
  double t8667;
  double t8672;
  double t8685;
  double t8689;
  double t8874;
  double t8878;
  double t8880;
  double t8889;
  double t8893;
  double t8900;
  double t8932;
  double t8934;
  double t8935;
  double t8945;
  double t8950;
  double t8952;
  double t8967;
  double t8972;
  double t8974;
  double t8979;
  double t8987;
  double t9002;
  double t9007;
  double t9016;
  double t9017;
  double t9020;
  double t9029;
  double t9030;
  double t9074;
  double t9075;
  double t9079;
  double t9084;
  double t9087;
  double t9088;
  double t9117;
  double t9119;
  double t9120;
  double t9127;
  double t9133;
  double t9134;
  double t9139;
  double t9144;
  double t9146;
  double t9149;
  double t9154;
  double t9155;
  double t9162;
  double t9163;
  double t9164;
  double t9169;
  double t9176;
  double t9181;
  double t9274;
  double t9286;
  double t9294;
  double t9299;
  double t9301;
  double t9305;
  double t9312;
  double t9313;
  double t9319;
  double t9320;
  double t9321;
  double t9324;
  double t9330;
  double t9331;
  double t9333;
  double t9337;
  double t9340;
  double t9349;
  double t9365;
  double t9376;
  double t9232;
  double t9236;
  double t9248;
  double t9251;
  double t9256;
  double t9439;
  double t9442;
  double t9444;
  double t9451;
  double t9453;
  double t9460;
  double t9468;
  double t9471;
  double t9481;
  double t9484;
  double t9489;
  double t9491;
  double t9503;
  double t9505;
  double t9506;
  double t9513;
  double t9519;
  double t9532;
  double t9538;
  double t9549;
  double t9557;
  double t9562;
  double t9576;
  double t9581;
  double t9632;
  double t9648;
  double t9649;
  double t9695;
  double t9709;
  double t9716;
  double t9721;
  double t9722;
  double t9732;
  double t9764;
  double t9769;
  double t9787;
  double t9800;
  double t9818;
  double t9822;
  double t9830;
  double t9832;
  double t9835;
  double t9844;
  double t9845;
  double t9848;
  double t9858;
  double t9859;
  double t9860;
  double t9866;
  double t9872;
  double t9873;
  double t9877;
  double t9879;
  double t9887;
  double t9988;
  double t9998;
  double t10007;
  double t10008;
  double t10010;
  double t10012;
  double t10017;
  double t10026;
  double t10036;
  double t10041;
  double t10048;
  double t10057;
  double t10058;
  double t9954;
  double t9965;
  double t9966;
  double t9974;
  double t9977;
  double t10116;
  double t10120;
  double t10131;
  double t10153;
  double t10157;
  double t10174;
  double t10180;
  double t10183;
  double t10185;
  double t10194;
  double t10221;
  double t10231;
  double t10240;
  double t10246;
  double t10252;
  double t10253;
  double t10258;
  double t10261;
  double t10265;
  double t10319;
  double t10322;
  double t10323;
  double t10338;
  double t10341;
  double t10345;
  double t10348;
  double t10362;
  double t10384;
  double t10391;
  double t10395;
  double t10406;
  double t10408;
  double t10417;
  double t10424;
  double t10436;
  double t10440;
  double t10445;
  double t10446;
  double t10529;
  double t10530;
  double t10541;
  double t10548;
  double t10560;
  double t10561;
  double t10565;
  double t10477;
  double t10480;
  double t10501;
  double t10503;
  double t10522;
  double t10622;
  double t10627;
  double t10630;
  double t10637;
  double t10638;
  double t10643;
  double t10644;
  double t10649;
  double t10650;
  double t10652;
  double t10667;
  double t10673;
  double t10674;
  double t10776;
  double t10780;
  double t10782;
  double t10790;
  double t10805;
  double t10811;
  double t10815;
  double t10818;
  double t10820;
  double t10822;
  double t10838;
  double t10862;
  double t10868;
  double t11030;
  double t11037;
  double t6254;
  double t10985;
  double t10986;
  double t10993;
  double t11003;
  double t11012;
  double t11110;
  double t11111;
  double t11113;
  double t11128;
  double t11129;
  double t11132;
  double t11135;
  double t11211;
  double t11217;
  double t11218;
  double t11239;
  double t11248;
  double t11255;
  double t11257;
  double t11055;
  double t6288;
  double t6300;
  double t11314;
  double t11317;
  double t11321;
  double t11331;
  double t11338;
  double t11142;
  double t11354;
  double t11355;
  double t11357;
  double t11161;
  double t11269;
  double t11377;
  double t11379;
  double t11380;
  double t11278;
  t1232 = Cos(var1[5]);
  t1370 = Sin(var1[3]);
  t1457 = Sin(var1[4]);
  t1001 = Cos(var1[3]);
  t1477 = Sin(var1[5]);
  t181 = Cos(var1[6]);
  t1354 = -1.*t1001*t1232;
  t1478 = -1.*t1370*t1457*t1477;
  t1499 = t1354 + t1478;
  t1590 = -1.*t1232*t1370*t1457;
  t1628 = t1001*t1477;
  t1664 = t1590 + t1628;
  t1756 = Sin(var1[6]);
  t2005 = Cos(var1[7]);
  t2224 = -1.*t2005;
  t2248 = 1. + t2224;
  t2269 = Sin(var1[7]);
  t1840 = t181*t1499;
  t1870 = t1664*t1756;
  t2003 = t1840 + t1870;
  t2430 = Cos(var1[4]);
  t3007 = Cos(var1[8]);
  t3085 = -1.*t3007;
  t3088 = 1. + t3085;
  t3298 = Sin(var1[8]);
  t2759 = -1.*t2430*t2005*t1370;
  t2943 = t2003*t2269;
  t3004 = t2759 + t2943;
  t3355 = t181*t1664;
  t3472 = -1.*t1499*t1756;
  t3592 = t3355 + t3472;
  t3954 = Cos(var1[9]);
  t3988 = -1.*t3954;
  t4040 = 1. + t3988;
  t4079 = Sin(var1[9]);
  t4131 = t3007*t3004;
  t4152 = t3592*t3298;
  t4157 = t4131 + t4152;
  t4540 = t3007*t3592;
  t4558 = -1.*t3004*t3298;
  t4646 = t4540 + t4558;
  t4663 = Cos(var1[10]);
  t4672 = -1.*t4663;
  t4681 = 1. + t4672;
  t4737 = Sin(var1[10]);
  t4807 = -1.*t4079*t4157;
  t4840 = t3954*t4646;
  t4847 = t4807 + t4840;
  t4938 = t3954*t4157;
  t4989 = t4079*t4646;
  t5041 = t4938 + t4989;
  t5080 = Cos(var1[11]);
  t5120 = -1.*t5080;
  t5126 = 1. + t5120;
  t5141 = Sin(var1[11]);
  t5213 = t4737*t4847;
  t5242 = t4663*t5041;
  t5252 = t5213 + t5242;
  t5278 = t4663*t4847;
  t5281 = -1.*t4737*t5041;
  t5284 = t5278 + t5281;
  t5291 = Cos(var1[12]);
  t5304 = -1.*t5291;
  t5305 = 1. + t5304;
  t5314 = Sin(var1[12]);
  t5330 = -1.*t5141*t5252;
  t5336 = t5080*t5284;
  t5348 = t5330 + t5336;
  t5402 = t5080*t5252;
  t5419 = t5141*t5284;
  t5441 = t5402 + t5419;
  t321 = -1.*t181;
  t569 = 1. + t321;
  t582 = 0.135*t569;
  t870 = 0. + t582;
  t1758 = -0.135*t1756;
  t1763 = 0. + t1758;
  t5533 = -1.*t1232*t1370;
  t5550 = t1001*t1457*t1477;
  t5558 = t5533 + t5550;
  t5588 = t1001*t1232*t1457;
  t5589 = t1370*t1477;
  t5607 = t5588 + t5589;
  t2251 = 0.135*t2248;
  t2348 = 0.049*t2269;
  t2389 = 0. + t2251 + t2348;
  t2445 = -0.049*t2248;
  t2485 = 0.135*t2269;
  t2538 = 0. + t2445 + t2485;
  t5614 = t181*t5558;
  t5615 = t5607*t1756;
  t5624 = t5614 + t5615;
  t3248 = -0.049*t3088;
  t3303 = -0.09*t3298;
  t3308 = 0. + t3248 + t3303;
  t3812 = -0.09*t3088;
  t3864 = 0.049*t3298;
  t3903 = 0. + t3812 + t3864;
  t4044 = -0.049*t4040;
  t4084 = -0.21*t4079;
  t4112 = 0. + t4044 + t4084;
  t5657 = t1001*t2430*t2005;
  t5693 = t5624*t2269;
  t5703 = t5657 + t5693;
  t5740 = t181*t5607;
  t5770 = -1.*t5558*t1756;
  t5775 = t5740 + t5770;
  t4291 = -0.21*t4040;
  t4423 = 0.049*t4079;
  t4526 = 0. + t4291 + t4423;
  t4726 = -0.2707*t4681;
  t4771 = 0.0016*t4737;
  t4801 = 0. + t4726 + t4771;
  t5806 = t3007*t5703;
  t5814 = t5775*t3298;
  t5850 = t5806 + t5814;
  t5858 = t3007*t5775;
  t5867 = -1.*t5703*t3298;
  t5872 = t5858 + t5867;
  t4890 = -0.0016*t4681;
  t4915 = -0.2707*t4737;
  t4918 = 0. + t4890 + t4915;
  t5133 = 0.0184*t5126;
  t5177 = -0.7055*t5141;
  t5200 = 0. + t5133 + t5177;
  t5875 = -1.*t4079*t5850;
  t5880 = t3954*t5872;
  t5882 = t5875 + t5880;
  t5916 = t3954*t5850;
  t5918 = t4079*t5872;
  t5922 = t5916 + t5918;
  t5266 = -0.7055*t5126;
  t5269 = -0.0184*t5141;
  t5277 = 0. + t5266 + t5269;
  t5310 = -1.1135*t5305;
  t5322 = 0.0216*t5314;
  t5327 = 0. + t5310 + t5322;
  t5937 = t4737*t5882;
  t5979 = t4663*t5922;
  t5987 = t5937 + t5979;
  t6012 = t4663*t5882;
  t6014 = -1.*t4737*t5922;
  t6024 = t6012 + t6014;
  t5365 = -0.0216*t5305;
  t5381 = -1.1135*t5314;
  t5396 = 0. + t5365 + t5381;
  t6041 = -1.*t5141*t5987;
  t6044 = t5080*t6024;
  t6104 = t6041 + t6044;
  t6148 = t5080*t5987;
  t6166 = t5141*t6024;
  t6171 = t6148 + t6166;
  t6336 = t1001*t2430*t181*t1477;
  t6349 = t1001*t2430*t1232*t1756;
  t6371 = t6336 + t6349;
  t6412 = -1.*t1001*t2005*t1457;
  t6420 = t6371*t2269;
  t6426 = t6412 + t6420;
  t6440 = t1001*t2430*t1232*t181;
  t6445 = -1.*t1001*t2430*t1477*t1756;
  t6446 = t6440 + t6445;
  t6465 = t3007*t6426;
  t6466 = t6446*t3298;
  t6473 = t6465 + t6466;
  t6487 = t3007*t6446;
  t6493 = -1.*t6426*t3298;
  t6496 = t6487 + t6493;
  t6501 = -1.*t4079*t6473;
  t6510 = t3954*t6496;
  t6511 = t6501 + t6510;
  t6530 = t3954*t6473;
  t6536 = t4079*t6496;
  t6538 = t6530 + t6536;
  t6542 = t4737*t6511;
  t6543 = t4663*t6538;
  t6561 = t6542 + t6543;
  t6574 = t4663*t6511;
  t6592 = -1.*t4737*t6538;
  t6599 = t6574 + t6592;
  t6631 = -1.*t5141*t6561;
  t6634 = t5080*t6599;
  t6636 = t6631 + t6634;
  t6643 = t5080*t6561;
  t6650 = t5141*t6599;
  t6653 = t6643 + t6650;
  t6766 = t2430*t181*t1370*t1477;
  t6767 = t2430*t1232*t1370*t1756;
  t6773 = t6766 + t6767;
  t6839 = -1.*t2005*t1370*t1457;
  t6841 = t6773*t2269;
  t6846 = t6839 + t6841;
  t6859 = t2430*t1232*t181*t1370;
  t6860 = -1.*t2430*t1370*t1477*t1756;
  t6865 = t6859 + t6860;
  t6872 = t3007*t6846;
  t6890 = t6865*t3298;
  t6892 = t6872 + t6890;
  t6901 = t3007*t6865;
  t6903 = -1.*t6846*t3298;
  t6912 = t6901 + t6903;
  t6924 = -1.*t4079*t6892;
  t6932 = t3954*t6912;
  t6937 = t6924 + t6932;
  t6951 = t3954*t6892;
  t6952 = t4079*t6912;
  t6954 = t6951 + t6952;
  t6966 = t4737*t6937;
  t6979 = t4663*t6954;
  t7003 = t6966 + t6979;
  t7016 = t4663*t6937;
  t7024 = -1.*t4737*t6954;
  t7027 = t7016 + t7024;
  t7033 = -1.*t5141*t7003;
  t7041 = t5080*t7027;
  t7047 = t7033 + t7041;
  t7056 = t5080*t7003;
  t7062 = t5141*t7027;
  t7064 = t7056 + t7062;
  t7148 = -1.*t181*t1457*t1477;
  t7149 = -1.*t1232*t1457*t1756;
  t7168 = t7148 + t7149;
  t7200 = -1.*t2430*t2005;
  t7206 = t7168*t2269;
  t7209 = t7200 + t7206;
  t7227 = -1.*t1232*t181*t1457;
  t7229 = t1457*t1477*t1756;
  t7230 = t7227 + t7229;
  t7248 = t3007*t7209;
  t7252 = t7230*t3298;
  t7256 = t7248 + t7252;
  t7264 = t3007*t7230;
  t7270 = -1.*t7209*t3298;
  t7272 = t7264 + t7270;
  t7311 = -1.*t4079*t7256;
  t7316 = t3954*t7272;
  t7317 = t7311 + t7316;
  t7328 = t3954*t7256;
  t7330 = t4079*t7272;
  t7337 = t7328 + t7330;
  t7347 = t4737*t7317;
  t7351 = t4663*t7337;
  t7358 = t7347 + t7351;
  t7360 = t4663*t7317;
  t7371 = -1.*t4737*t7337;
  t7372 = t7360 + t7371;
  t7378 = -1.*t5141*t7358;
  t7391 = t5080*t7372;
  t7403 = t7378 + t7391;
  t7420 = t5080*t7358;
  t7424 = t5141*t7372;
  t7427 = t7420 + t7424;
  t7476 = t1232*t1370;
  t7480 = -1.*t1001*t1457*t1477;
  t7486 = t7476 + t7480;
  t7495 = t7486*t1756;
  t7496 = t5740 + t7495;
  t7510 = t181*t7486;
  t7521 = -1.*t5607*t1756;
  t7523 = t7510 + t7521;
  t7530 = t3007*t7496*t2269;
  t7535 = t7523*t3298;
  t7538 = t7530 + t7535;
  t7541 = t3007*t7523;
  t7542 = -1.*t7496*t2269*t3298;
  t7545 = t7541 + t7542;
  t7559 = -1.*t4079*t7538;
  t7565 = t3954*t7545;
  t7566 = t7559 + t7565;
  t7588 = t3954*t7538;
  t7602 = t4079*t7545;
  t7603 = t7588 + t7602;
  t7608 = t4737*t7566;
  t7609 = t4663*t7603;
  t7610 = t7608 + t7609;
  t7630 = t4663*t7566;
  t7634 = -1.*t4737*t7603;
  t7636 = t7630 + t7634;
  t7643 = -1.*t5141*t7610;
  t7647 = t5080*t7636;
  t7650 = t7643 + t7647;
  t7656 = t5080*t7610;
  t7660 = t5141*t7636;
  t7665 = t7656 + t7660;
  t7712 = t1232*t1370*t1457;
  t7727 = -1.*t1001*t1477;
  t7729 = t7712 + t7727;
  t7758 = t181*t7729;
  t7759 = t1499*t1756;
  t7762 = t7758 + t7759;
  t7775 = -1.*t7729*t1756;
  t7777 = t1840 + t7775;
  t7784 = t3007*t7762*t2269;
  t7785 = t7777*t3298;
  t7793 = t7784 + t7785;
  t7814 = t3007*t7777;
  t7815 = -1.*t7762*t2269*t3298;
  t7817 = t7814 + t7815;
  t7825 = -1.*t4079*t7793;
  t7829 = t3954*t7817;
  t7835 = t7825 + t7829;
  t7845 = t3954*t7793;
  t7849 = t4079*t7817;
  t7850 = t7845 + t7849;
  t7854 = t4737*t7835;
  t7862 = t4663*t7850;
  t7869 = t7854 + t7862;
  t7885 = t4663*t7835;
  t7886 = -1.*t4737*t7850;
  t7892 = t7885 + t7886;
  t7897 = -1.*t5141*t7869;
  t7903 = t5080*t7892;
  t7908 = t7897 + t7903;
  t7914 = t5080*t7869;
  t7923 = t5141*t7892;
  t7937 = t7914 + t7923;
  t8004 = t2430*t1232*t181;
  t8005 = -1.*t2430*t1477*t1756;
  t8009 = t8004 + t8005;
  t8023 = -1.*t2430*t181*t1477;
  t8027 = -1.*t2430*t1232*t1756;
  t8028 = t8023 + t8027;
  t8036 = t3007*t8009*t2269;
  t8047 = t8028*t3298;
  t8049 = t8036 + t8047;
  t8061 = t3007*t8028;
  t8063 = -1.*t8009*t2269*t3298;
  t8068 = t8061 + t8063;
  t8074 = -1.*t4079*t8049;
  t8079 = t3954*t8068;
  t8084 = t8074 + t8079;
  t8096 = t3954*t8049;
  t8100 = t4079*t8068;
  t8109 = t8096 + t8100;
  t8112 = t4737*t8084;
  t8121 = t4663*t8109;
  t8124 = t8112 + t8121;
  t8133 = t4663*t8084;
  t8137 = -1.*t4737*t8109;
  t8139 = t8133 + t8137;
  t8144 = -1.*t5141*t8124;
  t8147 = t5080*t8139;
  t8152 = t8144 + t8147;
  t8160 = t5080*t8124;
  t8165 = t5141*t8139;
  t8179 = t8160 + t8165;
  t8243 = -1.*t181*t5558;
  t8251 = t8243 + t7521;
  t8253 = t3007*t5775*t2269;
  t8255 = t8251*t3298;
  t8258 = t8253 + t8255;
  t8272 = t3007*t8251;
  t8273 = -1.*t5775*t2269*t3298;
  t8274 = t8272 + t8273;
  t8280 = -1.*t4079*t8258;
  t8283 = t3954*t8274;
  t8285 = t8280 + t8283;
  t8293 = t3954*t8258;
  t8296 = t4079*t8274;
  t8303 = t8293 + t8296;
  t8311 = t4737*t8285;
  t8315 = t4663*t8303;
  t8316 = t8311 + t8315;
  t8325 = t4663*t8285;
  t8327 = -1.*t4737*t8303;
  t8337 = t8325 + t8327;
  t8350 = -1.*t5141*t8316;
  t8357 = t5080*t8337;
  t8360 = t8350 + t8357;
  t8370 = t5080*t8316;
  t8373 = t5141*t8337;
  t8376 = t8370 + t8373;
  t8424 = t1001*t1232;
  t8425 = t1370*t1457*t1477;
  t8427 = t8424 + t8425;
  t8434 = -1.*t8427*t1756;
  t8442 = t7758 + t8434;
  t8456 = -1.*t181*t8427;
  t8463 = t8456 + t7775;
  t8476 = t3007*t8442*t2269;
  t8477 = t8463*t3298;
  t8480 = t8476 + t8477;
  t8492 = t3007*t8463;
  t8495 = -1.*t8442*t2269*t3298;
  t8503 = t8492 + t8495;
  t8506 = -1.*t4079*t8480;
  t8508 = t3954*t8503;
  t8522 = t8506 + t8508;
  t8548 = t3954*t8480;
  t8549 = t4079*t8503;
  t8550 = t8548 + t8549;
  t8559 = t4737*t8522;
  t8562 = t4663*t8550;
  t8570 = t8559 + t8562;
  t8576 = t4663*t8522;
  t8579 = -1.*t4737*t8550;
  t8589 = t8576 + t8579;
  t8595 = -1.*t5141*t8570;
  t8599 = t5080*t8589;
  t8602 = t8595 + t8599;
  t8607 = t5080*t8570;
  t8611 = t5141*t8589;
  t8616 = t8607 + t8611;
  t8011 = 0.1305*t2005*t8009;
  t8013 = t8009*t2389;
  t8020 = t8009*t2269*t3308;
  t8035 = t8028*t3903;
  t8057 = t4112*t8049;
  t8072 = t4526*t8068;
  t8086 = t4801*t8084;
  t8111 = t4918*t8109;
  t8128 = t5200*t8124;
  t8143 = t5277*t8139;
  t8156 = t5327*t8152;
  t8183 = t5396*t8179;
  t8191 = t5314*t8152;
  t8195 = t5291*t8179;
  t8203 = t8191 + t8195;
  t8204 = 0.088451*t8203;
  t8215 = t5291*t8152;
  t8221 = -1.*t5314*t8179;
  t8222 = t8215 + t8221;
  t8226 = -1.062256*t8222;
  t5638 = t2005*t5624;
  t5644 = -1.*t1001*t2430*t2269;
  t5647 = t5638 + t5644;
  t8722 = -1.*t3007*t4079*t5647;
  t8726 = -1.*t3954*t5647*t3298;
  t8729 = t8722 + t8726;
  t8733 = t3954*t3007*t5647;
  t8734 = -1.*t4079*t5647*t3298;
  t8738 = t8733 + t8734;
  t8741 = t4737*t8729;
  t8748 = t4663*t8738;
  t8758 = t8741 + t8748;
  t8772 = t4663*t8729;
  t8776 = -1.*t4737*t8738;
  t8780 = t8772 + t8776;
  t8801 = -1.*t5141*t8758;
  t8802 = t5080*t8780;
  t8809 = t8801 + t8802;
  t8825 = t5080*t8758;
  t8831 = t5141*t8780;
  t8833 = t8825 + t8831;
  t8665 = 0.135*t2005;
  t8667 = -0.049*t2269;
  t8672 = t8665 + t8667;
  t8685 = 0.049*t2005;
  t8689 = t8685 + t2485;
  t8874 = t181*t8427;
  t8878 = t7729*t1756;
  t8880 = t8874 + t8878;
  t8889 = t2005*t8880;
  t8893 = -1.*t2430*t1370*t2269;
  t8900 = t8889 + t8893;
  t8932 = -1.*t3007*t4079*t8900;
  t8934 = -1.*t3954*t8900*t3298;
  t8935 = t8932 + t8934;
  t8945 = t3954*t3007*t8900;
  t8950 = -1.*t4079*t8900*t3298;
  t8952 = t8945 + t8950;
  t8967 = t4737*t8935;
  t8972 = t4663*t8952;
  t8974 = t8967 + t8972;
  t8979 = t4663*t8935;
  t8987 = -1.*t4737*t8952;
  t9002 = t8979 + t8987;
  t9007 = -1.*t5141*t8974;
  t9016 = t5080*t9002;
  t9017 = t9007 + t9016;
  t9020 = t5080*t8974;
  t9029 = t5141*t9002;
  t9030 = t9020 + t9029;
  t9074 = t2430*t181*t1477;
  t9075 = t2430*t1232*t1756;
  t9079 = t9074 + t9075;
  t9084 = t2005*t9079;
  t9087 = t1457*t2269;
  t9088 = t9084 + t9087;
  t9117 = -1.*t3007*t4079*t9088;
  t9119 = -1.*t3954*t9088*t3298;
  t9120 = t9117 + t9119;
  t9127 = t3954*t3007*t9088;
  t9133 = -1.*t4079*t9088*t3298;
  t9134 = t9127 + t9133;
  t9139 = t4737*t9120;
  t9144 = t4663*t9134;
  t9146 = t9139 + t9144;
  t9149 = t4663*t9120;
  t9154 = -1.*t4737*t9134;
  t9155 = t9149 + t9154;
  t9162 = -1.*t5141*t9146;
  t9163 = t5080*t9155;
  t9164 = t9162 + t9163;
  t9169 = t5080*t9146;
  t9176 = t5141*t9155;
  t9181 = t9169 + t9176;
  t9274 = -1.*t3007*t5703;
  t9286 = -1.*t5775*t3298;
  t9294 = t9274 + t9286;
  t9299 = t4079*t9294;
  t9301 = t9299 + t5880;
  t9305 = t3954*t9294;
  t9312 = -1.*t4079*t5872;
  t9313 = t9305 + t9312;
  t9319 = -1.*t4737*t9301;
  t9320 = t4663*t9313;
  t9321 = t9319 + t9320;
  t9324 = t4663*t9301;
  t9330 = t4737*t9313;
  t9331 = t9324 + t9330;
  t9333 = t5141*t9321;
  t9337 = t5080*t9331;
  t9340 = t9333 + t9337;
  t9349 = t5080*t9321;
  t9365 = -1.*t5141*t9331;
  t9376 = t9349 + t9365;
  t9232 = 0.049*t3007;
  t9236 = t9232 + t3303;
  t9248 = -0.09*t3007;
  t9251 = -0.049*t3298;
  t9256 = t9248 + t9251;
  t9439 = t2430*t2005*t1370;
  t9442 = t8880*t2269;
  t9444 = t9439 + t9442;
  t9451 = -1.*t3007*t9444;
  t9453 = -1.*t8442*t3298;
  t9460 = t9451 + t9453;
  t9468 = t3007*t8442;
  t9471 = -1.*t9444*t3298;
  t9481 = t9468 + t9471;
  t9484 = t4079*t9460;
  t9489 = t3954*t9481;
  t9491 = t9484 + t9489;
  t9503 = t3954*t9460;
  t9505 = -1.*t4079*t9481;
  t9506 = t9503 + t9505;
  t9513 = -1.*t4737*t9491;
  t9519 = t4663*t9506;
  t9532 = t9513 + t9519;
  t9538 = t4663*t9491;
  t9549 = t4737*t9506;
  t9557 = t9538 + t9549;
  t9562 = t5141*t9532;
  t9576 = t5080*t9557;
  t9581 = t9562 + t9576;
  t9632 = t5080*t9532;
  t9648 = -1.*t5141*t9557;
  t9649 = t9632 + t9648;
  t9695 = -1.*t2005*t1457;
  t9709 = t9079*t2269;
  t9716 = t9695 + t9709;
  t9721 = -1.*t3007*t9716;
  t9722 = -1.*t8009*t3298;
  t9732 = t9721 + t9722;
  t9764 = t3007*t8009;
  t9769 = -1.*t9716*t3298;
  t9787 = t9764 + t9769;
  t9800 = t4079*t9732;
  t9818 = t3954*t9787;
  t9822 = t9800 + t9818;
  t9830 = t3954*t9732;
  t9832 = -1.*t4079*t9787;
  t9835 = t9830 + t9832;
  t9844 = -1.*t4737*t9822;
  t9845 = t4663*t9835;
  t9848 = t9844 + t9845;
  t9858 = t4663*t9822;
  t9859 = t4737*t9835;
  t9860 = t9858 + t9859;
  t9866 = t5141*t9848;
  t9872 = t5080*t9860;
  t9873 = t9866 + t9872;
  t9877 = t5080*t9848;
  t9879 = -1.*t5141*t9860;
  t9887 = t9877 + t9879;
  t9988 = -1.*t3954*t5850;
  t9998 = t9988 + t9312;
  t10007 = -1.*t4737*t5882;
  t10008 = t4663*t9998;
  t10010 = t10007 + t10008;
  t10012 = t4737*t9998;
  t10017 = t6012 + t10012;
  t10026 = t5141*t10010;
  t10036 = t5080*t10017;
  t10041 = t10026 + t10036;
  t10048 = t5080*t10010;
  t10057 = -1.*t5141*t10017;
  t10058 = t10048 + t10057;
  t9954 = -0.21*t3954;
  t9965 = -0.049*t4079;
  t9966 = t9954 + t9965;
  t9974 = 0.049*t3954;
  t9977 = t9974 + t4084;
  t10116 = t3007*t9444;
  t10120 = t8442*t3298;
  t10131 = t10116 + t10120;
  t10153 = -1.*t4079*t10131;
  t10157 = t10153 + t9489;
  t10174 = -1.*t3954*t10131;
  t10180 = t10174 + t9505;
  t10183 = -1.*t4737*t10157;
  t10185 = t4663*t10180;
  t10194 = t10183 + t10185;
  t10221 = t4663*t10157;
  t10231 = t4737*t10180;
  t10240 = t10221 + t10231;
  t10246 = t5141*t10194;
  t10252 = t5080*t10240;
  t10253 = t10246 + t10252;
  t10258 = t5080*t10194;
  t10261 = -1.*t5141*t10240;
  t10265 = t10258 + t10261;
  t10319 = t3007*t9716;
  t10322 = t8009*t3298;
  t10323 = t10319 + t10322;
  t10338 = -1.*t4079*t10323;
  t10341 = t10338 + t9818;
  t10345 = -1.*t3954*t10323;
  t10348 = t10345 + t9832;
  t10362 = -1.*t4737*t10341;
  t10384 = t4663*t10348;
  t10391 = t10362 + t10384;
  t10395 = t4663*t10341;
  t10406 = t4737*t10348;
  t10408 = t10395 + t10406;
  t10417 = t5141*t10391;
  t10424 = t5080*t10408;
  t10436 = t10417 + t10424;
  t10440 = t5080*t10391;
  t10445 = -1.*t5141*t10408;
  t10446 = t10440 + t10445;
  t10529 = -1.*t4663*t5922;
  t10530 = t10007 + t10529;
  t10541 = t5141*t10530;
  t10548 = t10541 + t6044;
  t10560 = t5080*t10530;
  t10561 = -1.*t5141*t6024;
  t10565 = t10560 + t10561;
  t10477 = 0.0016*t4663;
  t10480 = t10477 + t4915;
  t10501 = -0.2707*t4663;
  t10503 = -0.0016*t4737;
  t10522 = t10501 + t10503;
  t10622 = t3954*t10131;
  t10627 = t4079*t9481;
  t10630 = t10622 + t10627;
  t10637 = -1.*t4663*t10630;
  t10638 = t10183 + t10637;
  t10643 = -1.*t4737*t10630;
  t10644 = t10221 + t10643;
  t10649 = t5141*t10638;
  t10650 = t5080*t10644;
  t10652 = t10649 + t10650;
  t10667 = t5080*t10638;
  t10673 = -1.*t5141*t10644;
  t10674 = t10667 + t10673;
  t10776 = t3954*t10323;
  t10780 = t4079*t9787;
  t10782 = t10776 + t10780;
  t10790 = -1.*t4663*t10782;
  t10805 = t10362 + t10790;
  t10811 = -1.*t4737*t10782;
  t10815 = t10395 + t10811;
  t10818 = t5141*t10805;
  t10820 = t5080*t10815;
  t10822 = t10818 + t10820;
  t10838 = t5080*t10805;
  t10862 = -1.*t5141*t10815;
  t10868 = t10838 + t10862;
  t11030 = -1.*t5080*t5987;
  t11037 = t11030 + t10561;
  t6254 = t5291*t6104;
  t10985 = -0.7055*t5080;
  t10986 = 0.0184*t5141;
  t10993 = t10985 + t10986;
  t11003 = -0.0184*t5080;
  t11012 = t11003 + t5177;
  t11110 = t4737*t10157;
  t11111 = t4663*t10630;
  t11113 = t11110 + t11111;
  t11128 = -1.*t5141*t11113;
  t11129 = t11128 + t10650;
  t11132 = -1.*t5080*t11113;
  t11135 = t11132 + t10673;
  t11211 = t4737*t10341;
  t11217 = t4663*t10782;
  t11218 = t11211 + t11217;
  t11239 = -1.*t5141*t11218;
  t11248 = t11239 + t10820;
  t11255 = -1.*t5080*t11218;
  t11257 = t11255 + t10862;
  t11055 = -1.*t5314*t6104;
  t6288 = -1.*t5314*t6171;
  t6300 = t6254 + t6288;
  t11314 = 0.0216*t5291;
  t11317 = t11314 + t5381;
  t11321 = -1.1135*t5291;
  t11331 = -0.0216*t5314;
  t11338 = t11321 + t11331;
  t11142 = -1.*t5314*t11129;
  t11354 = t5080*t11113;
  t11355 = t5141*t10644;
  t11357 = t11354 + t11355;
  t11161 = t5291*t11129;
  t11269 = -1.*t5314*t11248;
  t11377 = t5080*t11218;
  t11379 = t5141*t10815;
  t11380 = t11377 + t11379;
  t11278 = t5291*t11248;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t1664*t1763 + t2003*t2389 + 0.1305*(t2003*t2005 + t1370*t2269*t2430) - 1.*t1370*t2430*t2538 + t3004*t3308 + t3592*t3903 + t4112*t4157 + t4526*t4646 + t4801*t4847 + t4918*t5041 + t5200*t5252 + t5277*t5284 + t5327*t5348 + t5396*t5441 + 0.088451*(t5314*t5348 + t5291*t5441) - 1.062256*(t5291*t5348 - 1.*t5314*t5441) + t1499*t870;
  p_output1[10]=t1001*t2430*t2538 + t1763*t5607 + t2389*t5624 + 0.1305*t5647 + t3308*t5703 + t3903*t5775 + t4112*t5850 + t4526*t5872 + t4801*t5882 + t4918*t5922 + t5200*t5987 + t5277*t6024 + t5327*t6104 + t5396*t6171 + 0.088451*(t5314*t6104 + t5291*t6171) - 1.062256*t6300 + t5558*t870;
  p_output1[11]=0;
  p_output1[12]=t1001*t1232*t1763*t2430 - 1.*t1001*t1457*t2538 + t2389*t6371 + 0.1305*(t1001*t1457*t2269 + t2005*t6371) + t3308*t6426 + t3903*t6446 + t4112*t6473 + t4526*t6496 + t4801*t6511 + t4918*t6538 + t5200*t6561 + t5277*t6599 + t5327*t6636 + t5396*t6653 + 0.088451*(t5314*t6636 + t5291*t6653) - 1.062256*(t5291*t6636 - 1.*t5314*t6653) + t1001*t1477*t2430*t870;
  p_output1[13]=t1232*t1370*t1763*t2430 - 1.*t1370*t1457*t2538 + t2389*t6773 + 0.1305*(t1370*t1457*t2269 + t2005*t6773) + t3308*t6846 + t3903*t6865 + t4112*t6892 + t4526*t6912 + t4801*t6937 + t4918*t6954 + t5200*t7003 + t5277*t7027 + t5327*t7047 + t5396*t7064 + 0.088451*(t5314*t7047 + t5291*t7064) - 1.062256*(t5291*t7047 - 1.*t5314*t7064) + t1370*t1477*t2430*t870;
  p_output1[14]=-1.*t1232*t1457*t1763 - 1.*t2430*t2538 + t2389*t7168 + 0.1305*(t2269*t2430 + t2005*t7168) + t3308*t7209 + t3903*t7230 + t4112*t7256 + t4526*t7272 + t4801*t7317 + t4918*t7337 + t5200*t7358 + t5277*t7372 + t5327*t7403 + t5396*t7427 + 0.088451*(t5314*t7403 + t5291*t7427) - 1.062256*(t5291*t7403 - 1.*t5314*t7427) - 1.*t1457*t1477*t870;
  p_output1[15]=t1763*t7486 + 0.1305*t2005*t7496 + t2389*t7496 + t2269*t3308*t7496 + t3903*t7523 + t4112*t7538 + t4526*t7545 + t4801*t7566 + t4918*t7603 + t5200*t7610 + t5277*t7636 + t5327*t7650 + t5396*t7665 + 0.088451*(t5314*t7650 + t5291*t7665) - 1.062256*(t5291*t7650 - 1.*t5314*t7665) + t5607*t870;
  p_output1[16]=t1499*t1763 + 0.1305*t2005*t7762 + t2389*t7762 + t2269*t3308*t7762 + t3903*t7777 + t4112*t7793 + t4526*t7817 + t4801*t7835 + t4918*t7850 + t5200*t7869 + t5277*t7892 + t5327*t7908 + t5396*t7937 + 0.088451*(t5314*t7908 + t5291*t7937) - 1.062256*(t5291*t7908 - 1.*t5314*t7937) + t7729*t870;
  p_output1[17]=-1.*t1477*t1763*t2430 + t8011 + t8013 + t8020 + t8035 + t8057 + t8072 + t8086 + t8111 + t8128 + t8143 + t8156 + t8183 + t8204 + t8226 + t1232*t2430*t870;
  p_output1[18]=0.135*t1756*t5558 - 0.135*t181*t5607 + 0.1305*t2005*t5775 + t2389*t5775 + t2269*t3308*t5775 + t3903*t8251 + t4112*t8258 + t4526*t8274 + t4801*t8285 + t4918*t8303 + t5200*t8316 + t5277*t8337 + t5327*t8360 + t5396*t8376 + 0.088451*(t5314*t8360 + t5291*t8376) - 1.062256*(t5291*t8360 - 1.*t5314*t8376);
  p_output1[19]=-0.135*t181*t7729 + 0.135*t1756*t8427 + 0.1305*t2005*t8442 + t2389*t8442 + t2269*t3308*t8442 + t3903*t8463 + t4112*t8480 + t4526*t8503 + t4801*t8522 + t4918*t8550 + t5200*t8570 + t5277*t8589 + t5327*t8602 + t5396*t8616 + 0.088451*(t5314*t8602 + t5291*t8616) - 1.062256*(t5291*t8602 - 1.*t5314*t8616);
  p_output1[20]=0.135*t1477*t1756*t2430 - 0.135*t1232*t181*t2430 + t8011 + t8013 + t8020 + t8035 + t8057 + t8072 + t8086 + t8111 + t8128 + t8143 + t8156 + t8183 + t8204 + t8226;
  p_output1[21]=0.1305*(-1.*t1001*t2005*t2430 - 1.*t2269*t5624) + t3308*t5647 + t3007*t4112*t5647 - 1.*t3298*t4526*t5647 + t1001*t2430*t8672 + t5624*t8689 + t4801*t8729 + t4918*t8738 + t5200*t8758 + t5277*t8780 + t5327*t8809 + t5396*t8833 + 0.088451*(t5314*t8809 + t5291*t8833) - 1.062256*(t5291*t8809 - 1.*t5314*t8833);
  p_output1[22]=t1370*t2430*t8672 + t8689*t8880 + 0.1305*(t2759 - 1.*t2269*t8880) + t3308*t8900 + t3007*t4112*t8900 - 1.*t3298*t4526*t8900 + t4801*t8935 + t4918*t8952 + t5200*t8974 + t5277*t9002 + t5327*t9017 + t5396*t9030 + 0.088451*(t5314*t9017 + t5291*t9030) - 1.062256*(t5291*t9017 - 1.*t5314*t9030);
  p_output1[23]=-1.*t1457*t8672 + t8689*t9079 + 0.1305*(t1457*t2005 - 1.*t2269*t9079) + t3308*t9088 + t3007*t4112*t9088 - 1.*t3298*t4526*t9088 + t4801*t9120 + t4918*t9134 + t5200*t9146 + t5277*t9155 + t5327*t9164 + t5396*t9181 + 0.088451*(t5314*t9164 + t5291*t9181) - 1.062256*(t5291*t9164 - 1.*t5314*t9181);
  p_output1[24]=t4112*t5872 + t5775*t9236 + t5703*t9256 + t4526*t9294 + t4918*t9301 + t4801*t9313 + t5277*t9321 + t5200*t9331 + t5396*t9340 + t5327*t9376 - 1.062256*(-1.*t5314*t9340 + t5291*t9376) + 0.088451*(t5291*t9340 + t5314*t9376);
  p_output1[25]=t8442*t9236 + t9256*t9444 + t4526*t9460 + t4112*t9481 + t4918*t9491 + t4801*t9506 + t5277*t9532 + t5200*t9557 + t5396*t9581 + t5327*t9649 - 1.062256*(-1.*t5314*t9581 + t5291*t9649) + 0.088451*(t5291*t9581 + t5314*t9649);
  p_output1[26]=t8009*t9236 + t9256*t9716 + t4526*t9732 + t4112*t9787 + t4918*t9822 + t4801*t9835 + t5277*t9848 + t5200*t9860 + t5396*t9873 + t5327*t9887 - 1.062256*(-1.*t5314*t9873 + t5291*t9887) + 0.088451*(t5291*t9873 + t5314*t9887);
  p_output1[27]=t10017*t5200 + t10010*t5277 - 1.062256*(t10058*t5291 - 1.*t10041*t5314) + 0.088451*(t10041*t5291 + t10058*t5314) + t10058*t5327 + t10041*t5396 + t4918*t5882 + t5850*t9966 + t5872*t9977 + t4801*t9998;
  p_output1[28]=t10180*t4801 + t10157*t4918 + t10240*t5200 + t10194*t5277 - 1.062256*(t10265*t5291 - 1.*t10253*t5314) + 0.088451*(t10253*t5291 + t10265*t5314) + t10265*t5327 + t10253*t5396 + t10131*t9966 + t9481*t9977;
  p_output1[29]=t10348*t4801 + t10341*t4918 + t10408*t5200 + t10391*t5277 - 1.062256*(t10446*t5291 - 1.*t10436*t5314) + 0.088451*(t10436*t5291 + t10446*t5314) + t10446*t5327 + t10436*t5396 + t10323*t9966 + t9787*t9977;
  p_output1[30]=t10530*t5277 - 1.062256*(t10565*t5291 - 1.*t10548*t5314) + 0.088451*(t10548*t5291 + t10565*t5314) + t10565*t5327 + t10548*t5396 + t10480*t5882 + t10522*t5922 + t5200*t6024;
  p_output1[31]=t10157*t10480 + t10522*t10630 + t10644*t5200 + t10638*t5277 - 1.062256*(t10674*t5291 - 1.*t10652*t5314) + 0.088451*(t10652*t5291 + t10674*t5314) + t10674*t5327 + t10652*t5396;
  p_output1[32]=t10341*t10480 + t10522*t10782 + t10815*t5200 + t10805*t5277 - 1.062256*(t10868*t5291 - 1.*t10822*t5314) + 0.088451*(t10822*t5291 + t10868*t5314) + t10868*t5327 + t10822*t5396;
  p_output1[33]=-1.062256*(t11055 + t11037*t5291) + t11037*t5327 + t10993*t5987 + t11012*t6024 + t5396*t6104 + 0.088451*(t11037*t5314 + t6254);
  p_output1[34]=t10644*t11012 + t10993*t11113 - 1.062256*(t11142 + t11135*t5291) + 0.088451*(t11161 + t11135*t5314) + t11135*t5327 + t11129*t5396;
  p_output1[35]=t10815*t11012 + t10993*t11218 - 1.062256*(t11269 + t11257*t5291) + 0.088451*(t11278 + t11257*t5314) + t11257*t5327 + t11248*t5396;
  p_output1[36]=t11317*t6104 + t11338*t6171 - 1.062256*(t11055 - 1.*t5291*t6171) + 0.088451*t6300;
  p_output1[37]=t11129*t11317 + t11338*t11357 - 1.062256*(t11142 - 1.*t11357*t5291) + 0.088451*(t11161 - 1.*t11357*t5314);
  p_output1[38]=t11248*t11317 + t11338*t11380 - 1.062256*(t11269 - 1.*t11380*t5291) + 0.088451*(t11278 - 1.*t11380*t5314);
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "J_LeftToeFront_mex.hh"

namespace SymExpression
{

void J_LeftToeFront_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
