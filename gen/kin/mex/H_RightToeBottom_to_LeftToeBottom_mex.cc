/*
 * Automatically Generated from Mathematica.
 * Fri 16 Feb 2018 12:17:48 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t101;
  double t125;
  double t129;
  double t115;
  double t136;
  double t100;
  double t247;
  double t430;
  double t489;
  double t128;
  double t138;
  double t237;
  double t497;
  double t99;
  double t926;
  double t998;
  double t1145;
  double t245;
  double t539;
  double t747;
  double t1183;
  double t67;
  double t1339;
  double t1362;
  double t1374;
  double t903;
  double t1222;
  double t1226;
  double t1418;
  double t1684;
  double t1668;
  double t1674;
  double t1709;
  double t1710;
  double t1719;
  double t1682;
  double t1688;
  double t1696;
  double t1757;
  double t1765;
  double t1768;
  double t1704;
  double t1725;
  double t1741;
  double t1787;
  double t1790;
  double t1795;
  double t1748;
  double t1769;
  double t1776;
  double t1813;
  double t1814;
  double t1817;
  double t1778;
  double t1798;
  double t1800;
  double t1269;
  double t1438;
  double t1526;
  double t1613;
  double t1618;
  double t1637;
  double t1807;
  double t1818;
  double t1822;
  double t1831;
  double t1837;
  double t1839;
  double t1886;
  double t1887;
  double t1890;
  double t1876;
  double t1877;
  double t1883;
  double t1907;
  double t1913;
  double t1917;
  double t1895;
  double t1901;
  double t1902;
  double t1926;
  double t1940;
  double t1943;
  double t1904;
  double t1918;
  double t1922;
  double t1950;
  double t1954;
  double t1955;
  double t1925;
  double t1944;
  double t1946;
  double t1960;
  double t1964;
  double t1966;
  double t1948;
  double t1956;
  double t1957;
  double t1823;
  double t1842;
  double t1860;
  double t1586;
  double t1652;
  double t1661;
  double t1959;
  double t1968;
  double t1969;
  double t2225;
  double t2248;
  double t2297;
  double t2218;
  double t2440;
  double t2511;
  double t2858;
  double t2990;
  double t3024;
  double t63;
  double t3316;
  double t3320;
  double t1894;
  double t2637;
  double t2749;
  double t2770;
  double t2775;
  double t3115;
  double t3177;
  double t3215;
  double t3322;
  double t3396;
  double t3436;
  double t3443;
  double t49;
  double t3549;
  double t3768;
  double t3667;
  double t3687;
  double t3714;
  double t5569;
  double t5528;
  double t5538;
  double t5580;
  double t5743;
  double t5556;
  double t5680;
  double t5683;
  double t5518;
  double t5756;
  double t5776;
  double t5804;
  double t5953;
  double t5722;
  double t5837;
  double t5873;
  double t5504;
  double t5964;
  double t5993;
  double t5996;
  double t6056;
  double t5900;
  double t6017;
  double t6018;
  double t5479;
  double t6195;
  double t6224;
  double t6230;
  double t1871;
  double t1892;
  double t1893;
  double t6539;
  double t6543;
  double t6598;
  double t6646;
  double t6743;
  double t6876;
  double t6601;
  double t6890;
  double t6902;
  double t6982;
  double t7025;
  double t7133;
  double t6931;
  double t7150;
  double t7177;
  double t7247;
  double t7254;
  double t7664;
  double t7220;
  double t7712;
  double t7726;
  double t7846;
  double t7948;
  double t7970;
  double t3511;
  double t8232;
  double t8270;
  double t8272;
  double t8284;
  double t8299;
  double t8304;
  double t8279;
  double t8312;
  double t8317;
  double t8320;
  double t8329;
  double t8335;
  double t8319;
  double t8337;
  double t8339;
  double t8347;
  double t8353;
  double t8360;
  double t8346;
  double t8367;
  double t8370;
  double t8377;
  double t8384;
  double t8385;
  double t4302;
  double t4566;
  double t4580;
  double t6055;
  double t6325;
  double t6365;
  double t6382;
  double t6400;
  double t6431;
  double t6455;
  double t6475;
  double t6479;
  double t3851;
  double t3855;
  double t3865;
  double t7729;
  double t8063;
  double t8121;
  double t8158;
  double t8175;
  double t8210;
  double t8213;
  double t8220;
  double t8226;
  double t4129;
  double t4154;
  double t4261;
  double t8371;
  double t8391;
  double t8392;
  double t8398;
  double t8401;
  double t8404;
  double t8407;
  double t8408;
  double t8409;
  double t5105;
  double t5118;
  double t5224;
  double t4612;
  double t4726;
  double t4861;
  double t5062;
  double t8459;
  double t8465;
  double t8469;
  double t8475;
  double t8476;
  double t8477;
  double t8483;
  double t8485;
  double t8489;
  double t8537;
  double t8539;
  double t8555;
  double t8556;
  double t8570;
  double t8572;
  double t8585;
  double t8586;
  double t8598;
  double t8599;
  double t8522;
  double t8525;
  double t8542;
  double t8544;
  double t8547;
  double t8557;
  double t8559;
  double t8562;
  double t8564;
  double t8566;
  double t8568;
  double t8574;
  double t8575;
  double t8576;
  double t8579;
  double t8580;
  double t8582;
  double t8587;
  double t8589;
  double t8591;
  double t8593;
  double t8594;
  double t8596;
  double t8600;
  double t8601;
  double t8602;
  double t8604;
  double t8605;
  double t8606;
  double t8515;
  double t8516;
  double t8520;
  double t8521;
  double t8529;
  double t8532;
  double t8534;
  double t8536;
  double t8548;
  double t8549;
  double t8550;
  double t8551;
  double t8553;
  double t8563;
  double t8569;
  double t8578;
  double t8583;
  double t8592;
  double t8597;
  double t8603;
  double t8607;
  double t8608;
  double t8609;
  double t8610;
  double t8612;
  double t8613;
  double t8614;
  double t8615;
  double t8616;
  double t8618;
  double t8619;
  double t8620;
  double t8621;
  double t8623;
  double t8624;
  double t8625;
  double t8628;
  double t8630;
  double t8667;
  double t8668;
  double t8690;
  double t8691;
  double t8701;
  double t8702;
  double t8712;
  double t8713;
  double t8663;
  double t8664;
  double t8675;
  double t8676;
  double t8677;
  double t8679;
  double t8681;
  double t8669;
  double t8670;
  double t8671;
  double t8684;
  double t8685;
  double t8686;
  double t8692;
  double t8693;
  double t8694;
  double t8697;
  double t8698;
  double t8699;
  double t8703;
  double t8704;
  double t8705;
  double t8707;
  double t8709;
  double t8710;
  double t8714;
  double t8715;
  double t8717;
  double t8719;
  double t8720;
  double t8721;
  double t8732;
  double t8733;
  double t8734;
  double t8737;
  double t8738;
  double t8741;
  double t8641;
  double t8642;
  double t8643;
  double t8644;
  double t8645;
  double t8646;
  double t8647;
  double t8649;
  double t8650;
  double t8651;
  double t8652;
  double t8653;
  double t8654;
  double t8655;
  double t8657;
  double t8658;
  double t8611;
  double t8632;
  double t8634;
  double t8666;
  double t8673;
  double t8674;
  double t8683;
  double t8689;
  double t8696;
  double t8700;
  double t8706;
  double t8711;
  double t8718;
  double t8722;
  double t8723;
  double t8724;
  double t8725;
  double t8727;
  double t8729;
  double t8730;
  double t8731;
  double t8735;
  double t8736;
  double t8742;
  double t8743;
  double t8745;
  double t8746;
  double t8747;
  double t8748;
  double t8750;
  double t8751;
  double t8752;
  double t8754;
  double t8755;
  double t8756;
  double t8758;
  double t8759;
  double t8760;
  double t8761;
  double t8762;
  double t8763;
  double t8764;
  double t8765;
  double t8767;
  double t8768;
  double t8769;
  double t8771;
  double t8772;
  double t8773;
  double t8774;
  double t8775;
  double t8779;
  double t8780;
  double t8782;
  double t8637;
  double t8638;
  double t8639;
  t101 = Cos(var1[8]);
  t125 = Cos(var1[10]);
  t129 = Sin(var1[9]);
  t115 = Cos(var1[9]);
  t136 = Sin(var1[10]);
  t100 = Cos(var1[11]);
  t247 = -1.*t101*t125*t129;
  t430 = -1.*t101*t115*t136;
  t489 = t247 + t430;
  t128 = t101*t115*t125;
  t138 = -1.*t101*t129*t136;
  t237 = t128 + t138;
  t497 = Sin(var1[11]);
  t99 = Cos(var1[12]);
  t926 = t100*t489;
  t998 = -1.*t237*t497;
  t1145 = t926 + t998;
  t245 = t100*t237;
  t539 = t489*t497;
  t747 = t245 + t539;
  t1183 = Sin(var1[12]);
  t67 = Cos(var1[13]);
  t1339 = t99*t1145;
  t1362 = -1.*t747*t1183;
  t1374 = t1339 + t1362;
  t903 = t99*t747;
  t1222 = t1145*t1183;
  t1226 = t903 + t1222;
  t1418 = Sin(var1[13]);
  t1684 = Cos(var1[7]);
  t1668 = Sin(var1[7]);
  t1674 = Sin(var1[8]);
  t1709 = t1684*t115;
  t1710 = -1.*t1668*t1674*t129;
  t1719 = t1709 + t1710;
  t1682 = t115*t1668*t1674;
  t1688 = t1684*t129;
  t1696 = t1682 + t1688;
  t1757 = t125*t1719;
  t1765 = -1.*t1696*t136;
  t1768 = t1757 + t1765;
  t1704 = t125*t1696;
  t1725 = t1719*t136;
  t1741 = t1704 + t1725;
  t1787 = t100*t1768;
  t1790 = -1.*t1741*t497;
  t1795 = t1787 + t1790;
  t1748 = t100*t1741;
  t1769 = t1768*t497;
  t1776 = t1748 + t1769;
  t1813 = t99*t1795;
  t1814 = -1.*t1776*t1183;
  t1817 = t1813 + t1814;
  t1778 = t99*t1776;
  t1798 = t1795*t1183;
  t1800 = t1778 + t1798;
  t1269 = t67*t1226;
  t1438 = t1374*t1418;
  t1526 = t1269 + t1438;
  t1613 = t67*t1374;
  t1618 = -1.*t1226*t1418;
  t1637 = t1613 + t1618;
  t1807 = t67*t1800;
  t1818 = t1817*t1418;
  t1822 = t1807 + t1818;
  t1831 = t67*t1817;
  t1837 = -1.*t1800*t1418;
  t1839 = t1831 + t1837;
  t1886 = 0.642788*t1822;
  t1887 = 0.766044*t1839;
  t1890 = t1886 + t1887;
  t1876 = -0.766044*t1526;
  t1877 = 0.642788*t1637;
  t1883 = t1876 + t1877;
  t1907 = -1.*t115*t1668;
  t1913 = -1.*t1684*t1674*t129;
  t1917 = t1907 + t1913;
  t1895 = t1684*t115*t1674;
  t1901 = -1.*t1668*t129;
  t1902 = t1895 + t1901;
  t1926 = t125*t1917;
  t1940 = -1.*t1902*t136;
  t1943 = t1926 + t1940;
  t1904 = t125*t1902;
  t1918 = t1917*t136;
  t1922 = t1904 + t1918;
  t1950 = t100*t1943;
  t1954 = -1.*t1922*t497;
  t1955 = t1950 + t1954;
  t1925 = t100*t1922;
  t1944 = t1943*t497;
  t1946 = t1925 + t1944;
  t1960 = t99*t1955;
  t1964 = -1.*t1946*t1183;
  t1966 = t1960 + t1964;
  t1948 = t99*t1946;
  t1956 = t1955*t1183;
  t1957 = t1948 + t1956;
  t1823 = -0.766044*t1822;
  t1842 = 0.642788*t1839;
  t1860 = t1823 + t1842;
  t1586 = 0.642788*t1526;
  t1652 = 0.766044*t1637;
  t1661 = t1586 + t1652;
  t1959 = t67*t1957;
  t1968 = t1966*t1418;
  t1969 = t1959 + t1968;
  t2225 = t67*t1966;
  t2248 = -1.*t1957*t1418;
  t2297 = t2225 + t2248;
  t2218 = -0.766044*t1969;
  t2440 = 0.642788*t2297;
  t2511 = t2218 + t2440;
  t2858 = 0.642788*t1969;
  t2990 = 0.766044*t2297;
  t3024 = t2858 + t2990;
  t63 = Cos(var1[1]);
  t3316 = t1661*t2511;
  t3320 = -1.*t1883*t3024;
  t1894 = t1684*t101*t1883;
  t2637 = t1674*t2511;
  t2749 = t1894 + t2637;
  t2770 = -1.*t1890*t2749;
  t2775 = t1684*t101*t1661;
  t3115 = t1674*t3024;
  t3177 = t2775 + t3115;
  t3215 = t1860*t3177;
  t3322 = t3316 + t3320;
  t3396 = -1.*t101*t1668*t3322;
  t3436 = 0. + t2770 + t3215 + t3396;
  t3443 = 1/t3436;
  t49 = Cos(var1[0]);
  t3549 = Sin(var1[0]);
  t3768 = Sin(var1[1]);
  t3667 = t3024*t1860;
  t3687 = -1.*t2511*t1890;
  t3714 = 0. + t3667 + t3687;
  t5569 = Cos(var1[3]);
  t5528 = Cos(var1[2]);
  t5538 = Sin(var1[3]);
  t5580 = Sin(var1[2]);
  t5743 = Cos(var1[4]);
  t5556 = -1.*t63*t5528*t5538;
  t5680 = -1.*t5569*t63*t5580;
  t5683 = t5556 + t5680;
  t5518 = Sin(var1[4]);
  t5756 = t5569*t63*t5528;
  t5776 = -1.*t63*t5538*t5580;
  t5804 = t5756 + t5776;
  t5953 = Cos(var1[5]);
  t5722 = t5518*t5683;
  t5837 = t5743*t5804;
  t5873 = t5722 + t5837;
  t5504 = Sin(var1[5]);
  t5964 = t5743*t5683;
  t5993 = -1.*t5518*t5804;
  t5996 = t5964 + t5993;
  t6056 = Cos(var1[6]);
  t5900 = -1.*t5504*t5873;
  t6017 = t5953*t5996;
  t6018 = t5900 + t6017;
  t5479 = Sin(var1[6]);
  t6195 = t5953*t5873;
  t6224 = t5504*t5996;
  t6230 = t6195 + t6224;
  t1871 = -1.*t1661*t1860;
  t1892 = t1883*t1890;
  t1893 = 0. + t1871 + t1892;
  t6539 = t49*t5528*t3768;
  t6543 = -1.*t3549*t5580;
  t6598 = t6539 + t6543;
  t6646 = -1.*t5528*t3549;
  t6743 = -1.*t49*t3768*t5580;
  t6876 = t6646 + t6743;
  t6601 = -1.*t5538*t6598;
  t6890 = t5569*t6876;
  t6902 = t6601 + t6890;
  t6982 = t5569*t6598;
  t7025 = t5538*t6876;
  t7133 = t6982 + t7025;
  t6931 = t5518*t6902;
  t7150 = t5743*t7133;
  t7177 = t6931 + t7150;
  t7247 = t5743*t6902;
  t7254 = -1.*t5518*t7133;
  t7664 = t7247 + t7254;
  t7220 = -1.*t5504*t7177;
  t7712 = t5953*t7664;
  t7726 = t7220 + t7712;
  t7846 = t5953*t7177;
  t7948 = t5504*t7664;
  t7970 = t7846 + t7948;
  t3511 = 0. + t3316 + t3320;
  t8232 = t5528*t3549*t3768;
  t8270 = t49*t5580;
  t8272 = t8232 + t8270;
  t8284 = t49*t5528;
  t8299 = -1.*t3549*t3768*t5580;
  t8304 = t8284 + t8299;
  t8279 = -1.*t5538*t8272;
  t8312 = t5569*t8304;
  t8317 = t8279 + t8312;
  t8320 = t5569*t8272;
  t8329 = t5538*t8304;
  t8335 = t8320 + t8329;
  t8319 = t5518*t8317;
  t8337 = t5743*t8335;
  t8339 = t8319 + t8337;
  t8347 = t5743*t8317;
  t8353 = -1.*t5518*t8335;
  t8360 = t8347 + t8353;
  t8346 = -1.*t5504*t8339;
  t8367 = t5953*t8360;
  t8370 = t8346 + t8367;
  t8377 = t5953*t8339;
  t8384 = t5504*t8360;
  t8385 = t8377 + t8384;
  t4302 = -1.*t101*t1668*t2511;
  t4566 = t1684*t101*t1860;
  t4580 = 0. + t4302 + t4566;
  t6055 = t5479*t6018;
  t6325 = t6056*t6230;
  t6365 = t6055 + t6325;
  t6382 = 0.642788*t6365;
  t6400 = t6056*t6018;
  t6431 = -1.*t5479*t6230;
  t6455 = t6400 + t6431;
  t6475 = 0.766044*t6455;
  t6479 = t6382 + t6475;
  t3851 = t101*t1668*t1883;
  t3855 = t1674*t1860;
  t3865 = 0. + t3851 + t3855;
  t7729 = t5479*t7726;
  t8063 = t6056*t7970;
  t8121 = t7729 + t8063;
  t8158 = 0.642788*t8121;
  t8175 = t6056*t7726;
  t8210 = -1.*t5479*t7970;
  t8213 = t8175 + t8210;
  t8220 = 0.766044*t8213;
  t8226 = t8158 + t8220;
  t4129 = -1.*t1684*t101*t1883;
  t4154 = -1.*t1674*t2511;
  t4261 = 0. + t4129 + t4154;
  t8371 = t5479*t8370;
  t8391 = t6056*t8385;
  t8392 = t8371 + t8391;
  t8398 = 0.642788*t8392;
  t8401 = t6056*t8370;
  t8404 = -1.*t5479*t8385;
  t8407 = t8401 + t8404;
  t8408 = 0.766044*t8407;
  t8409 = t8398 + t8408;
  t5105 = t101*t1668*t3024;
  t5118 = -1.*t1684*t101*t1890;
  t5224 = 0. + t5105 + t5118;
  t4612 = -1.*t101*t1668*t1661;
  t4726 = -1.*t1674*t1890;
  t4861 = 0. + t4612 + t4726;
  t5062 = 0. + t2775 + t3115;
  t8459 = -0.766044*t6365;
  t8465 = 0.642788*t6455;
  t8469 = t8459 + t8465;
  t8475 = -0.766044*t8121;
  t8476 = 0.642788*t8213;
  t8477 = t8475 + t8476;
  t8483 = -0.766044*t8392;
  t8485 = 0.642788*t8407;
  t8489 = t8483 + t8485;
  t8537 = -1.*t115;
  t8539 = 1. + t8537;
  t8555 = -1.*t125;
  t8556 = 1. + t8555;
  t8570 = -1.*t100;
  t8572 = 1. + t8570;
  t8585 = -1.*t99;
  t8586 = 1. + t8585;
  t8598 = -1.*t67;
  t8599 = 1. + t8598;
  t8522 = -1.*t101;
  t8525 = 1. + t8522;
  t8542 = -0.049*t8539;
  t8544 = -0.09*t129;
  t8547 = 0. + t8542 + t8544;
  t8557 = -0.049*t8556;
  t8559 = -0.21*t136;
  t8562 = 0. + t8557 + t8559;
  t8564 = -0.21*t8556;
  t8566 = 0.049*t136;
  t8568 = 0. + t8564 + t8566;
  t8574 = -0.0016*t8572;
  t8575 = -0.2707*t497;
  t8576 = 0. + t8574 + t8575;
  t8579 = -0.2707*t8572;
  t8580 = 0.0016*t497;
  t8582 = 0. + t8579 + t8580;
  t8587 = 0.0184*t8586;
  t8589 = -0.7055*t1183;
  t8591 = 0. + t8587 + t8589;
  t8593 = -0.7055*t8586;
  t8594 = -0.0184*t1183;
  t8596 = 0. + t8593 + t8594;
  t8600 = -0.0216*t8599;
  t8601 = -1.1135*t1418;
  t8602 = 0. + t8600 + t8601;
  t8604 = -1.1135*t8599;
  t8605 = 0.0216*t1418;
  t8606 = 0. + t8604 + t8605;
  t8515 = -1.*t1684;
  t8516 = 1. + t8515;
  t8520 = -0.135*t8516;
  t8521 = -0.1305*t1684*t101;
  t8529 = -0.135*t8525;
  t8532 = 0.049*t1674;
  t8534 = 0. + t8529 + t8532;
  t8536 = t1684*t8534;
  t8548 = t1684*t1674*t8547;
  t8549 = -0.09*t8539;
  t8550 = 0.049*t129;
  t8551 = 0. + t8549 + t8550;
  t8553 = -1.*t1668*t8551;
  t8563 = t1902*t8562;
  t8569 = t1917*t8568;
  t8578 = t1922*t8576;
  t8583 = t1943*t8582;
  t8592 = t1946*t8591;
  t8597 = t1955*t8596;
  t8603 = t1957*t8602;
  t8607 = t1966*t8606;
  t8608 = 0.0306*t1969;
  t8609 = -1.1312*t2297;
  t8610 = 0. + t8520 + t8521 + t8536 + t8548 + t8553 + t8563 + t8569 + t8578 + t8583 + t8592 + t8597 + t8603 + t8607 + t8608 + t8609;
  t8612 = -0.049*t8525;
  t8613 = -0.004500000000000004*t1674;
  t8614 = t101*t8547;
  t8615 = t101*t115*t8562;
  t8616 = -1.*t101*t129*t8568;
  t8618 = t237*t8576;
  t8619 = t489*t8582;
  t8620 = t747*t8591;
  t8621 = t1145*t8596;
  t8623 = t1226*t8602;
  t8624 = t1374*t8606;
  t8625 = 0.0306*t1526;
  t8628 = -1.1312*t1637;
  t8630 = 0. + t8612 + t8613 + t8614 + t8615 + t8616 + t8618 + t8619 + t8620 + t8621 + t8623 + t8624 + t8625 + t8628;
  t8667 = -1.*t5569;
  t8668 = 1. + t8667;
  t8690 = -1.*t5743;
  t8691 = 1. + t8690;
  t8701 = -1.*t5953;
  t8702 = 1. + t8701;
  t8712 = -1.*t6056;
  t8713 = 1. + t8712;
  t8663 = -1.*t63;
  t8664 = 1. + t8663;
  t8675 = -1.*t5528;
  t8676 = 1. + t8675;
  t8677 = -0.049*t8676;
  t8679 = -0.09*t5580;
  t8681 = 0. + t8677 + t8679;
  t8669 = -0.049*t8668;
  t8670 = -0.21*t5538;
  t8671 = 0. + t8669 + t8670;
  t8684 = -0.21*t8668;
  t8685 = 0.049*t5538;
  t8686 = 0. + t8684 + t8685;
  t8692 = -0.2707*t8691;
  t8693 = 0.0016*t5518;
  t8694 = 0. + t8692 + t8693;
  t8697 = -0.0016*t8691;
  t8698 = -0.2707*t5518;
  t8699 = 0. + t8697 + t8698;
  t8703 = 0.0184*t8702;
  t8704 = -0.7055*t5504;
  t8705 = 0. + t8703 + t8704;
  t8707 = -0.7055*t8702;
  t8709 = -0.0184*t5504;
  t8710 = 0. + t8707 + t8709;
  t8714 = -1.1135*t8713;
  t8715 = 0.0216*t5479;
  t8717 = 0. + t8714 + t8715;
  t8719 = -0.0216*t8713;
  t8720 = -1.1135*t5479;
  t8721 = 0. + t8719 + t8720;
  t8732 = 0.135*t8664;
  t8733 = 0.049*t3768;
  t8734 = 0. + t8732 + t8733;
  t8737 = -0.09*t8676;
  t8738 = 0.049*t5580;
  t8741 = 0. + t8737 + t8738;
  t8641 = 0.135*t1668;
  t8642 = -0.1305*t101*t1668;
  t8643 = t1668*t8534;
  t8644 = t1668*t1674*t8547;
  t8645 = t1684*t8551;
  t8646 = t1696*t8562;
  t8647 = t1719*t8568;
  t8649 = t1741*t8576;
  t8650 = t1768*t8582;
  t8651 = t1776*t8591;
  t8652 = t1795*t8596;
  t8653 = t1800*t8602;
  t8654 = t1817*t8606;
  t8655 = 0.0306*t1822;
  t8657 = -1.1312*t1839;
  t8658 = 0. + t8641 + t8642 + t8643 + t8644 + t8645 + t8646 + t8647 + t8649 + t8650 + t8651 + t8652 + t8653 + t8654 + t8655 + t8657;
  t8611 = t1883*t8610;
  t8632 = -1.*t8630*t2511;
  t8634 = t8611 + t8632;
  t8666 = -0.049*t8664;
  t8673 = t63*t5528*t8671;
  t8674 = 0.004500000000000004*t3768;
  t8683 = t63*t8681;
  t8689 = -1.*t63*t8686*t5580;
  t8696 = t8694*t5683;
  t8700 = t8699*t5804;
  t8706 = t8705*t5873;
  t8711 = t8710*t5996;
  t8718 = t8717*t6018;
  t8722 = t8721*t6230;
  t8723 = 0.0306*t6365;
  t8724 = -1.1312*t6455;
  t8725 = 0. + t8666 + t8673 + t8674 + t8683 + t8689 + t8696 + t8700 + t8706 + t8711 + t8718 + t8722 + t8723 + t8724;
  t8727 = -1.*t49;
  t8729 = 1. + t8727;
  t8730 = 0.135*t8729;
  t8731 = 0.1305*t49*t63;
  t8735 = t49*t8734;
  t8736 = t49*t3768*t8681;
  t8742 = -1.*t3549*t8741;
  t8743 = t8671*t6598;
  t8745 = t8686*t6876;
  t8746 = t8694*t6902;
  t8747 = t8699*t7133;
  t8748 = t8705*t7177;
  t8750 = t8710*t7664;
  t8751 = t8717*t7726;
  t8752 = t8721*t7970;
  t8754 = 0.0306*t8121;
  t8755 = -1.1312*t8213;
  t8756 = 0. + t8730 + t8731 + t8735 + t8736 + t8742 + t8743 + t8745 + t8746 + t8747 + t8748 + t8750 + t8751 + t8752 + t8754 + t8755;
  t8758 = -0.135*t3549;
  t8759 = 0.1305*t63*t3549;
  t8760 = t3549*t8734;
  t8761 = t3549*t3768*t8681;
  t8762 = t49*t8741;
  t8763 = t8671*t8272;
  t8764 = t8686*t8304;
  t8765 = t8694*t8317;
  t8767 = t8699*t8335;
  t8768 = t8705*t8339;
  t8769 = t8710*t8360;
  t8771 = t8717*t8370;
  t8772 = t8721*t8385;
  t8773 = 0.0306*t8392;
  t8774 = -1.1312*t8407;
  t8775 = 0. + t8758 + t8759 + t8760 + t8761 + t8762 + t8763 + t8764 + t8765 + t8767 + t8768 + t8769 + t8771 + t8772 + t8773 + t8774;
  t8779 = t1684*t101*t8630;
  t8780 = t1674*t8610;
  t8782 = t8779 + t8780;
  t8637 = t1661*t8610;
  t8638 = -1.*t8630*t3024;
  t8639 = t8637 + t8638;
  p_output1[0]=0. + t3443*t3714*t3768 - 1.*t3443*t3511*t3549*t63 - 1.*t1893*t3443*t49*t63;
  p_output1[1]=0. + t3443*t3768*t4580 - 1.*t3443*t3549*t4261*t63 - 1.*t3443*t3865*t49*t63;
  p_output1[2]=0. + t3443*t3768*t5224 - 1.*t3443*t4861*t49*t63 - 1.*t3443*t3549*t5062*t63;
  p_output1[3]=0.;
  p_output1[4]=0. + t3443*t3714*t6479 + t1893*t3443*t8226 + t3443*t3511*t8409;
  p_output1[5]=0. + t3443*t4580*t6479 + t3443*t3865*t8226 + t3443*t4261*t8409;
  p_output1[6]=0. + t3443*t5224*t6479 + t3443*t4861*t8226 + t3443*t5062*t8409;
  p_output1[7]=0.;
  p_output1[8]=0. + t3443*t3714*t8469 + t1893*t3443*t8477 + t3443*t3511*t8489;
  p_output1[9]=0. + t3443*t4580*t8469 + t3443*t3865*t8477 + t3443*t4261*t8489;
  p_output1[10]=0. + t3443*t5224*t8469 + t3443*t4861*t8477 + t3443*t5062*t8489;
  p_output1[11]=0.;
  p_output1[12]=t3443*(-1.*t1890*t8634 + t1860*t8639 - 1.*t3322*t8658) + t3443*t3714*t8725 + t1893*t3443*t8756 + t3443*t3511*t8775;
  p_output1[13]=t3443*t4580*t8725 + t3443*t3865*t8756 + t3443*t4261*t8775 + t3443*(-1.*t101*t1668*t8634 + t2749*t8658 - 1.*t1860*t8782);
  p_output1[14]=t3443*t5224*t8725 + t3443*t4861*t8756 + t3443*t5062*t8775 + t3443*(t101*t1668*t8639 - 1.*t3177*t8658 + t1890*t8782);
  p_output1[15]=0. + (t2770 + t3215 + t3396)*t3443;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 14 && ncols == 1) && 
      !(mrows == 1 && ncols == 14))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 4, (mwSize) 4, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "H_RightToeBottom_to_LeftToeBottom_mex.hh"

namespace SymExpression
{

void H_RightToeBottom_to_LeftToeBottom_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
