/*
 * Automatically Generated from Mathematica.
 * Mon 26 Feb 2018 15:51:23 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t332;
  double t393;
  double t485;
  double t360;
  double t406;
  double t437;
  double t328;
  double t491;
  double t499;
  double t500;
  double t556;
  double t438;
  double t513;
  double t543;
  double t276;
  double t562;
  double t573;
  double t596;
  double t691;
  double t548;
  double t614;
  double t616;
  double t263;
  double t711;
  double t753;
  double t756;
  double t236;
  double t261;
  double t1001;
  double t1022;
  double t1027;
  double t997;
  double t1029;
  double t1030;
  double t1044;
  double t1055;
  double t1042;
  double t1057;
  double t1072;
  double t1106;
  double t1140;
  double t1152;
  double t894;
  double t781;
  double t807;
  double t888;
  double t644;
  double t759;
  double t760;
  double t1253;
  double t1278;
  double t1280;
  double t1087;
  double t1183;
  double t1246;
  double t1480;
  double t1590;
  double t1548;
  double t1563;
  double t1607;
  double t1537;
  double t1646;
  double t1648;
  double t1652;
  double t1583;
  double t1617;
  double t1621;
  double t1660;
  double t1522;
  double t1693;
  double t1697;
  double t1713;
  double t1645;
  double t1670;
  double t1679;
  double t1734;
  double t1509;
  double t1761;
  double t1768;
  double t1791;
  double t1687;
  double t1736;
  double t1754;
  double t1824;
  double t1482;
  double t1872;
  double t1877;
  double t1879;
  double t1760;
  double t1848;
  double t1860;
  double t1881;
  double t2044;
  double t2081;
  double t2090;
  double t2095;
  double t2050;
  double t2051;
  double t2070;
  double t2145;
  double t2154;
  double t2157;
  double t2080;
  double t2098;
  double t2125;
  double t2195;
  double t2202;
  double t2213;
  double t2128;
  double t2158;
  double t2160;
  double t2342;
  double t2345;
  double t2359;
  double t2264;
  double t2285;
  double t2327;
  double t2384;
  double t2390;
  double t2419;
  double t2336;
  double t2362;
  double t2367;
  double t2436;
  double t2460;
  double t2474;
  double t2381;
  double t2424;
  double t2432;
  double t2506;
  double t2511;
  double t2515;
  double t2433;
  double t2494;
  double t2501;
  double t1862;
  double t1882;
  double t1910;
  double t1975;
  double t1987;
  double t1991;
  double t2182;
  double t2218;
  double t2219;
  double t2227;
  double t2229;
  double t2231;
  double t2503;
  double t2532;
  double t2534;
  double t2539;
  double t2543;
  double t2548;
  double t2611;
  double t2624;
  double t2625;
  double t2535;
  double t2551;
  double t2558;
  double t2224;
  double t2233;
  double t2235;
  double t2639;
  double t2650;
  double t2652;
  double t1912;
  double t2001;
  double t2027;
  double t2240;
  double t2561;
  double t2564;
  double t2572;
  double t2583;
  double t2608;
  double t2609;
  double t2626;
  double t2653;
  double t2665;
  double t2667;
  double t2668;
  double t2674;
  double t2677;
  double t2678;
  double t2685;
  double t2692;
  double t2716;
  double t2731;
  double t2733;
  double t2759;
  double t2761;
  double t2762;
  double t2736;
  double t2766;
  double t2767;
  double t2769;
  double t2782;
  double t2785;
  double t2768;
  double t2787;
  double t2788;
  double t2792;
  double t2797;
  double t2798;
  double t171;
  double t2867;
  double t2858;
  double t2863;
  double t2877;
  double t2883;
  double t2895;
  double t2898;
  double t2907;
  double t2884;
  double t2908;
  double t2910;
  double t2990;
  double t3002;
  double t3004;
  double t2937;
  double t3009;
  double t3024;
  double t3043;
  double t3044;
  double t3046;
  double t3028;
  double t3049;
  double t3052;
  double t3060;
  double t3068;
  double t3078;
  double t3146;
  double t3175;
  double t3205;
  double t3207;
  double t3211;
  double t3215;
  double t3206;
  double t3219;
  double t3233;
  double t3265;
  double t3279;
  double t3306;
  double t3236;
  double t3350;
  double t3408;
  double t3415;
  double t3422;
  double t3441;
  double t3410;
  double t3442;
  double t3460;
  double t3484;
  double t3491;
  double t3493;
  double t2791;
  double t2801;
  double t2805;
  double t2807;
  double t2808;
  double t2809;
  double t3057;
  double t3087;
  double t3092;
  double t3096;
  double t3098;
  double t3099;
  double t3467;
  double t3494;
  double t3507;
  double t3531;
  double t3541;
  double t3544;
  double t3587;
  double t3588;
  double t3596;
  double t2806;
  double t2827;
  double t2829;
  double t3647;
  double t3680;
  double t3684;
  double t3095;
  double t3112;
  double t3114;
  double t3734;
  double t3529;
  double t3568;
  double t3578;
  double t2704;
  double t2709;
  double t2710;
  double t3606;
  double t3610;
  double t3611;
  double t2834;
  double t2841;
  double t2856;
  double t3706;
  double t3713;
  double t3721;
  double t3140;
  double t3143;
  double t3144;
  double t3752;
  double t3753;
  double t3755;
  double t2684;
  double t2697;
  double t2700;
  double t3613;
  double t3733;
  double t3756;
  double t3771;
  double t2833;
  double t3137;
  double t3583;
  double t3586;
  double t3971;
  double t4027;
  double t4031;
  double t3917;
  double t3927;
  double t3929;
  double t3943;
  double t3796;
  double t3802;
  double t3823;
  double t3825;
  double t3942;
  double t3945;
  double t4040;
  double t4048;
  double t3830;
  double t3842;
  double t3862;
  double t3866;
  double t4055;
  double t4071;
  double t4106;
  double t4110;
  double t4118;
  double t4121;
  double t4122;
  double t4123;
  double t4180;
  double t4189;
  double t4199;
  double t4226;
  double t4359;
  double t4370;
  double t4375;
  double t4394;
  double t4395;
  double t4402;
  double t4386;
  double t4407;
  double t4425;
  double t4455;
  double t4456;
  double t4460;
  double t4443;
  double t4491;
  double t4529;
  double t4549;
  double t4553;
  double t4559;
  double t4054;
  double t4125;
  double t4166;
  double t4172;
  double t4175;
  double t4248;
  double t4257;
  double t4258;
  double t4270;
  double t4275;
  double t4281;
  double t4297;
  double t4300;
  double t4322;
  double t4327;
  double t4331;
  double t4332;
  double t4336;
  double t4348;
  double t4351;
  double t4697;
  double t4698;
  double t4700;
  double t4696;
  double t4703;
  double t4708;
  double t4713;
  double t4714;
  double t4709;
  double t4738;
  double t4746;
  double t4765;
  double t4773;
  double t4798;
  double t1481;
  double t4531;
  double t4560;
  double t4565;
  double t4574;
  double t4578;
  double t4589;
  double t4604;
  double t4605;
  double t4619;
  double t4621;
  double t4645;
  double t4754;
  double t4813;
  double t4842;
  double t4860;
  double t4861;
  double t4864;
  double t4873;
  double t4881;
  double t4902;
  double t4906;
  double t4911;
  double t4658;
  double t4663;
  double t4669;
  double t4683;
  double t4684;
  double t4918;
  double t4928;
  double t5187;
  double t5198;
  double t5203;
  double t4991;
  double t4993;
  double t5002;
  double t5011;
  double t5025;
  double t5215;
  double t5218;
  double t5219;
  double t5032;
  double t5043;
  double t5102;
  double t5117;
  double t5118;
  double t5119;
  double t5138;
  double t5143;
  double t5152;
  double t3785;
  double t3867;
  double t3869;
  double t3876;
  double t3912;
  double t4949;
  double t4951;
  double t4959;
  double t4962;
  double t4981;
  double t5065;
  double t5067;
  double t5083;
  double t5089;
  double t5094;
  double t5283;
  double t5296;
  double t5300;
  double t5301;
  double t5306;
  double t5311;
  t332 = Cos(var1[6]);
  t393 = Sin(var1[6]);
  t485 = Cos(var1[5]);
  t360 = 0.642788*t332;
  t406 = -0.766044*t393;
  t437 = t360 + t406;
  t328 = Sin(var1[5]);
  t491 = -0.766044*t332;
  t499 = -0.642788*t393;
  t500 = t491 + t499;
  t556 = Cos(var1[4]);
  t438 = -1.*t328*t437;
  t513 = t485*t500;
  t543 = 0. + t438 + t513;
  t276 = Sin(var1[4]);
  t562 = t485*t437;
  t573 = t328*t500;
  t596 = 0. + t562 + t573;
  t691 = Sin(var1[3]);
  t548 = t276*t543;
  t614 = t556*t596;
  t616 = 0. + t548 + t614;
  t263 = Cos(var1[3]);
  t711 = t556*t543;
  t753 = -1.*t276*t596;
  t756 = 0. + t711 + t753;
  t236 = Cos(var1[1]);
  t261 = Cos(var1[2]);
  t1001 = -0.642788*t332;
  t1022 = 0.766044*t393;
  t1027 = t1001 + t1022;
  t997 = -1.*t328*t500;
  t1029 = t485*t1027;
  t1030 = 0. + t997 + t1029;
  t1044 = t328*t1027;
  t1055 = 0. + t513 + t1044;
  t1042 = t276*t1030;
  t1057 = t556*t1055;
  t1072 = 0. + t1042 + t1057;
  t1106 = t556*t1030;
  t1140 = -1.*t276*t1055;
  t1152 = 0. + t1106 + t1140;
  t894 = Sin(var1[2]);
  t781 = -1.*t691*t616;
  t807 = t263*t756;
  t888 = 0. + t781 + t807;
  t644 = t263*t616;
  t759 = t691*t756;
  t760 = 0. + t644 + t759;
  t1253 = -1.*t691*t1072;
  t1278 = t263*t1152;
  t1280 = 0. + t1253 + t1278;
  t1087 = t263*t1072;
  t1183 = t691*t1152;
  t1246 = 0. + t1087 + t1183;
  t1480 = Sin(var1[8]);
  t1590 = Cos(var1[7]);
  t1548 = Cos(var1[9]);
  t1563 = Sin(var1[7]);
  t1607 = Sin(var1[9]);
  t1537 = Cos(var1[10]);
  t1646 = t1590*t1548;
  t1648 = -1.*t1563*t1480*t1607;
  t1652 = t1646 + t1648;
  t1583 = -1.*t1548*t1563*t1480;
  t1617 = -1.*t1590*t1607;
  t1621 = t1583 + t1617;
  t1660 = Sin(var1[10]);
  t1522 = Cos(var1[11]);
  t1693 = t1537*t1652;
  t1697 = t1621*t1660;
  t1713 = t1693 + t1697;
  t1645 = t1537*t1621;
  t1670 = -1.*t1652*t1660;
  t1679 = t1645 + t1670;
  t1734 = Sin(var1[11]);
  t1509 = Cos(var1[12]);
  t1761 = t1522*t1713;
  t1768 = t1679*t1734;
  t1791 = t1761 + t1768;
  t1687 = t1522*t1679;
  t1736 = -1.*t1713*t1734;
  t1754 = t1687 + t1736;
  t1824 = Sin(var1[12]);
  t1482 = Cos(var1[13]);
  t1872 = t1509*t1791;
  t1877 = t1754*t1824;
  t1879 = t1872 + t1877;
  t1760 = t1509*t1754;
  t1848 = -1.*t1791*t1824;
  t1860 = t1760 + t1848;
  t1881 = Sin(var1[13]);
  t2044 = Cos(var1[8]);
  t2081 = t2044*t1537*t1607;
  t2090 = t2044*t1548*t1660;
  t2095 = t2081 + t2090;
  t2050 = t2044*t1548*t1537;
  t2051 = -1.*t2044*t1607*t1660;
  t2070 = t2050 + t2051;
  t2145 = t1522*t2095;
  t2154 = t2070*t1734;
  t2157 = t2145 + t2154;
  t2080 = t1522*t2070;
  t2098 = -1.*t2095*t1734;
  t2125 = t2080 + t2098;
  t2195 = t1509*t2157;
  t2202 = t2125*t1824;
  t2213 = t2195 + t2202;
  t2128 = t1509*t2125;
  t2158 = -1.*t2157*t1824;
  t2160 = t2128 + t2158;
  t2342 = -1.*t1548*t1563;
  t2345 = -1.*t1590*t1480*t1607;
  t2359 = t2342 + t2345;
  t2264 = -1.*t1590*t1548*t1480;
  t2285 = t1563*t1607;
  t2327 = t2264 + t2285;
  t2384 = t1537*t2359;
  t2390 = t2327*t1660;
  t2419 = t2384 + t2390;
  t2336 = t1537*t2327;
  t2362 = -1.*t2359*t1660;
  t2367 = t2336 + t2362;
  t2436 = t1522*t2419;
  t2460 = t2367*t1734;
  t2474 = t2436 + t2460;
  t2381 = t1522*t2367;
  t2424 = -1.*t2419*t1734;
  t2432 = t2381 + t2424;
  t2506 = t1509*t2474;
  t2511 = t2432*t1824;
  t2515 = t2506 + t2511;
  t2433 = t1509*t2432;
  t2494 = -1.*t2474*t1824;
  t2501 = t2433 + t2494;
  t1862 = t1482*t1860;
  t1882 = -1.*t1879*t1881;
  t1910 = t1862 + t1882;
  t1975 = t1482*t1879;
  t1987 = t1860*t1881;
  t1991 = t1975 + t1987;
  t2182 = t1482*t2160;
  t2218 = -1.*t2213*t1881;
  t2219 = t2182 + t2218;
  t2227 = t1482*t2213;
  t2229 = t2160*t1881;
  t2231 = t2227 + t2229;
  t2503 = t1482*t2501;
  t2532 = -1.*t2515*t1881;
  t2534 = t2503 + t2532;
  t2539 = t1482*t2515;
  t2543 = t2501*t1881;
  t2548 = t2539 + t2543;
  t2611 = -0.766044*t2219;
  t2624 = -0.642788*t2231;
  t2625 = t2611 + t2624;
  t2535 = 0.642788*t2534;
  t2551 = -0.766044*t2548;
  t2558 = t2535 + t2551;
  t2224 = 0.642788*t2219;
  t2233 = -0.766044*t2231;
  t2235 = t2224 + t2233;
  t2639 = -0.766044*t2534;
  t2650 = -0.642788*t2548;
  t2652 = t2639 + t2650;
  t1912 = -0.766044*t1910;
  t2001 = -0.642788*t1991;
  t2027 = t1912 + t2001;
  t2240 = -1.*t1590*t2044*t2235;
  t2561 = t1480*t2558;
  t2564 = t2240 + t2561;
  t2572 = t2027*t2564;
  t2583 = 0.642788*t1910;
  t2608 = -0.766044*t1991;
  t2609 = t2583 + t2608;
  t2626 = -1.*t1590*t2044*t2625;
  t2653 = t1480*t2652;
  t2665 = t2626 + t2653;
  t2667 = -1.*t2609*t2665;
  t2668 = -1.*t2625*t2558;
  t2674 = t2235*t2652;
  t2677 = t2668 + t2674;
  t2678 = t2044*t1563*t2677;
  t2685 = 0. + t2572 + t2667 + t2678;
  t2692 = 1/t2685;
  t2716 = t236*t261*t691;
  t2731 = t263*t236*t894;
  t2733 = t2716 + t2731;
  t2759 = t263*t236*t261;
  t2761 = -1.*t236*t691*t894;
  t2762 = t2759 + t2761;
  t2736 = -1.*t276*t2733;
  t2766 = t556*t2762;
  t2767 = t2736 + t2766;
  t2769 = t556*t2733;
  t2782 = t276*t2762;
  t2785 = t2769 + t2782;
  t2768 = t328*t2767;
  t2787 = t485*t2785;
  t2788 = t2768 + t2787;
  t2792 = t485*t2767;
  t2797 = -1.*t328*t2785;
  t2798 = t2792 + t2797;
  t171 = Sin(var1[1]);
  t2867 = Sin(var1[0]);
  t2858 = Cos(var1[0]);
  t2863 = -1.*t2858*t261*t171;
  t2877 = t2867*t894;
  t2883 = t2863 + t2877;
  t2895 = -1.*t261*t2867;
  t2898 = -1.*t2858*t171*t894;
  t2907 = t2895 + t2898;
  t2884 = t691*t2883;
  t2908 = t263*t2907;
  t2910 = t2884 + t2908;
  t2990 = t263*t2883;
  t3002 = -1.*t691*t2907;
  t3004 = t2990 + t3002;
  t2937 = -1.*t276*t2910;
  t3009 = t556*t3004;
  t3024 = t2937 + t3009;
  t3043 = t556*t2910;
  t3044 = t276*t3004;
  t3046 = t3043 + t3044;
  t3028 = t328*t3024;
  t3049 = t485*t3046;
  t3052 = t3028 + t3049;
  t3060 = t485*t3024;
  t3068 = -1.*t328*t3046;
  t3078 = t3060 + t3068;
  t3146 = -1.*t261*t2867*t171;
  t3175 = -1.*t2858*t894;
  t3205 = t3146 + t3175;
  t3207 = t2858*t261;
  t3211 = -1.*t2867*t171*t894;
  t3215 = t3207 + t3211;
  t3206 = t691*t3205;
  t3219 = t263*t3215;
  t3233 = t3206 + t3219;
  t3265 = t263*t3205;
  t3279 = -1.*t691*t3215;
  t3306 = t3265 + t3279;
  t3236 = -1.*t276*t3233;
  t3350 = t556*t3306;
  t3408 = t3236 + t3350;
  t3415 = t556*t3233;
  t3422 = t276*t3306;
  t3441 = t3415 + t3422;
  t3410 = t328*t3408;
  t3442 = t485*t3441;
  t3460 = t3410 + t3442;
  t3484 = t485*t3408;
  t3491 = -1.*t328*t3441;
  t3493 = t3484 + t3491;
  t2791 = -1.*t393*t2788;
  t2801 = t332*t2798;
  t2805 = t2791 + t2801;
  t2807 = t332*t2788;
  t2808 = t393*t2798;
  t2809 = t2807 + t2808;
  t3057 = -1.*t393*t3052;
  t3087 = t332*t3078;
  t3092 = t3057 + t3087;
  t3096 = t332*t3052;
  t3098 = t393*t3078;
  t3099 = t3096 + t3098;
  t3467 = -1.*t393*t3460;
  t3494 = t332*t3493;
  t3507 = t3467 + t3494;
  t3531 = t332*t3460;
  t3541 = t393*t3493;
  t3544 = t3531 + t3541;
  t3587 = -1.*t2044*t1563*t2558;
  t3588 = t1590*t2044*t2609;
  t3596 = 0. + t3587 + t3588;
  t2806 = 0.642788*t2805;
  t2827 = -0.766044*t2809;
  t2829 = t2806 + t2827;
  t3647 = t2044*t1563*t2235;
  t3680 = -1.*t1480*t2609;
  t3684 = 0. + t3647 + t3680;
  t3095 = 0.642788*t3092;
  t3112 = -0.766044*t3099;
  t3114 = t3095 + t3112;
  t3734 = 0. + t2240 + t2561;
  t3529 = 0.642788*t3507;
  t3568 = -0.766044*t3544;
  t3578 = t3529 + t3568;
  t2704 = t2044*t1563*t2652;
  t2709 = -1.*t1590*t2044*t2027;
  t2710 = 0. + t2704 + t2709;
  t3606 = -0.766044*t2805;
  t3610 = -0.642788*t2809;
  t3611 = t3606 + t3610;
  t2834 = -1.*t2044*t1563*t2625;
  t2841 = t1480*t2027;
  t2856 = 0. + t2834 + t2841;
  t3706 = -0.766044*t3092;
  t3713 = -0.642788*t3099;
  t3721 = t3706 + t3713;
  t3140 = t1590*t2044*t2625;
  t3143 = -1.*t1480*t2652;
  t3144 = 0. + t3140 + t3143;
  t3752 = -0.766044*t3507;
  t3753 = -0.642788*t3544;
  t3755 = t3752 + t3753;
  t2684 = t2572 + t2667 + t2678;
  t2697 = t2684*t2692;
  t2700 = 0. + t2697;
  t3613 = t3596*t2692*t3611;
  t3733 = t3684*t2692*t3721;
  t3756 = t3734*t2692*t3755;
  t3771 = 0. + t3613 + t3733 + t3756;
  t2833 = t2710*t2692*t2829;
  t3137 = t2856*t2692*t3114;
  t3583 = t3144*t2692*t3578;
  t3586 = 0. + t2833 + t3137 + t3583;
  t3971 = -1.*t2652*t2609;
  t4027 = t2558*t2027;
  t4031 = 0. + t3971 + t4027;
  t3917 = t2625*t2609;
  t3927 = -1.*t2235*t2027;
  t3929 = 0. + t3917 + t3927;
  t3943 = 0. + t2668 + t2674;
  t3796 = t3596*t2692*t2829;
  t3802 = t3684*t2692*t3114;
  t3823 = t3734*t2692*t3578;
  t3825 = 0. + t3796 + t3802 + t3823;
  t3942 = t2858*t236*t3929*t2692;
  t3945 = t236*t3943*t2692*t2867;
  t4040 = t4031*t2692*t171;
  t4048 = 0. + t3942 + t3945 + t4040;
  t3830 = t2710*t2692*t3611;
  t3842 = t2856*t2692*t3721;
  t3862 = t3144*t2692*t3755;
  t3866 = 0. + t3830 + t3842 + t3862;
  t4055 = t2858*t236*t2856*t2692;
  t4071 = t236*t3144*t2692*t2867;
  t4106 = t2710*t2692*t171;
  t4110 = 0. + t4055 + t4071 + t4106;
  t4118 = t4031*t2692*t2829;
  t4121 = t3929*t2692*t3114;
  t4122 = t3943*t2692*t3578;
  t4123 = 0. + t4118 + t4121 + t4122;
  t4180 = t4031*t2692*t3611;
  t4189 = t3929*t2692*t3721;
  t4199 = t3943*t2692*t3755;
  t4226 = 0. + t4180 + t4189 + t4199;
  t4359 = 0.642788*t1482;
  t4370 = -0.766044*t1881;
  t4375 = t4359 + t4370;
  t4394 = -0.766044*t1482;
  t4395 = -0.642788*t1881;
  t4402 = t4394 + t4395;
  t4386 = -1.*t1824*t4375;
  t4407 = t1509*t4402;
  t4425 = 0. + t4386 + t4407;
  t4455 = t1509*t4375;
  t4456 = t1824*t4402;
  t4460 = 0. + t4455 + t4456;
  t4443 = t1734*t4425;
  t4491 = t1522*t4460;
  t4529 = 0. + t4443 + t4491;
  t4549 = t1522*t4425;
  t4553 = -1.*t1734*t4460;
  t4559 = 0. + t4549 + t4553;
  t4054 = t4048*t3586;
  t4125 = -1.*t4110*t4123;
  t4166 = t4054 + t4125;
  t4172 = t3771*t4166;
  t4175 = t4048*t3866;
  t4248 = -1.*t4110*t4226;
  t4257 = t4175 + t4248;
  t4258 = -1.*t3825*t4257;
  t4270 = t2858*t236*t3684*t2692;
  t4275 = t236*t3734*t2692*t2867;
  t4281 = t3596*t2692*t171;
  t4297 = 0. + t4270 + t4275 + t4281;
  t4300 = t4123*t3866;
  t4322 = -1.*t3586*t4226;
  t4327 = t4300 + t4322;
  t4331 = t4297*t4327;
  t4332 = t4172 + t4258 + t4331;
  t4336 = t2700*t4332;
  t4348 = 0. + t4336;
  t4351 = 1/t4348;
  t4697 = -0.642788*t1482;
  t4698 = 0.766044*t1881;
  t4700 = t4697 + t4698;
  t4696 = -1.*t1824*t4402;
  t4703 = t1509*t4700;
  t4708 = 0. + t4696 + t4703;
  t4713 = t1824*t4700;
  t4714 = 0. + t4407 + t4713;
  t4709 = t1734*t4708;
  t4738 = t1522*t4714;
  t4746 = 0. + t4709 + t4738;
  t4765 = t1522*t4708;
  t4773 = -1.*t1734*t4714;
  t4798 = 0. + t4765 + t4773;
  t1481 = 0. + t1480;
  t4531 = -1.*t1660*t4529;
  t4560 = t1537*t4559;
  t4565 = 0. + t4531 + t4560;
  t4574 = t1607*t4565;
  t4578 = t1537*t4529;
  t4589 = t1660*t4559;
  t4604 = 0. + t4578 + t4589;
  t4605 = t1548*t4604;
  t4619 = 0. + t4574 + t4605;
  t4621 = t2044*t4619;
  t4645 = 0. + t4621;
  t4754 = -1.*t1660*t4746;
  t4813 = t1537*t4798;
  t4842 = 0. + t4754 + t4813;
  t4860 = t1607*t4842;
  t4861 = t1537*t4746;
  t4864 = t1660*t4798;
  t4873 = 0. + t4861 + t4864;
  t4881 = t1548*t4873;
  t4902 = 0. + t4860 + t4881;
  t4906 = t2044*t4902;
  t4911 = 0. + t4906;
  t4658 = t4123*t3771;
  t4663 = -1.*t3825*t4226;
  t4669 = t4658 + t4663;
  t4683 = -1.*t2700*t4669;
  t4684 = 0. + t4683;
  t4918 = t2700*t4327;
  t4928 = 0. + t4918;
  t5187 = -1.*t1548*t4565;
  t5198 = t1607*t4604;
  t5203 = 0. + t5187 + t5198;
  t4991 = t4048*t3771;
  t4993 = -1.*t4297*t4226;
  t5002 = t4991 + t4993;
  t5011 = t2700*t5002;
  t5025 = 0. + t5011;
  t5215 = -1.*t1548*t4842;
  t5218 = t1607*t4873;
  t5219 = 0. + t5215 + t5218;
  t5032 = -1.*t2700*t4257;
  t5043 = 0. + t5032;
  t5102 = t4048*t3825;
  t5117 = -1.*t4297*t4123;
  t5118 = t5102 + t5117;
  t5119 = -1.*t2700*t5118;
  t5138 = 0. + t5119;
  t5143 = t2700*t4166;
  t5152 = 0. + t5143;
  t3785 = t3586*t3771;
  t3867 = -1.*t3825*t3866;
  t3869 = t3785 + t3867;
  t3876 = t2700*t3869;
  t3912 = 0. + t3876;
  t4949 = t4110*t3771;
  t4951 = -1.*t4297*t3866;
  t4959 = t4949 + t4951;
  t4962 = -1.*t2700*t4959;
  t4981 = 0. + t4962;
  t5065 = t4110*t3825;
  t5067 = -1.*t4297*t3586;
  t5083 = t5065 + t5067;
  t5089 = t2700*t5083;
  t5094 = 0. + t5089;
  t5283 = -1.*t3912*t4351;
  t5296 = 0. + t5283;
  t5300 = -1.*t4981*t4351;
  t5301 = 0. + t5300;
  t5306 = -1.*t5094*t4351;
  t5311 = 0. + t5306;
  p_output1[0]=0. + t171;
  p_output1[1]=0. + t236*(0. + t261*t760 + t888*t894);
  p_output1[2]=0. + t236*(0. + t1246*t261 + t1280*t894);
  p_output1[3]=0.;
  p_output1[4]=0. - 1.*t261*t888 + t760*t894;
  p_output1[5]=0. - 1.*t1280*t261 + t1246*t894;
  p_output1[6]=1.;
  p_output1[7]=0.;
  p_output1[8]=0.;
  p_output1[9]=1.;
  p_output1[10]=0.;
  p_output1[11]=0.;
  p_output1[12]=1.;
  p_output1[13]=0.;
  p_output1[14]=0.;
  p_output1[15]=1.;
  p_output1[16]=0.;
  p_output1[17]=0.;
  p_output1[18]=1.;
  p_output1[19]=0.;
  p_output1[20]=0.;
  p_output1[21]=-1.*t1481*t3912*t4351 - 1.*t4351*t4645*t4684 - 1.*t4351*t4911*t4928;
  p_output1[22]=-1.*t1481*t4351*t4981 - 1.*t4351*t4645*t5025 - 1.*t4351*t4911*t5043;
  p_output1[23]=-1.*t1481*t4351*t5094 - 1.*t4351*t4645*t5138 - 1.*t4351*t4911*t5152;
  p_output1[24]=0. - 1.*t4351*t4684*t5203 - 1.*t4351*t4928*t5219;
  p_output1[25]=0. - 1.*t4351*t5025*t5203 - 1.*t4351*t5043*t5219;
  p_output1[26]=0. - 1.*t4351*t5138*t5203 - 1.*t4351*t5152*t5219;
  p_output1[27]=t5296;
  p_output1[28]=t5301;
  p_output1[29]=t5311;
  p_output1[30]=t5296;
  p_output1[31]=t5301;
  p_output1[32]=t5311;
  p_output1[33]=t5296;
  p_output1[34]=t5301;
  p_output1[35]=t5311;
  p_output1[36]=t5296;
  p_output1[37]=t5301;
  p_output1[38]=t5311;
  p_output1[39]=t5296;
  p_output1[40]=t5301;
  p_output1[41]=t5311;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 14 && ncols == 1) && 
      !(mrows == 1 && ncols == 14))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 14, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Jw_RightToeBottom_to_LeftToeBottom_mex.hh"

namespace SymExpression
{

void Jw_RightToeBottom_to_LeftToeBottom_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
