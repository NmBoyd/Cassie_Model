/*
 * Automatically Generated from Mathematica.
 * Fri 16 Feb 2018 12:25:19 GMT-05:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "p_RightToeBottom_to_LeftToeBottom.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(Eigen::Matrix<double,3,1> &p_output1, const Eigen::Matrix<double,14,1> &var1)
{
  double t320;
  double t242;
  double t252;
  double t299;
  double t469;
  double t162;
  double t647;
  double t754;
  double t772;
  double t309;
  double t493;
  double t553;
  double t943;
  double t133;
  double t1058;
  double t1064;
  double t1078;
  double t605;
  double t1029;
  double t1042;
  double t1093;
  double t129;
  double t1299;
  double t1367;
  double t1408;
  double t1046;
  double t1140;
  double t1204;
  double t1429;
  double t8;
  double t1507;
  double t1508;
  double t1519;
  double t1230;
  double t1462;
  double t1496;
  double t1540;
  double t1718;
  double t1831;
  double t1834;
  double t1869;
  double t1780;
  double t1790;
  double t1791;
  double t1977;
  double t1986;
  double t2009;
  double t1826;
  double t1875;
  double t1950;
  double t2065;
  double t2082;
  double t2085;
  double t1958;
  double t2021;
  double t2028;
  double t2419;
  double t2507;
  double t2524;
  double t2311;
  double t2320;
  double t2395;
  double t2588;
  double t2591;
  double t2618;
  double t2416;
  double t2543;
  double t2556;
  double t2715;
  double t2739;
  double t2764;
  double t2567;
  double t2636;
  double t2660;
  double t2817;
  double t2819;
  double t2849;
  double t2687;
  double t2789;
  double t2799;
  double t1502;
  double t1542;
  double t1578;
  double t1610;
  double t1636;
  double t1656;
  double t2030;
  double t2092;
  double t2096;
  double t2122;
  double t2146;
  double t2246;
  double t2802;
  double t2879;
  double t2880;
  double t2906;
  double t2920;
  double t2922;
  double t3073;
  double t3089;
  double t3092;
  double t2884;
  double t2936;
  double t2946;
  double t2117;
  double t2264;
  double t2272;
  double t3160;
  double t3170;
  double t3178;
  double t1605;
  double t1664;
  double t1713;
  double t3350;
  double t3401;
  double t3463;
  double t3529;
  double t3629;
  double t3634;
  double t3832;
  double t3843;
  double t3992;
  double t3998;
  double t3328;
  double t3338;
  double t3428;
  double t3430;
  double t3441;
  double t3532;
  double t3559;
  double t3562;
  double t3585;
  double t3595;
  double t3603;
  double t3660;
  double t3668;
  double t3697;
  double t3764;
  double t3776;
  double t3793;
  double t3860;
  double t3872;
  double t3887;
  double t3916;
  double t3952;
  double t3961;
  double t4009;
  double t4010;
  double t4017;
  double t4026;
  double t4034;
  double t4041;
  double t3063;
  double t3068;
  double t3069;
  double t3287;
  double t3289;
  double t3300;
  double t3318;
  double t3340;
  double t3345;
  double t3346;
  double t3348;
  double t3449;
  double t3451;
  double t3453;
  double t3456;
  double t3458;
  double t3573;
  double t3619;
  double t3714;
  double t3823;
  double t3894;
  double t3963;
  double t4021;
  double t4044;
  double t4047;
  double t4053;
  double t4058;
  double t4082;
  double t4095;
  double t4106;
  double t4112;
  double t4113;
  double t4115;
  double t4116;
  double t4117;
  double t4136;
  double t4145;
  double t4163;
  double t4167;
  double t4169;
  double t4170;
  double t3262;
  double t3265;
  double t3268;
  double t2279;
  double t2961;
  double t2971;
  double t2989;
  double t3154;
  double t3189;
  double t3232;
  double t3251;
  double t3271;
  double t3275;
  double t3283;
  double t5070;
  double t5194;
  double t5198;
  double t5216;
  double t5220;
  double t5296;
  double t5659;
  double t5846;
  double t5859;
  double t5914;
  double t5968;
  double t6052;
  double t6141;
  double t6147;
  double t6201;
  double t6243;
  double t6256;
  double t6368;
  double t6402;
  double t6454;
  double t6483;
  double t6544;
  double t6582;
  double t6584;
  double t6689;
  double t6697;
  double t6735;
  double t6779;
  double t6781;
  double t6790;
  double t6836;
  double t6911;
  double t6935;
  double t6941;
  double t7105;
  double t7150;
  double t7171;
  double t7530;
  double t5073;
  double t5087;
  double t5432;
  double t5632;
  double t5644;
  double t5650;
  double t5704;
  double t5729;
  double t5283;
  double t5304;
  double t5364;
  double t7729;
  double t5757;
  double t5781;
  double t5796;
  double t5942;
  double t6017;
  double t6018;
  double t7773;
  double t7795;
  double t7823;
  double t7833;
  double t7846;
  double t7859;
  double t6171;
  double t6176;
  double t6184;
  double t6478;
  double t6490;
  double t6491;
  double t7890;
  double t7906;
  double t7908;
  double t7964;
  double t7970;
  double t7972;
  double t6654;
  double t6655;
  double t6659;
  double t6795;
  double t6875;
  double t6881;
  double t7977;
  double t7978;
  double t7984;
  double t8045;
  double t8051;
  double t8058;
  double t6961;
  double t6985;
  double t7071;
  double t8070;
  double t8078;
  double t8081;
  double t8083;
  double t8086;
  double t8087;
  double t7590;
  double t7638;
  double t7649;
  double t7738;
  double t7739;
  double t7758;
  double t8166;
  double t8172;
  double t8175;
  double t8181;
  double t8184;
  double t8186;
  double t8211;
  double t8225;
  double t8227;
  double t8232;
  double t8240;
  double t8246;
  double t8248;
  double t8253;
  double t8256;
  double t8264;
  double t8265;
  double t8268;
  double t8272;
  double t8281;
  double t8288;
  double t8292;
  double t8296;
  double t8299;
  double t4255;
  double t4267;
  double t4292;
  double t4299;
  double t4327;
  double t4341;
  double t4390;
  double t4433;
  double t4492;
  double t4514;
  double t4524;
  double t4564;
  double t4568;
  double t4577;
  double t4621;
  double t4672;
  double t4070;
  double t4207;
  double t4210;
  double t5129;
  double t5430;
  double t5438;
  double t5733;
  double t5798;
  double t6165;
  double t6290;
  double t6598;
  double t6741;
  double t6947;
  double t7183;
  double t7186;
  double t7194;
  double t7195;
  double t7197;
  double t7226;
  double t7234;
  double t7238;
  double t7293;
  double t7358;
  double t7543;
  double t7558;
  double t7568;
  double t7577;
  double t7684;
  double t7709;
  double t7761;
  double t7829;
  double t7887;
  double t7934;
  double t7974;
  double t8017;
  double t8061;
  double t8082;
  double t8090;
  double t8115;
  double t8119;
  double t8120;
  double t8124;
  double t8126;
  double t8127;
  double t8128;
  double t8131;
  double t8135;
  double t8155;
  double t8157;
  double t8158;
  double t8163;
  double t8164;
  double t8180;
  double t8204;
  double t8229;
  double t8247;
  double t8259;
  double t8271;
  double t8291;
  double t8302;
  double t8303;
  double t8306;
  double t8318;
  double t8323;
  double t8325;
  double t8326;
  double t8329;
  double t8330;
  double t8331;
  double t8337;
  double t8341;
  double t8344;
  double t4212;
  double t4238;
  double t4242;
  t320 = Cos(var1[7]);
  t242 = Cos(var1[9]);
  t252 = Sin(var1[7]);
  t299 = Sin(var1[8]);
  t469 = Sin(var1[9]);
  t162 = Cos(var1[10]);
  t647 = t320*t242;
  t754 = -1.*t252*t299*t469;
  t772 = t647 + t754;
  t309 = t242*t252*t299;
  t493 = t320*t469;
  t553 = t309 + t493;
  t943 = Sin(var1[10]);
  t133 = Cos(var1[11]);
  t1058 = t162*t772;
  t1064 = -1.*t553*t943;
  t1078 = t1058 + t1064;
  t605 = t162*t553;
  t1029 = t772*t943;
  t1042 = t605 + t1029;
  t1093 = Sin(var1[11]);
  t129 = Cos(var1[12]);
  t1299 = t133*t1078;
  t1367 = -1.*t1042*t1093;
  t1408 = t1299 + t1367;
  t1046 = t133*t1042;
  t1140 = t1078*t1093;
  t1204 = t1046 + t1140;
  t1429 = Sin(var1[12]);
  t8 = Cos(var1[13]);
  t1507 = t129*t1408;
  t1508 = -1.*t1204*t1429;
  t1519 = t1507 + t1508;
  t1230 = t129*t1204;
  t1462 = t1408*t1429;
  t1496 = t1230 + t1462;
  t1540 = Sin(var1[13]);
  t1718 = Cos(var1[8]);
  t1831 = -1.*t1718*t162*t469;
  t1834 = -1.*t1718*t242*t943;
  t1869 = t1831 + t1834;
  t1780 = t1718*t242*t162;
  t1790 = -1.*t1718*t469*t943;
  t1791 = t1780 + t1790;
  t1977 = t133*t1869;
  t1986 = -1.*t1791*t1093;
  t2009 = t1977 + t1986;
  t1826 = t133*t1791;
  t1875 = t1869*t1093;
  t1950 = t1826 + t1875;
  t2065 = t129*t2009;
  t2082 = -1.*t1950*t1429;
  t2085 = t2065 + t2082;
  t1958 = t129*t1950;
  t2021 = t2009*t1429;
  t2028 = t1958 + t2021;
  t2419 = -1.*t242*t252;
  t2507 = -1.*t320*t299*t469;
  t2524 = t2419 + t2507;
  t2311 = t320*t242*t299;
  t2320 = -1.*t252*t469;
  t2395 = t2311 + t2320;
  t2588 = t162*t2524;
  t2591 = -1.*t2395*t943;
  t2618 = t2588 + t2591;
  t2416 = t162*t2395;
  t2543 = t2524*t943;
  t2556 = t2416 + t2543;
  t2715 = t133*t2618;
  t2739 = -1.*t2556*t1093;
  t2764 = t2715 + t2739;
  t2567 = t133*t2556;
  t2636 = t2618*t1093;
  t2660 = t2567 + t2636;
  t2817 = t129*t2764;
  t2819 = -1.*t2660*t1429;
  t2849 = t2817 + t2819;
  t2687 = t129*t2660;
  t2789 = t2764*t1429;
  t2799 = t2687 + t2789;
  t1502 = t8*t1496;
  t1542 = t1519*t1540;
  t1578 = t1502 + t1542;
  t1610 = t8*t1519;
  t1636 = -1.*t1496*t1540;
  t1656 = t1610 + t1636;
  t2030 = t8*t2028;
  t2092 = t2085*t1540;
  t2096 = t2030 + t2092;
  t2122 = t8*t2085;
  t2146 = -1.*t2028*t1540;
  t2246 = t2122 + t2146;
  t2802 = t8*t2799;
  t2879 = t2849*t1540;
  t2880 = t2802 + t2879;
  t2906 = t8*t2849;
  t2920 = -1.*t2799*t1540;
  t2922 = t2906 + t2920;
  t3073 = 0.642788*t2096;
  t3089 = 0.766044*t2246;
  t3092 = t3073 + t3089;
  t2884 = -0.766044*t2880;
  t2936 = 0.642788*t2922;
  t2946 = t2884 + t2936;
  t2117 = -0.766044*t2096;
  t2264 = 0.642788*t2246;
  t2272 = t2117 + t2264;
  t3160 = 0.642788*t2880;
  t3170 = 0.766044*t2922;
  t3178 = t3160 + t3170;
  t1605 = 0.642788*t1578;
  t1664 = 0.766044*t1656;
  t1713 = t1605 + t1664;
  t3350 = -1.*t242;
  t3401 = 1. + t3350;
  t3463 = -1.*t162;
  t3529 = 1. + t3463;
  t3629 = -1.*t133;
  t3634 = 1. + t3629;
  t3832 = -1.*t129;
  t3843 = 1. + t3832;
  t3992 = -1.*t8;
  t3998 = 1. + t3992;
  t3328 = -1.*t1718;
  t3338 = 1. + t3328;
  t3428 = -0.049*t3401;
  t3430 = -0.09*t469;
  t3441 = 0. + t3428 + t3430;
  t3532 = -0.049*t3529;
  t3559 = -0.21*t943;
  t3562 = 0. + t3532 + t3559;
  t3585 = -0.21*t3529;
  t3595 = 0.049*t943;
  t3603 = 0. + t3585 + t3595;
  t3660 = -0.0016*t3634;
  t3668 = -0.2707*t1093;
  t3697 = 0. + t3660 + t3668;
  t3764 = -0.2707*t3634;
  t3776 = 0.0016*t1093;
  t3793 = 0. + t3764 + t3776;
  t3860 = 0.0184*t3843;
  t3872 = -0.7055*t1429;
  t3887 = 0. + t3860 + t3872;
  t3916 = -0.7055*t3843;
  t3952 = -0.0184*t1429;
  t3961 = 0. + t3916 + t3952;
  t4009 = -0.0216*t3998;
  t4010 = -1.1135*t1540;
  t4017 = 0. + t4009 + t4010;
  t4026 = -1.1135*t3998;
  t4034 = 0.0216*t1540;
  t4041 = 0. + t4026 + t4034;
  t3063 = -0.766044*t1578;
  t3068 = 0.642788*t1656;
  t3069 = t3063 + t3068;
  t3287 = -1.*t320;
  t3289 = 1. + t3287;
  t3300 = -0.135*t3289;
  t3318 = -0.1305*t320*t1718;
  t3340 = -0.135*t3338;
  t3345 = 0.049*t299;
  t3346 = 0. + t3340 + t3345;
  t3348 = t320*t3346;
  t3449 = t320*t299*t3441;
  t3451 = -0.09*t3401;
  t3453 = 0.049*t469;
  t3456 = 0. + t3451 + t3453;
  t3458 = -1.*t252*t3456;
  t3573 = t2395*t3562;
  t3619 = t2524*t3603;
  t3714 = t2556*t3697;
  t3823 = t2618*t3793;
  t3894 = t2660*t3887;
  t3963 = t2764*t3961;
  t4021 = t2799*t4017;
  t4044 = t2849*t4041;
  t4047 = 0.0306*t2880;
  t4053 = -1.1312*t2922;
  t4058 = 0. + t3300 + t3318 + t3348 + t3449 + t3458 + t3573 + t3619 + t3714 + t3823 + t3894 + t3963 + t4021 + t4044 + t4047 + t4053;
  t4082 = -0.049*t3338;
  t4095 = -0.004500000000000004*t299;
  t4106 = t1718*t3441;
  t4112 = t1718*t242*t3562;
  t4113 = -1.*t1718*t469*t3603;
  t4115 = t1791*t3697;
  t4116 = t1869*t3793;
  t4117 = t1950*t3887;
  t4136 = t2009*t3961;
  t4145 = t2028*t4017;
  t4163 = t2085*t4041;
  t4167 = 0.0306*t2096;
  t4169 = -1.1312*t2246;
  t4170 = 0. + t4082 + t4095 + t4106 + t4112 + t4113 + t4115 + t4116 + t4117 + t4136 + t4145 + t4163 + t4167 + t4169;
  t3262 = t3092*t2946;
  t3265 = -1.*t2272*t3178;
  t3268 = t3262 + t3265;
  t2279 = t320*t1718*t2272;
  t2961 = t299*t2946;
  t2971 = t2279 + t2961;
  t2989 = -1.*t1713*t2971;
  t3154 = t320*t1718*t3092;
  t3189 = t299*t3178;
  t3232 = t3154 + t3189;
  t3251 = t3069*t3232;
  t3271 = -1.*t1718*t252*t3268;
  t3275 = 0. + t2989 + t3251 + t3271;
  t3283 = 1/t3275;
  t5070 = Cos(var1[1]);
  t5194 = Cos(var1[2]);
  t5198 = Cos(var1[3]);
  t5216 = -1.*t5198;
  t5220 = 1. + t5216;
  t5296 = Sin(var1[3]);
  t5659 = Sin(var1[2]);
  t5846 = Cos(var1[4]);
  t5859 = -1.*t5846;
  t5914 = 1. + t5859;
  t5968 = Sin(var1[4]);
  t6052 = -1.*t5070*t5194*t5296;
  t6141 = -1.*t5198*t5070*t5659;
  t6147 = t6052 + t6141;
  t6201 = t5198*t5070*t5194;
  t6243 = -1.*t5070*t5296*t5659;
  t6256 = t6201 + t6243;
  t6368 = Cos(var1[5]);
  t6402 = -1.*t6368;
  t6454 = 1. + t6402;
  t6483 = Sin(var1[5]);
  t6544 = t5968*t6147;
  t6582 = t5846*t6256;
  t6584 = t6544 + t6582;
  t6689 = t5846*t6147;
  t6697 = -1.*t5968*t6256;
  t6735 = t6689 + t6697;
  t6779 = Cos(var1[6]);
  t6781 = -1.*t6779;
  t6790 = 1. + t6781;
  t6836 = Sin(var1[6]);
  t6911 = -1.*t6483*t6584;
  t6935 = t6368*t6735;
  t6941 = t6911 + t6935;
  t7105 = t6368*t6584;
  t7150 = t6483*t6735;
  t7171 = t7105 + t7150;
  t7530 = Cos(var1[0]);
  t5073 = -1.*t5070;
  t5087 = 1. + t5073;
  t5432 = Sin(var1[1]);
  t5632 = -1.*t5194;
  t5644 = 1. + t5632;
  t5650 = -0.049*t5644;
  t5704 = -0.09*t5659;
  t5729 = 0. + t5650 + t5704;
  t5283 = -0.049*t5220;
  t5304 = -0.21*t5296;
  t5364 = 0. + t5283 + t5304;
  t7729 = Sin(var1[0]);
  t5757 = -0.21*t5220;
  t5781 = 0.049*t5296;
  t5796 = 0. + t5757 + t5781;
  t5942 = -0.2707*t5914;
  t6017 = 0.0016*t5968;
  t6018 = 0. + t5942 + t6017;
  t7773 = t7530*t5194*t5432;
  t7795 = -1.*t7729*t5659;
  t7823 = t7773 + t7795;
  t7833 = -1.*t5194*t7729;
  t7846 = -1.*t7530*t5432*t5659;
  t7859 = t7833 + t7846;
  t6171 = -0.0016*t5914;
  t6176 = -0.2707*t5968;
  t6184 = 0. + t6171 + t6176;
  t6478 = 0.0184*t6454;
  t6490 = -0.7055*t6483;
  t6491 = 0. + t6478 + t6490;
  t7890 = -1.*t5296*t7823;
  t7906 = t5198*t7859;
  t7908 = t7890 + t7906;
  t7964 = t5198*t7823;
  t7970 = t5296*t7859;
  t7972 = t7964 + t7970;
  t6654 = -0.7055*t6454;
  t6655 = -0.0184*t6483;
  t6659 = 0. + t6654 + t6655;
  t6795 = -1.1135*t6790;
  t6875 = 0.0216*t6836;
  t6881 = 0. + t6795 + t6875;
  t7977 = t5968*t7908;
  t7978 = t5846*t7972;
  t7984 = t7977 + t7978;
  t8045 = t5846*t7908;
  t8051 = -1.*t5968*t7972;
  t8058 = t8045 + t8051;
  t6961 = -0.0216*t6790;
  t6985 = -1.1135*t6836;
  t7071 = 0. + t6961 + t6985;
  t8070 = -1.*t6483*t7984;
  t8078 = t6368*t8058;
  t8081 = t8070 + t8078;
  t8083 = t6368*t7984;
  t8086 = t6483*t8058;
  t8087 = t8083 + t8086;
  t7590 = 0.135*t5087;
  t7638 = 0.049*t5432;
  t7649 = 0. + t7590 + t7638;
  t7738 = -0.09*t5644;
  t7739 = 0.049*t5659;
  t7758 = 0. + t7738 + t7739;
  t8166 = t5194*t7729*t5432;
  t8172 = t7530*t5659;
  t8175 = t8166 + t8172;
  t8181 = t7530*t5194;
  t8184 = -1.*t7729*t5432*t5659;
  t8186 = t8181 + t8184;
  t8211 = -1.*t5296*t8175;
  t8225 = t5198*t8186;
  t8227 = t8211 + t8225;
  t8232 = t5198*t8175;
  t8240 = t5296*t8186;
  t8246 = t8232 + t8240;
  t8248 = t5968*t8227;
  t8253 = t5846*t8246;
  t8256 = t8248 + t8253;
  t8264 = t5846*t8227;
  t8265 = -1.*t5968*t8246;
  t8268 = t8264 + t8265;
  t8272 = -1.*t6483*t8256;
  t8281 = t6368*t8268;
  t8288 = t8272 + t8281;
  t8292 = t6368*t8256;
  t8296 = t6483*t8268;
  t8299 = t8292 + t8296;
  t4255 = 0.135*t252;
  t4267 = -0.1305*t1718*t252;
  t4292 = t252*t3346;
  t4299 = t252*t299*t3441;
  t4327 = t320*t3456;
  t4341 = t553*t3562;
  t4390 = t772*t3603;
  t4433 = t1042*t3697;
  t4492 = t1078*t3793;
  t4514 = t1204*t3887;
  t4524 = t1408*t3961;
  t4564 = t1496*t4017;
  t4568 = t1519*t4041;
  t4577 = 0.0306*t1578;
  t4621 = -1.1312*t1656;
  t4672 = 0. + t4255 + t4267 + t4292 + t4299 + t4327 + t4341 + t4390 + t4433 + t4492 + t4514 + t4524 + t4564 + t4568 + t4577 + t4621;
  t4070 = t2272*t4058;
  t4207 = -1.*t4170*t2946;
  t4210 = t4070 + t4207;
  t5129 = -0.049*t5087;
  t5430 = t5070*t5194*t5364;
  t5438 = 0.004500000000000004*t5432;
  t5733 = t5070*t5729;
  t5798 = -1.*t5070*t5796*t5659;
  t6165 = t6018*t6147;
  t6290 = t6184*t6256;
  t6598 = t6491*t6584;
  t6741 = t6659*t6735;
  t6947 = t6881*t6941;
  t7183 = t7071*t7171;
  t7186 = t6836*t6941;
  t7194 = t6779*t7171;
  t7195 = t7186 + t7194;
  t7197 = 0.0306*t7195;
  t7226 = t6779*t6941;
  t7234 = -1.*t6836*t7171;
  t7238 = t7226 + t7234;
  t7293 = -1.1312*t7238;
  t7358 = 0. + t5129 + t5430 + t5438 + t5733 + t5798 + t6165 + t6290 + t6598 + t6741 + t6947 + t7183 + t7197 + t7293;
  t7543 = -1.*t7530;
  t7558 = 1. + t7543;
  t7568 = 0.135*t7558;
  t7577 = 0.1305*t7530*t5070;
  t7684 = t7530*t7649;
  t7709 = t7530*t5432*t5729;
  t7761 = -1.*t7729*t7758;
  t7829 = t5364*t7823;
  t7887 = t5796*t7859;
  t7934 = t6018*t7908;
  t7974 = t6184*t7972;
  t8017 = t6491*t7984;
  t8061 = t6659*t8058;
  t8082 = t6881*t8081;
  t8090 = t7071*t8087;
  t8115 = t6836*t8081;
  t8119 = t6779*t8087;
  t8120 = t8115 + t8119;
  t8124 = 0.0306*t8120;
  t8126 = t6779*t8081;
  t8127 = -1.*t6836*t8087;
  t8128 = t8126 + t8127;
  t8131 = -1.1312*t8128;
  t8135 = 0. + t7568 + t7577 + t7684 + t7709 + t7761 + t7829 + t7887 + t7934 + t7974 + t8017 + t8061 + t8082 + t8090 + t8124 + t8131;
  t8155 = -0.135*t7729;
  t8157 = 0.1305*t5070*t7729;
  t8158 = t7729*t7649;
  t8163 = t7729*t5432*t5729;
  t8164 = t7530*t7758;
  t8180 = t5364*t8175;
  t8204 = t5796*t8186;
  t8229 = t6018*t8227;
  t8247 = t6184*t8246;
  t8259 = t6491*t8256;
  t8271 = t6659*t8268;
  t8291 = t6881*t8288;
  t8302 = t7071*t8299;
  t8303 = t6836*t8288;
  t8306 = t6779*t8299;
  t8318 = t8303 + t8306;
  t8323 = 0.0306*t8318;
  t8325 = t6779*t8288;
  t8326 = -1.*t6836*t8299;
  t8329 = t8325 + t8326;
  t8330 = -1.1312*t8329;
  t8331 = 0. + t8155 + t8157 + t8158 + t8163 + t8164 + t8180 + t8204 + t8229 + t8247 + t8259 + t8271 + t8291 + t8302 + t8323 + t8330;
  t8337 = t320*t1718*t4170;
  t8341 = t299*t4058;
  t8344 = t8337 + t8341;
  t4212 = t3092*t4058;
  t4238 = -1.*t4170*t3178;
  t4242 = t4212 + t4238;

  p_output1(0)=t3283*(-1.*t1713*t4210 + t3069*t4242 - 1.*t3268*t4672) + (0. - 1.*t1713*t2946 + t3069*t3178)*t3283*t7358 + (0. + t1713*t2272 - 1.*t3069*t3092)*t3283*t8135 + (0. + t3262 + t3265)*t3283*t8331;
  p_output1(1)=(0. - 1.*t1718*t252*t2946 + t1718*t3069*t320)*t3283*t7358 + (0. + t1718*t2272*t252 + t299*t3069)*t3283*t8135 + (0. - 1.*t2946*t299 - 1.*t1718*t2272*t320)*t3283*t8331 + t3283*(-1.*t1718*t252*t4210 + t2971*t4672 - 1.*t3069*t8344);
  p_output1(2)=(0. + t1718*t252*t3178 - 1.*t1713*t1718*t320)*t3283*t7358 + (0. - 1.*t1713*t299 - 1.*t1718*t252*t3092)*t3283*t8135 + (0. + t3154 + t3189)*t3283*t8331 + t3283*(t1718*t252*t4242 - 1.*t3232*t4672 + t1713*t8344);
}


       
void p_RightToeBottom_to_LeftToeBottom(Eigen::Matrix<double,3,1> &p_output1, const Eigen::Matrix<double,14,1> &var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
