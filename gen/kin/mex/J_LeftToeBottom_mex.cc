/*
 * Automatically Generated from Mathematica.
 * Fri 16 Mar 2018 11:08:36 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t942;
  double t989;
  double t1402;
  double t937;
  double t1543;
  double t225;
  double t956;
  double t1598;
  double t1774;
  double t1835;
  double t1888;
  double t1992;
  double t2377;
  double t2983;
  double t2990;
  double t3061;
  double t3244;
  double t2677;
  double t2767;
  double t2793;
  double t3359;
  double t4045;
  double t4179;
  double t4216;
  double t4427;
  double t3970;
  double t4037;
  double t4038;
  double t4686;
  double t4755;
  double t4800;
  double t4977;
  double t4986;
  double t5012;
  double t5081;
  double t5100;
  double t5107;
  double t5109;
  double t5275;
  double t5306;
  double t5317;
  double t5353;
  double t5354;
  double t5364;
  double t5415;
  double t5484;
  double t5520;
  double t5589;
  double t5782;
  double t5825;
  double t5847;
  double t5865;
  double t5885;
  double t5895;
  double t5978;
  double t5999;
  double t6005;
  double t6013;
  double t6056;
  double t6062;
  double t6097;
  double t6112;
  double t6116;
  double t6132;
  double t6163;
  double t6207;
  double t6242;
  double t6259;
  double t6301;
  double t6302;
  double t6306;
  double t227;
  double t259;
  double t268;
  double t550;
  double t2505;
  double t2509;
  double t6342;
  double t6352;
  double t6363;
  double t6367;
  double t6369;
  double t6371;
  double t3191;
  double t3259;
  double t3317;
  double t3380;
  double t3445;
  double t3489;
  double t6377;
  double t6379;
  double t6385;
  double t4252;
  double t4531;
  double t4558;
  double t4803;
  double t4808;
  double t4920;
  double t5019;
  double t5084;
  double t5093;
  double t6417;
  double t6430;
  double t6431;
  double t6437;
  double t6439;
  double t6441;
  double t5115;
  double t5149;
  double t5177;
  double t5378;
  double t5440;
  double t5462;
  double t6449;
  double t6454;
  double t6455;
  double t6460;
  double t6461;
  double t6467;
  double t5669;
  double t5743;
  double t5765;
  double t5948;
  double t5985;
  double t5991;
  double t6475;
  double t6483;
  double t6484;
  double t6522;
  double t6525;
  double t6539;
  double t6023;
  double t6029;
  double t6040;
  double t6157;
  double t6177;
  double t6196;
  double t6552;
  double t6563;
  double t6582;
  double t6592;
  double t6609;
  double t6613;
  double t6278;
  double t6287;
  double t6291;
  double t6625;
  double t6649;
  double t6657;
  double t6674;
  double t6687;
  double t6688;
  double t6753;
  double t6770;
  double t6773;
  double t6828;
  double t6855;
  double t6856;
  double t6905;
  double t6909;
  double t6927;
  double t6960;
  double t6980;
  double t6989;
  double t6998;
  double t7031;
  double t7033;
  double t7046;
  double t7049;
  double t7071;
  double t7097;
  double t7136;
  double t7207;
  double t7263;
  double t7281;
  double t7286;
  double t7292;
  double t7305;
  double t7362;
  double t7384;
  double t7386;
  double t7392;
  double t7436;
  double t7454;
  double t7456;
  double t7642;
  double t7696;
  double t7712;
  double t7799;
  double t7824;
  double t7884;
  double t7953;
  double t7966;
  double t7970;
  double t7998;
  double t8002;
  double t8006;
  double t8053;
  double t8087;
  double t8110;
  double t8164;
  double t8166;
  double t8175;
  double t8259;
  double t8274;
  double t8338;
  double t8410;
  double t8523;
  double t8544;
  double t8832;
  double t8870;
  double t8937;
  double t8986;
  double t9025;
  double t9049;
  double t9071;
  double t9079;
  double t9086;
  double t9377;
  double t9392;
  double t9395;
  double t9461;
  double t9472;
  double t9476;
  double t9509;
  double t9538;
  double t9563;
  double t9578;
  double t9581;
  double t9588;
  double t9607;
  double t9608;
  double t9618;
  double t9630;
  double t9631;
  double t9655;
  double t9680;
  double t9688;
  double t9696;
  double t9707;
  double t9708;
  double t9709;
  double t9715;
  double t9717;
  double t9721;
  double t9725;
  double t9728;
  double t9737;
  double t9766;
  double t9767;
  double t9774;
  double t9868;
  double t9872;
  double t9881;
  double t9897;
  double t9903;
  double t9926;
  double t9931;
  double t9936;
  double t9945;
  double t9949;
  double t9954;
  double t9965;
  double t9966;
  double t9971;
  double t9976;
  double t9982;
  double t9992;
  double t10001;
  double t10004;
  double t10007;
  double t10013;
  double t10014;
  double t10021;
  double t10031;
  double t10033;
  double t10038;
  double t10065;
  double t10072;
  double t10074;
  double t10078;
  double t10080;
  double t10081;
  double t10132;
  double t10133;
  double t10139;
  double t10144;
  double t10146;
  double t10148;
  double t10158;
  double t10160;
  double t10165;
  double t10166;
  double t10170;
  double t10176;
  double t10179;
  double t10182;
  double t10188;
  double t10189;
  double t10192;
  double t10196;
  double t10197;
  double t10198;
  double t10201;
  double t10202;
  double t10203;
  double t10207;
  double t10208;
  double t10211;
  double t10216;
  double t10223;
  double t10228;
  double t10234;
  double t10235;
  double t10239;
  double t10275;
  double t10277;
  double t10280;
  double t10287;
  double t10288;
  double t10291;
  double t10296;
  double t10298;
  double t10299;
  double t10302;
  double t10303;
  double t10304;
  double t10306;
  double t10307;
  double t10308;
  double t10318;
  double t10322;
  double t10324;
  double t10328;
  double t10329;
  double t10332;
  double t10340;
  double t10341;
  double t10345;
  double t10348;
  double t10352;
  double t10353;
  double t10357;
  double t10361;
  double t10364;
  double t10397;
  double t10400;
  double t10404;
  double t10406;
  double t10407;
  double t10409;
  double t10410;
  double t10411;
  double t10416;
  double t10417;
  double t10424;
  double t10426;
  double t10428;
  double t10429;
  double t10438;
  double t10444;
  double t10449;
  double t10453;
  double t10456;
  double t10458;
  double t10460;
  double t10462;
  double t10463;
  double t10465;
  double t10467;
  double t10468;
  double t10492;
  double t10494;
  double t10495;
  double t10501;
  double t10504;
  double t10509;
  double t10511;
  double t10514;
  double t10520;
  double t10521;
  double t10526;
  double t10528;
  double t10529;
  double t10532;
  double t10533;
  double t10534;
  double t10541;
  double t10542;
  double t10545;
  double t10550;
  double t10555;
  double t10556;
  double t10564;
  double t10567;
  double t10569;
  double t10575;
  double t10580;
  double t10581;
  double t10585;
  double t10587;
  double t10588;
  double t10281;
  double t10283;
  double t10286;
  double t10293;
  double t10300;
  double t10305;
  double t10312;
  double t10325;
  double t10337;
  double t10347;
  double t10356;
  double t10365;
  double t10366;
  double t10368;
  double t10372;
  double t10373;
  double t10374;
  double t10377;
  double t10378;
  double t10379;
  double t6391;
  double t6395;
  double t6404;
  double t10653;
  double t10654;
  double t10657;
  double t10661;
  double t10662;
  double t10665;
  double t10669;
  double t10673;
  double t10674;
  double t10678;
  double t10680;
  double t10686;
  double t10691;
  double t10692;
  double t10694;
  double t10696;
  double t10697;
  double t10698;
  double t10624;
  double t10625;
  double t10626;
  double t10629;
  double t10630;
  double t10725;
  double t10727;
  double t10730;
  double t10736;
  double t10737;
  double t10738;
  double t10752;
  double t10755;
  double t10757;
  double t10760;
  double t10762;
  double t10763;
  double t10768;
  double t10771;
  double t10775;
  double t10780;
  double t10782;
  double t10783;
  double t10787;
  double t10788;
  double t10792;
  double t10795;
  double t10799;
  double t10800;
  double t10823;
  double t10827;
  double t10828;
  double t10835;
  double t10836;
  double t10840;
  double t10855;
  double t10856;
  double t10860;
  double t10865;
  double t10868;
  double t10870;
  double t10875;
  double t10876;
  double t10877;
  double t10883;
  double t10888;
  double t10889;
  double t10892;
  double t10893;
  double t10894;
  double t10897;
  double t10898;
  double t10899;
  double t10930;
  double t10934;
  double t10936;
  double t10940;
  double t10944;
  double t10949;
  double t10950;
  double t10952;
  double t10954;
  double t10956;
  double t10957;
  double t10959;
  double t10960;
  double t10961;
  double t10965;
  double t10966;
  double t10969;
  double t10971;
  double t10973;
  double t10974;
  double t10916;
  double t10917;
  double t10919;
  double t10920;
  double t10924;
  double t10990;
  double t10991;
  double t10992;
  double t10994;
  double t10995;
  double t10996;
  double t10999;
  double t11001;
  double t11002;
  double t11004;
  double t11005;
  double t11006;
  double t11008;
  double t11009;
  double t11011;
  double t11015;
  double t11017;
  double t11018;
  double t11021;
  double t11022;
  double t11024;
  double t11026;
  double t11027;
  double t11028;
  double t11031;
  double t11032;
  double t11035;
  double t11050;
  double t11051;
  double t11052;
  double t11054;
  double t11055;
  double t11056;
  double t11058;
  double t11059;
  double t11060;
  double t11062;
  double t11064;
  double t11065;
  double t11067;
  double t11068;
  double t11069;
  double t11071;
  double t11072;
  double t11073;
  double t11076;
  double t11077;
  double t11078;
  double t11080;
  double t11081;
  double t11082;
  double t11084;
  double t11085;
  double t11086;
  double t11105;
  double t11106;
  double t11108;
  double t11109;
  double t11110;
  double t11112;
  double t11113;
  double t11115;
  double t11116;
  double t11117;
  double t11119;
  double t11120;
  double t11121;
  double t11097;
  double t11098;
  double t11099;
  double t11101;
  double t11102;
  double t11132;
  double t11133;
  double t11134;
  double t11137;
  double t11138;
  double t11140;
  double t11141;
  double t11143;
  double t11144;
  double t11145;
  double t11147;
  double t11148;
  double t11149;
  double t11151;
  double t11152;
  double t11153;
  double t11155;
  double t11156;
  double t11157;
  double t11168;
  double t11169;
  double t11170;
  double t11173;
  double t11174;
  double t11176;
  double t11177;
  double t11179;
  double t11180;
  double t11181;
  double t11183;
  double t11184;
  double t11185;
  double t11187;
  double t11188;
  double t11189;
  double t11191;
  double t11192;
  double t11193;
  double t11211;
  double t11212;
  double t11215;
  double t11216;
  double t11218;
  double t11219;
  double t11220;
  double t11204;
  double t11205;
  double t11207;
  double t11208;
  double t11209;
  double t11232;
  double t11233;
  double t11234;
  double t11236;
  double t11237;
  double t11239;
  double t11240;
  double t11242;
  double t11243;
  double t11244;
  double t11246;
  double t11247;
  double t11248;
  double t11260;
  double t11261;
  double t11262;
  double t11264;
  double t11265;
  double t11267;
  double t11268;
  double t11270;
  double t11271;
  double t11272;
  double t11274;
  double t11275;
  double t11276;
  double t11295;
  double t11296;
  double t6730;
  double t11287;
  double t11288;
  double t11289;
  double t11291;
  double t11292;
  double t11306;
  double t11307;
  double t11308;
  double t11311;
  double t11312;
  double t11314;
  double t11315;
  double t11326;
  double t11327;
  double t11328;
  double t11331;
  double t11332;
  double t11334;
  double t11335;
  double t11298;
  double t6733;
  double t6735;
  double t11346;
  double t11347;
  double t11349;
  double t11350;
  double t11351;
  double t11317;
  double t11359;
  double t11360;
  double t11361;
  double t11321;
  double t11337;
  double t11371;
  double t11372;
  double t11373;
  double t11341;
  t942 = Cos(var1[5]);
  t989 = Sin(var1[3]);
  t1402 = Sin(var1[4]);
  t937 = Cos(var1[3]);
  t1543 = Sin(var1[5]);
  t225 = Cos(var1[6]);
  t956 = -1.*t937*t942;
  t1598 = -1.*t989*t1402*t1543;
  t1774 = t956 + t1598;
  t1835 = -1.*t942*t989*t1402;
  t1888 = t937*t1543;
  t1992 = t1835 + t1888;
  t2377 = Sin(var1[6]);
  t2983 = Cos(var1[7]);
  t2990 = -1.*t2983;
  t3061 = 1. + t2990;
  t3244 = Sin(var1[7]);
  t2677 = t225*t1774;
  t2767 = t1992*t2377;
  t2793 = t2677 + t2767;
  t3359 = Cos(var1[4]);
  t4045 = Cos(var1[8]);
  t4179 = -1.*t4045;
  t4216 = 1. + t4179;
  t4427 = Sin(var1[8]);
  t3970 = -1.*t3359*t2983*t989;
  t4037 = t2793*t3244;
  t4038 = t3970 + t4037;
  t4686 = t225*t1992;
  t4755 = -1.*t1774*t2377;
  t4800 = t4686 + t4755;
  t4977 = Cos(var1[9]);
  t4986 = -1.*t4977;
  t5012 = 1. + t4986;
  t5081 = Sin(var1[9]);
  t5100 = t4045*t4038;
  t5107 = t4800*t4427;
  t5109 = t5100 + t5107;
  t5275 = t4045*t4800;
  t5306 = -1.*t4038*t4427;
  t5317 = t5275 + t5306;
  t5353 = Cos(var1[10]);
  t5354 = -1.*t5353;
  t5364 = 1. + t5354;
  t5415 = Sin(var1[10]);
  t5484 = -1.*t5081*t5109;
  t5520 = t4977*t5317;
  t5589 = t5484 + t5520;
  t5782 = t4977*t5109;
  t5825 = t5081*t5317;
  t5847 = t5782 + t5825;
  t5865 = Cos(var1[11]);
  t5885 = -1.*t5865;
  t5895 = 1. + t5885;
  t5978 = Sin(var1[11]);
  t5999 = t5415*t5589;
  t6005 = t5353*t5847;
  t6013 = t5999 + t6005;
  t6056 = t5353*t5589;
  t6062 = -1.*t5415*t5847;
  t6097 = t6056 + t6062;
  t6112 = Cos(var1[12]);
  t6116 = -1.*t6112;
  t6132 = 1. + t6116;
  t6163 = Sin(var1[12]);
  t6207 = -1.*t5978*t6013;
  t6242 = t5865*t6097;
  t6259 = t6207 + t6242;
  t6301 = t5865*t6013;
  t6302 = t5978*t6097;
  t6306 = t6301 + t6302;
  t227 = -1.*t225;
  t259 = 1. + t227;
  t268 = 0.135*t259;
  t550 = 0. + t268;
  t2505 = -0.135*t2377;
  t2509 = 0. + t2505;
  t6342 = -1.*t942*t989;
  t6352 = t937*t1402*t1543;
  t6363 = t6342 + t6352;
  t6367 = t937*t942*t1402;
  t6369 = t989*t1543;
  t6371 = t6367 + t6369;
  t3191 = 0.135*t3061;
  t3259 = 0.049*t3244;
  t3317 = 0. + t3191 + t3259;
  t3380 = -0.049*t3061;
  t3445 = 0.135*t3244;
  t3489 = 0. + t3380 + t3445;
  t6377 = t225*t6363;
  t6379 = t6371*t2377;
  t6385 = t6377 + t6379;
  t4252 = -0.049*t4216;
  t4531 = -0.09*t4427;
  t4558 = 0. + t4252 + t4531;
  t4803 = -0.09*t4216;
  t4808 = 0.049*t4427;
  t4920 = 0. + t4803 + t4808;
  t5019 = -0.049*t5012;
  t5084 = -0.21*t5081;
  t5093 = 0. + t5019 + t5084;
  t6417 = t937*t3359*t2983;
  t6430 = t6385*t3244;
  t6431 = t6417 + t6430;
  t6437 = t225*t6371;
  t6439 = -1.*t6363*t2377;
  t6441 = t6437 + t6439;
  t5115 = -0.21*t5012;
  t5149 = 0.049*t5081;
  t5177 = 0. + t5115 + t5149;
  t5378 = -0.2707*t5364;
  t5440 = 0.0016*t5415;
  t5462 = 0. + t5378 + t5440;
  t6449 = t4045*t6431;
  t6454 = t6441*t4427;
  t6455 = t6449 + t6454;
  t6460 = t4045*t6441;
  t6461 = -1.*t6431*t4427;
  t6467 = t6460 + t6461;
  t5669 = -0.0016*t5364;
  t5743 = -0.2707*t5415;
  t5765 = 0. + t5669 + t5743;
  t5948 = 0.0184*t5895;
  t5985 = -0.7055*t5978;
  t5991 = 0. + t5948 + t5985;
  t6475 = -1.*t5081*t6455;
  t6483 = t4977*t6467;
  t6484 = t6475 + t6483;
  t6522 = t4977*t6455;
  t6525 = t5081*t6467;
  t6539 = t6522 + t6525;
  t6023 = -0.7055*t5895;
  t6029 = -0.0184*t5978;
  t6040 = 0. + t6023 + t6029;
  t6157 = -1.1135*t6132;
  t6177 = 0.0216*t6163;
  t6196 = 0. + t6157 + t6177;
  t6552 = t5415*t6484;
  t6563 = t5353*t6539;
  t6582 = t6552 + t6563;
  t6592 = t5353*t6484;
  t6609 = -1.*t5415*t6539;
  t6613 = t6592 + t6609;
  t6278 = -0.0216*t6132;
  t6287 = -1.1135*t6163;
  t6291 = 0. + t6278 + t6287;
  t6625 = -1.*t5978*t6582;
  t6649 = t5865*t6613;
  t6657 = t6625 + t6649;
  t6674 = t5865*t6582;
  t6687 = t5978*t6613;
  t6688 = t6674 + t6687;
  t6753 = t937*t3359*t225*t1543;
  t6770 = t937*t3359*t942*t2377;
  t6773 = t6753 + t6770;
  t6828 = -1.*t937*t2983*t1402;
  t6855 = t6773*t3244;
  t6856 = t6828 + t6855;
  t6905 = t937*t3359*t942*t225;
  t6909 = -1.*t937*t3359*t1543*t2377;
  t6927 = t6905 + t6909;
  t6960 = t4045*t6856;
  t6980 = t6927*t4427;
  t6989 = t6960 + t6980;
  t6998 = t4045*t6927;
  t7031 = -1.*t6856*t4427;
  t7033 = t6998 + t7031;
  t7046 = -1.*t5081*t6989;
  t7049 = t4977*t7033;
  t7071 = t7046 + t7049;
  t7097 = t4977*t6989;
  t7136 = t5081*t7033;
  t7207 = t7097 + t7136;
  t7263 = t5415*t7071;
  t7281 = t5353*t7207;
  t7286 = t7263 + t7281;
  t7292 = t5353*t7071;
  t7305 = -1.*t5415*t7207;
  t7362 = t7292 + t7305;
  t7384 = -1.*t5978*t7286;
  t7386 = t5865*t7362;
  t7392 = t7384 + t7386;
  t7436 = t5865*t7286;
  t7454 = t5978*t7362;
  t7456 = t7436 + t7454;
  t7642 = t3359*t225*t989*t1543;
  t7696 = t3359*t942*t989*t2377;
  t7712 = t7642 + t7696;
  t7799 = -1.*t2983*t989*t1402;
  t7824 = t7712*t3244;
  t7884 = t7799 + t7824;
  t7953 = t3359*t942*t225*t989;
  t7966 = -1.*t3359*t989*t1543*t2377;
  t7970 = t7953 + t7966;
  t7998 = t4045*t7884;
  t8002 = t7970*t4427;
  t8006 = t7998 + t8002;
  t8053 = t4045*t7970;
  t8087 = -1.*t7884*t4427;
  t8110 = t8053 + t8087;
  t8164 = -1.*t5081*t8006;
  t8166 = t4977*t8110;
  t8175 = t8164 + t8166;
  t8259 = t4977*t8006;
  t8274 = t5081*t8110;
  t8338 = t8259 + t8274;
  t8410 = t5415*t8175;
  t8523 = t5353*t8338;
  t8544 = t8410 + t8523;
  t8832 = t5353*t8175;
  t8870 = -1.*t5415*t8338;
  t8937 = t8832 + t8870;
  t8986 = -1.*t5978*t8544;
  t9025 = t5865*t8937;
  t9049 = t8986 + t9025;
  t9071 = t5865*t8544;
  t9079 = t5978*t8937;
  t9086 = t9071 + t9079;
  t9377 = -1.*t225*t1402*t1543;
  t9392 = -1.*t942*t1402*t2377;
  t9395 = t9377 + t9392;
  t9461 = -1.*t3359*t2983;
  t9472 = t9395*t3244;
  t9476 = t9461 + t9472;
  t9509 = -1.*t942*t225*t1402;
  t9538 = t1402*t1543*t2377;
  t9563 = t9509 + t9538;
  t9578 = t4045*t9476;
  t9581 = t9563*t4427;
  t9588 = t9578 + t9581;
  t9607 = t4045*t9563;
  t9608 = -1.*t9476*t4427;
  t9618 = t9607 + t9608;
  t9630 = -1.*t5081*t9588;
  t9631 = t4977*t9618;
  t9655 = t9630 + t9631;
  t9680 = t4977*t9588;
  t9688 = t5081*t9618;
  t9696 = t9680 + t9688;
  t9707 = t5415*t9655;
  t9708 = t5353*t9696;
  t9709 = t9707 + t9708;
  t9715 = t5353*t9655;
  t9717 = -1.*t5415*t9696;
  t9721 = t9715 + t9717;
  t9725 = -1.*t5978*t9709;
  t9728 = t5865*t9721;
  t9737 = t9725 + t9728;
  t9766 = t5865*t9709;
  t9767 = t5978*t9721;
  t9774 = t9766 + t9767;
  t9868 = t942*t989;
  t9872 = -1.*t937*t1402*t1543;
  t9881 = t9868 + t9872;
  t9897 = t9881*t2377;
  t9903 = t6437 + t9897;
  t9926 = t225*t9881;
  t9931 = -1.*t6371*t2377;
  t9936 = t9926 + t9931;
  t9945 = t4045*t9903*t3244;
  t9949 = t9936*t4427;
  t9954 = t9945 + t9949;
  t9965 = t4045*t9936;
  t9966 = -1.*t9903*t3244*t4427;
  t9971 = t9965 + t9966;
  t9976 = -1.*t5081*t9954;
  t9982 = t4977*t9971;
  t9992 = t9976 + t9982;
  t10001 = t4977*t9954;
  t10004 = t5081*t9971;
  t10007 = t10001 + t10004;
  t10013 = t5415*t9992;
  t10014 = t5353*t10007;
  t10021 = t10013 + t10014;
  t10031 = t5353*t9992;
  t10033 = -1.*t5415*t10007;
  t10038 = t10031 + t10033;
  t10065 = -1.*t5978*t10021;
  t10072 = t5865*t10038;
  t10074 = t10065 + t10072;
  t10078 = t5865*t10021;
  t10080 = t5978*t10038;
  t10081 = t10078 + t10080;
  t10132 = t942*t989*t1402;
  t10133 = -1.*t937*t1543;
  t10139 = t10132 + t10133;
  t10144 = t225*t10139;
  t10146 = t1774*t2377;
  t10148 = t10144 + t10146;
  t10158 = -1.*t10139*t2377;
  t10160 = t2677 + t10158;
  t10165 = t4045*t10148*t3244;
  t10166 = t10160*t4427;
  t10170 = t10165 + t10166;
  t10176 = t4045*t10160;
  t10179 = -1.*t10148*t3244*t4427;
  t10182 = t10176 + t10179;
  t10188 = -1.*t5081*t10170;
  t10189 = t4977*t10182;
  t10192 = t10188 + t10189;
  t10196 = t4977*t10170;
  t10197 = t5081*t10182;
  t10198 = t10196 + t10197;
  t10201 = t5415*t10192;
  t10202 = t5353*t10198;
  t10203 = t10201 + t10202;
  t10207 = t5353*t10192;
  t10208 = -1.*t5415*t10198;
  t10211 = t10207 + t10208;
  t10216 = -1.*t5978*t10203;
  t10223 = t5865*t10211;
  t10228 = t10216 + t10223;
  t10234 = t5865*t10203;
  t10235 = t5978*t10211;
  t10239 = t10234 + t10235;
  t10275 = t3359*t942*t225;
  t10277 = -1.*t3359*t1543*t2377;
  t10280 = t10275 + t10277;
  t10287 = -1.*t3359*t225*t1543;
  t10288 = -1.*t3359*t942*t2377;
  t10291 = t10287 + t10288;
  t10296 = t4045*t10280*t3244;
  t10298 = t10291*t4427;
  t10299 = t10296 + t10298;
  t10302 = t4045*t10291;
  t10303 = -1.*t10280*t3244*t4427;
  t10304 = t10302 + t10303;
  t10306 = -1.*t5081*t10299;
  t10307 = t4977*t10304;
  t10308 = t10306 + t10307;
  t10318 = t4977*t10299;
  t10322 = t5081*t10304;
  t10324 = t10318 + t10322;
  t10328 = t5415*t10308;
  t10329 = t5353*t10324;
  t10332 = t10328 + t10329;
  t10340 = t5353*t10308;
  t10341 = -1.*t5415*t10324;
  t10345 = t10340 + t10341;
  t10348 = -1.*t5978*t10332;
  t10352 = t5865*t10345;
  t10353 = t10348 + t10352;
  t10357 = t5865*t10332;
  t10361 = t5978*t10345;
  t10364 = t10357 + t10361;
  t10397 = -1.*t225*t6363;
  t10400 = t10397 + t9931;
  t10404 = t4045*t6441*t3244;
  t10406 = t10400*t4427;
  t10407 = t10404 + t10406;
  t10409 = t4045*t10400;
  t10410 = -1.*t6441*t3244*t4427;
  t10411 = t10409 + t10410;
  t10416 = -1.*t5081*t10407;
  t10417 = t4977*t10411;
  t10424 = t10416 + t10417;
  t10426 = t4977*t10407;
  t10428 = t5081*t10411;
  t10429 = t10426 + t10428;
  t10438 = t5415*t10424;
  t10444 = t5353*t10429;
  t10449 = t10438 + t10444;
  t10453 = t5353*t10424;
  t10456 = -1.*t5415*t10429;
  t10458 = t10453 + t10456;
  t10460 = -1.*t5978*t10449;
  t10462 = t5865*t10458;
  t10463 = t10460 + t10462;
  t10465 = t5865*t10449;
  t10467 = t5978*t10458;
  t10468 = t10465 + t10467;
  t10492 = t937*t942;
  t10494 = t989*t1402*t1543;
  t10495 = t10492 + t10494;
  t10501 = -1.*t10495*t2377;
  t10504 = t10144 + t10501;
  t10509 = -1.*t225*t10495;
  t10511 = t10509 + t10158;
  t10514 = t4045*t10504*t3244;
  t10520 = t10511*t4427;
  t10521 = t10514 + t10520;
  t10526 = t4045*t10511;
  t10528 = -1.*t10504*t3244*t4427;
  t10529 = t10526 + t10528;
  t10532 = -1.*t5081*t10521;
  t10533 = t4977*t10529;
  t10534 = t10532 + t10533;
  t10541 = t4977*t10521;
  t10542 = t5081*t10529;
  t10545 = t10541 + t10542;
  t10550 = t5415*t10534;
  t10555 = t5353*t10545;
  t10556 = t10550 + t10555;
  t10564 = t5353*t10534;
  t10567 = -1.*t5415*t10545;
  t10569 = t10564 + t10567;
  t10575 = -1.*t5978*t10556;
  t10580 = t5865*t10569;
  t10581 = t10575 + t10580;
  t10585 = t5865*t10556;
  t10587 = t5978*t10569;
  t10588 = t10585 + t10587;
  t10281 = 0.1305*t2983*t10280;
  t10283 = t10280*t3317;
  t10286 = t10280*t3244*t4558;
  t10293 = t10291*t4920;
  t10300 = t5093*t10299;
  t10305 = t5177*t10304;
  t10312 = t5462*t10308;
  t10325 = t5765*t10324;
  t10337 = t5991*t10332;
  t10347 = t6040*t10345;
  t10356 = t6196*t10353;
  t10365 = t6291*t10364;
  t10366 = t6163*t10353;
  t10368 = t6112*t10364;
  t10372 = t10366 + t10368;
  t10373 = 0.0306*t10372;
  t10374 = t6112*t10353;
  t10377 = -1.*t6163*t10364;
  t10378 = t10374 + t10377;
  t10379 = -1.1312*t10378;
  t6391 = t2983*t6385;
  t6395 = -1.*t937*t3359*t3244;
  t6404 = t6391 + t6395;
  t10653 = -1.*t4045*t5081*t6404;
  t10654 = -1.*t4977*t6404*t4427;
  t10657 = t10653 + t10654;
  t10661 = t4977*t4045*t6404;
  t10662 = -1.*t5081*t6404*t4427;
  t10665 = t10661 + t10662;
  t10669 = t5415*t10657;
  t10673 = t5353*t10665;
  t10674 = t10669 + t10673;
  t10678 = t5353*t10657;
  t10680 = -1.*t5415*t10665;
  t10686 = t10678 + t10680;
  t10691 = -1.*t5978*t10674;
  t10692 = t5865*t10686;
  t10694 = t10691 + t10692;
  t10696 = t5865*t10674;
  t10697 = t5978*t10686;
  t10698 = t10696 + t10697;
  t10624 = 0.135*t2983;
  t10625 = -0.049*t3244;
  t10626 = t10624 + t10625;
  t10629 = 0.049*t2983;
  t10630 = t10629 + t3445;
  t10725 = t225*t10495;
  t10727 = t10139*t2377;
  t10730 = t10725 + t10727;
  t10736 = t2983*t10730;
  t10737 = -1.*t3359*t989*t3244;
  t10738 = t10736 + t10737;
  t10752 = -1.*t4045*t5081*t10738;
  t10755 = -1.*t4977*t10738*t4427;
  t10757 = t10752 + t10755;
  t10760 = t4977*t4045*t10738;
  t10762 = -1.*t5081*t10738*t4427;
  t10763 = t10760 + t10762;
  t10768 = t5415*t10757;
  t10771 = t5353*t10763;
  t10775 = t10768 + t10771;
  t10780 = t5353*t10757;
  t10782 = -1.*t5415*t10763;
  t10783 = t10780 + t10782;
  t10787 = -1.*t5978*t10775;
  t10788 = t5865*t10783;
  t10792 = t10787 + t10788;
  t10795 = t5865*t10775;
  t10799 = t5978*t10783;
  t10800 = t10795 + t10799;
  t10823 = t3359*t225*t1543;
  t10827 = t3359*t942*t2377;
  t10828 = t10823 + t10827;
  t10835 = t2983*t10828;
  t10836 = t1402*t3244;
  t10840 = t10835 + t10836;
  t10855 = -1.*t4045*t5081*t10840;
  t10856 = -1.*t4977*t10840*t4427;
  t10860 = t10855 + t10856;
  t10865 = t4977*t4045*t10840;
  t10868 = -1.*t5081*t10840*t4427;
  t10870 = t10865 + t10868;
  t10875 = t5415*t10860;
  t10876 = t5353*t10870;
  t10877 = t10875 + t10876;
  t10883 = t5353*t10860;
  t10888 = -1.*t5415*t10870;
  t10889 = t10883 + t10888;
  t10892 = -1.*t5978*t10877;
  t10893 = t5865*t10889;
  t10894 = t10892 + t10893;
  t10897 = t5865*t10877;
  t10898 = t5978*t10889;
  t10899 = t10897 + t10898;
  t10930 = -1.*t4045*t6431;
  t10934 = -1.*t6441*t4427;
  t10936 = t10930 + t10934;
  t10940 = t5081*t10936;
  t10944 = t10940 + t6483;
  t10949 = t4977*t10936;
  t10950 = -1.*t5081*t6467;
  t10952 = t10949 + t10950;
  t10954 = -1.*t5415*t10944;
  t10956 = t5353*t10952;
  t10957 = t10954 + t10956;
  t10959 = t5353*t10944;
  t10960 = t5415*t10952;
  t10961 = t10959 + t10960;
  t10965 = t5978*t10957;
  t10966 = t5865*t10961;
  t10969 = t10965 + t10966;
  t10971 = t5865*t10957;
  t10973 = -1.*t5978*t10961;
  t10974 = t10971 + t10973;
  t10916 = 0.049*t4045;
  t10917 = t10916 + t4531;
  t10919 = -0.09*t4045;
  t10920 = -0.049*t4427;
  t10924 = t10919 + t10920;
  t10990 = t3359*t2983*t989;
  t10991 = t10730*t3244;
  t10992 = t10990 + t10991;
  t10994 = -1.*t4045*t10992;
  t10995 = -1.*t10504*t4427;
  t10996 = t10994 + t10995;
  t10999 = t4045*t10504;
  t11001 = -1.*t10992*t4427;
  t11002 = t10999 + t11001;
  t11004 = t5081*t10996;
  t11005 = t4977*t11002;
  t11006 = t11004 + t11005;
  t11008 = t4977*t10996;
  t11009 = -1.*t5081*t11002;
  t11011 = t11008 + t11009;
  t11015 = -1.*t5415*t11006;
  t11017 = t5353*t11011;
  t11018 = t11015 + t11017;
  t11021 = t5353*t11006;
  t11022 = t5415*t11011;
  t11024 = t11021 + t11022;
  t11026 = t5978*t11018;
  t11027 = t5865*t11024;
  t11028 = t11026 + t11027;
  t11031 = t5865*t11018;
  t11032 = -1.*t5978*t11024;
  t11035 = t11031 + t11032;
  t11050 = -1.*t2983*t1402;
  t11051 = t10828*t3244;
  t11052 = t11050 + t11051;
  t11054 = -1.*t4045*t11052;
  t11055 = -1.*t10280*t4427;
  t11056 = t11054 + t11055;
  t11058 = t4045*t10280;
  t11059 = -1.*t11052*t4427;
  t11060 = t11058 + t11059;
  t11062 = t5081*t11056;
  t11064 = t4977*t11060;
  t11065 = t11062 + t11064;
  t11067 = t4977*t11056;
  t11068 = -1.*t5081*t11060;
  t11069 = t11067 + t11068;
  t11071 = -1.*t5415*t11065;
  t11072 = t5353*t11069;
  t11073 = t11071 + t11072;
  t11076 = t5353*t11065;
  t11077 = t5415*t11069;
  t11078 = t11076 + t11077;
  t11080 = t5978*t11073;
  t11081 = t5865*t11078;
  t11082 = t11080 + t11081;
  t11084 = t5865*t11073;
  t11085 = -1.*t5978*t11078;
  t11086 = t11084 + t11085;
  t11105 = -1.*t4977*t6455;
  t11106 = t11105 + t10950;
  t11108 = -1.*t5415*t6484;
  t11109 = t5353*t11106;
  t11110 = t11108 + t11109;
  t11112 = t5415*t11106;
  t11113 = t6592 + t11112;
  t11115 = t5978*t11110;
  t11116 = t5865*t11113;
  t11117 = t11115 + t11116;
  t11119 = t5865*t11110;
  t11120 = -1.*t5978*t11113;
  t11121 = t11119 + t11120;
  t11097 = -0.21*t4977;
  t11098 = -0.049*t5081;
  t11099 = t11097 + t11098;
  t11101 = 0.049*t4977;
  t11102 = t11101 + t5084;
  t11132 = t4045*t10992;
  t11133 = t10504*t4427;
  t11134 = t11132 + t11133;
  t11137 = -1.*t5081*t11134;
  t11138 = t11137 + t11005;
  t11140 = -1.*t4977*t11134;
  t11141 = t11140 + t11009;
  t11143 = -1.*t5415*t11138;
  t11144 = t5353*t11141;
  t11145 = t11143 + t11144;
  t11147 = t5353*t11138;
  t11148 = t5415*t11141;
  t11149 = t11147 + t11148;
  t11151 = t5978*t11145;
  t11152 = t5865*t11149;
  t11153 = t11151 + t11152;
  t11155 = t5865*t11145;
  t11156 = -1.*t5978*t11149;
  t11157 = t11155 + t11156;
  t11168 = t4045*t11052;
  t11169 = t10280*t4427;
  t11170 = t11168 + t11169;
  t11173 = -1.*t5081*t11170;
  t11174 = t11173 + t11064;
  t11176 = -1.*t4977*t11170;
  t11177 = t11176 + t11068;
  t11179 = -1.*t5415*t11174;
  t11180 = t5353*t11177;
  t11181 = t11179 + t11180;
  t11183 = t5353*t11174;
  t11184 = t5415*t11177;
  t11185 = t11183 + t11184;
  t11187 = t5978*t11181;
  t11188 = t5865*t11185;
  t11189 = t11187 + t11188;
  t11191 = t5865*t11181;
  t11192 = -1.*t5978*t11185;
  t11193 = t11191 + t11192;
  t11211 = -1.*t5353*t6539;
  t11212 = t11108 + t11211;
  t11215 = t5978*t11212;
  t11216 = t11215 + t6649;
  t11218 = t5865*t11212;
  t11219 = -1.*t5978*t6613;
  t11220 = t11218 + t11219;
  t11204 = 0.0016*t5353;
  t11205 = t11204 + t5743;
  t11207 = -0.2707*t5353;
  t11208 = -0.0016*t5415;
  t11209 = t11207 + t11208;
  t11232 = t4977*t11134;
  t11233 = t5081*t11002;
  t11234 = t11232 + t11233;
  t11236 = -1.*t5353*t11234;
  t11237 = t11143 + t11236;
  t11239 = -1.*t5415*t11234;
  t11240 = t11147 + t11239;
  t11242 = t5978*t11237;
  t11243 = t5865*t11240;
  t11244 = t11242 + t11243;
  t11246 = t5865*t11237;
  t11247 = -1.*t5978*t11240;
  t11248 = t11246 + t11247;
  t11260 = t4977*t11170;
  t11261 = t5081*t11060;
  t11262 = t11260 + t11261;
  t11264 = -1.*t5353*t11262;
  t11265 = t11179 + t11264;
  t11267 = -1.*t5415*t11262;
  t11268 = t11183 + t11267;
  t11270 = t5978*t11265;
  t11271 = t5865*t11268;
  t11272 = t11270 + t11271;
  t11274 = t5865*t11265;
  t11275 = -1.*t5978*t11268;
  t11276 = t11274 + t11275;
  t11295 = -1.*t5865*t6582;
  t11296 = t11295 + t11219;
  t6730 = t6112*t6657;
  t11287 = -0.7055*t5865;
  t11288 = 0.0184*t5978;
  t11289 = t11287 + t11288;
  t11291 = -0.0184*t5865;
  t11292 = t11291 + t5985;
  t11306 = t5415*t11138;
  t11307 = t5353*t11234;
  t11308 = t11306 + t11307;
  t11311 = -1.*t5978*t11308;
  t11312 = t11311 + t11243;
  t11314 = -1.*t5865*t11308;
  t11315 = t11314 + t11247;
  t11326 = t5415*t11174;
  t11327 = t5353*t11262;
  t11328 = t11326 + t11327;
  t11331 = -1.*t5978*t11328;
  t11332 = t11331 + t11271;
  t11334 = -1.*t5865*t11328;
  t11335 = t11334 + t11275;
  t11298 = -1.*t6163*t6657;
  t6733 = -1.*t6163*t6688;
  t6735 = t6730 + t6733;
  t11346 = 0.0216*t6112;
  t11347 = t11346 + t6287;
  t11349 = -1.1135*t6112;
  t11350 = -0.0216*t6163;
  t11351 = t11349 + t11350;
  t11317 = -1.*t6163*t11312;
  t11359 = t5865*t11308;
  t11360 = t5978*t11240;
  t11361 = t11359 + t11360;
  t11321 = t6112*t11312;
  t11337 = -1.*t6163*t11332;
  t11371 = t5865*t11328;
  t11372 = t5978*t11268;
  t11373 = t11371 + t11372;
  t11341 = t6112*t11332;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t1992*t2509 + t2793*t3317 + t4038*t4558 + t4800*t4920 + t5093*t5109 + t5177*t5317 + t1774*t550 + t5462*t5589 + t5765*t5847 + t5991*t6013 + t6040*t6097 + t6196*t6259 + t6291*t6306 + 0.0306*(t6163*t6259 + t6112*t6306) - 1.1312*(t6112*t6259 - 1.*t6163*t6306) - 1.*t3359*t3489*t989 + 0.1305*(t2793*t2983 + t3244*t3359*t989);
  p_output1[10]=t550*t6363 + t2509*t6371 + t3317*t6385 + 0.1305*t6404 + t4558*t6431 + t4920*t6441 + t5093*t6455 + t5177*t6467 + t5462*t6484 + t5765*t6539 + t5991*t6582 + t6040*t6613 + t6196*t6657 + t6291*t6688 + 0.0306*(t6163*t6657 + t6112*t6688) - 1.1312*t6735 + t3359*t3489*t937;
  p_output1[11]=0;
  p_output1[12]=t3317*t6773 + t4558*t6856 + t4920*t6927 + t5093*t6989 + t5177*t7033 + t5462*t7071 + t5765*t7207 + t5991*t7286 + t6040*t7362 + t6196*t7392 + t6291*t7456 + 0.0306*(t6163*t7392 + t6112*t7456) - 1.1312*(t6112*t7392 - 1.*t6163*t7456) - 1.*t1402*t3489*t937 + t1543*t3359*t550*t937 + 0.1305*(t2983*t6773 + t1402*t3244*t937) + t2509*t3359*t937*t942;
  p_output1[13]=t3317*t7712 + t4558*t7884 + t4920*t7970 + t5093*t8006 + t5177*t8110 + t5462*t8175 + t5765*t8338 + t5991*t8544 + t6040*t8937 + t6196*t9049 + t6291*t9086 + 0.0306*(t6163*t9049 + t6112*t9086) - 1.1312*(t6112*t9049 - 1.*t6163*t9086) - 1.*t1402*t3489*t989 + t1543*t3359*t550*t989 + t2509*t3359*t942*t989 + 0.1305*(t2983*t7712 + t1402*t3244*t989);
  p_output1[14]=-1.*t3359*t3489 - 1.*t1402*t1543*t550 + t3317*t9395 + 0.1305*(t3244*t3359 + t2983*t9395) - 1.*t1402*t2509*t942 + t4558*t9476 + t4920*t9563 + t5093*t9588 + t5177*t9618 + t5462*t9655 + t5765*t9696 + t5991*t9709 + t6040*t9721 + t6196*t9737 + t6291*t9774 + 0.0306*(t6163*t9737 + t6112*t9774) - 1.1312*(t6112*t9737 - 1.*t6163*t9774);
  p_output1[15]=t10007*t5765 + t10021*t5991 + t10038*t6040 + 0.0306*(t10081*t6112 + t10074*t6163) - 1.1312*(t10074*t6112 - 1.*t10081*t6163) + t10074*t6196 + t10081*t6291 + t550*t6371 + t2509*t9881 + 0.1305*t2983*t9903 + t3317*t9903 + t3244*t4558*t9903 + t4920*t9936 + t5093*t9954 + t5177*t9971 + t5462*t9992;
  p_output1[16]=t1774*t2509 + 0.1305*t10148*t2983 + t10148*t3317 + t10148*t3244*t4558 + t10160*t4920 + t10170*t5093 + t10182*t5177 + t10192*t5462 + t10139*t550 + t10198*t5765 + t10203*t5991 + t10211*t6040 + 0.0306*(t10239*t6112 + t10228*t6163) - 1.1312*(t10228*t6112 - 1.*t10239*t6163) + t10228*t6196 + t10239*t6291;
  p_output1[17]=t10281 + t10283 + t10286 + t10293 + t10300 + t10305 + t10312 + t10325 + t10337 + t10347 + t10356 + t10365 + t10373 + t10379 - 1.*t1543*t2509*t3359 + t3359*t550*t942;
  p_output1[18]=t10400*t4920 + t10407*t5093 + t10411*t5177 + t10424*t5462 + t10429*t5765 + t10449*t5991 + t10458*t6040 + 0.0306*(t10468*t6112 + t10463*t6163) - 1.1312*(t10463*t6112 - 1.*t10468*t6163) + t10463*t6196 + t10468*t6291 + 0.135*t2377*t6363 - 0.135*t225*t6371 + 0.1305*t2983*t6441 + t3317*t6441 + t3244*t4558*t6441;
  p_output1[19]=-0.135*t10139*t225 + 0.135*t10495*t2377 + 0.1305*t10504*t2983 + t10504*t3317 + t10504*t3244*t4558 + t10511*t4920 + t10521*t5093 + t10529*t5177 + t10534*t5462 + t10545*t5765 + t10556*t5991 + t10569*t6040 + 0.0306*(t10588*t6112 + t10581*t6163) - 1.1312*(t10581*t6112 - 1.*t10588*t6163) + t10581*t6196 + t10588*t6291;
  p_output1[20]=t10281 + t10283 + t10286 + t10293 + t10300 + t10305 + t10312 + t10325 + t10337 + t10347 + t10356 + t10365 + t10373 + t10379 + 0.135*t1543*t2377*t3359 - 0.135*t225*t3359*t942;
  p_output1[21]=t10657*t5462 + t10665*t5765 + t10674*t5991 + t10686*t6040 + 0.0306*(t10698*t6112 + t10694*t6163) - 1.1312*(t10694*t6112 - 1.*t10698*t6163) + t10694*t6196 + t10698*t6291 + t10630*t6385 + t4558*t6404 + t4045*t5093*t6404 - 1.*t4427*t5177*t6404 + t10626*t3359*t937 + 0.1305*(-1.*t3244*t6385 - 1.*t2983*t3359*t937);
  p_output1[22]=t10630*t10730 + 0.1305*(-1.*t10730*t3244 + t3970) + t10738*t4558 + t10738*t4045*t5093 - 1.*t10738*t4427*t5177 + t10757*t5462 + t10763*t5765 + t10775*t5991 + t10783*t6040 + 0.0306*(t10800*t6112 + t10792*t6163) - 1.1312*(t10792*t6112 - 1.*t10800*t6163) + t10792*t6196 + t10800*t6291 + t10626*t3359*t989;
  p_output1[23]=t10630*t10828 - 1.*t10626*t1402 + 0.1305*(t1402*t2983 - 1.*t10828*t3244) + t10840*t4558 + t10840*t4045*t5093 - 1.*t10840*t4427*t5177 + t10860*t5462 + t10870*t5765 + t10877*t5991 + t10889*t6040 + 0.0306*(t10899*t6112 + t10894*t6163) - 1.1312*(t10894*t6112 - 1.*t10899*t6163) + t10894*t6196 + t10899*t6291;
  p_output1[24]=t10936*t5177 + t10952*t5462 + t10944*t5765 + t10961*t5991 + t10957*t6040 - 1.1312*(t10974*t6112 - 1.*t10969*t6163) + 0.0306*(t10969*t6112 + t10974*t6163) + t10974*t6196 + t10969*t6291 + t10924*t6431 + t10917*t6441 + t5093*t6467;
  p_output1[25]=t10504*t10917 + t10924*t10992 + t11002*t5093 + t10996*t5177 + t11011*t5462 + t11006*t5765 + t11024*t5991 + t11018*t6040 - 1.1312*(t11035*t6112 - 1.*t11028*t6163) + 0.0306*(t11028*t6112 + t11035*t6163) + t11035*t6196 + t11028*t6291;
  p_output1[26]=t10280*t10917 + t10924*t11052 + t11060*t5093 + t11056*t5177 + t11069*t5462 + t11065*t5765 + t11078*t5991 + t11073*t6040 - 1.1312*(t11086*t6112 - 1.*t11082*t6163) + 0.0306*(t11082*t6112 + t11086*t6163) + t11086*t6196 + t11082*t6291;
  p_output1[27]=t11106*t5462 + t11113*t5991 + t11110*t6040 - 1.1312*(t11121*t6112 - 1.*t11117*t6163) + 0.0306*(t11117*t6112 + t11121*t6163) + t11121*t6196 + t11117*t6291 + t11099*t6455 + t11102*t6467 + t5765*t6484;
  p_output1[28]=t11002*t11102 + t11099*t11134 + t11141*t5462 + t11138*t5765 + t11149*t5991 + t11145*t6040 - 1.1312*(t11157*t6112 - 1.*t11153*t6163) + 0.0306*(t11153*t6112 + t11157*t6163) + t11157*t6196 + t11153*t6291;
  p_output1[29]=t11060*t11102 + t11099*t11170 + t11177*t5462 + t11174*t5765 + t11185*t5991 + t11181*t6040 - 1.1312*(t11193*t6112 - 1.*t11189*t6163) + 0.0306*(t11189*t6112 + t11193*t6163) + t11193*t6196 + t11189*t6291;
  p_output1[30]=t11212*t6040 - 1.1312*(t11220*t6112 - 1.*t11216*t6163) + 0.0306*(t11216*t6112 + t11220*t6163) + t11220*t6196 + t11216*t6291 + t11205*t6484 + t11209*t6539 + t5991*t6613;
  p_output1[31]=t11138*t11205 + t11209*t11234 + t11240*t5991 + t11237*t6040 - 1.1312*(t11248*t6112 - 1.*t11244*t6163) + 0.0306*(t11244*t6112 + t11248*t6163) + t11248*t6196 + t11244*t6291;
  p_output1[32]=t11174*t11205 + t11209*t11262 + t11268*t5991 + t11265*t6040 - 1.1312*(t11276*t6112 - 1.*t11272*t6163) + 0.0306*(t11272*t6112 + t11276*t6163) + t11276*t6196 + t11272*t6291;
  p_output1[33]=-1.1312*(t11298 + t11296*t6112) + t11296*t6196 + t11289*t6582 + t11292*t6613 + t6291*t6657 + 0.0306*(t11296*t6163 + t6730);
  p_output1[34]=t11240*t11292 + t11289*t11308 - 1.1312*(t11317 + t11315*t6112) + 0.0306*(t11321 + t11315*t6163) + t11315*t6196 + t11312*t6291;
  p_output1[35]=t11268*t11292 + t11289*t11328 - 1.1312*(t11337 + t11335*t6112) + 0.0306*(t11341 + t11335*t6163) + t11335*t6196 + t11332*t6291;
  p_output1[36]=t11347*t6657 + t11351*t6688 - 1.1312*(t11298 - 1.*t6112*t6688) + 0.0306*t6735;
  p_output1[37]=t11312*t11347 + t11351*t11361 - 1.1312*(t11317 - 1.*t11361*t6112) + 0.0306*(t11321 - 1.*t11361*t6163);
  p_output1[38]=t11332*t11347 + t11351*t11373 - 1.1312*(t11337 - 1.*t11373*t6112) + 0.0306*(t11341 - 1.*t11373*t6163);
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "J_LeftToeBottom_mex.hh"

namespace SymExpression
{

void J_LeftToeBottom_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
