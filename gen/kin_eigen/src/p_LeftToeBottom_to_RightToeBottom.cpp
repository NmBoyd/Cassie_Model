/*
 * Automatically Generated from Mathematica.
 * Fri 16 Mar 2018 12:16:47 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "p_LeftToeBottom_to_RightToeBottom.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(Eigen::Matrix<double,3,1> &p_output1, const Eigen::Matrix<double,14,1> &var1)
{
  double t67;
  double t77;
  double t244;
  double t553;
  double t604;
  double t658;
  double t718;
  double t944;
  double t1133;
  double t1134;
  double t1144;
  double t1167;
  double t1011;
  double t1026;
  double t1122;
  double t1277;
  double t1278;
  double t1284;
  double t1381;
  double t1393;
  double t1407;
  double t1412;
  double t1332;
  double t1350;
  double t1365;
  double t1601;
  double t1789;
  double t1813;
  double t2106;
  double t2150;
  double t2167;
  double t2185;
  double t2090;
  double t2091;
  double t2098;
  double t2270;
  double t2274;
  double t2281;
  double t2456;
  double t2479;
  double t2526;
  double t2555;
  double t2401;
  double t2409;
  double t2431;
  double t2573;
  double t2586;
  double t2646;
  double t3028;
  double t3066;
  double t3038;
  double t3045;
  double t3110;
  double t3279;
  double t3050;
  double t3153;
  double t3173;
  double t3011;
  double t3283;
  double t3307;
  double t3310;
  double t3398;
  double t3247;
  double t3322;
  double t3354;
  double t2996;
  double t3399;
  double t3402;
  double t3417;
  double t3692;
  double t3389;
  double t3446;
  double t3556;
  double t2989;
  double t3693;
  double t3747;
  double t3783;
  double t4104;
  double t4027;
  double t4068;
  double t4089;
  double t4137;
  double t4182;
  double t4388;
  double t4520;
  double t4521;
  double t4305;
  double t4604;
  double t4610;
  double t4732;
  double t4737;
  double t4759;
  double t4622;
  double t4776;
  double t4812;
  double t4959;
  double t4961;
  double t5031;
  double t4819;
  double t5107;
  double t5159;
  double t5245;
  double t5268;
  double t5296;
  double t3558;
  double t3786;
  double t3791;
  double t3834;
  double t3884;
  double t3894;
  double t5243;
  double t5342;
  double t5370;
  double t5454;
  double t5662;
  double t5666;
  double t7892;
  double t7919;
  double t7997;
  double t8020;
  double t8029;
  double t8047;
  double t8014;
  double t8054;
  double t8057;
  double t8067;
  double t8070;
  double t8076;
  double t8065;
  double t8091;
  double t8092;
  double t8113;
  double t8116;
  double t8124;
  double t8112;
  double t8130;
  double t8140;
  double t8145;
  double t8154;
  double t8159;
  double t6713;
  double t6947;
  double t7815;
  double t5401;
  double t5872;
  double t6366;
  double t8141;
  double t8166;
  double t8170;
  double t8176;
  double t8177;
  double t8181;
  double t3826;
  double t3999;
  double t4007;
  double t7834;
  double t7856;
  double t7860;
  double t6457;
  double t7868;
  double t162;
  double t208;
  double t237;
  double t328;
  double t442;
  double t705;
  double t719;
  double t730;
  double t946;
  double t953;
  double t957;
  double t1151;
  double t1190;
  double t1214;
  double t1306;
  double t1309;
  double t1312;
  double t8266;
  double t8268;
  double t8275;
  double t8284;
  double t8285;
  double t8290;
  double t1410;
  double t1437;
  double t1447;
  double t1817;
  double t1926;
  double t1981;
  double t8293;
  double t8295;
  double t8300;
  double t8302;
  double t8305;
  double t8306;
  double t2176;
  double t2254;
  double t2256;
  double t2291;
  double t2300;
  double t2361;
  double t8312;
  double t8313;
  double t8315;
  double t8318;
  double t8322;
  double t8323;
  double t2538;
  double t2562;
  double t2567;
  double t2696;
  double t2721;
  double t2726;
  double t8325;
  double t8326;
  double t8327;
  double t8332;
  double t8333;
  double t8334;
  double t8210;
  double t8217;
  double t8219;
  double t8175;
  double t8189;
  double t8191;
  double t8198;
  double t8201;
  double t8203;
  double t8207;
  double t8220;
  double t8226;
  double t8228;
  double t8230;
  double t8238;
  double t8239;
  double t8243;
  double t8246;
  double t8367;
  double t8369;
  double t8370;
  double t8373;
  double t8374;
  double t8375;
  double t8377;
  double t8378;
  double t8381;
  double t8383;
  double t8384;
  double t8385;
  double t8387;
  double t8391;
  double t8392;
  double t8396;
  double t8397;
  double t8398;
  double t8434;
  double t8435;
  double t8446;
  double t8447;
  double t8456;
  double t8458;
  double t8470;
  double t8473;
  double t8482;
  double t8483;
  double t8426;
  double t8427;
  double t8448;
  double t8449;
  double t8450;
  double t8436;
  double t8437;
  double t8438;
  double t8452;
  double t8453;
  double t8454;
  double t8459;
  double t8460;
  double t8461;
  double t8463;
  double t8464;
  double t8465;
  double t8474;
  double t8475;
  double t8476;
  double t8478;
  double t8479;
  double t8480;
  double t8484;
  double t8485;
  double t8486;
  double t8488;
  double t8490;
  double t8491;
  double t8422;
  double t8423;
  double t8424;
  double t8425;
  double t8428;
  double t8431;
  double t8432;
  double t8433;
  double t8441;
  double t8442;
  double t8443;
  double t8444;
  double t8445;
  double t8451;
  double t8455;
  double t8462;
  double t8469;
  double t8477;
  double t8481;
  double t8487;
  double t8492;
  double t8493;
  double t8494;
  double t8495;
  double t8497;
  double t8498;
  double t8499;
  double t8500;
  double t8501;
  double t8502;
  double t8503;
  double t8504;
  double t8505;
  double t8506;
  double t8507;
  double t8509;
  double t8510;
  double t8511;
  double t70;
  double t83;
  double t463;
  double t805;
  double t976;
  double t1260;
  double t1323;
  double t1536;
  double t1989;
  double t2262;
  double t2395;
  double t2569;
  double t2749;
  double t2775;
  double t2791;
  double t2854;
  double t2855;
  double t2858;
  double t2886;
  double t2912;
  double t2961;
  double t2964;
  double t8356;
  double t8360;
  double t8364;
  double t8365;
  double t8366;
  double t8372;
  double t8376;
  double t8382;
  double t8386;
  double t8395;
  double t8401;
  double t8402;
  double t8403;
  double t8404;
  double t8405;
  double t8406;
  double t8411;
  double t8412;
  double t8413;
  double t8414;
  double t8249;
  double t8251;
  double t8257;
  double t8259;
  double t8263;
  double t8264;
  double t8265;
  double t8280;
  double t8292;
  double t8301;
  double t8311;
  double t8317;
  double t8324;
  double t8328;
  double t8335;
  double t8336;
  double t8337;
  double t8338;
  double t8339;
  double t8340;
  double t8341;
  double t8342;
  double t8344;
  double t8347;
  double t8519;
  double t8520;
  double t8521;
  double t8522;
  double t8523;
  double t8524;
  double t8525;
  double t8526;
  double t8527;
  double t8528;
  double t8529;
  double t8530;
  double t8531;
  double t8532;
  double t8533;
  double t8534;
  double t8496;
  double t8512;
  double t8513;
  double t8551;
  double t8552;
  double t8553;
  double t8515;
  double t8516;
  double t8517;
  t67 = Sin(var1[7]);
  t77 = Cos(var1[8]);
  t244 = Sin(var1[8]);
  t553 = Cos(var1[9]);
  t604 = -1.*t553;
  t658 = 1. + t604;
  t718 = Sin(var1[9]);
  t944 = Cos(var1[7]);
  t1133 = Cos(var1[10]);
  t1134 = -1.*t1133;
  t1144 = 1. + t1134;
  t1167 = Sin(var1[10]);
  t1011 = t553*t67*t244;
  t1026 = t944*t718;
  t1122 = t1011 + t1026;
  t1277 = t944*t553;
  t1278 = -1.*t67*t244*t718;
  t1284 = t1277 + t1278;
  t1381 = Cos(var1[11]);
  t1393 = -1.*t1381;
  t1407 = 1. + t1393;
  t1412 = Sin(var1[11]);
  t1332 = t1133*t1122;
  t1350 = t1284*t1167;
  t1365 = t1332 + t1350;
  t1601 = t1133*t1284;
  t1789 = -1.*t1122*t1167;
  t1813 = t1601 + t1789;
  t2106 = Cos(var1[12]);
  t2150 = -1.*t2106;
  t2167 = 1. + t2150;
  t2185 = Sin(var1[12]);
  t2090 = t1381*t1365;
  t2091 = t1813*t1412;
  t2098 = t2090 + t2091;
  t2270 = t1381*t1813;
  t2274 = -1.*t1365*t1412;
  t2281 = t2270 + t2274;
  t2456 = Cos(var1[13]);
  t2479 = -1.*t2456;
  t2526 = 1. + t2479;
  t2555 = Sin(var1[13]);
  t2401 = t2106*t2098;
  t2409 = t2281*t2185;
  t2431 = t2401 + t2409;
  t2573 = t2106*t2281;
  t2586 = -1.*t2098*t2185;
  t2646 = t2573 + t2586;
  t3028 = Cos(var1[1]);
  t3066 = Cos(var1[3]);
  t3038 = Cos(var1[2]);
  t3045 = Sin(var1[3]);
  t3110 = Sin(var1[2]);
  t3279 = Cos(var1[4]);
  t3050 = -1.*t3028*t3038*t3045;
  t3153 = -1.*t3066*t3028*t3110;
  t3173 = t3050 + t3153;
  t3011 = Sin(var1[4]);
  t3283 = t3066*t3028*t3038;
  t3307 = -1.*t3028*t3045*t3110;
  t3310 = t3283 + t3307;
  t3398 = Cos(var1[5]);
  t3247 = t3011*t3173;
  t3322 = t3279*t3310;
  t3354 = t3247 + t3322;
  t2996 = Sin(var1[5]);
  t3399 = t3279*t3173;
  t3402 = -1.*t3011*t3310;
  t3417 = t3399 + t3402;
  t3692 = Cos(var1[6]);
  t3389 = -1.*t2996*t3354;
  t3446 = t3398*t3417;
  t3556 = t3389 + t3446;
  t2989 = Sin(var1[6]);
  t3693 = t3398*t3354;
  t3747 = t2996*t3417;
  t3783 = t3693 + t3747;
  t4104 = Sin(var1[0]);
  t4027 = Cos(var1[0]);
  t4068 = Sin(var1[1]);
  t4089 = t4027*t3038*t4068;
  t4137 = -1.*t4104*t3110;
  t4182 = t4089 + t4137;
  t4388 = -1.*t3038*t4104;
  t4520 = -1.*t4027*t4068*t3110;
  t4521 = t4388 + t4520;
  t4305 = -1.*t3045*t4182;
  t4604 = t3066*t4521;
  t4610 = t4305 + t4604;
  t4732 = t3066*t4182;
  t4737 = t3045*t4521;
  t4759 = t4732 + t4737;
  t4622 = t3011*t4610;
  t4776 = t3279*t4759;
  t4812 = t4622 + t4776;
  t4959 = t3279*t4610;
  t4961 = -1.*t3011*t4759;
  t5031 = t4959 + t4961;
  t4819 = -1.*t2996*t4812;
  t5107 = t3398*t5031;
  t5159 = t4819 + t5107;
  t5245 = t3398*t4812;
  t5268 = t2996*t5031;
  t5296 = t5245 + t5268;
  t3558 = t2989*t3556;
  t3786 = t3692*t3783;
  t3791 = t3558 + t3786;
  t3834 = t3692*t3556;
  t3884 = -1.*t2989*t3783;
  t3894 = t3834 + t3884;
  t5243 = t2989*t5159;
  t5342 = t3692*t5296;
  t5370 = t5243 + t5342;
  t5454 = t3692*t5159;
  t5662 = -1.*t2989*t5296;
  t5666 = t5454 + t5662;
  t7892 = t3038*t4104*t4068;
  t7919 = t4027*t3110;
  t7997 = t7892 + t7919;
  t8020 = t4027*t3038;
  t8029 = -1.*t4104*t4068*t3110;
  t8047 = t8020 + t8029;
  t8014 = -1.*t3045*t7997;
  t8054 = t3066*t8047;
  t8057 = t8014 + t8054;
  t8067 = t3066*t7997;
  t8070 = t3045*t8047;
  t8076 = t8067 + t8070;
  t8065 = t3011*t8057;
  t8091 = t3279*t8076;
  t8092 = t8065 + t8091;
  t8113 = t3279*t8057;
  t8116 = -1.*t3011*t8076;
  t8124 = t8113 + t8116;
  t8112 = -1.*t2996*t8092;
  t8130 = t3398*t8124;
  t8140 = t8112 + t8130;
  t8145 = t3398*t8092;
  t8154 = t2996*t8124;
  t8159 = t8145 + t8154;
  t6713 = -0.766044*t3791;
  t6947 = 0.642788*t3894;
  t7815 = t6713 + t6947;
  t5401 = -0.766044*t5370;
  t5872 = 0.642788*t5666;
  t6366 = t5401 + t5872;
  t8141 = t2989*t8140;
  t8166 = t3692*t8159;
  t8170 = t8141 + t8166;
  t8176 = t3692*t8140;
  t8177 = -1.*t2989*t8159;
  t8181 = t8176 + t8177;
  t3826 = 0.642788*t3791;
  t3999 = 0.766044*t3894;
  t4007 = t3826 + t3999;
  t7834 = 0.642788*t5370;
  t7856 = 0.766044*t5666;
  t7860 = t7834 + t7856;
  t6457 = t4007*t6366;
  t7868 = -1.*t7815*t7860;
  t162 = -1.*t77;
  t208 = 1. + t162;
  t237 = -0.135*t208;
  t328 = 0.049*t244;
  t442 = 0. + t237 + t328;
  t705 = -0.049*t658;
  t719 = -0.09*t718;
  t730 = 0. + t705 + t719;
  t946 = -0.09*t658;
  t953 = 0.049*t718;
  t957 = 0. + t946 + t953;
  t1151 = -0.049*t1144;
  t1190 = -0.21*t1167;
  t1214 = 0. + t1151 + t1190;
  t1306 = -0.21*t1144;
  t1309 = 0.049*t1167;
  t1312 = 0. + t1306 + t1309;
  t8266 = t944*t553*t244;
  t8268 = -1.*t67*t718;
  t8275 = t8266 + t8268;
  t8284 = -1.*t553*t67;
  t8285 = -1.*t944*t244*t718;
  t8290 = t8284 + t8285;
  t1410 = -0.0016*t1407;
  t1437 = -0.2707*t1412;
  t1447 = 0. + t1410 + t1437;
  t1817 = -0.2707*t1407;
  t1926 = 0.0016*t1412;
  t1981 = 0. + t1817 + t1926;
  t8293 = t1133*t8275;
  t8295 = t8290*t1167;
  t8300 = t8293 + t8295;
  t8302 = t1133*t8290;
  t8305 = -1.*t8275*t1167;
  t8306 = t8302 + t8305;
  t2176 = 0.0184*t2167;
  t2254 = -0.7055*t2185;
  t2256 = 0. + t2176 + t2254;
  t2291 = -0.7055*t2167;
  t2300 = -0.0184*t2185;
  t2361 = 0. + t2291 + t2300;
  t8312 = t1381*t8300;
  t8313 = t8306*t1412;
  t8315 = t8312 + t8313;
  t8318 = t1381*t8306;
  t8322 = -1.*t8300*t1412;
  t8323 = t8318 + t8322;
  t2538 = -0.0216*t2526;
  t2562 = -1.1135*t2555;
  t2567 = 0. + t2538 + t2562;
  t2696 = -1.1135*t2526;
  t2721 = 0.0216*t2555;
  t2726 = 0. + t2696 + t2721;
  t8325 = t2106*t8315;
  t8326 = t8323*t2185;
  t8327 = t8325 + t8326;
  t8332 = t2106*t8323;
  t8333 = -1.*t8315*t2185;
  t8334 = t8332 + t8333;
  t8210 = -0.766044*t8170;
  t8217 = 0.642788*t8181;
  t8219 = t8210 + t8217;
  t8175 = 0.642788*t8170;
  t8189 = 0.766044*t8181;
  t8191 = t8175 + t8189;
  t8198 = t4027*t3028*t7815;
  t8201 = t4068*t6366;
  t8203 = t8198 + t8201;
  t8207 = -1.*t8191*t8203;
  t8220 = t4027*t3028*t4007;
  t8226 = t4068*t7860;
  t8228 = t8220 + t8226;
  t8230 = t8219*t8228;
  t8238 = t6457 + t7868;
  t8239 = -1.*t3028*t4104*t8238;
  t8243 = 0. + t8207 + t8230 + t8239;
  t8246 = 1/t8243;
  t8367 = t77*t553*t1133;
  t8369 = -1.*t77*t718*t1167;
  t8370 = t8367 + t8369;
  t8373 = -1.*t77*t1133*t718;
  t8374 = -1.*t77*t553*t1167;
  t8375 = t8373 + t8374;
  t8377 = t1381*t8370;
  t8378 = t8375*t1412;
  t8381 = t8377 + t8378;
  t8383 = t1381*t8375;
  t8384 = -1.*t8370*t1412;
  t8385 = t8383 + t8384;
  t8387 = t2106*t8381;
  t8391 = t8385*t2185;
  t8392 = t8387 + t8391;
  t8396 = t2106*t8385;
  t8397 = -1.*t8381*t2185;
  t8398 = t8396 + t8397;
  t8434 = -1.*t3038;
  t8435 = 1. + t8434;
  t8446 = -1.*t3066;
  t8447 = 1. + t8446;
  t8456 = -1.*t3279;
  t8458 = 1. + t8456;
  t8470 = -1.*t3398;
  t8473 = 1. + t8470;
  t8482 = -1.*t3692;
  t8483 = 1. + t8482;
  t8426 = -1.*t3028;
  t8427 = 1. + t8426;
  t8448 = -0.049*t8447;
  t8449 = -0.21*t3045;
  t8450 = 0. + t8448 + t8449;
  t8436 = -0.049*t8435;
  t8437 = -0.09*t3110;
  t8438 = 0. + t8436 + t8437;
  t8452 = -0.21*t8447;
  t8453 = 0.049*t3045;
  t8454 = 0. + t8452 + t8453;
  t8459 = -0.2707*t8458;
  t8460 = 0.0016*t3011;
  t8461 = 0. + t8459 + t8460;
  t8463 = -0.0016*t8458;
  t8464 = -0.2707*t3011;
  t8465 = 0. + t8463 + t8464;
  t8474 = 0.0184*t8473;
  t8475 = -0.7055*t2996;
  t8476 = 0. + t8474 + t8475;
  t8478 = -0.7055*t8473;
  t8479 = -0.0184*t2996;
  t8480 = 0. + t8478 + t8479;
  t8484 = -1.1135*t8483;
  t8485 = 0.0216*t2989;
  t8486 = 0. + t8484 + t8485;
  t8488 = -0.0216*t8483;
  t8490 = -1.1135*t2989;
  t8491 = 0. + t8488 + t8490;
  t8422 = -1.*t4027;
  t8423 = 1. + t8422;
  t8424 = 0.135*t8423;
  t8425 = 0.1305*t4027*t3028;
  t8428 = 0.135*t8427;
  t8431 = 0.049*t4068;
  t8432 = 0. + t8428 + t8431;
  t8433 = t4027*t8432;
  t8441 = t4027*t4068*t8438;
  t8442 = -0.09*t8435;
  t8443 = 0.049*t3110;
  t8444 = 0. + t8442 + t8443;
  t8445 = -1.*t4104*t8444;
  t8451 = t8450*t4182;
  t8455 = t8454*t4521;
  t8462 = t8461*t4610;
  t8469 = t8465*t4759;
  t8477 = t8476*t4812;
  t8481 = t8480*t5031;
  t8487 = t8486*t5159;
  t8492 = t8491*t5296;
  t8493 = 0.0306*t5370;
  t8494 = -1.1312*t5666;
  t8495 = 0. + t8424 + t8425 + t8433 + t8441 + t8445 + t8451 + t8455 + t8462 + t8469 + t8477 + t8481 + t8487 + t8492 + t8493 + t8494;
  t8497 = -0.049*t8427;
  t8498 = t3028*t3038*t8450;
  t8499 = 0.004500000000000004*t4068;
  t8500 = t3028*t8438;
  t8501 = -1.*t3028*t8454*t3110;
  t8502 = t8461*t3173;
  t8503 = t8465*t3310;
  t8504 = t8476*t3354;
  t8505 = t8480*t3417;
  t8506 = t8486*t3556;
  t8507 = t8491*t3783;
  t8509 = 0.0306*t3791;
  t8510 = -1.1312*t3894;
  t8511 = 0. + t8497 + t8498 + t8499 + t8500 + t8501 + t8502 + t8503 + t8504 + t8505 + t8506 + t8507 + t8509 + t8510;
  t70 = 0.135*t67;
  t83 = -0.1305*t77*t67;
  t463 = t67*t442;
  t805 = t67*t244*t730;
  t976 = t944*t957;
  t1260 = t1122*t1214;
  t1323 = t1284*t1312;
  t1536 = t1365*t1447;
  t1989 = t1813*t1981;
  t2262 = t2098*t2256;
  t2395 = t2281*t2361;
  t2569 = t2431*t2567;
  t2749 = t2646*t2726;
  t2775 = t2456*t2431;
  t2791 = t2646*t2555;
  t2854 = t2775 + t2791;
  t2855 = 0.0306*t2854;
  t2858 = t2456*t2646;
  t2886 = -1.*t2431*t2555;
  t2912 = t2858 + t2886;
  t2961 = -1.1312*t2912;
  t2964 = 0. + t70 + t83 + t463 + t805 + t976 + t1260 + t1323 + t1536 + t1989 + t2262 + t2395 + t2569 + t2749 + t2855 + t2961;
  t8356 = -0.049*t208;
  t8360 = -0.004500000000000004*t244;
  t8364 = t77*t730;
  t8365 = t77*t553*t1214;
  t8366 = -1.*t77*t718*t1312;
  t8372 = t8370*t1447;
  t8376 = t8375*t1981;
  t8382 = t8381*t2256;
  t8386 = t8385*t2361;
  t8395 = t8392*t2567;
  t8401 = t8398*t2726;
  t8402 = t2456*t8392;
  t8403 = t8398*t2555;
  t8404 = t8402 + t8403;
  t8405 = 0.0306*t8404;
  t8406 = t2456*t8398;
  t8411 = -1.*t8392*t2555;
  t8412 = t8406 + t8411;
  t8413 = -1.1312*t8412;
  t8414 = 0. + t8356 + t8360 + t8364 + t8365 + t8366 + t8372 + t8376 + t8382 + t8386 + t8395 + t8401 + t8405 + t8413;
  t8249 = -1.*t944;
  t8251 = 1. + t8249;
  t8257 = -0.135*t8251;
  t8259 = -0.1305*t944*t77;
  t8263 = t944*t442;
  t8264 = t944*t244*t730;
  t8265 = -1.*t67*t957;
  t8280 = t8275*t1214;
  t8292 = t8290*t1312;
  t8301 = t8300*t1447;
  t8311 = t8306*t1981;
  t8317 = t8315*t2256;
  t8324 = t8323*t2361;
  t8328 = t8327*t2567;
  t8335 = t8334*t2726;
  t8336 = t2456*t8327;
  t8337 = t8334*t2555;
  t8338 = t8336 + t8337;
  t8339 = 0.0306*t8338;
  t8340 = t2456*t8334;
  t8341 = -1.*t8327*t2555;
  t8342 = t8340 + t8341;
  t8344 = -1.1312*t8342;
  t8347 = 0. + t8257 + t8259 + t8263 + t8264 + t8265 + t8280 + t8292 + t8301 + t8311 + t8317 + t8324 + t8328 + t8335 + t8339 + t8344;
  t8519 = -0.135*t4104;
  t8520 = 0.1305*t3028*t4104;
  t8521 = t4104*t8432;
  t8522 = t4104*t4068*t8438;
  t8523 = t4027*t8444;
  t8524 = t8450*t7997;
  t8525 = t8454*t8047;
  t8526 = t8461*t8057;
  t8527 = t8465*t8076;
  t8528 = t8476*t8092;
  t8529 = t8480*t8124;
  t8530 = t8486*t8140;
  t8531 = t8491*t8159;
  t8532 = 0.0306*t8170;
  t8533 = -1.1312*t8181;
  t8534 = 0. + t8519 + t8520 + t8521 + t8522 + t8523 + t8524 + t8525 + t8526 + t8527 + t8528 + t8529 + t8530 + t8531 + t8532 + t8533;
  t8496 = t7815*t8495;
  t8512 = -1.*t8511*t6366;
  t8513 = t8496 + t8512;
  t8551 = t4027*t3028*t8511;
  t8552 = t4068*t8495;
  t8553 = t8551 + t8552;
  t8515 = t4007*t8495;
  t8516 = -1.*t8511*t7860;
  t8517 = t8515 + t8516;

  p_output1(0)=t2964*(0. + t6457 + t7868)*t8246 + (0. + t7815*t8191 - 1.*t4007*t8219)*t8246*t8347 + (0. - 1.*t6366*t8191 + t7860*t8219)*t8246*t8414 + t8246*(-1.*t8191*t8513 + t8219*t8517 - 1.*t8238*t8534);
  p_output1(1)=t2964*(0. - 1.*t4068*t6366 - 1.*t3028*t4027*t7815)*t8246 + (0. + t3028*t4104*t7815 + t4068*t8219)*t8246*t8347 + (0. - 1.*t3028*t4104*t6366 + t3028*t4027*t8219)*t8246*t8414 + t8246*(-1.*t3028*t4104*t8513 + t8203*t8534 - 1.*t8219*t8553);
  p_output1(2)=t2964*(0. + t8220 + t8226)*t8246 + (0. - 1.*t3028*t4007*t4104 - 1.*t4068*t8191)*t8246*t8347 + (0. + t3028*t4104*t7860 - 1.*t3028*t4027*t8191)*t8246*t8414 + t8246*(t3028*t4104*t8517 - 1.*t8228*t8534 + t8191*t8553);
}


       
void p_LeftToeBottom_to_RightToeBottom(Eigen::Matrix<double,3,1> &p_output1, const Eigen::Matrix<double,14,1> &var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
