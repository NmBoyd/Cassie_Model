/*
 * Automatically Generated from Mathematica.
 * Wed 15 Nov 2017 08:32:22 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t4906;
  double t4918;
  double t4920;
  double t4905;
  double t4921;
  double t4862;
  double t4909;
  double t4922;
  double t4944;
  double t4949;
  double t4951;
  double t4953;
  double t4954;
  double t4981;
  double t4994;
  double t5002;
  double t5005;
  double t4976;
  double t4977;
  double t4980;
  double t5012;
  double t5058;
  double t5062;
  double t5065;
  double t5077;
  double t5048;
  double t5049;
  double t5055;
  double t5083;
  double t5084;
  double t5085;
  double t5096;
  double t5099;
  double t5100;
  double t5103;
  double t5109;
  double t5111;
  double t5113;
  double t5132;
  double t5135;
  double t5139;
  double t5142;
  double t5144;
  double t5145;
  double t5150;
  double t5154;
  double t5156;
  double t5157;
  double t5162;
  double t5163;
  double t5165;
  double t5168;
  double t5169;
  double t5170;
  double t5173;
  double t5176;
  double t5178;
  double t5180;
  double t5189;
  double t5191;
  double t5192;
  double t5196;
  double t5197;
  double t5200;
  double t5204;
  double t5208;
  double t5210;
  double t5213;
  double t5221;
  double t5222;
  double t5224;
  double t4873;
  double t4889;
  double t4901;
  double t4903;
  double t4968;
  double t4973;
  double t5237;
  double t5238;
  double t5239;
  double t5241;
  double t5242;
  double t5243;
  double t5003;
  double t5006;
  double t5009;
  double t5015;
  double t5016;
  double t5032;
  double t5245;
  double t5246;
  double t5247;
  double t5072;
  double t5078;
  double t5081;
  double t5086;
  double t5087;
  double t5088;
  double t5101;
  double t5106;
  double t5108;
  double t5257;
  double t5258;
  double t5259;
  double t5262;
  double t5263;
  double t5265;
  double t5119;
  double t5126;
  double t5130;
  double t5147;
  double t5152;
  double t5153;
  double t5268;
  double t5269;
  double t5270;
  double t5272;
  double t5274;
  double t5275;
  double t5159;
  double t5160;
  double t5161;
  double t5171;
  double t5174;
  double t5175;
  double t5278;
  double t5279;
  double t5281;
  double t5284;
  double t5286;
  double t5287;
  double t5183;
  double t5185;
  double t5186;
  double t5201;
  double t5205;
  double t5207;
  double t5290;
  double t5291;
  double t5292;
  double t5294;
  double t5295;
  double t5296;
  double t5216;
  double t5218;
  double t5219;
  double t5298;
  double t5299;
  double t5300;
  double t5302;
  double t5303;
  double t5304;
  double t5317;
  double t5318;
  double t5319;
  double t5326;
  double t5327;
  double t5328;
  double t5330;
  double t5331;
  double t5332;
  double t5334;
  double t5335;
  double t5336;
  double t5338;
  double t5339;
  double t5340;
  double t5342;
  double t5343;
  double t5344;
  double t5346;
  double t5347;
  double t5348;
  double t5350;
  double t5351;
  double t5352;
  double t5354;
  double t5355;
  double t5356;
  double t5358;
  double t5359;
  double t5360;
  double t5362;
  double t5363;
  double t5364;
  double t5377;
  double t5378;
  double t5379;
  double t5386;
  double t5387;
  double t5388;
  double t5390;
  double t5391;
  double t5392;
  double t5394;
  double t5395;
  double t5396;
  double t5398;
  double t5399;
  double t5400;
  double t5402;
  double t5403;
  double t5404;
  double t5406;
  double t5407;
  double t5408;
  double t5410;
  double t5411;
  double t5412;
  double t5414;
  double t5415;
  double t5416;
  double t5418;
  double t5419;
  double t5420;
  double t5422;
  double t5423;
  double t5424;
  double t5437;
  double t5438;
  double t5439;
  double t5446;
  double t5447;
  double t5448;
  double t5450;
  double t5451;
  double t5452;
  double t5454;
  double t5455;
  double t5456;
  double t5458;
  double t5459;
  double t5460;
  double t5462;
  double t5463;
  double t5464;
  double t5466;
  double t5467;
  double t5468;
  double t5470;
  double t5471;
  double t5472;
  double t5474;
  double t5475;
  double t5476;
  double t5478;
  double t5479;
  double t5480;
  double t5482;
  double t5483;
  double t5484;
  double t5496;
  double t5497;
  double t5498;
  double t5500;
  double t5501;
  double t5505;
  double t5506;
  double t5507;
  double t5509;
  double t5510;
  double t5511;
  double t5513;
  double t5514;
  double t5515;
  double t5517;
  double t5518;
  double t5519;
  double t5521;
  double t5522;
  double t5523;
  double t5525;
  double t5526;
  double t5527;
  double t5529;
  double t5530;
  double t5531;
  double t5533;
  double t5534;
  double t5535;
  double t5537;
  double t5538;
  double t5539;
  double t5550;
  double t5551;
  double t5552;
  double t5555;
  double t5556;
  double t5557;
  double t5561;
  double t5562;
  double t5564;
  double t5565;
  double t5566;
  double t5568;
  double t5569;
  double t5570;
  double t5572;
  double t5573;
  double t5574;
  double t5576;
  double t5577;
  double t5578;
  double t5580;
  double t5581;
  double t5582;
  double t5584;
  double t5585;
  double t5586;
  double t5588;
  double t5589;
  double t5590;
  double t5592;
  double t5593;
  double t5594;
  double t5607;
  double t5608;
  double t5609;
  double t5613;
  double t5614;
  double t5615;
  double t5617;
  double t5618;
  double t5619;
  double t5621;
  double t5622;
  double t5623;
  double t5625;
  double t5626;
  double t5627;
  double t5629;
  double t5630;
  double t5631;
  double t5633;
  double t5634;
  double t5635;
  double t5637;
  double t5638;
  double t5639;
  double t5641;
  double t5642;
  double t5643;
  double t5645;
  double t5646;
  double t5647;
  double t5663;
  double t5664;
  double t5666;
  double t5667;
  double t5668;
  double t5670;
  double t5671;
  double t5672;
  double t5674;
  double t5675;
  double t5676;
  double t5678;
  double t5679;
  double t5680;
  double t5682;
  double t5683;
  double t5684;
  double t5686;
  double t5687;
  double t5688;
  double t5690;
  double t5691;
  double t5692;
  double t5694;
  double t5695;
  double t5696;
  double t5708;
  double t5709;
  double t5710;
  double t5712;
  double t5713;
  double t5717;
  double t5718;
  double t5720;
  double t5721;
  double t5722;
  double t5724;
  double t5725;
  double t5726;
  double t5728;
  double t5729;
  double t5730;
  double t5732;
  double t5733;
  double t5734;
  double t5736;
  double t5737;
  double t5738;
  double t5740;
  double t5741;
  double t5742;
  double t5744;
  double t5745;
  double t5746;
  double t5748;
  double t5749;
  double t5750;
  double t5610;
  double t5611;
  double t5612;
  double t5616;
  double t5620;
  double t5624;
  double t5628;
  double t5632;
  double t5636;
  double t5640;
  double t5644;
  double t5648;
  double t5649;
  double t5650;
  double t5651;
  double t5652;
  double t5653;
  double t5654;
  double t5655;
  double t5656;
  double t5250;
  double t5252;
  double t5254;
  double t5778;
  double t5779;
  double t5780;
  double t5782;
  double t5783;
  double t5784;
  double t5786;
  double t5787;
  double t5788;
  double t5790;
  double t5791;
  double t5792;
  double t5794;
  double t5795;
  double t5796;
  double t5798;
  double t5799;
  double t5800;
  double t5764;
  double t5765;
  double t5766;
  double t5768;
  double t5769;
  double t5812;
  double t5813;
  double t5814;
  double t5816;
  double t5817;
  double t5818;
  double t5825;
  double t5826;
  double t5827;
  double t5829;
  double t5830;
  double t5831;
  double t5833;
  double t5834;
  double t5835;
  double t5837;
  double t5838;
  double t5839;
  double t5841;
  double t5842;
  double t5843;
  double t5845;
  double t5846;
  double t5847;
  double t5859;
  double t5860;
  double t5861;
  double t5863;
  double t5864;
  double t5865;
  double t5873;
  double t5874;
  double t5875;
  double t5877;
  double t5878;
  double t5879;
  double t5881;
  double t5882;
  double t5883;
  double t5885;
  double t5886;
  double t5887;
  double t5889;
  double t5890;
  double t5891;
  double t5893;
  double t5894;
  double t5895;
  double t5913;
  double t5914;
  double t5915;
  double t5918;
  double t5919;
  double t5921;
  double t5922;
  double t5923;
  double t5925;
  double t5926;
  double t5927;
  double t5929;
  double t5930;
  double t5931;
  double t5933;
  double t5934;
  double t5935;
  double t5937;
  double t5938;
  double t5939;
  double t5906;
  double t5907;
  double t5909;
  double t5910;
  double t5911;
  double t5951;
  double t5952;
  double t5953;
  double t5955;
  double t5956;
  double t5957;
  double t5959;
  double t5960;
  double t5961;
  double t5963;
  double t5964;
  double t5965;
  double t5967;
  double t5968;
  double t5969;
  double t5971;
  double t5972;
  double t5973;
  double t5975;
  double t5976;
  double t5977;
  double t5979;
  double t5980;
  double t5981;
  double t5983;
  double t5984;
  double t5985;
  double t5997;
  double t5998;
  double t5999;
  double t6001;
  double t6002;
  double t6003;
  double t6005;
  double t6006;
  double t6007;
  double t6009;
  double t6010;
  double t6011;
  double t6013;
  double t6014;
  double t6015;
  double t6017;
  double t6018;
  double t6019;
  double t6021;
  double t6022;
  double t6023;
  double t6025;
  double t6026;
  double t6027;
  double t6029;
  double t6030;
  double t6031;
  double t6050;
  double t6051;
  double t6053;
  double t6054;
  double t6055;
  double t6057;
  double t6058;
  double t6060;
  double t6061;
  double t6062;
  double t6064;
  double t6065;
  double t6066;
  double t6042;
  double t6043;
  double t6044;
  double t6046;
  double t6047;
  double t6077;
  double t6078;
  double t6079;
  double t6082;
  double t6083;
  double t6085;
  double t6086;
  double t6088;
  double t6089;
  double t6090;
  double t6092;
  double t6093;
  double t6094;
  double t6096;
  double t6097;
  double t6098;
  double t6100;
  double t6101;
  double t6102;
  double t6113;
  double t6114;
  double t6115;
  double t6118;
  double t6119;
  double t6121;
  double t6122;
  double t6124;
  double t6125;
  double t6126;
  double t6128;
  double t6129;
  double t6130;
  double t6132;
  double t6133;
  double t6134;
  double t6136;
  double t6137;
  double t6138;
  double t6156;
  double t6157;
  double t6160;
  double t6161;
  double t6163;
  double t6164;
  double t6165;
  double t6149;
  double t6150;
  double t6152;
  double t6153;
  double t6154;
  double t6177;
  double t6178;
  double t6179;
  double t6181;
  double t6182;
  double t6184;
  double t6185;
  double t6187;
  double t6188;
  double t6189;
  double t6191;
  double t6192;
  double t6193;
  double t6205;
  double t6206;
  double t6207;
  double t6209;
  double t6210;
  double t6212;
  double t6213;
  double t6215;
  double t6216;
  double t6217;
  double t6219;
  double t6220;
  double t6221;
  double t6240;
  double t6241;
  double t5310;
  double t6232;
  double t6233;
  double t6234;
  double t6236;
  double t6237;
  double t6251;
  double t6252;
  double t6253;
  double t6256;
  double t6257;
  double t6259;
  double t6260;
  double t6271;
  double t6272;
  double t6273;
  double t6276;
  double t6277;
  double t6279;
  double t6280;
  double t6243;
  double t5311;
  double t5312;
  double t6291;
  double t6292;
  double t6294;
  double t6295;
  double t6296;
  double t6262;
  double t6304;
  double t6305;
  double t6306;
  double t6266;
  double t6282;
  double t6316;
  double t6317;
  double t6318;
  double t6286;
  t4906 = Cos(var1[5]);
  t4918 = Sin(var1[3]);
  t4920 = Sin(var1[4]);
  t4905 = Cos(var1[3]);
  t4921 = Sin(var1[5]);
  t4862 = Cos(var1[6]);
  t4909 = -1.*t4905*t4906;
  t4922 = -1.*t4918*t4920*t4921;
  t4944 = t4909 + t4922;
  t4949 = -1.*t4906*t4918*t4920;
  t4951 = t4905*t4921;
  t4953 = t4949 + t4951;
  t4954 = Sin(var1[6]);
  t4981 = Cos(var1[7]);
  t4994 = -1.*t4981;
  t5002 = 1. + t4994;
  t5005 = Sin(var1[7]);
  t4976 = t4862*t4944;
  t4977 = t4953*t4954;
  t4980 = t4976 + t4977;
  t5012 = Cos(var1[4]);
  t5058 = Cos(var1[8]);
  t5062 = -1.*t5058;
  t5065 = 1. + t5062;
  t5077 = Sin(var1[8]);
  t5048 = -1.*t5012*t4981*t4918;
  t5049 = t4980*t5005;
  t5055 = t5048 + t5049;
  t5083 = t4862*t4953;
  t5084 = -1.*t4944*t4954;
  t5085 = t5083 + t5084;
  t5096 = Cos(var1[9]);
  t5099 = -1.*t5096;
  t5100 = 1. + t5099;
  t5103 = Sin(var1[9]);
  t5109 = t5058*t5055;
  t5111 = t5085*t5077;
  t5113 = t5109 + t5111;
  t5132 = t5058*t5085;
  t5135 = -1.*t5055*t5077;
  t5139 = t5132 + t5135;
  t5142 = Cos(var1[10]);
  t5144 = -1.*t5142;
  t5145 = 1. + t5144;
  t5150 = Sin(var1[10]);
  t5154 = -1.*t5103*t5113;
  t5156 = t5096*t5139;
  t5157 = t5154 + t5156;
  t5162 = t5096*t5113;
  t5163 = t5103*t5139;
  t5165 = t5162 + t5163;
  t5168 = Cos(var1[11]);
  t5169 = -1.*t5168;
  t5170 = 1. + t5169;
  t5173 = Sin(var1[11]);
  t5176 = t5150*t5157;
  t5178 = t5142*t5165;
  t5180 = t5176 + t5178;
  t5189 = t5142*t5157;
  t5191 = -1.*t5150*t5165;
  t5192 = t5189 + t5191;
  t5196 = Cos(var1[12]);
  t5197 = -1.*t5196;
  t5200 = 1. + t5197;
  t5204 = Sin(var1[12]);
  t5208 = -1.*t5173*t5180;
  t5210 = t5168*t5192;
  t5213 = t5208 + t5210;
  t5221 = t5168*t5180;
  t5222 = t5173*t5192;
  t5224 = t5221 + t5222;
  t4873 = -1.*t4862;
  t4889 = 1. + t4873;
  t4901 = 0.135*t4889;
  t4903 = 0. + t4901;
  t4968 = -0.135*t4954;
  t4973 = 0. + t4968;
  t5237 = -1.*t4906*t4918;
  t5238 = t4905*t4920*t4921;
  t5239 = t5237 + t5238;
  t5241 = t4905*t4906*t4920;
  t5242 = t4918*t4921;
  t5243 = t5241 + t5242;
  t5003 = 0.135*t5002;
  t5006 = 0.049*t5005;
  t5009 = 0. + t5003 + t5006;
  t5015 = -0.049*t5002;
  t5016 = 0.135*t5005;
  t5032 = 0. + t5015 + t5016;
  t5245 = t4862*t5239;
  t5246 = t5243*t4954;
  t5247 = t5245 + t5246;
  t5072 = -0.049*t5065;
  t5078 = -0.09*t5077;
  t5081 = 0. + t5072 + t5078;
  t5086 = -0.09*t5065;
  t5087 = 0.049*t5077;
  t5088 = 0. + t5086 + t5087;
  t5101 = -0.049*t5100;
  t5106 = -0.21*t5103;
  t5108 = 0. + t5101 + t5106;
  t5257 = t4905*t5012*t4981;
  t5258 = t5247*t5005;
  t5259 = t5257 + t5258;
  t5262 = t4862*t5243;
  t5263 = -1.*t5239*t4954;
  t5265 = t5262 + t5263;
  t5119 = -0.21*t5100;
  t5126 = 0.049*t5103;
  t5130 = 0. + t5119 + t5126;
  t5147 = -0.2707*t5145;
  t5152 = 0.0016*t5150;
  t5153 = 0. + t5147 + t5152;
  t5268 = t5058*t5259;
  t5269 = t5265*t5077;
  t5270 = t5268 + t5269;
  t5272 = t5058*t5265;
  t5274 = -1.*t5259*t5077;
  t5275 = t5272 + t5274;
  t5159 = -0.0016*t5145;
  t5160 = -0.2707*t5150;
  t5161 = 0. + t5159 + t5160;
  t5171 = 0.0184*t5170;
  t5174 = -0.7055*t5173;
  t5175 = 0. + t5171 + t5174;
  t5278 = -1.*t5103*t5270;
  t5279 = t5096*t5275;
  t5281 = t5278 + t5279;
  t5284 = t5096*t5270;
  t5286 = t5103*t5275;
  t5287 = t5284 + t5286;
  t5183 = -0.7055*t5170;
  t5185 = -0.0184*t5173;
  t5186 = 0. + t5183 + t5185;
  t5201 = -1.1135*t5200;
  t5205 = 0.0216*t5204;
  t5207 = 0. + t5201 + t5205;
  t5290 = t5150*t5281;
  t5291 = t5142*t5287;
  t5292 = t5290 + t5291;
  t5294 = t5142*t5281;
  t5295 = -1.*t5150*t5287;
  t5296 = t5294 + t5295;
  t5216 = -0.0216*t5200;
  t5218 = -1.1135*t5204;
  t5219 = 0. + t5216 + t5218;
  t5298 = -1.*t5173*t5292;
  t5299 = t5168*t5296;
  t5300 = t5298 + t5299;
  t5302 = t5168*t5292;
  t5303 = t5173*t5296;
  t5304 = t5302 + t5303;
  t5317 = t4905*t5012*t4862*t4921;
  t5318 = t4905*t5012*t4906*t4954;
  t5319 = t5317 + t5318;
  t5326 = -1.*t4905*t4981*t4920;
  t5327 = t5319*t5005;
  t5328 = t5326 + t5327;
  t5330 = t4905*t5012*t4906*t4862;
  t5331 = -1.*t4905*t5012*t4921*t4954;
  t5332 = t5330 + t5331;
  t5334 = t5058*t5328;
  t5335 = t5332*t5077;
  t5336 = t5334 + t5335;
  t5338 = t5058*t5332;
  t5339 = -1.*t5328*t5077;
  t5340 = t5338 + t5339;
  t5342 = -1.*t5103*t5336;
  t5343 = t5096*t5340;
  t5344 = t5342 + t5343;
  t5346 = t5096*t5336;
  t5347 = t5103*t5340;
  t5348 = t5346 + t5347;
  t5350 = t5150*t5344;
  t5351 = t5142*t5348;
  t5352 = t5350 + t5351;
  t5354 = t5142*t5344;
  t5355 = -1.*t5150*t5348;
  t5356 = t5354 + t5355;
  t5358 = -1.*t5173*t5352;
  t5359 = t5168*t5356;
  t5360 = t5358 + t5359;
  t5362 = t5168*t5352;
  t5363 = t5173*t5356;
  t5364 = t5362 + t5363;
  t5377 = t5012*t4862*t4918*t4921;
  t5378 = t5012*t4906*t4918*t4954;
  t5379 = t5377 + t5378;
  t5386 = -1.*t4981*t4918*t4920;
  t5387 = t5379*t5005;
  t5388 = t5386 + t5387;
  t5390 = t5012*t4906*t4862*t4918;
  t5391 = -1.*t5012*t4918*t4921*t4954;
  t5392 = t5390 + t5391;
  t5394 = t5058*t5388;
  t5395 = t5392*t5077;
  t5396 = t5394 + t5395;
  t5398 = t5058*t5392;
  t5399 = -1.*t5388*t5077;
  t5400 = t5398 + t5399;
  t5402 = -1.*t5103*t5396;
  t5403 = t5096*t5400;
  t5404 = t5402 + t5403;
  t5406 = t5096*t5396;
  t5407 = t5103*t5400;
  t5408 = t5406 + t5407;
  t5410 = t5150*t5404;
  t5411 = t5142*t5408;
  t5412 = t5410 + t5411;
  t5414 = t5142*t5404;
  t5415 = -1.*t5150*t5408;
  t5416 = t5414 + t5415;
  t5418 = -1.*t5173*t5412;
  t5419 = t5168*t5416;
  t5420 = t5418 + t5419;
  t5422 = t5168*t5412;
  t5423 = t5173*t5416;
  t5424 = t5422 + t5423;
  t5437 = -1.*t4862*t4920*t4921;
  t5438 = -1.*t4906*t4920*t4954;
  t5439 = t5437 + t5438;
  t5446 = -1.*t5012*t4981;
  t5447 = t5439*t5005;
  t5448 = t5446 + t5447;
  t5450 = -1.*t4906*t4862*t4920;
  t5451 = t4920*t4921*t4954;
  t5452 = t5450 + t5451;
  t5454 = t5058*t5448;
  t5455 = t5452*t5077;
  t5456 = t5454 + t5455;
  t5458 = t5058*t5452;
  t5459 = -1.*t5448*t5077;
  t5460 = t5458 + t5459;
  t5462 = -1.*t5103*t5456;
  t5463 = t5096*t5460;
  t5464 = t5462 + t5463;
  t5466 = t5096*t5456;
  t5467 = t5103*t5460;
  t5468 = t5466 + t5467;
  t5470 = t5150*t5464;
  t5471 = t5142*t5468;
  t5472 = t5470 + t5471;
  t5474 = t5142*t5464;
  t5475 = -1.*t5150*t5468;
  t5476 = t5474 + t5475;
  t5478 = -1.*t5173*t5472;
  t5479 = t5168*t5476;
  t5480 = t5478 + t5479;
  t5482 = t5168*t5472;
  t5483 = t5173*t5476;
  t5484 = t5482 + t5483;
  t5496 = t4906*t4918;
  t5497 = -1.*t4905*t4920*t4921;
  t5498 = t5496 + t5497;
  t5500 = t5498*t4954;
  t5501 = t5262 + t5500;
  t5505 = t4862*t5498;
  t5506 = -1.*t5243*t4954;
  t5507 = t5505 + t5506;
  t5509 = t5058*t5501*t5005;
  t5510 = t5507*t5077;
  t5511 = t5509 + t5510;
  t5513 = t5058*t5507;
  t5514 = -1.*t5501*t5005*t5077;
  t5515 = t5513 + t5514;
  t5517 = -1.*t5103*t5511;
  t5518 = t5096*t5515;
  t5519 = t5517 + t5518;
  t5521 = t5096*t5511;
  t5522 = t5103*t5515;
  t5523 = t5521 + t5522;
  t5525 = t5150*t5519;
  t5526 = t5142*t5523;
  t5527 = t5525 + t5526;
  t5529 = t5142*t5519;
  t5530 = -1.*t5150*t5523;
  t5531 = t5529 + t5530;
  t5533 = -1.*t5173*t5527;
  t5534 = t5168*t5531;
  t5535 = t5533 + t5534;
  t5537 = t5168*t5527;
  t5538 = t5173*t5531;
  t5539 = t5537 + t5538;
  t5550 = t4906*t4918*t4920;
  t5551 = -1.*t4905*t4921;
  t5552 = t5550 + t5551;
  t5555 = t4862*t5552;
  t5556 = t4944*t4954;
  t5557 = t5555 + t5556;
  t5561 = -1.*t5552*t4954;
  t5562 = t4976 + t5561;
  t5564 = t5058*t5557*t5005;
  t5565 = t5562*t5077;
  t5566 = t5564 + t5565;
  t5568 = t5058*t5562;
  t5569 = -1.*t5557*t5005*t5077;
  t5570 = t5568 + t5569;
  t5572 = -1.*t5103*t5566;
  t5573 = t5096*t5570;
  t5574 = t5572 + t5573;
  t5576 = t5096*t5566;
  t5577 = t5103*t5570;
  t5578 = t5576 + t5577;
  t5580 = t5150*t5574;
  t5581 = t5142*t5578;
  t5582 = t5580 + t5581;
  t5584 = t5142*t5574;
  t5585 = -1.*t5150*t5578;
  t5586 = t5584 + t5585;
  t5588 = -1.*t5173*t5582;
  t5589 = t5168*t5586;
  t5590 = t5588 + t5589;
  t5592 = t5168*t5582;
  t5593 = t5173*t5586;
  t5594 = t5592 + t5593;
  t5607 = t5012*t4906*t4862;
  t5608 = -1.*t5012*t4921*t4954;
  t5609 = t5607 + t5608;
  t5613 = -1.*t5012*t4862*t4921;
  t5614 = -1.*t5012*t4906*t4954;
  t5615 = t5613 + t5614;
  t5617 = t5058*t5609*t5005;
  t5618 = t5615*t5077;
  t5619 = t5617 + t5618;
  t5621 = t5058*t5615;
  t5622 = -1.*t5609*t5005*t5077;
  t5623 = t5621 + t5622;
  t5625 = -1.*t5103*t5619;
  t5626 = t5096*t5623;
  t5627 = t5625 + t5626;
  t5629 = t5096*t5619;
  t5630 = t5103*t5623;
  t5631 = t5629 + t5630;
  t5633 = t5150*t5627;
  t5634 = t5142*t5631;
  t5635 = t5633 + t5634;
  t5637 = t5142*t5627;
  t5638 = -1.*t5150*t5631;
  t5639 = t5637 + t5638;
  t5641 = -1.*t5173*t5635;
  t5642 = t5168*t5639;
  t5643 = t5641 + t5642;
  t5645 = t5168*t5635;
  t5646 = t5173*t5639;
  t5647 = t5645 + t5646;
  t5663 = -1.*t4862*t5239;
  t5664 = t5663 + t5506;
  t5666 = t5058*t5265*t5005;
  t5667 = t5664*t5077;
  t5668 = t5666 + t5667;
  t5670 = t5058*t5664;
  t5671 = -1.*t5265*t5005*t5077;
  t5672 = t5670 + t5671;
  t5674 = -1.*t5103*t5668;
  t5675 = t5096*t5672;
  t5676 = t5674 + t5675;
  t5678 = t5096*t5668;
  t5679 = t5103*t5672;
  t5680 = t5678 + t5679;
  t5682 = t5150*t5676;
  t5683 = t5142*t5680;
  t5684 = t5682 + t5683;
  t5686 = t5142*t5676;
  t5687 = -1.*t5150*t5680;
  t5688 = t5686 + t5687;
  t5690 = -1.*t5173*t5684;
  t5691 = t5168*t5688;
  t5692 = t5690 + t5691;
  t5694 = t5168*t5684;
  t5695 = t5173*t5688;
  t5696 = t5694 + t5695;
  t5708 = t4905*t4906;
  t5709 = t4918*t4920*t4921;
  t5710 = t5708 + t5709;
  t5712 = -1.*t5710*t4954;
  t5713 = t5555 + t5712;
  t5717 = -1.*t4862*t5710;
  t5718 = t5717 + t5561;
  t5720 = t5058*t5713*t5005;
  t5721 = t5718*t5077;
  t5722 = t5720 + t5721;
  t5724 = t5058*t5718;
  t5725 = -1.*t5713*t5005*t5077;
  t5726 = t5724 + t5725;
  t5728 = -1.*t5103*t5722;
  t5729 = t5096*t5726;
  t5730 = t5728 + t5729;
  t5732 = t5096*t5722;
  t5733 = t5103*t5726;
  t5734 = t5732 + t5733;
  t5736 = t5150*t5730;
  t5737 = t5142*t5734;
  t5738 = t5736 + t5737;
  t5740 = t5142*t5730;
  t5741 = -1.*t5150*t5734;
  t5742 = t5740 + t5741;
  t5744 = -1.*t5173*t5738;
  t5745 = t5168*t5742;
  t5746 = t5744 + t5745;
  t5748 = t5168*t5738;
  t5749 = t5173*t5742;
  t5750 = t5748 + t5749;
  t5610 = 0.1305*t4981*t5609;
  t5611 = t5609*t5009;
  t5612 = t5609*t5005*t5081;
  t5616 = t5615*t5088;
  t5620 = t5108*t5619;
  t5624 = t5130*t5623;
  t5628 = t5153*t5627;
  t5632 = t5161*t5631;
  t5636 = t5175*t5635;
  t5640 = t5186*t5639;
  t5644 = t5207*t5643;
  t5648 = t5219*t5647;
  t5649 = t5204*t5643;
  t5650 = t5196*t5647;
  t5651 = t5649 + t5650;
  t5652 = -0.0216*t5651;
  t5653 = t5196*t5643;
  t5654 = -1.*t5204*t5647;
  t5655 = t5653 + t5654;
  t5656 = -1.1135*t5655;
  t5250 = t4981*t5247;
  t5252 = -1.*t4905*t5012*t5005;
  t5254 = t5250 + t5252;
  t5778 = -1.*t5058*t5103*t5254;
  t5779 = -1.*t5096*t5254*t5077;
  t5780 = t5778 + t5779;
  t5782 = t5096*t5058*t5254;
  t5783 = -1.*t5103*t5254*t5077;
  t5784 = t5782 + t5783;
  t5786 = t5150*t5780;
  t5787 = t5142*t5784;
  t5788 = t5786 + t5787;
  t5790 = t5142*t5780;
  t5791 = -1.*t5150*t5784;
  t5792 = t5790 + t5791;
  t5794 = -1.*t5173*t5788;
  t5795 = t5168*t5792;
  t5796 = t5794 + t5795;
  t5798 = t5168*t5788;
  t5799 = t5173*t5792;
  t5800 = t5798 + t5799;
  t5764 = 0.135*t4981;
  t5765 = -0.049*t5005;
  t5766 = t5764 + t5765;
  t5768 = 0.049*t4981;
  t5769 = t5768 + t5016;
  t5812 = t4862*t5710;
  t5813 = t5552*t4954;
  t5814 = t5812 + t5813;
  t5816 = t4981*t5814;
  t5817 = -1.*t5012*t4918*t5005;
  t5818 = t5816 + t5817;
  t5825 = -1.*t5058*t5103*t5818;
  t5826 = -1.*t5096*t5818*t5077;
  t5827 = t5825 + t5826;
  t5829 = t5096*t5058*t5818;
  t5830 = -1.*t5103*t5818*t5077;
  t5831 = t5829 + t5830;
  t5833 = t5150*t5827;
  t5834 = t5142*t5831;
  t5835 = t5833 + t5834;
  t5837 = t5142*t5827;
  t5838 = -1.*t5150*t5831;
  t5839 = t5837 + t5838;
  t5841 = -1.*t5173*t5835;
  t5842 = t5168*t5839;
  t5843 = t5841 + t5842;
  t5845 = t5168*t5835;
  t5846 = t5173*t5839;
  t5847 = t5845 + t5846;
  t5859 = t5012*t4862*t4921;
  t5860 = t5012*t4906*t4954;
  t5861 = t5859 + t5860;
  t5863 = t4981*t5861;
  t5864 = t4920*t5005;
  t5865 = t5863 + t5864;
  t5873 = -1.*t5058*t5103*t5865;
  t5874 = -1.*t5096*t5865*t5077;
  t5875 = t5873 + t5874;
  t5877 = t5096*t5058*t5865;
  t5878 = -1.*t5103*t5865*t5077;
  t5879 = t5877 + t5878;
  t5881 = t5150*t5875;
  t5882 = t5142*t5879;
  t5883 = t5881 + t5882;
  t5885 = t5142*t5875;
  t5886 = -1.*t5150*t5879;
  t5887 = t5885 + t5886;
  t5889 = -1.*t5173*t5883;
  t5890 = t5168*t5887;
  t5891 = t5889 + t5890;
  t5893 = t5168*t5883;
  t5894 = t5173*t5887;
  t5895 = t5893 + t5894;
  t5913 = -1.*t5058*t5259;
  t5914 = -1.*t5265*t5077;
  t5915 = t5913 + t5914;
  t5918 = t5103*t5915;
  t5919 = t5918 + t5279;
  t5921 = t5096*t5915;
  t5922 = -1.*t5103*t5275;
  t5923 = t5921 + t5922;
  t5925 = -1.*t5150*t5919;
  t5926 = t5142*t5923;
  t5927 = t5925 + t5926;
  t5929 = t5142*t5919;
  t5930 = t5150*t5923;
  t5931 = t5929 + t5930;
  t5933 = t5173*t5927;
  t5934 = t5168*t5931;
  t5935 = t5933 + t5934;
  t5937 = t5168*t5927;
  t5938 = -1.*t5173*t5931;
  t5939 = t5937 + t5938;
  t5906 = 0.049*t5058;
  t5907 = t5906 + t5078;
  t5909 = -0.09*t5058;
  t5910 = -0.049*t5077;
  t5911 = t5909 + t5910;
  t5951 = t5012*t4981*t4918;
  t5952 = t5814*t5005;
  t5953 = t5951 + t5952;
  t5955 = -1.*t5058*t5953;
  t5956 = -1.*t5713*t5077;
  t5957 = t5955 + t5956;
  t5959 = t5058*t5713;
  t5960 = -1.*t5953*t5077;
  t5961 = t5959 + t5960;
  t5963 = t5103*t5957;
  t5964 = t5096*t5961;
  t5965 = t5963 + t5964;
  t5967 = t5096*t5957;
  t5968 = -1.*t5103*t5961;
  t5969 = t5967 + t5968;
  t5971 = -1.*t5150*t5965;
  t5972 = t5142*t5969;
  t5973 = t5971 + t5972;
  t5975 = t5142*t5965;
  t5976 = t5150*t5969;
  t5977 = t5975 + t5976;
  t5979 = t5173*t5973;
  t5980 = t5168*t5977;
  t5981 = t5979 + t5980;
  t5983 = t5168*t5973;
  t5984 = -1.*t5173*t5977;
  t5985 = t5983 + t5984;
  t5997 = -1.*t4981*t4920;
  t5998 = t5861*t5005;
  t5999 = t5997 + t5998;
  t6001 = -1.*t5058*t5999;
  t6002 = -1.*t5609*t5077;
  t6003 = t6001 + t6002;
  t6005 = t5058*t5609;
  t6006 = -1.*t5999*t5077;
  t6007 = t6005 + t6006;
  t6009 = t5103*t6003;
  t6010 = t5096*t6007;
  t6011 = t6009 + t6010;
  t6013 = t5096*t6003;
  t6014 = -1.*t5103*t6007;
  t6015 = t6013 + t6014;
  t6017 = -1.*t5150*t6011;
  t6018 = t5142*t6015;
  t6019 = t6017 + t6018;
  t6021 = t5142*t6011;
  t6022 = t5150*t6015;
  t6023 = t6021 + t6022;
  t6025 = t5173*t6019;
  t6026 = t5168*t6023;
  t6027 = t6025 + t6026;
  t6029 = t5168*t6019;
  t6030 = -1.*t5173*t6023;
  t6031 = t6029 + t6030;
  t6050 = -1.*t5096*t5270;
  t6051 = t6050 + t5922;
  t6053 = -1.*t5150*t5281;
  t6054 = t5142*t6051;
  t6055 = t6053 + t6054;
  t6057 = t5150*t6051;
  t6058 = t5294 + t6057;
  t6060 = t5173*t6055;
  t6061 = t5168*t6058;
  t6062 = t6060 + t6061;
  t6064 = t5168*t6055;
  t6065 = -1.*t5173*t6058;
  t6066 = t6064 + t6065;
  t6042 = -0.21*t5096;
  t6043 = -0.049*t5103;
  t6044 = t6042 + t6043;
  t6046 = 0.049*t5096;
  t6047 = t6046 + t5106;
  t6077 = t5058*t5953;
  t6078 = t5713*t5077;
  t6079 = t6077 + t6078;
  t6082 = -1.*t5103*t6079;
  t6083 = t6082 + t5964;
  t6085 = -1.*t5096*t6079;
  t6086 = t6085 + t5968;
  t6088 = -1.*t5150*t6083;
  t6089 = t5142*t6086;
  t6090 = t6088 + t6089;
  t6092 = t5142*t6083;
  t6093 = t5150*t6086;
  t6094 = t6092 + t6093;
  t6096 = t5173*t6090;
  t6097 = t5168*t6094;
  t6098 = t6096 + t6097;
  t6100 = t5168*t6090;
  t6101 = -1.*t5173*t6094;
  t6102 = t6100 + t6101;
  t6113 = t5058*t5999;
  t6114 = t5609*t5077;
  t6115 = t6113 + t6114;
  t6118 = -1.*t5103*t6115;
  t6119 = t6118 + t6010;
  t6121 = -1.*t5096*t6115;
  t6122 = t6121 + t6014;
  t6124 = -1.*t5150*t6119;
  t6125 = t5142*t6122;
  t6126 = t6124 + t6125;
  t6128 = t5142*t6119;
  t6129 = t5150*t6122;
  t6130 = t6128 + t6129;
  t6132 = t5173*t6126;
  t6133 = t5168*t6130;
  t6134 = t6132 + t6133;
  t6136 = t5168*t6126;
  t6137 = -1.*t5173*t6130;
  t6138 = t6136 + t6137;
  t6156 = -1.*t5142*t5287;
  t6157 = t6053 + t6156;
  t6160 = t5173*t6157;
  t6161 = t6160 + t5299;
  t6163 = t5168*t6157;
  t6164 = -1.*t5173*t5296;
  t6165 = t6163 + t6164;
  t6149 = 0.0016*t5142;
  t6150 = t6149 + t5160;
  t6152 = -0.2707*t5142;
  t6153 = -0.0016*t5150;
  t6154 = t6152 + t6153;
  t6177 = t5096*t6079;
  t6178 = t5103*t5961;
  t6179 = t6177 + t6178;
  t6181 = -1.*t5142*t6179;
  t6182 = t6088 + t6181;
  t6184 = -1.*t5150*t6179;
  t6185 = t6092 + t6184;
  t6187 = t5173*t6182;
  t6188 = t5168*t6185;
  t6189 = t6187 + t6188;
  t6191 = t5168*t6182;
  t6192 = -1.*t5173*t6185;
  t6193 = t6191 + t6192;
  t6205 = t5096*t6115;
  t6206 = t5103*t6007;
  t6207 = t6205 + t6206;
  t6209 = -1.*t5142*t6207;
  t6210 = t6124 + t6209;
  t6212 = -1.*t5150*t6207;
  t6213 = t6128 + t6212;
  t6215 = t5173*t6210;
  t6216 = t5168*t6213;
  t6217 = t6215 + t6216;
  t6219 = t5168*t6210;
  t6220 = -1.*t5173*t6213;
  t6221 = t6219 + t6220;
  t6240 = -1.*t5168*t5292;
  t6241 = t6240 + t6164;
  t5310 = t5196*t5300;
  t6232 = -0.7055*t5168;
  t6233 = 0.0184*t5173;
  t6234 = t6232 + t6233;
  t6236 = -0.0184*t5168;
  t6237 = t6236 + t5174;
  t6251 = t5150*t6083;
  t6252 = t5142*t6179;
  t6253 = t6251 + t6252;
  t6256 = -1.*t5173*t6253;
  t6257 = t6256 + t6188;
  t6259 = -1.*t5168*t6253;
  t6260 = t6259 + t6192;
  t6271 = t5150*t6119;
  t6272 = t5142*t6207;
  t6273 = t6271 + t6272;
  t6276 = -1.*t5173*t6273;
  t6277 = t6276 + t6216;
  t6279 = -1.*t5168*t6273;
  t6280 = t6279 + t6220;
  t6243 = -1.*t5204*t5300;
  t5311 = -1.*t5204*t5304;
  t5312 = t5310 + t5311;
  t6291 = 0.0216*t5196;
  t6292 = t6291 + t5218;
  t6294 = -1.1135*t5196;
  t6295 = -0.0216*t5204;
  t6296 = t6294 + t6295;
  t6262 = -1.*t5204*t6257;
  t6304 = t5168*t6253;
  t6305 = t5173*t6185;
  t6306 = t6304 + t6305;
  t6266 = t5196*t6257;
  t6282 = -1.*t5204*t6277;
  t6316 = t5168*t6273;
  t6317 = t5173*t6213;
  t6318 = t6316 + t6317;
  t6286 = t5196*t6277;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t4903*t4944 + t4953*t4973 + t4980*t5009 + 0.1305*(t4980*t4981 + t4918*t5005*t5012) - 1.*t4918*t5012*t5032 + t5055*t5081 + t5085*t5088 + t5108*t5113 + t5130*t5139 + t5153*t5157 + t5161*t5165 + t5175*t5180 + t5186*t5192 + t5207*t5213 + t5219*t5224 - 0.0216*(t5204*t5213 + t5196*t5224) - 1.1135*(t5196*t5213 - 1.*t5204*t5224);
  p_output1[10]=t4905*t5012*t5032 + t4903*t5239 + t4973*t5243 + t5009*t5247 + 0.1305*t5254 + t5081*t5259 + t5088*t5265 + t5108*t5270 + t5130*t5275 + t5153*t5281 + t5161*t5287 + t5175*t5292 + t5186*t5296 + t5207*t5300 + t5219*t5304 - 0.0216*(t5204*t5300 + t5196*t5304) - 1.1135*t5312;
  p_output1[11]=0;
  p_output1[12]=t4903*t4905*t4921*t5012 + t4905*t4906*t4973*t5012 - 1.*t4905*t4920*t5032 + t5009*t5319 + 0.1305*(t4905*t4920*t5005 + t4981*t5319) + t5081*t5328 + t5088*t5332 + t5108*t5336 + t5130*t5340 + t5153*t5344 + t5161*t5348 + t5175*t5352 + t5186*t5356 + t5207*t5360 + t5219*t5364 - 0.0216*(t5204*t5360 + t5196*t5364) - 1.1135*(t5196*t5360 - 1.*t5204*t5364);
  p_output1[13]=t4903*t4918*t4921*t5012 + t4906*t4918*t4973*t5012 - 1.*t4918*t4920*t5032 + t5009*t5379 + 0.1305*(t4918*t4920*t5005 + t4981*t5379) + t5081*t5388 + t5088*t5392 + t5108*t5396 + t5130*t5400 + t5153*t5404 + t5161*t5408 + t5175*t5412 + t5186*t5416 + t5207*t5420 + t5219*t5424 - 0.0216*(t5204*t5420 + t5196*t5424) - 1.1135*(t5196*t5420 - 1.*t5204*t5424);
  p_output1[14]=-1.*t4903*t4920*t4921 - 1.*t4906*t4920*t4973 - 1.*t5012*t5032 + t5009*t5439 + 0.1305*(t5005*t5012 + t4981*t5439) + t5081*t5448 + t5088*t5452 + t5108*t5456 + t5130*t5460 + t5153*t5464 + t5161*t5468 + t5175*t5472 + t5186*t5476 + t5207*t5480 + t5219*t5484 - 0.0216*(t5204*t5480 + t5196*t5484) - 1.1135*(t5196*t5480 - 1.*t5204*t5484);
  p_output1[15]=t4903*t5243 + t4973*t5498 + 0.1305*t4981*t5501 + t5009*t5501 + t5005*t5081*t5501 + t5088*t5507 + t5108*t5511 + t5130*t5515 + t5153*t5519 + t5161*t5523 + t5175*t5527 + t5186*t5531 + t5207*t5535 + t5219*t5539 - 0.0216*(t5204*t5535 + t5196*t5539) - 1.1135*(t5196*t5535 - 1.*t5204*t5539);
  p_output1[16]=t4944*t4973 + t4903*t5552 + 0.1305*t4981*t5557 + t5009*t5557 + t5005*t5081*t5557 + t5088*t5562 + t5108*t5566 + t5130*t5570 + t5153*t5574 + t5161*t5578 + t5175*t5582 + t5186*t5586 + t5207*t5590 + t5219*t5594 - 0.0216*(t5204*t5590 + t5196*t5594) - 1.1135*(t5196*t5590 - 1.*t5204*t5594);
  p_output1[17]=t4903*t4906*t5012 - 1.*t4921*t4973*t5012 + t5610 + t5611 + t5612 + t5616 + t5620 + t5624 + t5628 + t5632 + t5636 + t5640 + t5644 + t5648 + t5652 + t5656;
  p_output1[18]=0.135*t4954*t5239 - 0.135*t4862*t5243 + 0.1305*t4981*t5265 + t5009*t5265 + t5005*t5081*t5265 + t5088*t5664 + t5108*t5668 + t5130*t5672 + t5153*t5676 + t5161*t5680 + t5175*t5684 + t5186*t5688 + t5207*t5692 + t5219*t5696 - 0.0216*(t5204*t5692 + t5196*t5696) - 1.1135*(t5196*t5692 - 1.*t5204*t5696);
  p_output1[19]=-0.135*t4862*t5552 + 0.135*t4954*t5710 + 0.1305*t4981*t5713 + t5009*t5713 + t5005*t5081*t5713 + t5088*t5718 + t5108*t5722 + t5130*t5726 + t5153*t5730 + t5161*t5734 + t5175*t5738 + t5186*t5742 + t5207*t5746 + t5219*t5750 - 0.0216*(t5204*t5746 + t5196*t5750) - 1.1135*(t5196*t5746 - 1.*t5204*t5750);
  p_output1[20]=-0.135*t4862*t4906*t5012 + 0.135*t4921*t4954*t5012 + t5610 + t5611 + t5612 + t5616 + t5620 + t5624 + t5628 + t5632 + t5636 + t5640 + t5644 + t5648 + t5652 + t5656;
  p_output1[21]=0.1305*(-1.*t4905*t4981*t5012 - 1.*t5005*t5247) + t5081*t5254 + t5058*t5108*t5254 - 1.*t5077*t5130*t5254 + t4905*t5012*t5766 + t5247*t5769 + t5153*t5780 + t5161*t5784 + t5175*t5788 + t5186*t5792 + t5207*t5796 + t5219*t5800 - 0.0216*(t5204*t5796 + t5196*t5800) - 1.1135*(t5196*t5796 - 1.*t5204*t5800);
  p_output1[22]=t4918*t5012*t5766 + t5769*t5814 + 0.1305*(t5048 - 1.*t5005*t5814) + t5081*t5818 + t5058*t5108*t5818 - 1.*t5077*t5130*t5818 + t5153*t5827 + t5161*t5831 + t5175*t5835 + t5186*t5839 + t5207*t5843 + t5219*t5847 - 0.0216*(t5204*t5843 + t5196*t5847) - 1.1135*(t5196*t5843 - 1.*t5204*t5847);
  p_output1[23]=-1.*t4920*t5766 + t5769*t5861 + 0.1305*(t4920*t4981 - 1.*t5005*t5861) + t5081*t5865 + t5058*t5108*t5865 - 1.*t5077*t5130*t5865 + t5153*t5875 + t5161*t5879 + t5175*t5883 + t5186*t5887 + t5207*t5891 + t5219*t5895 - 0.0216*(t5204*t5891 + t5196*t5895) - 1.1135*(t5196*t5891 - 1.*t5204*t5895);
  p_output1[24]=t5108*t5275 + t5265*t5907 + t5259*t5911 + t5130*t5915 + t5161*t5919 + t5153*t5923 + t5186*t5927 + t5175*t5931 + t5219*t5935 + t5207*t5939 - 1.1135*(-1.*t5204*t5935 + t5196*t5939) - 0.0216*(t5196*t5935 + t5204*t5939);
  p_output1[25]=t5713*t5907 + t5911*t5953 + t5130*t5957 + t5108*t5961 + t5161*t5965 + t5153*t5969 + t5186*t5973 + t5175*t5977 + t5219*t5981 + t5207*t5985 - 1.1135*(-1.*t5204*t5981 + t5196*t5985) - 0.0216*(t5196*t5981 + t5204*t5985);
  p_output1[26]=t5609*t5907 + t5911*t5999 + t5130*t6003 + t5108*t6007 + t5161*t6011 + t5153*t6015 + t5186*t6019 + t5175*t6023 + t5219*t6027 + t5207*t6031 - 1.1135*(-1.*t5204*t6027 + t5196*t6031) - 0.0216*(t5196*t6027 + t5204*t6031);
  p_output1[27]=t5161*t5281 + t5270*t6044 + t5275*t6047 + t5153*t6051 + t5186*t6055 + t5175*t6058 + t5219*t6062 + t5207*t6066 - 1.1135*(-1.*t5204*t6062 + t5196*t6066) - 0.0216*(t5196*t6062 + t5204*t6066);
  p_output1[28]=t5961*t6047 + t6044*t6079 + t5161*t6083 + t5153*t6086 + t5186*t6090 + t5175*t6094 + t5219*t6098 + t5207*t6102 - 1.1135*(-1.*t5204*t6098 + t5196*t6102) - 0.0216*(t5196*t6098 + t5204*t6102);
  p_output1[29]=t6007*t6047 + t6044*t6115 + t5161*t6119 + t5153*t6122 + t5186*t6126 + t5175*t6130 + t5219*t6134 + t5207*t6138 - 1.1135*(-1.*t5204*t6134 + t5196*t6138) - 0.0216*(t5196*t6134 + t5204*t6138);
  p_output1[30]=t5175*t5296 + t5281*t6150 + t5287*t6154 + t5186*t6157 + t5219*t6161 + t5207*t6165 - 1.1135*(-1.*t5204*t6161 + t5196*t6165) - 0.0216*(t5196*t6161 + t5204*t6165);
  p_output1[31]=t6083*t6150 + t6154*t6179 + t5186*t6182 + t5175*t6185 + t5219*t6189 + t5207*t6193 - 1.1135*(-1.*t5204*t6189 + t5196*t6193) - 0.0216*(t5196*t6189 + t5204*t6193);
  p_output1[32]=t6119*t6150 + t6154*t6207 + t5186*t6210 + t5175*t6213 + t5219*t6217 + t5207*t6221 - 1.1135*(-1.*t5204*t6217 + t5196*t6221) - 0.0216*(t5196*t6217 + t5204*t6221);
  p_output1[33]=t5219*t5300 + t5292*t6234 + t5296*t6237 + t5207*t6241 - 0.0216*(t5310 + t5204*t6241) - 1.1135*(t5196*t6241 + t6243);
  p_output1[34]=t6185*t6237 + t6234*t6253 + t5219*t6257 + t5207*t6260 - 1.1135*(t5196*t6260 + t6262) - 0.0216*(t5204*t6260 + t6266);
  p_output1[35]=t6213*t6237 + t6234*t6273 + t5219*t6277 + t5207*t6280 - 1.1135*(t5196*t6280 + t6282) - 0.0216*(t5204*t6280 + t6286);
  p_output1[36]=-0.0216*t5312 - 1.1135*(-1.*t5196*t5304 + t6243) + t5300*t6292 + t5304*t6296;
  p_output1[37]=t6257*t6292 + t6296*t6306 - 1.1135*(t6262 - 1.*t5196*t6306) - 0.0216*(t6266 - 1.*t5204*t6306);
  p_output1[38]=t6277*t6292 + t6296*t6318 - 1.1135*(t6282 - 1.*t5196*t6318) - 0.0216*(t6286 - 1.*t5204*t6318);
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "J_toe_joint_left_mex.hh"

namespace SymExpression
{

void J_toe_joint_left_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
