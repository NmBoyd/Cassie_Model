/*
 * Automatically Generated from Mathematica.
 * Mon 2 Jul 2018 15:37:08 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t255;
  double t371;
  double t584;
  double t338;
  double t598;
  double t232;
  double t920;
  double t931;
  double t948;
  double t530;
  double t708;
  double t755;
  double t991;
  double t211;
  double t1144;
  double t1212;
  double t1305;
  double t908;
  double t1032;
  double t1050;
  double t1366;
  double t101;
  double t2084;
  double t2169;
  double t2253;
  double t1051;
  double t1436;
  double t1516;
  double t2262;
  double t3052;
  double t2956;
  double t2999;
  double t3153;
  double t3166;
  double t3208;
  double t3004;
  double t3068;
  double t3119;
  double t3661;
  double t3678;
  double t3716;
  double t3151;
  double t3271;
  double t3391;
  double t4325;
  double t4368;
  double t4552;
  double t3432;
  double t3802;
  double t3814;
  double t5201;
  double t5242;
  double t5301;
  double t4138;
  double t4616;
  double t4882;
  double t2029;
  double t2353;
  double t2379;
  double t2741;
  double t2775;
  double t2797;
  double t5182;
  double t5303;
  double t5313;
  double t5348;
  double t5485;
  double t5823;
  double t6080;
  double t6191;
  double t6229;
  double t6038;
  double t6054;
  double t6059;
  double t6728;
  double t6878;
  double t6898;
  double t6418;
  double t6421;
  double t6519;
  double t7125;
  double t7132;
  double t7143;
  double t6675;
  double t7048;
  double t7093;
  double t7179;
  double t7180;
  double t7182;
  double t7114;
  double t7151;
  double t7155;
  double t7212;
  double t7215;
  double t7217;
  double t7167;
  double t7183;
  double t7191;
  double t5326;
  double t5880;
  double t5944;
  double t2401;
  double t2854;
  double t2947;
  double t7210;
  double t7223;
  double t7224;
  double t7245;
  double t7247;
  double t7265;
  double t7233;
  double t7267;
  double t7273;
  double t7341;
  double t7349;
  double t7351;
  double t95;
  double t7389;
  double t7420;
  double t6375;
  double t7291;
  double t7320;
  double t7321;
  double t7338;
  double t7356;
  double t7379;
  double t7387;
  double t7426;
  double t7434;
  double t7435;
  double t7450;
  double t9;
  double t7472;
  double t7521;
  double t7498;
  double t7506;
  double t7516;
  double t7665;
  double t7651;
  double t7657;
  double t7668;
  double t7706;
  double t7664;
  double t7681;
  double t7686;
  double t7650;
  double t7709;
  double t7710;
  double t7711;
  double t7738;
  double t7699;
  double t7726;
  double t7735;
  double t7647;
  double t7746;
  double t7748;
  double t7749;
  double t7761;
  double t7736;
  double t7755;
  double t7758;
  double t7646;
  double t7763;
  double t7765;
  double t7766;
  double t6011;
  double t6261;
  double t6314;
  double t7782;
  double t7783;
  double t7784;
  double t7791;
  double t7792;
  double t7798;
  double t7790;
  double t7799;
  double t7802;
  double t7809;
  double t7810;
  double t7817;
  double t7804;
  double t7818;
  double t7819;
  double t7826;
  double t7827;
  double t7828;
  double t7820;
  double t7831;
  double t7832;
  double t7834;
  double t7835;
  double t7837;
  double t7470;
  double t7862;
  double t7867;
  double t7875;
  double t7886;
  double t7889;
  double t7890;
  double t7882;
  double t7892;
  double t7894;
  double t7899;
  double t7901;
  double t7907;
  double t7898;
  double t7909;
  double t7912;
  double t7914;
  double t7919;
  double t7921;
  double t7913;
  double t7922;
  double t7923;
  double t7927;
  double t7932;
  double t7933;
  double t7583;
  double t7586;
  double t7590;
  double t7759;
  double t7767;
  double t7768;
  double t7769;
  double t7770;
  double t7774;
  double t7776;
  double t7777;
  double t7778;
  double t7533;
  double t7536;
  double t7541;
  double t7833;
  double t7843;
  double t7847;
  double t7848;
  double t7850;
  double t7851;
  double t7856;
  double t7857;
  double t7860;
  double t7550;
  double t7551;
  double t7559;
  double t7924;
  double t7934;
  double t7939;
  double t7941;
  double t7944;
  double t7945;
  double t7948;
  double t7949;
  double t7951;
  double t7628;
  double t7630;
  double t7632;
  double t7604;
  double t7611;
  double t7612;
  double t7618;
  double t7986;
  double t7989;
  double t7991;
  double t7995;
  double t8000;
  double t8001;
  double t8009;
  double t8014;
  double t8016;
  double t8067;
  double t8073;
  double t8090;
  double t8091;
  double t8109;
  double t8111;
  double t8125;
  double t8126;
  double t8137;
  double t8140;
  double t8051;
  double t8053;
  double t8074;
  double t8079;
  double t8080;
  double t8094;
  double t8095;
  double t8099;
  double t8104;
  double t8106;
  double t8107;
  double t8113;
  double t8115;
  double t8119;
  double t8121;
  double t8122;
  double t8123;
  double t8127;
  double t8129;
  double t8130;
  double t8133;
  double t8134;
  double t8135;
  double t8141;
  double t8143;
  double t8144;
  double t8146;
  double t8147;
  double t8148;
  double t8047;
  double t8048;
  double t8049;
  double t8050;
  double t8056;
  double t8058;
  double t8061;
  double t8063;
  double t8081;
  double t8082;
  double t8087;
  double t8088;
  double t8089;
  double t8103;
  double t8108;
  double t8120;
  double t8124;
  double t8131;
  double t8136;
  double t8145;
  double t8149;
  double t8151;
  double t8152;
  double t8153;
  double t8155;
  double t8156;
  double t8157;
  double t8158;
  double t8159;
  double t8160;
  double t8162;
  double t8163;
  double t8164;
  double t8165;
  double t8166;
  double t8167;
  double t8169;
  double t8170;
  double t8220;
  double t8221;
  double t8251;
  double t8252;
  double t8271;
  double t8272;
  double t8288;
  double t8289;
  double t8216;
  double t8217;
  double t8231;
  double t8232;
  double t8235;
  double t8237;
  double t8239;
  double t8223;
  double t8225;
  double t8226;
  double t8241;
  double t8243;
  double t8246;
  double t8253;
  double t8255;
  double t8258;
  double t8261;
  double t8263;
  double t8265;
  double t8273;
  double t8274;
  double t8276;
  double t8280;
  double t8281;
  double t8283;
  double t8293;
  double t8295;
  double t8298;
  double t8303;
  double t8304;
  double t8305;
  double t8324;
  double t8325;
  double t8327;
  double t8332;
  double t8336;
  double t8337;
  double t8185;
  double t8187;
  double t8191;
  double t8192;
  double t8194;
  double t8195;
  double t8199;
  double t8200;
  double t8201;
  double t8202;
  double t8203;
  double t8206;
  double t8208;
  double t8209;
  double t8211;
  double t8212;
  double t8154;
  double t8172;
  double t8175;
  double t8219;
  double t8228;
  double t8229;
  double t8240;
  double t8250;
  double t8260;
  double t8268;
  double t8278;
  double t8287;
  double t8301;
  double t8306;
  double t8308;
  double t8310;
  double t8312;
  double t8318;
  double t8320;
  double t8321;
  double t8323;
  double t8328;
  double t8330;
  double t8339;
  double t8340;
  double t8341;
  double t8346;
  double t8347;
  double t8348;
  double t8350;
  double t8352;
  double t8353;
  double t8356;
  double t8358;
  double t8360;
  double t8364;
  double t8365;
  double t8366;
  double t8367;
  double t8368;
  double t8369;
  double t8371;
  double t8373;
  double t8376;
  double t8378;
  double t8379;
  double t8381;
  double t8382;
  double t8386;
  double t8387;
  double t8390;
  double t8397;
  double t8398;
  double t8399;
  double t8177;
  double t8179;
  double t8181;
  t255 = Cos(var1[8]);
  t371 = Cos(var1[10]);
  t584 = Sin(var1[9]);
  t338 = Cos(var1[9]);
  t598 = Sin(var1[10]);
  t232 = Cos(var1[11]);
  t920 = -1.*t255*t371*t584;
  t931 = -1.*t255*t338*t598;
  t948 = t920 + t931;
  t530 = t255*t338*t371;
  t708 = -1.*t255*t584*t598;
  t755 = t530 + t708;
  t991 = Sin(var1[11]);
  t211 = Cos(var1[12]);
  t1144 = t232*t948;
  t1212 = -1.*t755*t991;
  t1305 = t1144 + t1212;
  t908 = t232*t755;
  t1032 = t948*t991;
  t1050 = t908 + t1032;
  t1366 = Sin(var1[12]);
  t101 = Cos(var1[13]);
  t2084 = t211*t1305;
  t2169 = -1.*t1050*t1366;
  t2253 = t2084 + t2169;
  t1051 = t211*t1050;
  t1436 = t1305*t1366;
  t1516 = t1051 + t1436;
  t2262 = Sin(var1[13]);
  t3052 = Cos(var1[7]);
  t2956 = Sin(var1[7]);
  t2999 = Sin(var1[8]);
  t3153 = t3052*t338;
  t3166 = -1.*t2956*t2999*t584;
  t3208 = t3153 + t3166;
  t3004 = t338*t2956*t2999;
  t3068 = t3052*t584;
  t3119 = t3004 + t3068;
  t3661 = t371*t3208;
  t3678 = -1.*t3119*t598;
  t3716 = t3661 + t3678;
  t3151 = t371*t3119;
  t3271 = t3208*t598;
  t3391 = t3151 + t3271;
  t4325 = t232*t3716;
  t4368 = -1.*t3391*t991;
  t4552 = t4325 + t4368;
  t3432 = t232*t3391;
  t3802 = t3716*t991;
  t3814 = t3432 + t3802;
  t5201 = t211*t4552;
  t5242 = -1.*t3814*t1366;
  t5301 = t5201 + t5242;
  t4138 = t211*t3814;
  t4616 = t4552*t1366;
  t4882 = t4138 + t4616;
  t2029 = t101*t1516;
  t2353 = t2253*t2262;
  t2379 = t2029 + t2353;
  t2741 = t101*t2253;
  t2775 = -1.*t1516*t2262;
  t2797 = t2741 + t2775;
  t5182 = t101*t4882;
  t5303 = t5301*t2262;
  t5313 = t5182 + t5303;
  t5348 = t101*t5301;
  t5485 = -1.*t4882*t2262;
  t5823 = t5348 + t5485;
  t6080 = 0.642788*t5313;
  t6191 = 0.766044*t5823;
  t6229 = t6080 + t6191;
  t6038 = -0.766044*t2379;
  t6054 = 0.642788*t2797;
  t6059 = t6038 + t6054;
  t6728 = -1.*t338*t2956;
  t6878 = -1.*t3052*t2999*t584;
  t6898 = t6728 + t6878;
  t6418 = t3052*t338*t2999;
  t6421 = -1.*t2956*t584;
  t6519 = t6418 + t6421;
  t7125 = t371*t6898;
  t7132 = -1.*t6519*t598;
  t7143 = t7125 + t7132;
  t6675 = t371*t6519;
  t7048 = t6898*t598;
  t7093 = t6675 + t7048;
  t7179 = t232*t7143;
  t7180 = -1.*t7093*t991;
  t7182 = t7179 + t7180;
  t7114 = t232*t7093;
  t7151 = t7143*t991;
  t7155 = t7114 + t7151;
  t7212 = t211*t7182;
  t7215 = -1.*t7155*t1366;
  t7217 = t7212 + t7215;
  t7167 = t211*t7155;
  t7183 = t7182*t1366;
  t7191 = t7167 + t7183;
  t5326 = -0.766044*t5313;
  t5880 = 0.642788*t5823;
  t5944 = t5326 + t5880;
  t2401 = 0.642788*t2379;
  t2854 = 0.766044*t2797;
  t2947 = t2401 + t2854;
  t7210 = t101*t7191;
  t7223 = t7217*t2262;
  t7224 = t7210 + t7223;
  t7245 = t101*t7217;
  t7247 = -1.*t7191*t2262;
  t7265 = t7245 + t7247;
  t7233 = -0.766044*t7224;
  t7267 = 0.642788*t7265;
  t7273 = t7233 + t7267;
  t7341 = 0.642788*t7224;
  t7349 = 0.766044*t7265;
  t7351 = t7341 + t7349;
  t95 = Cos(var1[1]);
  t7389 = t2947*t7273;
  t7420 = -1.*t6059*t7351;
  t6375 = t3052*t255*t6059;
  t7291 = t2999*t7273;
  t7320 = t6375 + t7291;
  t7321 = -1.*t6229*t7320;
  t7338 = t3052*t255*t2947;
  t7356 = t2999*t7351;
  t7379 = t7338 + t7356;
  t7387 = t5944*t7379;
  t7426 = t7389 + t7420;
  t7434 = -1.*t255*t2956*t7426;
  t7435 = 0. + t7321 + t7387 + t7434;
  t7450 = 1/t7435;
  t9 = Cos(var1[0]);
  t7472 = Sin(var1[0]);
  t7521 = Sin(var1[1]);
  t7498 = t7351*t5944;
  t7506 = -1.*t7273*t6229;
  t7516 = 0. + t7498 + t7506;
  t7665 = Cos(var1[3]);
  t7651 = Cos(var1[2]);
  t7657 = Sin(var1[3]);
  t7668 = Sin(var1[2]);
  t7706 = Cos(var1[4]);
  t7664 = -1.*t95*t7651*t7657;
  t7681 = -1.*t7665*t95*t7668;
  t7686 = t7664 + t7681;
  t7650 = Sin(var1[4]);
  t7709 = t7665*t95*t7651;
  t7710 = -1.*t95*t7657*t7668;
  t7711 = t7709 + t7710;
  t7738 = Cos(var1[5]);
  t7699 = t7650*t7686;
  t7726 = t7706*t7711;
  t7735 = t7699 + t7726;
  t7647 = Sin(var1[5]);
  t7746 = t7706*t7686;
  t7748 = -1.*t7650*t7711;
  t7749 = t7746 + t7748;
  t7761 = Cos(var1[6]);
  t7736 = -1.*t7647*t7735;
  t7755 = t7738*t7749;
  t7758 = t7736 + t7755;
  t7646 = Sin(var1[6]);
  t7763 = t7738*t7735;
  t7765 = t7647*t7749;
  t7766 = t7763 + t7765;
  t6011 = -1.*t2947*t5944;
  t6261 = t6059*t6229;
  t6314 = 0. + t6011 + t6261;
  t7782 = t9*t7651*t7521;
  t7783 = -1.*t7472*t7668;
  t7784 = t7782 + t7783;
  t7791 = -1.*t7651*t7472;
  t7792 = -1.*t9*t7521*t7668;
  t7798 = t7791 + t7792;
  t7790 = -1.*t7657*t7784;
  t7799 = t7665*t7798;
  t7802 = t7790 + t7799;
  t7809 = t7665*t7784;
  t7810 = t7657*t7798;
  t7817 = t7809 + t7810;
  t7804 = t7650*t7802;
  t7818 = t7706*t7817;
  t7819 = t7804 + t7818;
  t7826 = t7706*t7802;
  t7827 = -1.*t7650*t7817;
  t7828 = t7826 + t7827;
  t7820 = -1.*t7647*t7819;
  t7831 = t7738*t7828;
  t7832 = t7820 + t7831;
  t7834 = t7738*t7819;
  t7835 = t7647*t7828;
  t7837 = t7834 + t7835;
  t7470 = 0. + t7389 + t7420;
  t7862 = t7651*t7472*t7521;
  t7867 = t9*t7668;
  t7875 = t7862 + t7867;
  t7886 = t9*t7651;
  t7889 = -1.*t7472*t7521*t7668;
  t7890 = t7886 + t7889;
  t7882 = -1.*t7657*t7875;
  t7892 = t7665*t7890;
  t7894 = t7882 + t7892;
  t7899 = t7665*t7875;
  t7901 = t7657*t7890;
  t7907 = t7899 + t7901;
  t7898 = t7650*t7894;
  t7909 = t7706*t7907;
  t7912 = t7898 + t7909;
  t7914 = t7706*t7894;
  t7919 = -1.*t7650*t7907;
  t7921 = t7914 + t7919;
  t7913 = -1.*t7647*t7912;
  t7922 = t7738*t7921;
  t7923 = t7913 + t7922;
  t7927 = t7738*t7912;
  t7932 = t7647*t7921;
  t7933 = t7927 + t7932;
  t7583 = -1.*t255*t2956*t7273;
  t7586 = t3052*t255*t5944;
  t7590 = 0. + t7583 + t7586;
  t7759 = t7646*t7758;
  t7767 = t7761*t7766;
  t7768 = t7759 + t7767;
  t7769 = 0.642788*t7768;
  t7770 = t7761*t7758;
  t7774 = -1.*t7646*t7766;
  t7776 = t7770 + t7774;
  t7777 = 0.766044*t7776;
  t7778 = t7769 + t7777;
  t7533 = t255*t2956*t6059;
  t7536 = t2999*t5944;
  t7541 = 0. + t7533 + t7536;
  t7833 = t7646*t7832;
  t7843 = t7761*t7837;
  t7847 = t7833 + t7843;
  t7848 = 0.642788*t7847;
  t7850 = t7761*t7832;
  t7851 = -1.*t7646*t7837;
  t7856 = t7850 + t7851;
  t7857 = 0.766044*t7856;
  t7860 = t7848 + t7857;
  t7550 = -1.*t3052*t255*t6059;
  t7551 = -1.*t2999*t7273;
  t7559 = 0. + t7550 + t7551;
  t7924 = t7646*t7923;
  t7934 = t7761*t7933;
  t7939 = t7924 + t7934;
  t7941 = 0.642788*t7939;
  t7944 = t7761*t7923;
  t7945 = -1.*t7646*t7933;
  t7948 = t7944 + t7945;
  t7949 = 0.766044*t7948;
  t7951 = t7941 + t7949;
  t7628 = t255*t2956*t7351;
  t7630 = -1.*t3052*t255*t6229;
  t7632 = 0. + t7628 + t7630;
  t7604 = -1.*t255*t2956*t2947;
  t7611 = -1.*t2999*t6229;
  t7612 = 0. + t7604 + t7611;
  t7618 = 0. + t7338 + t7356;
  t7986 = -0.766044*t7768;
  t7989 = 0.642788*t7776;
  t7991 = t7986 + t7989;
  t7995 = -0.766044*t7847;
  t8000 = 0.642788*t7856;
  t8001 = t7995 + t8000;
  t8009 = -0.766044*t7939;
  t8014 = 0.642788*t7948;
  t8016 = t8009 + t8014;
  t8067 = -1.*t338;
  t8073 = 1. + t8067;
  t8090 = -1.*t371;
  t8091 = 1. + t8090;
  t8109 = -1.*t232;
  t8111 = 1. + t8109;
  t8125 = -1.*t211;
  t8126 = 1. + t8125;
  t8137 = -1.*t101;
  t8140 = 1. + t8137;
  t8051 = -1.*t255;
  t8053 = 1. + t8051;
  t8074 = -0.049*t8073;
  t8079 = -0.09*t584;
  t8080 = 0. + t8074 + t8079;
  t8094 = -0.049*t8091;
  t8095 = -0.21*t598;
  t8099 = 0. + t8094 + t8095;
  t8104 = -0.21*t8091;
  t8106 = 0.049*t598;
  t8107 = 0. + t8104 + t8106;
  t8113 = -0.0016*t8111;
  t8115 = -0.2707*t991;
  t8119 = 0. + t8113 + t8115;
  t8121 = -0.2707*t8111;
  t8122 = 0.0016*t991;
  t8123 = 0. + t8121 + t8122;
  t8127 = 0.0184*t8126;
  t8129 = -0.7055*t1366;
  t8130 = 0. + t8127 + t8129;
  t8133 = -0.7055*t8126;
  t8134 = -0.0184*t1366;
  t8135 = 0. + t8133 + t8134;
  t8141 = -0.0216*t8140;
  t8143 = -1.1135*t2262;
  t8144 = 0. + t8141 + t8143;
  t8146 = -1.1135*t8140;
  t8147 = 0.0216*t2262;
  t8148 = 0. + t8146 + t8147;
  t8047 = -1.*t3052;
  t8048 = 1. + t8047;
  t8049 = -0.135*t8048;
  t8050 = -0.1305*t3052*t255;
  t8056 = -0.135*t8053;
  t8058 = 0.049*t2999;
  t8061 = 0. + t8056 + t8058;
  t8063 = t3052*t8061;
  t8081 = t3052*t2999*t8080;
  t8082 = -0.09*t8073;
  t8087 = 0.049*t584;
  t8088 = 0. + t8082 + t8087;
  t8089 = -1.*t2956*t8088;
  t8103 = t6519*t8099;
  t8108 = t6898*t8107;
  t8120 = t7093*t8119;
  t8124 = t7143*t8123;
  t8131 = t7155*t8130;
  t8136 = t7182*t8135;
  t8145 = t7191*t8144;
  t8149 = t7217*t8148;
  t8151 = 0.0306*t7224;
  t8152 = -1.1312*t7265;
  t8153 = 0. + t8049 + t8050 + t8063 + t8081 + t8089 + t8103 + t8108 + t8120 + t8124 + t8131 + t8136 + t8145 + t8149 + t8151 + t8152;
  t8155 = -0.049*t8053;
  t8156 = -0.004500000000000004*t2999;
  t8157 = t255*t8080;
  t8158 = t255*t338*t8099;
  t8159 = -1.*t255*t584*t8107;
  t8160 = t755*t8119;
  t8162 = t948*t8123;
  t8163 = t1050*t8130;
  t8164 = t1305*t8135;
  t8165 = t1516*t8144;
  t8166 = t2253*t8148;
  t8167 = 0.0306*t2379;
  t8169 = -1.1312*t2797;
  t8170 = 0. + t8155 + t8156 + t8157 + t8158 + t8159 + t8160 + t8162 + t8163 + t8164 + t8165 + t8166 + t8167 + t8169;
  t8220 = -1.*t7665;
  t8221 = 1. + t8220;
  t8251 = -1.*t7706;
  t8252 = 1. + t8251;
  t8271 = -1.*t7738;
  t8272 = 1. + t8271;
  t8288 = -1.*t7761;
  t8289 = 1. + t8288;
  t8216 = -1.*t95;
  t8217 = 1. + t8216;
  t8231 = -1.*t7651;
  t8232 = 1. + t8231;
  t8235 = -0.049*t8232;
  t8237 = -0.09*t7668;
  t8239 = 0. + t8235 + t8237;
  t8223 = -0.049*t8221;
  t8225 = -0.21*t7657;
  t8226 = 0. + t8223 + t8225;
  t8241 = -0.21*t8221;
  t8243 = 0.049*t7657;
  t8246 = 0. + t8241 + t8243;
  t8253 = -0.2707*t8252;
  t8255 = 0.0016*t7650;
  t8258 = 0. + t8253 + t8255;
  t8261 = -0.0016*t8252;
  t8263 = -0.2707*t7650;
  t8265 = 0. + t8261 + t8263;
  t8273 = 0.0184*t8272;
  t8274 = -0.7055*t7647;
  t8276 = 0. + t8273 + t8274;
  t8280 = -0.7055*t8272;
  t8281 = -0.0184*t7647;
  t8283 = 0. + t8280 + t8281;
  t8293 = -1.1135*t8289;
  t8295 = 0.0216*t7646;
  t8298 = 0. + t8293 + t8295;
  t8303 = -0.0216*t8289;
  t8304 = -1.1135*t7646;
  t8305 = 0. + t8303 + t8304;
  t8324 = 0.135*t8217;
  t8325 = 0.049*t7521;
  t8327 = 0. + t8324 + t8325;
  t8332 = -0.09*t8232;
  t8336 = 0.049*t7668;
  t8337 = 0. + t8332 + t8336;
  t8185 = 0.135*t2956;
  t8187 = -0.1305*t255*t2956;
  t8191 = t2956*t8061;
  t8192 = t2956*t2999*t8080;
  t8194 = t3052*t8088;
  t8195 = t3119*t8099;
  t8199 = t3208*t8107;
  t8200 = t3391*t8119;
  t8201 = t3716*t8123;
  t8202 = t3814*t8130;
  t8203 = t4552*t8135;
  t8206 = t4882*t8144;
  t8208 = t5301*t8148;
  t8209 = 0.0306*t5313;
  t8211 = -1.1312*t5823;
  t8212 = 0. + t8185 + t8187 + t8191 + t8192 + t8194 + t8195 + t8199 + t8200 + t8201 + t8202 + t8203 + t8206 + t8208 + t8209 + t8211;
  t8154 = t6059*t8153;
  t8172 = -1.*t8170*t7273;
  t8175 = t8154 + t8172;
  t8219 = -0.049*t8217;
  t8228 = t95*t7651*t8226;
  t8229 = 0.004500000000000004*t7521;
  t8240 = t95*t8239;
  t8250 = -1.*t95*t8246*t7668;
  t8260 = t8258*t7686;
  t8268 = t8265*t7711;
  t8278 = t8276*t7735;
  t8287 = t8283*t7749;
  t8301 = t8298*t7758;
  t8306 = t8305*t7766;
  t8308 = 0.0306*t7768;
  t8310 = -1.1312*t7776;
  t8312 = 0. + t8219 + t8228 + t8229 + t8240 + t8250 + t8260 + t8268 + t8278 + t8287 + t8301 + t8306 + t8308 + t8310;
  t8318 = -1.*t9;
  t8320 = 1. + t8318;
  t8321 = 0.135*t8320;
  t8323 = 0.1305*t9*t95;
  t8328 = t9*t8327;
  t8330 = t9*t7521*t8239;
  t8339 = -1.*t7472*t8337;
  t8340 = t8226*t7784;
  t8341 = t8246*t7798;
  t8346 = t8258*t7802;
  t8347 = t8265*t7817;
  t8348 = t8276*t7819;
  t8350 = t8283*t7828;
  t8352 = t8298*t7832;
  t8353 = t8305*t7837;
  t8356 = 0.0306*t7847;
  t8358 = -1.1312*t7856;
  t8360 = 0. + t8321 + t8323 + t8328 + t8330 + t8339 + t8340 + t8341 + t8346 + t8347 + t8348 + t8350 + t8352 + t8353 + t8356 + t8358;
  t8364 = -0.135*t7472;
  t8365 = 0.1305*t95*t7472;
  t8366 = t7472*t8327;
  t8367 = t7472*t7521*t8239;
  t8368 = t9*t8337;
  t8369 = t8226*t7875;
  t8371 = t8246*t7890;
  t8373 = t8258*t7894;
  t8376 = t8265*t7907;
  t8378 = t8276*t7912;
  t8379 = t8283*t7921;
  t8381 = t8298*t7923;
  t8382 = t8305*t7933;
  t8386 = 0.0306*t7939;
  t8387 = -1.1312*t7948;
  t8390 = 0. + t8364 + t8365 + t8366 + t8367 + t8368 + t8369 + t8371 + t8373 + t8376 + t8378 + t8379 + t8381 + t8382 + t8386 + t8387;
  t8397 = t3052*t255*t8170;
  t8398 = t2999*t8153;
  t8399 = t8397 + t8398;
  t8177 = t2947*t8153;
  t8179 = -1.*t8170*t7351;
  t8181 = t8177 + t8179;
  p_output1[0]=0. + t7450*t7516*t7521 - 1.*t7450*t7470*t7472*t95 - 1.*t6314*t7450*t9*t95;
  p_output1[1]=0. + t7450*t7521*t7590 - 1.*t7450*t7472*t7559*t95 - 1.*t7450*t7541*t9*t95;
  p_output1[2]=0. + t7450*t7521*t7632 - 1.*t7450*t7472*t7618*t95 - 1.*t7450*t7612*t9*t95;
  p_output1[3]=0.;
  p_output1[4]=0. + t7450*t7516*t7778 + t6314*t7450*t7860 + t7450*t7470*t7951;
  p_output1[5]=0. + t7450*t7590*t7778 + t7450*t7541*t7860 + t7450*t7559*t7951;
  p_output1[6]=0. + t7450*t7632*t7778 + t7450*t7612*t7860 + t7450*t7618*t7951;
  p_output1[7]=0.;
  p_output1[8]=0. + t7450*t7516*t7991 + t6314*t7450*t8001 + t7450*t7470*t8016;
  p_output1[9]=0. + t7450*t7590*t7991 + t7450*t7541*t8001 + t7450*t7559*t8016;
  p_output1[10]=0. + t7450*t7632*t7991 + t7450*t7612*t8001 + t7450*t7618*t8016;
  p_output1[11]=0.;
  p_output1[12]=t7450*(-1.*t6229*t8175 + t5944*t8181 - 1.*t7426*t8212) + t7450*t7516*t8312 + t6314*t7450*t8360 + t7450*t7470*t8390;
  p_output1[13]=t7450*t7590*t8312 + t7450*t7541*t8360 + t7450*t7559*t8390 + t7450*(-1.*t255*t2956*t8175 + t7320*t8212 - 1.*t5944*t8399);
  p_output1[14]=t7450*t7632*t8312 + t7450*t7612*t8360 + t7450*t7618*t8390 + t7450*(t255*t2956*t8181 - 1.*t7379*t8212 + t6229*t8399);
  p_output1[15]=0. + (t7321 + t7387 + t7434)*t7450;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 14 && ncols == 1) && 
      !(mrows == 1 && ncols == 14))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 4, (mwSize) 4, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "H_RightToeBottom_to_LeftToeBottom_mex.hh"

namespace SymExpression
{

void H_RightToeBottom_to_LeftToeBottom_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
