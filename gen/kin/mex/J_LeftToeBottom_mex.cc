/*
 * Automatically Generated from Mathematica.
 * Mon 2 Jul 2018 15:33:58 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t1009;
  double t1028;
  double t1097;
  double t636;
  double t1205;
  double t383;
  double t1021;
  double t1230;
  double t1278;
  double t1323;
  double t1341;
  double t1359;
  double t1378;
  double t1653;
  double t1719;
  double t1727;
  double t1768;
  double t1459;
  double t1606;
  double t1638;
  double t1830;
  double t2083;
  double t2118;
  double t2143;
  double t2249;
  double t1983;
  double t1997;
  double t2079;
  double t2320;
  double t2321;
  double t2359;
  double t2482;
  double t2507;
  double t2525;
  double t2528;
  double t2552;
  double t2576;
  double t2607;
  double t2771;
  double t2835;
  double t2862;
  double t2878;
  double t2921;
  double t2935;
  double t2966;
  double t3013;
  double t3045;
  double t3055;
  double t3202;
  double t3227;
  double t3236;
  double t3251;
  double t3274;
  double t3343;
  double t3439;
  double t3513;
  double t3519;
  double t3520;
  double t3592;
  double t3635;
  double t3640;
  double t3651;
  double t3681;
  double t3688;
  double t3719;
  double t3789;
  double t3796;
  double t3804;
  double t3886;
  double t3898;
  double t3902;
  double t392;
  double t536;
  double t557;
  double t578;
  double t1448;
  double t1452;
  double t3966;
  double t4003;
  double t4013;
  double t4031;
  double t4040;
  double t4047;
  double t1743;
  double t1771;
  double t1806;
  double t1860;
  double t1861;
  double t1868;
  double t4055;
  double t4067;
  double t4085;
  double t2228;
  double t2273;
  double t2287;
  double t2368;
  double t2384;
  double t2417;
  double t2526;
  double t2541;
  double t2546;
  double t4196;
  double t4198;
  double t4224;
  double t4234;
  double t4243;
  double t4247;
  double t2643;
  double t2681;
  double t2737;
  double t2939;
  double t2973;
  double t3002;
  double t4249;
  double t4264;
  double t4272;
  double t4293;
  double t4302;
  double t4303;
  double t3101;
  double t3108;
  double t3151;
  double t3347;
  double t3484;
  double t3506;
  double t4318;
  double t4324;
  double t4349;
  double t4354;
  double t4377;
  double t4379;
  double t3584;
  double t3588;
  double t3591;
  double t3697;
  double t3785;
  double t3786;
  double t4398;
  double t4418;
  double t4435;
  double t4439;
  double t4455;
  double t4456;
  double t3849;
  double t3874;
  double t3883;
  double t4488;
  double t4491;
  double t4520;
  double t4551;
  double t4584;
  double t4587;
  double t4728;
  double t4729;
  double t4734;
  double t4957;
  double t5101;
  double t5109;
  double t5213;
  double t5217;
  double t5222;
  double t5240;
  double t5254;
  double t5267;
  double t5298;
  double t5326;
  double t5330;
  double t5352;
  double t5376;
  double t5382;
  double t5401;
  double t5429;
  double t5433;
  double t5472;
  double t5474;
  double t5478;
  double t5489;
  double t5508;
  double t5533;
  double t5602;
  double t5616;
  double t5618;
  double t5657;
  double t5665;
  double t5680;
  double t5836;
  double t5856;
  double t5882;
  double t5960;
  double t5962;
  double t5975;
  double t5990;
  double t5996;
  double t5998;
  double t6007;
  double t6012;
  double t6018;
  double t6032;
  double t6034;
  double t6039;
  double t6058;
  double t6081;
  double t6091;
  double t6114;
  double t6125;
  double t6138;
  double t6169;
  double t6171;
  double t6194;
  double t6210;
  double t6223;
  double t6254;
  double t6281;
  double t6282;
  double t6287;
  double t6292;
  double t6306;
  double t6307;
  double t6448;
  double t6450;
  double t6452;
  double t6509;
  double t6514;
  double t6520;
  double t6531;
  double t6539;
  double t6541;
  double t6546;
  double t6571;
  double t6573;
  double t6599;
  double t6621;
  double t6631;
  double t6748;
  double t6756;
  double t6766;
  double t6786;
  double t6788;
  double t6797;
  double t6809;
  double t6836;
  double t6837;
  double t6865;
  double t6866;
  double t6872;
  double t6905;
  double t6912;
  double t6917;
  double t6934;
  double t6942;
  double t6964;
  double t7078;
  double t7085;
  double t7091;
  double t7098;
  double t7105;
  double t7131;
  double t7140;
  double t7144;
  double t7148;
  double t7149;
  double t7157;
  double t7171;
  double t7177;
  double t7179;
  double t7196;
  double t7200;
  double t7205;
  double t7210;
  double t7213;
  double t7233;
  double t7251;
  double t7256;
  double t7262;
  double t7272;
  double t7275;
  double t7278;
  double t7296;
  double t7301;
  double t7302;
  double t7310;
  double t7315;
  double t7322;
  double t7411;
  double t7417;
  double t7418;
  double t7427;
  double t7428;
  double t7430;
  double t7444;
  double t7447;
  double t7456;
  double t7457;
  double t7467;
  double t7476;
  double t7478;
  double t7479;
  double t7492;
  double t7497;
  double t7504;
  double t7511;
  double t7521;
  double t7522;
  double t7530;
  double t7541;
  double t7543;
  double t7547;
  double t7548;
  double t7556;
  double t7585;
  double t7586;
  double t7601;
  double t7609;
  double t7610;
  double t7620;
  double t7729;
  double t7733;
  double t7735;
  double t7753;
  double t7755;
  double t7761;
  double t7777;
  double t7783;
  double t7791;
  double t7797;
  double t7798;
  double t7806;
  double t7813;
  double t7817;
  double t7824;
  double t7850;
  double t7851;
  double t7857;
  double t7876;
  double t7880;
  double t7884;
  double t7897;
  double t7935;
  double t7937;
  double t7943;
  double t7947;
  double t7949;
  double t7967;
  double t7968;
  double t7972;
  double t8059;
  double t8061;
  double t8072;
  double t8079;
  double t8094;
  double t8109;
  double t8110;
  double t8112;
  double t8119;
  double t8121;
  double t8124;
  double t8129;
  double t8137;
  double t8138;
  double t8152;
  double t8160;
  double t8161;
  double t8167;
  double t8176;
  double t8179;
  double t8189;
  double t8203;
  double t8216;
  double t8221;
  double t8238;
  double t8259;
  double t8350;
  double t8357;
  double t8358;
  double t8369;
  double t8379;
  double t8391;
  double t8400;
  double t8424;
  double t8425;
  double t8426;
  double t8431;
  double t8436;
  double t8443;
  double t8460;
  double t8466;
  double t8468;
  double t8480;
  double t8493;
  double t8494;
  double t8499;
  double t8508;
  double t8511;
  double t8525;
  double t8528;
  double t8546;
  double t8564;
  double t8570;
  double t8580;
  double t8606;
  double t8607;
  double t8614;
  double t7742;
  double t7743;
  double t7747;
  double t7770;
  double t7792;
  double t7812;
  double t7843;
  double t7859;
  double t7887;
  double t7941;
  double t7956;
  double t7977;
  double t7983;
  double t7985;
  double t7986;
  double t7988;
  double t7993;
  double t7996;
  double t8013;
  double t8022;
  double t4149;
  double t4151;
  double t4170;
  double t8817;
  double t8820;
  double t8821;
  double t8825;
  double t8827;
  double t8830;
  double t8837;
  double t8838;
  double t8841;
  double t8846;
  double t8849;
  double t8850;
  double t8857;
  double t8859;
  double t8860;
  double t8865;
  double t8870;
  double t8873;
  double t8726;
  double t8744;
  double t8745;
  double t8749;
  double t8753;
  double t8914;
  double t8921;
  double t8929;
  double t8938;
  double t8942;
  double t8943;
  double t8982;
  double t8988;
  double t9003;
  double t9017;
  double t9023;
  double t9024;
  double t9029;
  double t9034;
  double t9040;
  double t9043;
  double t9047;
  double t9052;
  double t9060;
  double t9066;
  double t9070;
  double t9084;
  double t9085;
  double t9086;
  double t9134;
  double t9139;
  double t9140;
  double t9146;
  double t9150;
  double t9152;
  double t9177;
  double t9189;
  double t9191;
  double t9204;
  double t9215;
  double t9216;
  double t9226;
  double t9230;
  double t9233;
  double t9242;
  double t9243;
  double t9245;
  double t9255;
  double t9256;
  double t9258;
  double t9273;
  double t9274;
  double t9283;
  double t9364;
  double t9371;
  double t9372;
  double t9394;
  double t9399;
  double t9405;
  double t9407;
  double t9416;
  double t9422;
  double t9424;
  double t9427;
  double t9435;
  double t9441;
  double t9445;
  double t9453;
  double t9454;
  double t9456;
  double t9461;
  double t9463;
  double t9470;
  double t9332;
  double t9337;
  double t9348;
  double t9353;
  double t9359;
  double t9513;
  double t9519;
  double t9527;
  double t9534;
  double t9542;
  double t9549;
  double t9558;
  double t9563;
  double t9568;
  double t9573;
  double t9576;
  double t9578;
  double t9612;
  double t9615;
  double t9617;
  double t9636;
  double t9652;
  double t9656;
  double t9671;
  double t9674;
  double t9679;
  double t9681;
  double t9682;
  double t9683;
  double t9695;
  double t9698;
  double t9699;
  double t9781;
  double t9787;
  double t9795;
  double t9808;
  double t9815;
  double t9832;
  double t9845;
  double t9846;
  double t9847;
  double t9858;
  double t9860;
  double t9864;
  double t9877;
  double t9878;
  double t9879;
  double t9898;
  double t9900;
  double t9902;
  double t9917;
  double t9931;
  double t9932;
  double t9938;
  double t9943;
  double t9950;
  double t9954;
  double t9955;
  double t9963;
  double t10019;
  double t10023;
  double t10027;
  double t10030;
  double t10031;
  double t10044;
  double t10045;
  double t10050;
  double t10057;
  double t10059;
  double t10076;
  double t10082;
  double t10093;
  double t10003;
  double t10007;
  double t10010;
  double t10012;
  double t10013;
  double t10166;
  double t10174;
  double t10178;
  double t10193;
  double t10195;
  double t10229;
  double t10234;
  double t10250;
  double t10252;
  double t10253;
  double t10261;
  double t10265;
  double t10269;
  double t10272;
  double t10274;
  double t10277;
  double t10284;
  double t10290;
  double t10291;
  double t10345;
  double t10361;
  double t10365;
  double t10386;
  double t10388;
  double t10410;
  double t10412;
  double t10427;
  double t10436;
  double t10444;
  double t10454;
  double t10456;
  double t10462;
  double t10473;
  double t10480;
  double t10509;
  double t10517;
  double t10520;
  double t10521;
  double t10629;
  double t10643;
  double t10662;
  double t10668;
  double t10672;
  double t10675;
  double t10677;
  double t10583;
  double t10590;
  double t10599;
  double t10602;
  double t10609;
  double t10818;
  double t10820;
  double t10832;
  double t10881;
  double t10885;
  double t10897;
  double t10904;
  double t10913;
  double t10934;
  double t10937;
  double t10949;
  double t10951;
  double t10954;
  double t11008;
  double t11010;
  double t11013;
  double t11026;
  double t11029;
  double t11032;
  double t11035;
  double t11044;
  double t11055;
  double t11061;
  double t11070;
  double t11093;
  double t11095;
  double t11163;
  double t11173;
  double t4629;
  double t11138;
  double t11141;
  double t11142;
  double t11152;
  double t11156;
  double t11235;
  double t11239;
  double t11244;
  double t11250;
  double t11251;
  double t11253;
  double t11254;
  double t11278;
  double t11283;
  double t11284;
  double t11294;
  double t11298;
  double t11302;
  double t11305;
  double t11184;
  double t4635;
  double t4638;
  double t11331;
  double t11334;
  double t11342;
  double t11344;
  double t11346;
  double t11256;
  double t11358;
  double t11359;
  double t11361;
  double t11268;
  double t11309;
  double t11379;
  double t11380;
  double t11383;
  double t11316;
  t1009 = Cos(var1[5]);
  t1028 = Sin(var1[3]);
  t1097 = Sin(var1[4]);
  t636 = Cos(var1[3]);
  t1205 = Sin(var1[5]);
  t383 = Cos(var1[6]);
  t1021 = -1.*t636*t1009;
  t1230 = -1.*t1028*t1097*t1205;
  t1278 = t1021 + t1230;
  t1323 = -1.*t1009*t1028*t1097;
  t1341 = t636*t1205;
  t1359 = t1323 + t1341;
  t1378 = Sin(var1[6]);
  t1653 = Cos(var1[7]);
  t1719 = -1.*t1653;
  t1727 = 1. + t1719;
  t1768 = Sin(var1[7]);
  t1459 = t383*t1278;
  t1606 = t1359*t1378;
  t1638 = t1459 + t1606;
  t1830 = Cos(var1[4]);
  t2083 = Cos(var1[8]);
  t2118 = -1.*t2083;
  t2143 = 1. + t2118;
  t2249 = Sin(var1[8]);
  t1983 = -1.*t1830*t1653*t1028;
  t1997 = t1638*t1768;
  t2079 = t1983 + t1997;
  t2320 = t383*t1359;
  t2321 = -1.*t1278*t1378;
  t2359 = t2320 + t2321;
  t2482 = Cos(var1[9]);
  t2507 = -1.*t2482;
  t2525 = 1. + t2507;
  t2528 = Sin(var1[9]);
  t2552 = t2083*t2079;
  t2576 = t2359*t2249;
  t2607 = t2552 + t2576;
  t2771 = t2083*t2359;
  t2835 = -1.*t2079*t2249;
  t2862 = t2771 + t2835;
  t2878 = Cos(var1[10]);
  t2921 = -1.*t2878;
  t2935 = 1. + t2921;
  t2966 = Sin(var1[10]);
  t3013 = -1.*t2528*t2607;
  t3045 = t2482*t2862;
  t3055 = t3013 + t3045;
  t3202 = t2482*t2607;
  t3227 = t2528*t2862;
  t3236 = t3202 + t3227;
  t3251 = Cos(var1[11]);
  t3274 = -1.*t3251;
  t3343 = 1. + t3274;
  t3439 = Sin(var1[11]);
  t3513 = t2966*t3055;
  t3519 = t2878*t3236;
  t3520 = t3513 + t3519;
  t3592 = t2878*t3055;
  t3635 = -1.*t2966*t3236;
  t3640 = t3592 + t3635;
  t3651 = Cos(var1[12]);
  t3681 = -1.*t3651;
  t3688 = 1. + t3681;
  t3719 = Sin(var1[12]);
  t3789 = -1.*t3439*t3520;
  t3796 = t3251*t3640;
  t3804 = t3789 + t3796;
  t3886 = t3251*t3520;
  t3898 = t3439*t3640;
  t3902 = t3886 + t3898;
  t392 = -1.*t383;
  t536 = 1. + t392;
  t557 = 0.135*t536;
  t578 = 0. + t557;
  t1448 = -0.135*t1378;
  t1452 = 0. + t1448;
  t3966 = -1.*t1009*t1028;
  t4003 = t636*t1097*t1205;
  t4013 = t3966 + t4003;
  t4031 = t636*t1009*t1097;
  t4040 = t1028*t1205;
  t4047 = t4031 + t4040;
  t1743 = 0.135*t1727;
  t1771 = 0.049*t1768;
  t1806 = 0. + t1743 + t1771;
  t1860 = -0.049*t1727;
  t1861 = 0.135*t1768;
  t1868 = 0. + t1860 + t1861;
  t4055 = t383*t4013;
  t4067 = t4047*t1378;
  t4085 = t4055 + t4067;
  t2228 = -0.049*t2143;
  t2273 = -0.09*t2249;
  t2287 = 0. + t2228 + t2273;
  t2368 = -0.09*t2143;
  t2384 = 0.049*t2249;
  t2417 = 0. + t2368 + t2384;
  t2526 = -0.049*t2525;
  t2541 = -0.21*t2528;
  t2546 = 0. + t2526 + t2541;
  t4196 = t636*t1830*t1653;
  t4198 = t4085*t1768;
  t4224 = t4196 + t4198;
  t4234 = t383*t4047;
  t4243 = -1.*t4013*t1378;
  t4247 = t4234 + t4243;
  t2643 = -0.21*t2525;
  t2681 = 0.049*t2528;
  t2737 = 0. + t2643 + t2681;
  t2939 = -0.2707*t2935;
  t2973 = 0.0016*t2966;
  t3002 = 0. + t2939 + t2973;
  t4249 = t2083*t4224;
  t4264 = t4247*t2249;
  t4272 = t4249 + t4264;
  t4293 = t2083*t4247;
  t4302 = -1.*t4224*t2249;
  t4303 = t4293 + t4302;
  t3101 = -0.0016*t2935;
  t3108 = -0.2707*t2966;
  t3151 = 0. + t3101 + t3108;
  t3347 = 0.0184*t3343;
  t3484 = -0.7055*t3439;
  t3506 = 0. + t3347 + t3484;
  t4318 = -1.*t2528*t4272;
  t4324 = t2482*t4303;
  t4349 = t4318 + t4324;
  t4354 = t2482*t4272;
  t4377 = t2528*t4303;
  t4379 = t4354 + t4377;
  t3584 = -0.7055*t3343;
  t3588 = -0.0184*t3439;
  t3591 = 0. + t3584 + t3588;
  t3697 = -1.1135*t3688;
  t3785 = 0.0216*t3719;
  t3786 = 0. + t3697 + t3785;
  t4398 = t2966*t4349;
  t4418 = t2878*t4379;
  t4435 = t4398 + t4418;
  t4439 = t2878*t4349;
  t4455 = -1.*t2966*t4379;
  t4456 = t4439 + t4455;
  t3849 = -0.0216*t3688;
  t3874 = -1.1135*t3719;
  t3883 = 0. + t3849 + t3874;
  t4488 = -1.*t3439*t4435;
  t4491 = t3251*t4456;
  t4520 = t4488 + t4491;
  t4551 = t3251*t4435;
  t4584 = t3439*t4456;
  t4587 = t4551 + t4584;
  t4728 = t636*t1830*t383*t1205;
  t4729 = t636*t1830*t1009*t1378;
  t4734 = t4728 + t4729;
  t4957 = -1.*t636*t1653*t1097;
  t5101 = t4734*t1768;
  t5109 = t4957 + t5101;
  t5213 = t636*t1830*t1009*t383;
  t5217 = -1.*t636*t1830*t1205*t1378;
  t5222 = t5213 + t5217;
  t5240 = t2083*t5109;
  t5254 = t5222*t2249;
  t5267 = t5240 + t5254;
  t5298 = t2083*t5222;
  t5326 = -1.*t5109*t2249;
  t5330 = t5298 + t5326;
  t5352 = -1.*t2528*t5267;
  t5376 = t2482*t5330;
  t5382 = t5352 + t5376;
  t5401 = t2482*t5267;
  t5429 = t2528*t5330;
  t5433 = t5401 + t5429;
  t5472 = t2966*t5382;
  t5474 = t2878*t5433;
  t5478 = t5472 + t5474;
  t5489 = t2878*t5382;
  t5508 = -1.*t2966*t5433;
  t5533 = t5489 + t5508;
  t5602 = -1.*t3439*t5478;
  t5616 = t3251*t5533;
  t5618 = t5602 + t5616;
  t5657 = t3251*t5478;
  t5665 = t3439*t5533;
  t5680 = t5657 + t5665;
  t5836 = t1830*t383*t1028*t1205;
  t5856 = t1830*t1009*t1028*t1378;
  t5882 = t5836 + t5856;
  t5960 = -1.*t1653*t1028*t1097;
  t5962 = t5882*t1768;
  t5975 = t5960 + t5962;
  t5990 = t1830*t1009*t383*t1028;
  t5996 = -1.*t1830*t1028*t1205*t1378;
  t5998 = t5990 + t5996;
  t6007 = t2083*t5975;
  t6012 = t5998*t2249;
  t6018 = t6007 + t6012;
  t6032 = t2083*t5998;
  t6034 = -1.*t5975*t2249;
  t6039 = t6032 + t6034;
  t6058 = -1.*t2528*t6018;
  t6081 = t2482*t6039;
  t6091 = t6058 + t6081;
  t6114 = t2482*t6018;
  t6125 = t2528*t6039;
  t6138 = t6114 + t6125;
  t6169 = t2966*t6091;
  t6171 = t2878*t6138;
  t6194 = t6169 + t6171;
  t6210 = t2878*t6091;
  t6223 = -1.*t2966*t6138;
  t6254 = t6210 + t6223;
  t6281 = -1.*t3439*t6194;
  t6282 = t3251*t6254;
  t6287 = t6281 + t6282;
  t6292 = t3251*t6194;
  t6306 = t3439*t6254;
  t6307 = t6292 + t6306;
  t6448 = -1.*t383*t1097*t1205;
  t6450 = -1.*t1009*t1097*t1378;
  t6452 = t6448 + t6450;
  t6509 = -1.*t1830*t1653;
  t6514 = t6452*t1768;
  t6520 = t6509 + t6514;
  t6531 = -1.*t1009*t383*t1097;
  t6539 = t1097*t1205*t1378;
  t6541 = t6531 + t6539;
  t6546 = t2083*t6520;
  t6571 = t6541*t2249;
  t6573 = t6546 + t6571;
  t6599 = t2083*t6541;
  t6621 = -1.*t6520*t2249;
  t6631 = t6599 + t6621;
  t6748 = -1.*t2528*t6573;
  t6756 = t2482*t6631;
  t6766 = t6748 + t6756;
  t6786 = t2482*t6573;
  t6788 = t2528*t6631;
  t6797 = t6786 + t6788;
  t6809 = t2966*t6766;
  t6836 = t2878*t6797;
  t6837 = t6809 + t6836;
  t6865 = t2878*t6766;
  t6866 = -1.*t2966*t6797;
  t6872 = t6865 + t6866;
  t6905 = -1.*t3439*t6837;
  t6912 = t3251*t6872;
  t6917 = t6905 + t6912;
  t6934 = t3251*t6837;
  t6942 = t3439*t6872;
  t6964 = t6934 + t6942;
  t7078 = t1009*t1028;
  t7085 = -1.*t636*t1097*t1205;
  t7091 = t7078 + t7085;
  t7098 = t7091*t1378;
  t7105 = t4234 + t7098;
  t7131 = t383*t7091;
  t7140 = -1.*t4047*t1378;
  t7144 = t7131 + t7140;
  t7148 = t2083*t7105*t1768;
  t7149 = t7144*t2249;
  t7157 = t7148 + t7149;
  t7171 = t2083*t7144;
  t7177 = -1.*t7105*t1768*t2249;
  t7179 = t7171 + t7177;
  t7196 = -1.*t2528*t7157;
  t7200 = t2482*t7179;
  t7205 = t7196 + t7200;
  t7210 = t2482*t7157;
  t7213 = t2528*t7179;
  t7233 = t7210 + t7213;
  t7251 = t2966*t7205;
  t7256 = t2878*t7233;
  t7262 = t7251 + t7256;
  t7272 = t2878*t7205;
  t7275 = -1.*t2966*t7233;
  t7278 = t7272 + t7275;
  t7296 = -1.*t3439*t7262;
  t7301 = t3251*t7278;
  t7302 = t7296 + t7301;
  t7310 = t3251*t7262;
  t7315 = t3439*t7278;
  t7322 = t7310 + t7315;
  t7411 = t1009*t1028*t1097;
  t7417 = -1.*t636*t1205;
  t7418 = t7411 + t7417;
  t7427 = t383*t7418;
  t7428 = t1278*t1378;
  t7430 = t7427 + t7428;
  t7444 = -1.*t7418*t1378;
  t7447 = t1459 + t7444;
  t7456 = t2083*t7430*t1768;
  t7457 = t7447*t2249;
  t7467 = t7456 + t7457;
  t7476 = t2083*t7447;
  t7478 = -1.*t7430*t1768*t2249;
  t7479 = t7476 + t7478;
  t7492 = -1.*t2528*t7467;
  t7497 = t2482*t7479;
  t7504 = t7492 + t7497;
  t7511 = t2482*t7467;
  t7521 = t2528*t7479;
  t7522 = t7511 + t7521;
  t7530 = t2966*t7504;
  t7541 = t2878*t7522;
  t7543 = t7530 + t7541;
  t7547 = t2878*t7504;
  t7548 = -1.*t2966*t7522;
  t7556 = t7547 + t7548;
  t7585 = -1.*t3439*t7543;
  t7586 = t3251*t7556;
  t7601 = t7585 + t7586;
  t7609 = t3251*t7543;
  t7610 = t3439*t7556;
  t7620 = t7609 + t7610;
  t7729 = t1830*t1009*t383;
  t7733 = -1.*t1830*t1205*t1378;
  t7735 = t7729 + t7733;
  t7753 = -1.*t1830*t383*t1205;
  t7755 = -1.*t1830*t1009*t1378;
  t7761 = t7753 + t7755;
  t7777 = t2083*t7735*t1768;
  t7783 = t7761*t2249;
  t7791 = t7777 + t7783;
  t7797 = t2083*t7761;
  t7798 = -1.*t7735*t1768*t2249;
  t7806 = t7797 + t7798;
  t7813 = -1.*t2528*t7791;
  t7817 = t2482*t7806;
  t7824 = t7813 + t7817;
  t7850 = t2482*t7791;
  t7851 = t2528*t7806;
  t7857 = t7850 + t7851;
  t7876 = t2966*t7824;
  t7880 = t2878*t7857;
  t7884 = t7876 + t7880;
  t7897 = t2878*t7824;
  t7935 = -1.*t2966*t7857;
  t7937 = t7897 + t7935;
  t7943 = -1.*t3439*t7884;
  t7947 = t3251*t7937;
  t7949 = t7943 + t7947;
  t7967 = t3251*t7884;
  t7968 = t3439*t7937;
  t7972 = t7967 + t7968;
  t8059 = -1.*t383*t4013;
  t8061 = t8059 + t7140;
  t8072 = t2083*t4247*t1768;
  t8079 = t8061*t2249;
  t8094 = t8072 + t8079;
  t8109 = t2083*t8061;
  t8110 = -1.*t4247*t1768*t2249;
  t8112 = t8109 + t8110;
  t8119 = -1.*t2528*t8094;
  t8121 = t2482*t8112;
  t8124 = t8119 + t8121;
  t8129 = t2482*t8094;
  t8137 = t2528*t8112;
  t8138 = t8129 + t8137;
  t8152 = t2966*t8124;
  t8160 = t2878*t8138;
  t8161 = t8152 + t8160;
  t8167 = t2878*t8124;
  t8176 = -1.*t2966*t8138;
  t8179 = t8167 + t8176;
  t8189 = -1.*t3439*t8161;
  t8203 = t3251*t8179;
  t8216 = t8189 + t8203;
  t8221 = t3251*t8161;
  t8238 = t3439*t8179;
  t8259 = t8221 + t8238;
  t8350 = t636*t1009;
  t8357 = t1028*t1097*t1205;
  t8358 = t8350 + t8357;
  t8369 = -1.*t8358*t1378;
  t8379 = t7427 + t8369;
  t8391 = -1.*t383*t8358;
  t8400 = t8391 + t7444;
  t8424 = t2083*t8379*t1768;
  t8425 = t8400*t2249;
  t8426 = t8424 + t8425;
  t8431 = t2083*t8400;
  t8436 = -1.*t8379*t1768*t2249;
  t8443 = t8431 + t8436;
  t8460 = -1.*t2528*t8426;
  t8466 = t2482*t8443;
  t8468 = t8460 + t8466;
  t8480 = t2482*t8426;
  t8493 = t2528*t8443;
  t8494 = t8480 + t8493;
  t8499 = t2966*t8468;
  t8508 = t2878*t8494;
  t8511 = t8499 + t8508;
  t8525 = t2878*t8468;
  t8528 = -1.*t2966*t8494;
  t8546 = t8525 + t8528;
  t8564 = -1.*t3439*t8511;
  t8570 = t3251*t8546;
  t8580 = t8564 + t8570;
  t8606 = t3251*t8511;
  t8607 = t3439*t8546;
  t8614 = t8606 + t8607;
  t7742 = 0.1305*t1653*t7735;
  t7743 = t7735*t1806;
  t7747 = t7735*t1768*t2287;
  t7770 = t7761*t2417;
  t7792 = t2546*t7791;
  t7812 = t2737*t7806;
  t7843 = t3002*t7824;
  t7859 = t3151*t7857;
  t7887 = t3506*t7884;
  t7941 = t3591*t7937;
  t7956 = t3786*t7949;
  t7977 = t3883*t7972;
  t7983 = t3719*t7949;
  t7985 = t3651*t7972;
  t7986 = t7983 + t7985;
  t7988 = 0.0306*t7986;
  t7993 = t3651*t7949;
  t7996 = -1.*t3719*t7972;
  t8013 = t7993 + t7996;
  t8022 = -1.1312*t8013;
  t4149 = t1653*t4085;
  t4151 = -1.*t636*t1830*t1768;
  t4170 = t4149 + t4151;
  t8817 = -1.*t2083*t2528*t4170;
  t8820 = -1.*t2482*t4170*t2249;
  t8821 = t8817 + t8820;
  t8825 = t2482*t2083*t4170;
  t8827 = -1.*t2528*t4170*t2249;
  t8830 = t8825 + t8827;
  t8837 = t2966*t8821;
  t8838 = t2878*t8830;
  t8841 = t8837 + t8838;
  t8846 = t2878*t8821;
  t8849 = -1.*t2966*t8830;
  t8850 = t8846 + t8849;
  t8857 = -1.*t3439*t8841;
  t8859 = t3251*t8850;
  t8860 = t8857 + t8859;
  t8865 = t3251*t8841;
  t8870 = t3439*t8850;
  t8873 = t8865 + t8870;
  t8726 = 0.135*t1653;
  t8744 = -0.049*t1768;
  t8745 = t8726 + t8744;
  t8749 = 0.049*t1653;
  t8753 = t8749 + t1861;
  t8914 = t383*t8358;
  t8921 = t7418*t1378;
  t8929 = t8914 + t8921;
  t8938 = t1653*t8929;
  t8942 = -1.*t1830*t1028*t1768;
  t8943 = t8938 + t8942;
  t8982 = -1.*t2083*t2528*t8943;
  t8988 = -1.*t2482*t8943*t2249;
  t9003 = t8982 + t8988;
  t9017 = t2482*t2083*t8943;
  t9023 = -1.*t2528*t8943*t2249;
  t9024 = t9017 + t9023;
  t9029 = t2966*t9003;
  t9034 = t2878*t9024;
  t9040 = t9029 + t9034;
  t9043 = t2878*t9003;
  t9047 = -1.*t2966*t9024;
  t9052 = t9043 + t9047;
  t9060 = -1.*t3439*t9040;
  t9066 = t3251*t9052;
  t9070 = t9060 + t9066;
  t9084 = t3251*t9040;
  t9085 = t3439*t9052;
  t9086 = t9084 + t9085;
  t9134 = t1830*t383*t1205;
  t9139 = t1830*t1009*t1378;
  t9140 = t9134 + t9139;
  t9146 = t1653*t9140;
  t9150 = t1097*t1768;
  t9152 = t9146 + t9150;
  t9177 = -1.*t2083*t2528*t9152;
  t9189 = -1.*t2482*t9152*t2249;
  t9191 = t9177 + t9189;
  t9204 = t2482*t2083*t9152;
  t9215 = -1.*t2528*t9152*t2249;
  t9216 = t9204 + t9215;
  t9226 = t2966*t9191;
  t9230 = t2878*t9216;
  t9233 = t9226 + t9230;
  t9242 = t2878*t9191;
  t9243 = -1.*t2966*t9216;
  t9245 = t9242 + t9243;
  t9255 = -1.*t3439*t9233;
  t9256 = t3251*t9245;
  t9258 = t9255 + t9256;
  t9273 = t3251*t9233;
  t9274 = t3439*t9245;
  t9283 = t9273 + t9274;
  t9364 = -1.*t2083*t4224;
  t9371 = -1.*t4247*t2249;
  t9372 = t9364 + t9371;
  t9394 = t2528*t9372;
  t9399 = t9394 + t4324;
  t9405 = t2482*t9372;
  t9407 = -1.*t2528*t4303;
  t9416 = t9405 + t9407;
  t9422 = -1.*t2966*t9399;
  t9424 = t2878*t9416;
  t9427 = t9422 + t9424;
  t9435 = t2878*t9399;
  t9441 = t2966*t9416;
  t9445 = t9435 + t9441;
  t9453 = t3439*t9427;
  t9454 = t3251*t9445;
  t9456 = t9453 + t9454;
  t9461 = t3251*t9427;
  t9463 = -1.*t3439*t9445;
  t9470 = t9461 + t9463;
  t9332 = 0.049*t2083;
  t9337 = t9332 + t2273;
  t9348 = -0.09*t2083;
  t9353 = -0.049*t2249;
  t9359 = t9348 + t9353;
  t9513 = t1830*t1653*t1028;
  t9519 = t8929*t1768;
  t9527 = t9513 + t9519;
  t9534 = -1.*t2083*t9527;
  t9542 = -1.*t8379*t2249;
  t9549 = t9534 + t9542;
  t9558 = t2083*t8379;
  t9563 = -1.*t9527*t2249;
  t9568 = t9558 + t9563;
  t9573 = t2528*t9549;
  t9576 = t2482*t9568;
  t9578 = t9573 + t9576;
  t9612 = t2482*t9549;
  t9615 = -1.*t2528*t9568;
  t9617 = t9612 + t9615;
  t9636 = -1.*t2966*t9578;
  t9652 = t2878*t9617;
  t9656 = t9636 + t9652;
  t9671 = t2878*t9578;
  t9674 = t2966*t9617;
  t9679 = t9671 + t9674;
  t9681 = t3439*t9656;
  t9682 = t3251*t9679;
  t9683 = t9681 + t9682;
  t9695 = t3251*t9656;
  t9698 = -1.*t3439*t9679;
  t9699 = t9695 + t9698;
  t9781 = -1.*t1653*t1097;
  t9787 = t9140*t1768;
  t9795 = t9781 + t9787;
  t9808 = -1.*t2083*t9795;
  t9815 = -1.*t7735*t2249;
  t9832 = t9808 + t9815;
  t9845 = t2083*t7735;
  t9846 = -1.*t9795*t2249;
  t9847 = t9845 + t9846;
  t9858 = t2528*t9832;
  t9860 = t2482*t9847;
  t9864 = t9858 + t9860;
  t9877 = t2482*t9832;
  t9878 = -1.*t2528*t9847;
  t9879 = t9877 + t9878;
  t9898 = -1.*t2966*t9864;
  t9900 = t2878*t9879;
  t9902 = t9898 + t9900;
  t9917 = t2878*t9864;
  t9931 = t2966*t9879;
  t9932 = t9917 + t9931;
  t9938 = t3439*t9902;
  t9943 = t3251*t9932;
  t9950 = t9938 + t9943;
  t9954 = t3251*t9902;
  t9955 = -1.*t3439*t9932;
  t9963 = t9954 + t9955;
  t10019 = -1.*t2482*t4272;
  t10023 = t10019 + t9407;
  t10027 = -1.*t2966*t4349;
  t10030 = t2878*t10023;
  t10031 = t10027 + t10030;
  t10044 = t2966*t10023;
  t10045 = t4439 + t10044;
  t10050 = t3439*t10031;
  t10057 = t3251*t10045;
  t10059 = t10050 + t10057;
  t10076 = t3251*t10031;
  t10082 = -1.*t3439*t10045;
  t10093 = t10076 + t10082;
  t10003 = -0.21*t2482;
  t10007 = -0.049*t2528;
  t10010 = t10003 + t10007;
  t10012 = 0.049*t2482;
  t10013 = t10012 + t2541;
  t10166 = t2083*t9527;
  t10174 = t8379*t2249;
  t10178 = t10166 + t10174;
  t10193 = -1.*t2528*t10178;
  t10195 = t10193 + t9576;
  t10229 = -1.*t2482*t10178;
  t10234 = t10229 + t9615;
  t10250 = -1.*t2966*t10195;
  t10252 = t2878*t10234;
  t10253 = t10250 + t10252;
  t10261 = t2878*t10195;
  t10265 = t2966*t10234;
  t10269 = t10261 + t10265;
  t10272 = t3439*t10253;
  t10274 = t3251*t10269;
  t10277 = t10272 + t10274;
  t10284 = t3251*t10253;
  t10290 = -1.*t3439*t10269;
  t10291 = t10284 + t10290;
  t10345 = t2083*t9795;
  t10361 = t7735*t2249;
  t10365 = t10345 + t10361;
  t10386 = -1.*t2528*t10365;
  t10388 = t10386 + t9860;
  t10410 = -1.*t2482*t10365;
  t10412 = t10410 + t9878;
  t10427 = -1.*t2966*t10388;
  t10436 = t2878*t10412;
  t10444 = t10427 + t10436;
  t10454 = t2878*t10388;
  t10456 = t2966*t10412;
  t10462 = t10454 + t10456;
  t10473 = t3439*t10444;
  t10480 = t3251*t10462;
  t10509 = t10473 + t10480;
  t10517 = t3251*t10444;
  t10520 = -1.*t3439*t10462;
  t10521 = t10517 + t10520;
  t10629 = -1.*t2878*t4379;
  t10643 = t10027 + t10629;
  t10662 = t3439*t10643;
  t10668 = t10662 + t4491;
  t10672 = t3251*t10643;
  t10675 = -1.*t3439*t4456;
  t10677 = t10672 + t10675;
  t10583 = 0.0016*t2878;
  t10590 = t10583 + t3108;
  t10599 = -0.2707*t2878;
  t10602 = -0.0016*t2966;
  t10609 = t10599 + t10602;
  t10818 = t2482*t10178;
  t10820 = t2528*t9568;
  t10832 = t10818 + t10820;
  t10881 = -1.*t2878*t10832;
  t10885 = t10250 + t10881;
  t10897 = -1.*t2966*t10832;
  t10904 = t10261 + t10897;
  t10913 = t3439*t10885;
  t10934 = t3251*t10904;
  t10937 = t10913 + t10934;
  t10949 = t3251*t10885;
  t10951 = -1.*t3439*t10904;
  t10954 = t10949 + t10951;
  t11008 = t2482*t10365;
  t11010 = t2528*t9847;
  t11013 = t11008 + t11010;
  t11026 = -1.*t2878*t11013;
  t11029 = t10427 + t11026;
  t11032 = -1.*t2966*t11013;
  t11035 = t10454 + t11032;
  t11044 = t3439*t11029;
  t11055 = t3251*t11035;
  t11061 = t11044 + t11055;
  t11070 = t3251*t11029;
  t11093 = -1.*t3439*t11035;
  t11095 = t11070 + t11093;
  t11163 = -1.*t3251*t4435;
  t11173 = t11163 + t10675;
  t4629 = t3651*t4520;
  t11138 = -0.7055*t3251;
  t11141 = 0.0184*t3439;
  t11142 = t11138 + t11141;
  t11152 = -0.0184*t3251;
  t11156 = t11152 + t3484;
  t11235 = t2966*t10195;
  t11239 = t2878*t10832;
  t11244 = t11235 + t11239;
  t11250 = -1.*t3439*t11244;
  t11251 = t11250 + t10934;
  t11253 = -1.*t3251*t11244;
  t11254 = t11253 + t10951;
  t11278 = t2966*t10388;
  t11283 = t2878*t11013;
  t11284 = t11278 + t11283;
  t11294 = -1.*t3439*t11284;
  t11298 = t11294 + t11055;
  t11302 = -1.*t3251*t11284;
  t11305 = t11302 + t11093;
  t11184 = -1.*t3719*t4520;
  t4635 = -1.*t3719*t4587;
  t4638 = t4629 + t4635;
  t11331 = 0.0216*t3651;
  t11334 = t11331 + t3874;
  t11342 = -1.1135*t3651;
  t11344 = -0.0216*t3719;
  t11346 = t11342 + t11344;
  t11256 = -1.*t3719*t11251;
  t11358 = t3251*t11244;
  t11359 = t3439*t10904;
  t11361 = t11358 + t11359;
  t11268 = t3651*t11251;
  t11309 = -1.*t3719*t11298;
  t11379 = t3251*t11284;
  t11380 = t3439*t11035;
  t11383 = t11379 + t11380;
  t11316 = t3651*t11298;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t1359*t1452 + t1638*t1806 + 0.1305*(t1638*t1653 + t1028*t1768*t1830) - 1.*t1028*t1830*t1868 + t2079*t2287 + t2359*t2417 + t2546*t2607 + t2737*t2862 + t3002*t3055 + t3151*t3236 + t3506*t3520 + t3591*t3640 + t3786*t3804 + t3883*t3902 + 0.0306*(t3719*t3804 + t3651*t3902) - 1.1312*(t3651*t3804 - 1.*t3719*t3902) + t1278*t578;
  p_output1[10]=t1452*t4047 + t1806*t4085 + 0.1305*t4170 + t2287*t4224 + t2417*t4247 + t2546*t4272 + t2737*t4303 + t3002*t4349 + t3151*t4379 + t3506*t4435 + t3591*t4456 + t3786*t4520 + t3883*t4587 + 0.0306*(t3719*t4520 + t3651*t4587) - 1.1312*t4638 + t4013*t578 + t1830*t1868*t636;
  p_output1[11]=0;
  p_output1[12]=t1806*t4734 + t2287*t5109 + t2417*t5222 + t2546*t5267 + t2737*t5330 + t3002*t5382 + t3151*t5433 + t3506*t5478 + t3591*t5533 + t3786*t5618 + t3883*t5680 + 0.0306*(t3719*t5618 + t3651*t5680) - 1.1312*(t3651*t5618 - 1.*t3719*t5680) + t1009*t1452*t1830*t636 - 1.*t1097*t1868*t636 + t1205*t1830*t578*t636 + 0.1305*(t1653*t4734 + t1097*t1768*t636);
  p_output1[13]=t1009*t1028*t1452*t1830 - 1.*t1028*t1097*t1868 + t1028*t1205*t1830*t578 + t1806*t5882 + 0.1305*(t1028*t1097*t1768 + t1653*t5882) + t2287*t5975 + t2417*t5998 + t2546*t6018 + t2737*t6039 + t3002*t6091 + t3151*t6138 + t3506*t6194 + t3591*t6254 + t3786*t6287 + t3883*t6307 + 0.0306*(t3719*t6287 + t3651*t6307) - 1.1312*(t3651*t6287 - 1.*t3719*t6307);
  p_output1[14]=-1.*t1009*t1097*t1452 - 1.*t1830*t1868 - 1.*t1097*t1205*t578 + t1806*t6452 + 0.1305*(t1768*t1830 + t1653*t6452) + t2287*t6520 + t2417*t6541 + t2546*t6573 + t2737*t6631 + t3002*t6766 + t3151*t6797 + t3506*t6837 + t3591*t6872 + t3786*t6917 + t3883*t6964 + 0.0306*(t3719*t6917 + t3651*t6964) - 1.1312*(t3651*t6917 - 1.*t3719*t6964);
  p_output1[15]=t4047*t578 + t1452*t7091 + 0.1305*t1653*t7105 + t1806*t7105 + t1768*t2287*t7105 + t2417*t7144 + t2546*t7157 + t2737*t7179 + t3002*t7205 + t3151*t7233 + t3506*t7262 + t3591*t7278 + t3786*t7302 + t3883*t7322 + 0.0306*(t3719*t7302 + t3651*t7322) - 1.1312*(t3651*t7302 - 1.*t3719*t7322);
  p_output1[16]=t1278*t1452 + t578*t7418 + 0.1305*t1653*t7430 + t1806*t7430 + t1768*t2287*t7430 + t2417*t7447 + t2546*t7467 + t2737*t7479 + t3002*t7504 + t3151*t7522 + t3506*t7543 + t3591*t7556 + t3786*t7601 + t3883*t7620 + 0.0306*(t3719*t7601 + t3651*t7620) - 1.1312*(t3651*t7601 - 1.*t3719*t7620);
  p_output1[17]=-1.*t1205*t1452*t1830 + t1009*t1830*t578 + t7742 + t7743 + t7747 + t7770 + t7792 + t7812 + t7843 + t7859 + t7887 + t7941 + t7956 + t7977 + t7988 + t8022;
  p_output1[18]=0.135*t1378*t4013 - 0.135*t383*t4047 + 0.1305*t1653*t4247 + t1806*t4247 + t1768*t2287*t4247 + t2417*t8061 + t2546*t8094 + t2737*t8112 + t3002*t8124 + t3151*t8138 + t3506*t8161 + t3591*t8179 + t3786*t8216 + t3883*t8259 + 0.0306*(t3719*t8216 + t3651*t8259) - 1.1312*(t3651*t8216 - 1.*t3719*t8259);
  p_output1[19]=-0.135*t383*t7418 + 0.135*t1378*t8358 + 0.1305*t1653*t8379 + t1806*t8379 + t1768*t2287*t8379 + t2417*t8400 + t2546*t8426 + t2737*t8443 + t3002*t8468 + t3151*t8494 + t3506*t8511 + t3591*t8546 + t3786*t8580 + t3883*t8614 + 0.0306*(t3719*t8580 + t3651*t8614) - 1.1312*(t3651*t8580 - 1.*t3719*t8614);
  p_output1[20]=0.135*t1205*t1378*t1830 - 0.135*t1009*t1830*t383 + t7742 + t7743 + t7747 + t7770 + t7792 + t7812 + t7843 + t7859 + t7887 + t7941 + t7956 + t7977 + t7988 + t8022;
  p_output1[21]=t2287*t4170 + t2083*t2546*t4170 - 1.*t2249*t2737*t4170 + 0.1305*(-1.*t1768*t4085 - 1.*t1653*t1830*t636) + t1830*t636*t8745 + t4085*t8753 + t3002*t8821 + t3151*t8830 + t3506*t8841 + t3591*t8850 + t3786*t8860 + t3883*t8873 + 0.0306*(t3719*t8860 + t3651*t8873) - 1.1312*(t3651*t8860 - 1.*t3719*t8873);
  p_output1[22]=t1028*t1830*t8745 + t8753*t8929 + 0.1305*(t1983 - 1.*t1768*t8929) + t2287*t8943 + t2083*t2546*t8943 - 1.*t2249*t2737*t8943 + t3002*t9003 + t3151*t9024 + t3506*t9040 + t3591*t9052 + t3786*t9070 + t3883*t9086 + 0.0306*(t3719*t9070 + t3651*t9086) - 1.1312*(t3651*t9070 - 1.*t3719*t9086);
  p_output1[23]=-1.*t1097*t8745 + t8753*t9140 + 0.1305*(t1097*t1653 - 1.*t1768*t9140) + t2287*t9152 + t2083*t2546*t9152 - 1.*t2249*t2737*t9152 + t3002*t9191 + t3151*t9216 + t3506*t9233 + t3591*t9245 + t3786*t9258 + t3883*t9283 + 0.0306*(t3719*t9258 + t3651*t9283) - 1.1312*(t3651*t9258 - 1.*t3719*t9283);
  p_output1[24]=t2546*t4303 + t4247*t9337 + t4224*t9359 + t2737*t9372 + t3151*t9399 + t3002*t9416 + t3591*t9427 + t3506*t9445 + t3883*t9456 + t3786*t9470 - 1.1312*(-1.*t3719*t9456 + t3651*t9470) + 0.0306*(t3651*t9456 + t3719*t9470);
  p_output1[25]=t8379*t9337 + t9359*t9527 + t2737*t9549 + t2546*t9568 + t3151*t9578 + t3002*t9617 + t3591*t9656 + t3506*t9679 + t3883*t9683 + t3786*t9699 - 1.1312*(-1.*t3719*t9683 + t3651*t9699) + 0.0306*(t3651*t9683 + t3719*t9699);
  p_output1[26]=t7735*t9337 + t9359*t9795 + t2737*t9832 + t2546*t9847 + t3151*t9864 + t3002*t9879 + t3591*t9902 + t3506*t9932 + t3883*t9950 + t3786*t9963 - 1.1312*(-1.*t3719*t9950 + t3651*t9963) + 0.0306*(t3651*t9950 + t3719*t9963);
  p_output1[27]=t10023*t3002 + t10045*t3506 + t10031*t3591 - 1.1312*(t10093*t3651 - 1.*t10059*t3719) + 0.0306*(t10059*t3651 + t10093*t3719) + t10093*t3786 + t10059*t3883 + t10010*t4272 + t10013*t4303 + t3151*t4349;
  p_output1[28]=t10010*t10178 + t10234*t3002 + t10195*t3151 + t10269*t3506 + t10253*t3591 - 1.1312*(t10291*t3651 - 1.*t10277*t3719) + 0.0306*(t10277*t3651 + t10291*t3719) + t10291*t3786 + t10277*t3883 + t10013*t9568;
  p_output1[29]=t10010*t10365 + t10412*t3002 + t10388*t3151 + t10462*t3506 + t10444*t3591 - 1.1312*(t10521*t3651 - 1.*t10509*t3719) + 0.0306*(t10509*t3651 + t10521*t3719) + t10521*t3786 + t10509*t3883 + t10013*t9847;
  p_output1[30]=t10643*t3591 - 1.1312*(t10677*t3651 - 1.*t10668*t3719) + 0.0306*(t10668*t3651 + t10677*t3719) + t10677*t3786 + t10668*t3883 + t10590*t4349 + t10609*t4379 + t3506*t4456;
  p_output1[31]=t10195*t10590 + t10609*t10832 + t10904*t3506 + t10885*t3591 - 1.1312*(t10954*t3651 - 1.*t10937*t3719) + 0.0306*(t10937*t3651 + t10954*t3719) + t10954*t3786 + t10937*t3883;
  p_output1[32]=t10388*t10590 + t10609*t11013 + t11035*t3506 + t11029*t3591 - 1.1312*(t11095*t3651 - 1.*t11061*t3719) + 0.0306*(t11061*t3651 + t11095*t3719) + t11095*t3786 + t11061*t3883;
  p_output1[33]=-1.1312*(t11184 + t11173*t3651) + t11173*t3786 + t11142*t4435 + t11156*t4456 + t3883*t4520 + 0.0306*(t11173*t3719 + t4629);
  p_output1[34]=t10904*t11156 + t11142*t11244 - 1.1312*(t11256 + t11254*t3651) + 0.0306*(t11268 + t11254*t3719) + t11254*t3786 + t11251*t3883;
  p_output1[35]=t11035*t11156 + t11142*t11284 - 1.1312*(t11309 + t11305*t3651) + 0.0306*(t11316 + t11305*t3719) + t11305*t3786 + t11298*t3883;
  p_output1[36]=t11334*t4520 + t11346*t4587 - 1.1312*(t11184 - 1.*t3651*t4587) + 0.0306*t4638;
  p_output1[37]=t11251*t11334 + t11346*t11361 - 1.1312*(t11256 - 1.*t11361*t3651) + 0.0306*(t11268 - 1.*t11361*t3719);
  p_output1[38]=t11298*t11334 + t11346*t11383 - 1.1312*(t11309 - 1.*t11383*t3651) + 0.0306*(t11316 - 1.*t11383*t3719);
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "J_LeftToeBottom_mex.hh"

namespace SymExpression
{

void J_LeftToeBottom_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
