/*
 * Automatically Generated from Mathematica.
 * Wed 15 Nov 2017 08:32:17 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t3456;
  double t3469;
  double t3470;
  double t3453;
  double t3471;
  double t3425;
  double t3467;
  double t3473;
  double t3495;
  double t3499;
  double t3500;
  double t3502;
  double t3504;
  double t3526;
  double t3535;
  double t3540;
  double t3543;
  double t3519;
  double t3524;
  double t3525;
  double t3549;
  double t3583;
  double t3585;
  double t3586;
  double t3593;
  double t3578;
  double t3579;
  double t3582;
  double t3600;
  double t3601;
  double t3602;
  double t3618;
  double t3621;
  double t3623;
  double t3627;
  double t3635;
  double t3636;
  double t3637;
  double t3648;
  double t3649;
  double t3650;
  double t3652;
  double t3653;
  double t3654;
  double t3657;
  double t3661;
  double t3662;
  double t3663;
  double t3671;
  double t3672;
  double t3674;
  double t3677;
  double t3679;
  double t3682;
  double t3685;
  double t3689;
  double t3692;
  double t3693;
  double t3702;
  double t3704;
  double t3705;
  double t3426;
  double t3436;
  double t3450;
  double t3452;
  double t3516;
  double t3517;
  double t3719;
  double t3720;
  double t3721;
  double t3723;
  double t3724;
  double t3725;
  double t3542;
  double t3545;
  double t3547;
  double t3550;
  double t3552;
  double t3563;
  double t3727;
  double t3728;
  double t3729;
  double t3590;
  double t3595;
  double t3597;
  double t3604;
  double t3606;
  double t3607;
  double t3624;
  double t3631;
  double t3634;
  double t3739;
  double t3740;
  double t3741;
  double t3744;
  double t3745;
  double t3747;
  double t3643;
  double t3644;
  double t3647;
  double t3655;
  double t3658;
  double t3660;
  double t3750;
  double t3751;
  double t3752;
  double t3754;
  double t3756;
  double t3757;
  double t3666;
  double t3667;
  double t3669;
  double t3683;
  double t3686;
  double t3688;
  double t3760;
  double t3761;
  double t3764;
  double t3766;
  double t3767;
  double t3768;
  double t3699;
  double t3700;
  double t3701;
  double t3770;
  double t3771;
  double t3772;
  double t3774;
  double t3775;
  double t3776;
  double t3789;
  double t3790;
  double t3791;
  double t3798;
  double t3799;
  double t3800;
  double t3802;
  double t3803;
  double t3804;
  double t3806;
  double t3807;
  double t3808;
  double t3810;
  double t3811;
  double t3812;
  double t3814;
  double t3815;
  double t3816;
  double t3818;
  double t3819;
  double t3820;
  double t3822;
  double t3823;
  double t3824;
  double t3826;
  double t3827;
  double t3828;
  double t3841;
  double t3842;
  double t3843;
  double t3850;
  double t3851;
  double t3852;
  double t3854;
  double t3855;
  double t3856;
  double t3858;
  double t3859;
  double t3860;
  double t3862;
  double t3863;
  double t3864;
  double t3866;
  double t3867;
  double t3868;
  double t3870;
  double t3871;
  double t3872;
  double t3874;
  double t3875;
  double t3876;
  double t3878;
  double t3879;
  double t3880;
  double t3893;
  double t3894;
  double t3895;
  double t3902;
  double t3903;
  double t3904;
  double t3906;
  double t3907;
  double t3908;
  double t3910;
  double t3911;
  double t3912;
  double t3914;
  double t3915;
  double t3916;
  double t3918;
  double t3919;
  double t3920;
  double t3922;
  double t3923;
  double t3924;
  double t3926;
  double t3927;
  double t3928;
  double t3930;
  double t3931;
  double t3932;
  double t3944;
  double t3945;
  double t3946;
  double t3948;
  double t3949;
  double t3953;
  double t3954;
  double t3955;
  double t3957;
  double t3958;
  double t3959;
  double t3961;
  double t3962;
  double t3963;
  double t3965;
  double t3966;
  double t3967;
  double t3969;
  double t3970;
  double t3971;
  double t3973;
  double t3974;
  double t3975;
  double t3977;
  double t3978;
  double t3979;
  double t3990;
  double t3991;
  double t3992;
  double t3995;
  double t3996;
  double t3997;
  double t4001;
  double t4002;
  double t4004;
  double t4005;
  double t4006;
  double t4008;
  double t4009;
  double t4010;
  double t4012;
  double t4013;
  double t4014;
  double t4016;
  double t4017;
  double t4018;
  double t4020;
  double t4021;
  double t4022;
  double t4024;
  double t4025;
  double t4026;
  double t4039;
  double t4040;
  double t4041;
  double t4045;
  double t4046;
  double t4047;
  double t4049;
  double t4050;
  double t4051;
  double t4053;
  double t4054;
  double t4055;
  double t4057;
  double t4058;
  double t4059;
  double t4061;
  double t4062;
  double t4063;
  double t4065;
  double t4066;
  double t4067;
  double t4069;
  double t4070;
  double t4071;
  double t4087;
  double t4088;
  double t4090;
  double t4091;
  double t4092;
  double t4094;
  double t4095;
  double t4096;
  double t4098;
  double t4099;
  double t4100;
  double t4102;
  double t4103;
  double t4104;
  double t4106;
  double t4107;
  double t4108;
  double t4110;
  double t4111;
  double t4112;
  double t4124;
  double t4125;
  double t4126;
  double t4128;
  double t4129;
  double t4133;
  double t4134;
  double t4136;
  double t4137;
  double t4138;
  double t4140;
  double t4141;
  double t4142;
  double t4144;
  double t4145;
  double t4146;
  double t4148;
  double t4149;
  double t4150;
  double t4152;
  double t4153;
  double t4154;
  double t4156;
  double t4157;
  double t4158;
  double t4042;
  double t4043;
  double t4044;
  double t4048;
  double t4052;
  double t4056;
  double t4060;
  double t4064;
  double t4068;
  double t4072;
  double t4073;
  double t4074;
  double t4075;
  double t4076;
  double t4077;
  double t4078;
  double t4079;
  double t4080;
  double t3732;
  double t3734;
  double t3736;
  double t4186;
  double t4187;
  double t4188;
  double t4190;
  double t4191;
  double t4192;
  double t4194;
  double t4195;
  double t4196;
  double t4198;
  double t4199;
  double t4200;
  double t4172;
  double t4173;
  double t4174;
  double t4176;
  double t4177;
  double t4212;
  double t4213;
  double t4214;
  double t4216;
  double t4217;
  double t4218;
  double t4225;
  double t4226;
  double t4227;
  double t4229;
  double t4230;
  double t4231;
  double t4233;
  double t4234;
  double t4235;
  double t4237;
  double t4238;
  double t4239;
  double t4251;
  double t4252;
  double t4253;
  double t4255;
  double t4256;
  double t4257;
  double t4265;
  double t4266;
  double t4267;
  double t4269;
  double t4270;
  double t4271;
  double t4273;
  double t4274;
  double t4275;
  double t4277;
  double t4278;
  double t4279;
  double t4297;
  double t4298;
  double t4299;
  double t4302;
  double t4303;
  double t4305;
  double t4306;
  double t4307;
  double t4309;
  double t4310;
  double t4311;
  double t4313;
  double t4314;
  double t4315;
  double t4290;
  double t4291;
  double t4293;
  double t4294;
  double t4295;
  double t4327;
  double t4328;
  double t4329;
  double t4331;
  double t4332;
  double t4333;
  double t4335;
  double t4336;
  double t4337;
  double t4339;
  double t4340;
  double t4341;
  double t4343;
  double t4344;
  double t4345;
  double t4347;
  double t4348;
  double t4349;
  double t4351;
  double t4352;
  double t4353;
  double t4365;
  double t4366;
  double t4367;
  double t4369;
  double t4370;
  double t4371;
  double t4373;
  double t4374;
  double t4375;
  double t4377;
  double t4378;
  double t4379;
  double t4381;
  double t4382;
  double t4383;
  double t4385;
  double t4386;
  double t4387;
  double t4389;
  double t4390;
  double t4391;
  double t4410;
  double t4411;
  double t4413;
  double t4414;
  double t4415;
  double t4417;
  double t4418;
  double t4402;
  double t4403;
  double t4404;
  double t4406;
  double t4407;
  double t4429;
  double t4430;
  double t4431;
  double t4434;
  double t4435;
  double t4437;
  double t4438;
  double t4440;
  double t4441;
  double t4442;
  double t4444;
  double t4445;
  double t4446;
  double t4457;
  double t4458;
  double t4459;
  double t4462;
  double t4463;
  double t4465;
  double t4466;
  double t4468;
  double t4469;
  double t4470;
  double t4472;
  double t4473;
  double t4474;
  double t4492;
  double t4493;
  double t3779;
  double t4485;
  double t4486;
  double t4488;
  double t4489;
  double t4490;
  double t4505;
  double t4506;
  double t4507;
  double t4509;
  double t4510;
  double t4512;
  double t4513;
  double t4525;
  double t4526;
  double t4527;
  double t4529;
  double t4530;
  double t4532;
  double t4533;
  double t3778;
  double t3780;
  double t4500;
  double t4544;
  double t4545;
  double t4546;
  double t4548;
  double t4549;
  double t4556;
  double t4557;
  double t4558;
  double t4516;
  double t4520;
  double t4568;
  double t4569;
  double t4570;
  double t4536;
  double t4540;
  t3456 = Cos(var1[5]);
  t3469 = Sin(var1[3]);
  t3470 = Sin(var1[4]);
  t3453 = Cos(var1[3]);
  t3471 = Sin(var1[5]);
  t3425 = Cos(var1[6]);
  t3467 = -1.*t3453*t3456;
  t3473 = -1.*t3469*t3470*t3471;
  t3495 = t3467 + t3473;
  t3499 = -1.*t3456*t3469*t3470;
  t3500 = t3453*t3471;
  t3502 = t3499 + t3500;
  t3504 = Sin(var1[6]);
  t3526 = Cos(var1[7]);
  t3535 = -1.*t3526;
  t3540 = 1. + t3535;
  t3543 = Sin(var1[7]);
  t3519 = t3425*t3495;
  t3524 = t3502*t3504;
  t3525 = t3519 + t3524;
  t3549 = Cos(var1[4]);
  t3583 = Cos(var1[8]);
  t3585 = -1.*t3583;
  t3586 = 1. + t3585;
  t3593 = Sin(var1[8]);
  t3578 = -1.*t3549*t3526*t3469;
  t3579 = t3525*t3543;
  t3582 = t3578 + t3579;
  t3600 = t3425*t3502;
  t3601 = -1.*t3495*t3504;
  t3602 = t3600 + t3601;
  t3618 = Cos(var1[9]);
  t3621 = -1.*t3618;
  t3623 = 1. + t3621;
  t3627 = Sin(var1[9]);
  t3635 = t3583*t3582;
  t3636 = t3602*t3593;
  t3637 = t3635 + t3636;
  t3648 = t3583*t3602;
  t3649 = -1.*t3582*t3593;
  t3650 = t3648 + t3649;
  t3652 = Cos(var1[10]);
  t3653 = -1.*t3652;
  t3654 = 1. + t3653;
  t3657 = Sin(var1[10]);
  t3661 = -1.*t3627*t3637;
  t3662 = t3618*t3650;
  t3663 = t3661 + t3662;
  t3671 = t3618*t3637;
  t3672 = t3627*t3650;
  t3674 = t3671 + t3672;
  t3677 = Cos(var1[11]);
  t3679 = -1.*t3677;
  t3682 = 1. + t3679;
  t3685 = Sin(var1[11]);
  t3689 = t3657*t3663;
  t3692 = t3652*t3674;
  t3693 = t3689 + t3692;
  t3702 = t3652*t3663;
  t3704 = -1.*t3657*t3674;
  t3705 = t3702 + t3704;
  t3426 = -1.*t3425;
  t3436 = 1. + t3426;
  t3450 = 0.135*t3436;
  t3452 = 0. + t3450;
  t3516 = -0.135*t3504;
  t3517 = 0. + t3516;
  t3719 = -1.*t3456*t3469;
  t3720 = t3453*t3470*t3471;
  t3721 = t3719 + t3720;
  t3723 = t3453*t3456*t3470;
  t3724 = t3469*t3471;
  t3725 = t3723 + t3724;
  t3542 = 0.135*t3540;
  t3545 = 0.049*t3543;
  t3547 = 0. + t3542 + t3545;
  t3550 = -0.049*t3540;
  t3552 = 0.135*t3543;
  t3563 = 0. + t3550 + t3552;
  t3727 = t3425*t3721;
  t3728 = t3725*t3504;
  t3729 = t3727 + t3728;
  t3590 = -0.049*t3586;
  t3595 = -0.09*t3593;
  t3597 = 0. + t3590 + t3595;
  t3604 = -0.09*t3586;
  t3606 = 0.049*t3593;
  t3607 = 0. + t3604 + t3606;
  t3624 = -0.049*t3623;
  t3631 = -0.21*t3627;
  t3634 = 0. + t3624 + t3631;
  t3739 = t3453*t3549*t3526;
  t3740 = t3729*t3543;
  t3741 = t3739 + t3740;
  t3744 = t3425*t3725;
  t3745 = -1.*t3721*t3504;
  t3747 = t3744 + t3745;
  t3643 = -0.21*t3623;
  t3644 = 0.049*t3627;
  t3647 = 0. + t3643 + t3644;
  t3655 = -0.2707*t3654;
  t3658 = 0.0016*t3657;
  t3660 = 0. + t3655 + t3658;
  t3750 = t3583*t3741;
  t3751 = t3747*t3593;
  t3752 = t3750 + t3751;
  t3754 = t3583*t3747;
  t3756 = -1.*t3741*t3593;
  t3757 = t3754 + t3756;
  t3666 = -0.0016*t3654;
  t3667 = -0.2707*t3657;
  t3669 = 0. + t3666 + t3667;
  t3683 = 0.0184*t3682;
  t3686 = -0.7055*t3685;
  t3688 = 0. + t3683 + t3686;
  t3760 = -1.*t3627*t3752;
  t3761 = t3618*t3757;
  t3764 = t3760 + t3761;
  t3766 = t3618*t3752;
  t3767 = t3627*t3757;
  t3768 = t3766 + t3767;
  t3699 = -0.7055*t3682;
  t3700 = -0.0184*t3685;
  t3701 = 0. + t3699 + t3700;
  t3770 = t3657*t3764;
  t3771 = t3652*t3768;
  t3772 = t3770 + t3771;
  t3774 = t3652*t3764;
  t3775 = -1.*t3657*t3768;
  t3776 = t3774 + t3775;
  t3789 = t3453*t3549*t3425*t3471;
  t3790 = t3453*t3549*t3456*t3504;
  t3791 = t3789 + t3790;
  t3798 = -1.*t3453*t3526*t3470;
  t3799 = t3791*t3543;
  t3800 = t3798 + t3799;
  t3802 = t3453*t3549*t3456*t3425;
  t3803 = -1.*t3453*t3549*t3471*t3504;
  t3804 = t3802 + t3803;
  t3806 = t3583*t3800;
  t3807 = t3804*t3593;
  t3808 = t3806 + t3807;
  t3810 = t3583*t3804;
  t3811 = -1.*t3800*t3593;
  t3812 = t3810 + t3811;
  t3814 = -1.*t3627*t3808;
  t3815 = t3618*t3812;
  t3816 = t3814 + t3815;
  t3818 = t3618*t3808;
  t3819 = t3627*t3812;
  t3820 = t3818 + t3819;
  t3822 = t3657*t3816;
  t3823 = t3652*t3820;
  t3824 = t3822 + t3823;
  t3826 = t3652*t3816;
  t3827 = -1.*t3657*t3820;
  t3828 = t3826 + t3827;
  t3841 = t3549*t3425*t3469*t3471;
  t3842 = t3549*t3456*t3469*t3504;
  t3843 = t3841 + t3842;
  t3850 = -1.*t3526*t3469*t3470;
  t3851 = t3843*t3543;
  t3852 = t3850 + t3851;
  t3854 = t3549*t3456*t3425*t3469;
  t3855 = -1.*t3549*t3469*t3471*t3504;
  t3856 = t3854 + t3855;
  t3858 = t3583*t3852;
  t3859 = t3856*t3593;
  t3860 = t3858 + t3859;
  t3862 = t3583*t3856;
  t3863 = -1.*t3852*t3593;
  t3864 = t3862 + t3863;
  t3866 = -1.*t3627*t3860;
  t3867 = t3618*t3864;
  t3868 = t3866 + t3867;
  t3870 = t3618*t3860;
  t3871 = t3627*t3864;
  t3872 = t3870 + t3871;
  t3874 = t3657*t3868;
  t3875 = t3652*t3872;
  t3876 = t3874 + t3875;
  t3878 = t3652*t3868;
  t3879 = -1.*t3657*t3872;
  t3880 = t3878 + t3879;
  t3893 = -1.*t3425*t3470*t3471;
  t3894 = -1.*t3456*t3470*t3504;
  t3895 = t3893 + t3894;
  t3902 = -1.*t3549*t3526;
  t3903 = t3895*t3543;
  t3904 = t3902 + t3903;
  t3906 = -1.*t3456*t3425*t3470;
  t3907 = t3470*t3471*t3504;
  t3908 = t3906 + t3907;
  t3910 = t3583*t3904;
  t3911 = t3908*t3593;
  t3912 = t3910 + t3911;
  t3914 = t3583*t3908;
  t3915 = -1.*t3904*t3593;
  t3916 = t3914 + t3915;
  t3918 = -1.*t3627*t3912;
  t3919 = t3618*t3916;
  t3920 = t3918 + t3919;
  t3922 = t3618*t3912;
  t3923 = t3627*t3916;
  t3924 = t3922 + t3923;
  t3926 = t3657*t3920;
  t3927 = t3652*t3924;
  t3928 = t3926 + t3927;
  t3930 = t3652*t3920;
  t3931 = -1.*t3657*t3924;
  t3932 = t3930 + t3931;
  t3944 = t3456*t3469;
  t3945 = -1.*t3453*t3470*t3471;
  t3946 = t3944 + t3945;
  t3948 = t3946*t3504;
  t3949 = t3744 + t3948;
  t3953 = t3425*t3946;
  t3954 = -1.*t3725*t3504;
  t3955 = t3953 + t3954;
  t3957 = t3583*t3949*t3543;
  t3958 = t3955*t3593;
  t3959 = t3957 + t3958;
  t3961 = t3583*t3955;
  t3962 = -1.*t3949*t3543*t3593;
  t3963 = t3961 + t3962;
  t3965 = -1.*t3627*t3959;
  t3966 = t3618*t3963;
  t3967 = t3965 + t3966;
  t3969 = t3618*t3959;
  t3970 = t3627*t3963;
  t3971 = t3969 + t3970;
  t3973 = t3657*t3967;
  t3974 = t3652*t3971;
  t3975 = t3973 + t3974;
  t3977 = t3652*t3967;
  t3978 = -1.*t3657*t3971;
  t3979 = t3977 + t3978;
  t3990 = t3456*t3469*t3470;
  t3991 = -1.*t3453*t3471;
  t3992 = t3990 + t3991;
  t3995 = t3425*t3992;
  t3996 = t3495*t3504;
  t3997 = t3995 + t3996;
  t4001 = -1.*t3992*t3504;
  t4002 = t3519 + t4001;
  t4004 = t3583*t3997*t3543;
  t4005 = t4002*t3593;
  t4006 = t4004 + t4005;
  t4008 = t3583*t4002;
  t4009 = -1.*t3997*t3543*t3593;
  t4010 = t4008 + t4009;
  t4012 = -1.*t3627*t4006;
  t4013 = t3618*t4010;
  t4014 = t4012 + t4013;
  t4016 = t3618*t4006;
  t4017 = t3627*t4010;
  t4018 = t4016 + t4017;
  t4020 = t3657*t4014;
  t4021 = t3652*t4018;
  t4022 = t4020 + t4021;
  t4024 = t3652*t4014;
  t4025 = -1.*t3657*t4018;
  t4026 = t4024 + t4025;
  t4039 = t3549*t3456*t3425;
  t4040 = -1.*t3549*t3471*t3504;
  t4041 = t4039 + t4040;
  t4045 = -1.*t3549*t3425*t3471;
  t4046 = -1.*t3549*t3456*t3504;
  t4047 = t4045 + t4046;
  t4049 = t3583*t4041*t3543;
  t4050 = t4047*t3593;
  t4051 = t4049 + t4050;
  t4053 = t3583*t4047;
  t4054 = -1.*t4041*t3543*t3593;
  t4055 = t4053 + t4054;
  t4057 = -1.*t3627*t4051;
  t4058 = t3618*t4055;
  t4059 = t4057 + t4058;
  t4061 = t3618*t4051;
  t4062 = t3627*t4055;
  t4063 = t4061 + t4062;
  t4065 = t3657*t4059;
  t4066 = t3652*t4063;
  t4067 = t4065 + t4066;
  t4069 = t3652*t4059;
  t4070 = -1.*t3657*t4063;
  t4071 = t4069 + t4070;
  t4087 = -1.*t3425*t3721;
  t4088 = t4087 + t3954;
  t4090 = t3583*t3747*t3543;
  t4091 = t4088*t3593;
  t4092 = t4090 + t4091;
  t4094 = t3583*t4088;
  t4095 = -1.*t3747*t3543*t3593;
  t4096 = t4094 + t4095;
  t4098 = -1.*t3627*t4092;
  t4099 = t3618*t4096;
  t4100 = t4098 + t4099;
  t4102 = t3618*t4092;
  t4103 = t3627*t4096;
  t4104 = t4102 + t4103;
  t4106 = t3657*t4100;
  t4107 = t3652*t4104;
  t4108 = t4106 + t4107;
  t4110 = t3652*t4100;
  t4111 = -1.*t3657*t4104;
  t4112 = t4110 + t4111;
  t4124 = t3453*t3456;
  t4125 = t3469*t3470*t3471;
  t4126 = t4124 + t4125;
  t4128 = -1.*t4126*t3504;
  t4129 = t3995 + t4128;
  t4133 = -1.*t3425*t4126;
  t4134 = t4133 + t4001;
  t4136 = t3583*t4129*t3543;
  t4137 = t4134*t3593;
  t4138 = t4136 + t4137;
  t4140 = t3583*t4134;
  t4141 = -1.*t4129*t3543*t3593;
  t4142 = t4140 + t4141;
  t4144 = -1.*t3627*t4138;
  t4145 = t3618*t4142;
  t4146 = t4144 + t4145;
  t4148 = t3618*t4138;
  t4149 = t3627*t4142;
  t4150 = t4148 + t4149;
  t4152 = t3657*t4146;
  t4153 = t3652*t4150;
  t4154 = t4152 + t4153;
  t4156 = t3652*t4146;
  t4157 = -1.*t3657*t4150;
  t4158 = t4156 + t4157;
  t4042 = 0.1305*t3526*t4041;
  t4043 = t4041*t3547;
  t4044 = t4041*t3543*t3597;
  t4048 = t4047*t3607;
  t4052 = t3634*t4051;
  t4056 = t3647*t4055;
  t4060 = t3660*t4059;
  t4064 = t3669*t4063;
  t4068 = t3688*t4067;
  t4072 = t3701*t4071;
  t4073 = -1.*t3685*t4067;
  t4074 = t3677*t4071;
  t4075 = t4073 + t4074;
  t4076 = -0.7055*t4075;
  t4077 = t3677*t4067;
  t4078 = t3685*t4071;
  t4079 = t4077 + t4078;
  t4080 = 0.0184*t4079;
  t3732 = t3526*t3729;
  t3734 = -1.*t3453*t3549*t3543;
  t3736 = t3732 + t3734;
  t4186 = -1.*t3583*t3627*t3736;
  t4187 = -1.*t3618*t3736*t3593;
  t4188 = t4186 + t4187;
  t4190 = t3618*t3583*t3736;
  t4191 = -1.*t3627*t3736*t3593;
  t4192 = t4190 + t4191;
  t4194 = t3657*t4188;
  t4195 = t3652*t4192;
  t4196 = t4194 + t4195;
  t4198 = t3652*t4188;
  t4199 = -1.*t3657*t4192;
  t4200 = t4198 + t4199;
  t4172 = 0.135*t3526;
  t4173 = -0.049*t3543;
  t4174 = t4172 + t4173;
  t4176 = 0.049*t3526;
  t4177 = t4176 + t3552;
  t4212 = t3425*t4126;
  t4213 = t3992*t3504;
  t4214 = t4212 + t4213;
  t4216 = t3526*t4214;
  t4217 = -1.*t3549*t3469*t3543;
  t4218 = t4216 + t4217;
  t4225 = -1.*t3583*t3627*t4218;
  t4226 = -1.*t3618*t4218*t3593;
  t4227 = t4225 + t4226;
  t4229 = t3618*t3583*t4218;
  t4230 = -1.*t3627*t4218*t3593;
  t4231 = t4229 + t4230;
  t4233 = t3657*t4227;
  t4234 = t3652*t4231;
  t4235 = t4233 + t4234;
  t4237 = t3652*t4227;
  t4238 = -1.*t3657*t4231;
  t4239 = t4237 + t4238;
  t4251 = t3549*t3425*t3471;
  t4252 = t3549*t3456*t3504;
  t4253 = t4251 + t4252;
  t4255 = t3526*t4253;
  t4256 = t3470*t3543;
  t4257 = t4255 + t4256;
  t4265 = -1.*t3583*t3627*t4257;
  t4266 = -1.*t3618*t4257*t3593;
  t4267 = t4265 + t4266;
  t4269 = t3618*t3583*t4257;
  t4270 = -1.*t3627*t4257*t3593;
  t4271 = t4269 + t4270;
  t4273 = t3657*t4267;
  t4274 = t3652*t4271;
  t4275 = t4273 + t4274;
  t4277 = t3652*t4267;
  t4278 = -1.*t3657*t4271;
  t4279 = t4277 + t4278;
  t4297 = -1.*t3583*t3741;
  t4298 = -1.*t3747*t3593;
  t4299 = t4297 + t4298;
  t4302 = t3627*t4299;
  t4303 = t4302 + t3761;
  t4305 = t3618*t4299;
  t4306 = -1.*t3627*t3757;
  t4307 = t4305 + t4306;
  t4309 = -1.*t3657*t4303;
  t4310 = t3652*t4307;
  t4311 = t4309 + t4310;
  t4313 = t3652*t4303;
  t4314 = t3657*t4307;
  t4315 = t4313 + t4314;
  t4290 = 0.049*t3583;
  t4291 = t4290 + t3595;
  t4293 = -0.09*t3583;
  t4294 = -0.049*t3593;
  t4295 = t4293 + t4294;
  t4327 = t3549*t3526*t3469;
  t4328 = t4214*t3543;
  t4329 = t4327 + t4328;
  t4331 = -1.*t3583*t4329;
  t4332 = -1.*t4129*t3593;
  t4333 = t4331 + t4332;
  t4335 = t3583*t4129;
  t4336 = -1.*t4329*t3593;
  t4337 = t4335 + t4336;
  t4339 = t3627*t4333;
  t4340 = t3618*t4337;
  t4341 = t4339 + t4340;
  t4343 = t3618*t4333;
  t4344 = -1.*t3627*t4337;
  t4345 = t4343 + t4344;
  t4347 = -1.*t3657*t4341;
  t4348 = t3652*t4345;
  t4349 = t4347 + t4348;
  t4351 = t3652*t4341;
  t4352 = t3657*t4345;
  t4353 = t4351 + t4352;
  t4365 = -1.*t3526*t3470;
  t4366 = t4253*t3543;
  t4367 = t4365 + t4366;
  t4369 = -1.*t3583*t4367;
  t4370 = -1.*t4041*t3593;
  t4371 = t4369 + t4370;
  t4373 = t3583*t4041;
  t4374 = -1.*t4367*t3593;
  t4375 = t4373 + t4374;
  t4377 = t3627*t4371;
  t4378 = t3618*t4375;
  t4379 = t4377 + t4378;
  t4381 = t3618*t4371;
  t4382 = -1.*t3627*t4375;
  t4383 = t4381 + t4382;
  t4385 = -1.*t3657*t4379;
  t4386 = t3652*t4383;
  t4387 = t4385 + t4386;
  t4389 = t3652*t4379;
  t4390 = t3657*t4383;
  t4391 = t4389 + t4390;
  t4410 = -1.*t3618*t3752;
  t4411 = t4410 + t4306;
  t4413 = -1.*t3657*t3764;
  t4414 = t3652*t4411;
  t4415 = t4413 + t4414;
  t4417 = t3657*t4411;
  t4418 = t3774 + t4417;
  t4402 = -0.21*t3618;
  t4403 = -0.049*t3627;
  t4404 = t4402 + t4403;
  t4406 = 0.049*t3618;
  t4407 = t4406 + t3631;
  t4429 = t3583*t4329;
  t4430 = t4129*t3593;
  t4431 = t4429 + t4430;
  t4434 = -1.*t3627*t4431;
  t4435 = t4434 + t4340;
  t4437 = -1.*t3618*t4431;
  t4438 = t4437 + t4344;
  t4440 = -1.*t3657*t4435;
  t4441 = t3652*t4438;
  t4442 = t4440 + t4441;
  t4444 = t3652*t4435;
  t4445 = t3657*t4438;
  t4446 = t4444 + t4445;
  t4457 = t3583*t4367;
  t4458 = t4041*t3593;
  t4459 = t4457 + t4458;
  t4462 = -1.*t3627*t4459;
  t4463 = t4462 + t4378;
  t4465 = -1.*t3618*t4459;
  t4466 = t4465 + t4382;
  t4468 = -1.*t3657*t4463;
  t4469 = t3652*t4466;
  t4470 = t4468 + t4469;
  t4472 = t3652*t4463;
  t4473 = t3657*t4466;
  t4474 = t4472 + t4473;
  t4492 = -1.*t3652*t3768;
  t4493 = t4413 + t4492;
  t3779 = t3677*t3776;
  t4485 = 0.0016*t3652;
  t4486 = t4485 + t3667;
  t4488 = -0.2707*t3652;
  t4489 = -0.0016*t3657;
  t4490 = t4488 + t4489;
  t4505 = t3618*t4431;
  t4506 = t3627*t4337;
  t4507 = t4505 + t4506;
  t4509 = -1.*t3652*t4507;
  t4510 = t4440 + t4509;
  t4512 = -1.*t3657*t4507;
  t4513 = t4444 + t4512;
  t4525 = t3618*t4459;
  t4526 = t3627*t4375;
  t4527 = t4525 + t4526;
  t4529 = -1.*t3652*t4527;
  t4530 = t4468 + t4529;
  t4532 = -1.*t3657*t4527;
  t4533 = t4472 + t4532;
  t3778 = -1.*t3685*t3772;
  t3780 = t3778 + t3779;
  t4500 = -1.*t3685*t3776;
  t4544 = -0.7055*t3677;
  t4545 = 0.0184*t3685;
  t4546 = t4544 + t4545;
  t4548 = -0.0184*t3677;
  t4549 = t4548 + t3686;
  t4556 = t3657*t4435;
  t4557 = t3652*t4507;
  t4558 = t4556 + t4557;
  t4516 = t3677*t4513;
  t4520 = -1.*t3685*t4513;
  t4568 = t3657*t4463;
  t4569 = t3652*t4527;
  t4570 = t4568 + t4569;
  t4536 = t3677*t4533;
  t4540 = -1.*t3685*t4533;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t3452*t3495 + t3502*t3517 + t3525*t3547 + 0.1305*(t3525*t3526 + t3469*t3543*t3549) - 1.*t3469*t3549*t3563 + t3582*t3597 + t3602*t3607 + t3634*t3637 + t3647*t3650 + t3660*t3663 + t3669*t3674 + t3688*t3693 + t3701*t3705 - 0.7055*(-1.*t3685*t3693 + t3677*t3705) + 0.0184*(t3677*t3693 + t3685*t3705);
  p_output1[10]=t3453*t3549*t3563 + t3452*t3721 + t3517*t3725 + t3547*t3729 + 0.1305*t3736 + t3597*t3741 + t3607*t3747 + t3634*t3752 + t3647*t3757 + t3660*t3764 + t3669*t3768 + t3688*t3772 + t3701*t3776 + 0.0184*(t3677*t3772 + t3685*t3776) - 0.7055*t3780;
  p_output1[11]=0;
  p_output1[12]=t3452*t3453*t3471*t3549 + t3453*t3456*t3517*t3549 - 1.*t3453*t3470*t3563 + t3547*t3791 + 0.1305*(t3453*t3470*t3543 + t3526*t3791) + t3597*t3800 + t3607*t3804 + t3634*t3808 + t3647*t3812 + t3660*t3816 + t3669*t3820 + t3688*t3824 + t3701*t3828 - 0.7055*(-1.*t3685*t3824 + t3677*t3828) + 0.0184*(t3677*t3824 + t3685*t3828);
  p_output1[13]=t3452*t3469*t3471*t3549 + t3456*t3469*t3517*t3549 - 1.*t3469*t3470*t3563 + t3547*t3843 + 0.1305*(t3469*t3470*t3543 + t3526*t3843) + t3597*t3852 + t3607*t3856 + t3634*t3860 + t3647*t3864 + t3660*t3868 + t3669*t3872 + t3688*t3876 + t3701*t3880 - 0.7055*(-1.*t3685*t3876 + t3677*t3880) + 0.0184*(t3677*t3876 + t3685*t3880);
  p_output1[14]=-1.*t3452*t3470*t3471 - 1.*t3456*t3470*t3517 - 1.*t3549*t3563 + t3547*t3895 + 0.1305*(t3543*t3549 + t3526*t3895) + t3597*t3904 + t3607*t3908 + t3634*t3912 + t3647*t3916 + t3660*t3920 + t3669*t3924 + t3688*t3928 + t3701*t3932 - 0.7055*(-1.*t3685*t3928 + t3677*t3932) + 0.0184*(t3677*t3928 + t3685*t3932);
  p_output1[15]=t3452*t3725 + t3517*t3946 + 0.1305*t3526*t3949 + t3547*t3949 + t3543*t3597*t3949 + t3607*t3955 + t3634*t3959 + t3647*t3963 + t3660*t3967 + t3669*t3971 + t3688*t3975 + t3701*t3979 - 0.7055*(-1.*t3685*t3975 + t3677*t3979) + 0.0184*(t3677*t3975 + t3685*t3979);
  p_output1[16]=t3495*t3517 + t3452*t3992 + 0.1305*t3526*t3997 + t3547*t3997 + t3543*t3597*t3997 + t3607*t4002 + t3634*t4006 + t3647*t4010 + t3660*t4014 + t3669*t4018 + t3688*t4022 + t3701*t4026 - 0.7055*(-1.*t3685*t4022 + t3677*t4026) + 0.0184*(t3677*t4022 + t3685*t4026);
  p_output1[17]=t3452*t3456*t3549 - 1.*t3471*t3517*t3549 + t4042 + t4043 + t4044 + t4048 + t4052 + t4056 + t4060 + t4064 + t4068 + t4072 + t4076 + t4080;
  p_output1[18]=0.135*t3504*t3721 - 0.135*t3425*t3725 + 0.1305*t3526*t3747 + t3547*t3747 + t3543*t3597*t3747 + t3607*t4088 + t3634*t4092 + t3647*t4096 + t3660*t4100 + t3669*t4104 + t3688*t4108 + t3701*t4112 - 0.7055*(-1.*t3685*t4108 + t3677*t4112) + 0.0184*(t3677*t4108 + t3685*t4112);
  p_output1[19]=-0.135*t3425*t3992 + 0.135*t3504*t4126 + 0.1305*t3526*t4129 + t3547*t4129 + t3543*t3597*t4129 + t3607*t4134 + t3634*t4138 + t3647*t4142 + t3660*t4146 + t3669*t4150 + t3688*t4154 + t3701*t4158 - 0.7055*(-1.*t3685*t4154 + t3677*t4158) + 0.0184*(t3677*t4154 + t3685*t4158);
  p_output1[20]=-0.135*t3425*t3456*t3549 + 0.135*t3471*t3504*t3549 + t4042 + t4043 + t4044 + t4048 + t4052 + t4056 + t4060 + t4064 + t4068 + t4072 + t4076 + t4080;
  p_output1[21]=0.1305*(-1.*t3453*t3526*t3549 - 1.*t3543*t3729) + t3597*t3736 + t3583*t3634*t3736 - 1.*t3593*t3647*t3736 + t3453*t3549*t4174 + t3729*t4177 + t3660*t4188 + t3669*t4192 + t3688*t4196 + t3701*t4200 - 0.7055*(-1.*t3685*t4196 + t3677*t4200) + 0.0184*(t3677*t4196 + t3685*t4200);
  p_output1[22]=t3469*t3549*t4174 + t4177*t4214 + 0.1305*(t3578 - 1.*t3543*t4214) + t3597*t4218 + t3583*t3634*t4218 - 1.*t3593*t3647*t4218 + t3660*t4227 + t3669*t4231 + t3688*t4235 + t3701*t4239 - 0.7055*(-1.*t3685*t4235 + t3677*t4239) + 0.0184*(t3677*t4235 + t3685*t4239);
  p_output1[23]=-1.*t3470*t4174 + t4177*t4253 + 0.1305*(t3470*t3526 - 1.*t3543*t4253) + t3597*t4257 + t3583*t3634*t4257 - 1.*t3593*t3647*t4257 + t3660*t4267 + t3669*t4271 + t3688*t4275 + t3701*t4279 - 0.7055*(-1.*t3685*t4275 + t3677*t4279) + 0.0184*(t3677*t4275 + t3685*t4279);
  p_output1[24]=t3634*t3757 + t3747*t4291 + t3741*t4295 + t3647*t4299 + t3669*t4303 + t3660*t4307 + t3701*t4311 + t3688*t4315 + 0.0184*(t3685*t4311 + t3677*t4315) - 0.7055*(t3677*t4311 - 1.*t3685*t4315);
  p_output1[25]=t4129*t4291 + t4295*t4329 + t3647*t4333 + t3634*t4337 + t3669*t4341 + t3660*t4345 + t3701*t4349 + t3688*t4353 + 0.0184*(t3685*t4349 + t3677*t4353) - 0.7055*(t3677*t4349 - 1.*t3685*t4353);
  p_output1[26]=t4041*t4291 + t4295*t4367 + t3647*t4371 + t3634*t4375 + t3669*t4379 + t3660*t4383 + t3701*t4387 + t3688*t4391 + 0.0184*(t3685*t4387 + t3677*t4391) - 0.7055*(t3677*t4387 - 1.*t3685*t4391);
  p_output1[27]=t3669*t3764 + t3752*t4404 + t3757*t4407 + t3660*t4411 + t3701*t4415 + t3688*t4418 + 0.0184*(t3685*t4415 + t3677*t4418) - 0.7055*(t3677*t4415 - 1.*t3685*t4418);
  p_output1[28]=t4337*t4407 + t4404*t4431 + t3669*t4435 + t3660*t4438 + t3701*t4442 + t3688*t4446 + 0.0184*(t3685*t4442 + t3677*t4446) - 0.7055*(t3677*t4442 - 1.*t3685*t4446);
  p_output1[29]=t4375*t4407 + t4404*t4459 + t3669*t4463 + t3660*t4466 + t3701*t4470 + t3688*t4474 + 0.0184*(t3685*t4470 + t3677*t4474) - 0.7055*(t3677*t4470 - 1.*t3685*t4474);
  p_output1[30]=t3688*t3776 + t3764*t4486 + t3768*t4490 + t3701*t4493 + 0.0184*(t3779 + t3685*t4493) - 0.7055*(t3677*t4493 + t4500);
  p_output1[31]=t4435*t4486 + t4490*t4507 + t3701*t4510 + t3688*t4513 + 0.0184*(t3685*t4510 + t4516) - 0.7055*(t3677*t4510 + t4520);
  p_output1[32]=t4463*t4486 + t4490*t4527 + t3701*t4530 + t3688*t4533 + 0.0184*(t3685*t4530 + t4536) - 0.7055*(t3677*t4530 + t4540);
  p_output1[33]=0.0184*t3780 - 0.7055*(-1.*t3677*t3772 + t4500) + t3772*t4546 + t3776*t4549;
  p_output1[34]=t4513*t4549 + t4546*t4558 - 0.7055*(t4520 - 1.*t3677*t4558) + 0.0184*(t4516 - 1.*t3685*t4558);
  p_output1[35]=t4533*t4549 + t4546*t4570 - 0.7055*(t4540 - 1.*t3677*t4570) + 0.0184*(t4536 - 1.*t3685*t4570);
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "J_ankle_joint_left_mex.hh"

namespace SymExpression
{

void J_ankle_joint_left_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
