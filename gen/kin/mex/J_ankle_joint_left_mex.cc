/*
 * Automatically Generated from Mathematica.
 * Mon 2 Jul 2018 15:33:13 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t1070;
  double t1662;
  double t1714;
  double t1031;
  double t1905;
  double t223;
  double t1245;
  double t2084;
  double t2271;
  double t2371;
  double t2859;
  double t2896;
  double t2929;
  double t3495;
  double t3514;
  double t3530;
  double t3727;
  double t3321;
  double t3431;
  double t3447;
  double t4153;
  double t5023;
  double t5364;
  double t5478;
  double t5715;
  double t4642;
  double t4842;
  double t4953;
  double t5856;
  double t6026;
  double t6125;
  double t6332;
  double t6386;
  double t6432;
  double t6437;
  double t6487;
  double t6496;
  double t6501;
  double t6667;
  double t6676;
  double t6724;
  double t6777;
  double t6779;
  double t6788;
  double t6830;
  double t6866;
  double t6927;
  double t7037;
  double t7105;
  double t7110;
  double t7121;
  double t7154;
  double t7159;
  double t7164;
  double t7170;
  double t7186;
  double t7198;
  double t7200;
  double t7209;
  double t7221;
  double t7237;
  double t454;
  double t560;
  double t622;
  double t702;
  double t2959;
  double t3059;
  double t7351;
  double t7353;
  double t7359;
  double t7391;
  double t7407;
  double t7408;
  double t3674;
  double t3766;
  double t3887;
  double t4230;
  double t4360;
  double t4430;
  double t7412;
  double t7450;
  double t7461;
  double t5676;
  double t5792;
  double t5793;
  double t6287;
  double t6288;
  double t6292;
  double t6433;
  double t6450;
  double t6483;
  double t7508;
  double t7510;
  double t7524;
  double t7533;
  double t7536;
  double t7539;
  double t6547;
  double t6606;
  double t6621;
  double t6824;
  double t6840;
  double t6858;
  double t7621;
  double t7634;
  double t7638;
  double t7645;
  double t7648;
  double t7656;
  double t7051;
  double t7062;
  double t7091;
  double t7167;
  double t7179;
  double t7180;
  double t7676;
  double t7697;
  double t7717;
  double t7730;
  double t7731;
  double t7733;
  double t7204;
  double t7205;
  double t7206;
  double t7750;
  double t7753;
  double t7771;
  double t7807;
  double t7823;
  double t7826;
  double t7930;
  double t7931;
  double t7938;
  double t7977;
  double t7986;
  double t7988;
  double t8011;
  double t8013;
  double t8022;
  double t8030;
  double t8031;
  double t8034;
  double t8045;
  double t8050;
  double t8055;
  double t8060;
  double t8061;
  double t8073;
  double t8079;
  double t8086;
  double t8089;
  double t8099;
  double t8111;
  double t8113;
  double t8119;
  double t8120;
  double t8121;
  double t8152;
  double t8153;
  double t8155;
  double t8178;
  double t8182;
  double t8187;
  double t8198;
  double t8205;
  double t8209;
  double t8223;
  double t8226;
  double t8231;
  double t8240;
  double t8241;
  double t8245;
  double t8251;
  double t8254;
  double t8268;
  double t8271;
  double t8274;
  double t8275;
  double t8277;
  double t8279;
  double t8280;
  double t8286;
  double t8289;
  double t8292;
  double t8333;
  double t8338;
  double t8342;
  double t8363;
  double t8364;
  double t8366;
  double t8373;
  double t8374;
  double t8380;
  double t8384;
  double t8388;
  double t8392;
  double t8396;
  double t8399;
  double t8400;
  double t8404;
  double t8405;
  double t8407;
  double t8411;
  double t8412;
  double t8414;
  double t8443;
  double t8446;
  double t8447;
  double t8460;
  double t8462;
  double t8467;
  double t8488;
  double t8489;
  double t8490;
  double t8506;
  double t8509;
  double t8523;
  double t8529;
  double t8531;
  double t8533;
  double t8534;
  double t8537;
  double t8540;
  double t8542;
  double t8545;
  double t8554;
  double t8559;
  double t8560;
  double t8567;
  double t8574;
  double t8575;
  double t8586;
  double t8587;
  double t8595;
  double t8598;
  double t8601;
  double t8602;
  double t8647;
  double t8662;
  double t8664;
  double t8673;
  double t8674;
  double t8677;
  double t8689;
  double t8703;
  double t8712;
  double t8713;
  double t8720;
  double t8726;
  double t8727;
  double t8728;
  double t8735;
  double t8736;
  double t8747;
  double t8750;
  double t8751;
  double t8758;
  double t8765;
  double t8766;
  double t8768;
  double t8773;
  double t8775;
  double t8777;
  double t8821;
  double t8824;
  double t8828;
  double t8838;
  double t8841;
  double t8842;
  double t8852;
  double t8855;
  double t8857;
  double t8871;
  double t8872;
  double t8877;
  double t8889;
  double t8891;
  double t8893;
  double t8897;
  double t8898;
  double t8899;
  double t8904;
  double t8908;
  double t8926;
  double t8933;
  double t8943;
  double t8944;
  double t8974;
  double t8975;
  double t8978;
  double t8979;
  double t8982;
  double t8986;
  double t8987;
  double t8991;
  double t9004;
  double t9005;
  double t9006;
  double t9013;
  double t9014;
  double t9015;
  double t9020;
  double t9024;
  double t9025;
  double t9027;
  double t9028;
  double t9029;
  double t9052;
  double t9055;
  double t9057;
  double t9059;
  double t9060;
  double t9070;
  double t9071;
  double t9075;
  double t9076;
  double t9077;
  double t9081;
  double t9085;
  double t9086;
  double t9090;
  double t9091;
  double t9093;
  double t9098;
  double t9100;
  double t9101;
  double t9104;
  double t9106;
  double t9107;
  double t9110;
  double t9111;
  double t9115;
  double t8829;
  double t8830;
  double t8837;
  double t8846;
  double t8863;
  double t8886;
  double t8895;
  double t8901;
  double t8929;
  double t8945;
  double t8949;
  double t8950;
  double t8951;
  double t8953;
  double t8956;
  double t8961;
  double t8962;
  double t8963;
  double t7482;
  double t7489;
  double t7493;
  double t9183;
  double t9187;
  double t9188;
  double t9191;
  double t9194;
  double t9195;
  double t9197;
  double t9198;
  double t9199;
  double t9202;
  double t9204;
  double t9205;
  double t9138;
  double t9143;
  double t9145;
  double t9158;
  double t9160;
  double t9237;
  double t9243;
  double t9244;
  double t9248;
  double t9250;
  double t9261;
  double t9277;
  double t9279;
  double t9280;
  double t9290;
  double t9291;
  double t9292;
  double t9296;
  double t9304;
  double t9305;
  double t9312;
  double t9313;
  double t9315;
  double t9335;
  double t9336;
  double t9340;
  double t9342;
  double t9343;
  double t9344;
  double t9371;
  double t9373;
  double t9381;
  double t9383;
  double t9387;
  double t9388;
  double t9396;
  double t9397;
  double t9398;
  double t9402;
  double t9405;
  double t9407;
  double t9450;
  double t9453;
  double t9459;
  double t9468;
  double t9469;
  double t9472;
  double t9473;
  double t9474;
  double t9477;
  double t9479;
  double t9481;
  double t9484;
  double t9485;
  double t9490;
  double t9435;
  double t9441;
  double t9443;
  double t9444;
  double t9445;
  double t9506;
  double t9511;
  double t9513;
  double t9520;
  double t9522;
  double t9524;
  double t9535;
  double t9549;
  double t9550;
  double t9557;
  double t9562;
  double t9566;
  double t9576;
  double t9580;
  double t9587;
  double t9592;
  double t9594;
  double t9595;
  double t9600;
  double t9601;
  double t9602;
  double t9639;
  double t9651;
  double t9654;
  double t9661;
  double t9664;
  double t9669;
  double t9674;
  double t9676;
  double t9678;
  double t9683;
  double t9684;
  double t9687;
  double t9692;
  double t9693;
  double t9695;
  double t9698;
  double t9704;
  double t9709;
  double t9714;
  double t9716;
  double t9723;
  double t9808;
  double t9809;
  double t9818;
  double t9819;
  double t9822;
  double t9825;
  double t9827;
  double t9782;
  double t9786;
  double t9789;
  double t9791;
  double t9792;
  double t9875;
  double t9876;
  double t9877;
  double t9881;
  double t9885;
  double t9888;
  double t9889;
  double t9891;
  double t9893;
  double t9895;
  double t9899;
  double t9901;
  double t9904;
  double t9932;
  double t9935;
  double t9936;
  double t9940;
  double t9941;
  double t9948;
  double t9951;
  double t9956;
  double t9961;
  double t9966;
  double t9972;
  double t9973;
  double t9974;
  double t10026;
  double t10027;
  double t7839;
  double t10006;
  double t10007;
  double t10019;
  double t10020;
  double t10021;
  double t10066;
  double t10069;
  double t10070;
  double t10080;
  double t10082;
  double t10086;
  double t10088;
  double t10115;
  double t10116;
  double t10118;
  double t10124;
  double t10128;
  double t10131;
  double t10132;
  double t7834;
  double t7848;
  double t10048;
  double t10153;
  double t10154;
  double t10159;
  double t10172;
  double t10174;
  double t10188;
  double t10190;
  double t10193;
  double t10093;
  double t10102;
  double t10213;
  double t10214;
  double t10218;
  double t10135;
  double t10143;
  t1070 = Cos(var1[5]);
  t1662 = Sin(var1[3]);
  t1714 = Sin(var1[4]);
  t1031 = Cos(var1[3]);
  t1905 = Sin(var1[5]);
  t223 = Cos(var1[6]);
  t1245 = -1.*t1031*t1070;
  t2084 = -1.*t1662*t1714*t1905;
  t2271 = t1245 + t2084;
  t2371 = -1.*t1070*t1662*t1714;
  t2859 = t1031*t1905;
  t2896 = t2371 + t2859;
  t2929 = Sin(var1[6]);
  t3495 = Cos(var1[7]);
  t3514 = -1.*t3495;
  t3530 = 1. + t3514;
  t3727 = Sin(var1[7]);
  t3321 = t223*t2271;
  t3431 = t2896*t2929;
  t3447 = t3321 + t3431;
  t4153 = Cos(var1[4]);
  t5023 = Cos(var1[8]);
  t5364 = -1.*t5023;
  t5478 = 1. + t5364;
  t5715 = Sin(var1[8]);
  t4642 = -1.*t4153*t3495*t1662;
  t4842 = t3447*t3727;
  t4953 = t4642 + t4842;
  t5856 = t223*t2896;
  t6026 = -1.*t2271*t2929;
  t6125 = t5856 + t6026;
  t6332 = Cos(var1[9]);
  t6386 = -1.*t6332;
  t6432 = 1. + t6386;
  t6437 = Sin(var1[9]);
  t6487 = t5023*t4953;
  t6496 = t6125*t5715;
  t6501 = t6487 + t6496;
  t6667 = t5023*t6125;
  t6676 = -1.*t4953*t5715;
  t6724 = t6667 + t6676;
  t6777 = Cos(var1[10]);
  t6779 = -1.*t6777;
  t6788 = 1. + t6779;
  t6830 = Sin(var1[10]);
  t6866 = -1.*t6437*t6501;
  t6927 = t6332*t6724;
  t7037 = t6866 + t6927;
  t7105 = t6332*t6501;
  t7110 = t6437*t6724;
  t7121 = t7105 + t7110;
  t7154 = Cos(var1[11]);
  t7159 = -1.*t7154;
  t7164 = 1. + t7159;
  t7170 = Sin(var1[11]);
  t7186 = t6830*t7037;
  t7198 = t6777*t7121;
  t7200 = t7186 + t7198;
  t7209 = t6777*t7037;
  t7221 = -1.*t6830*t7121;
  t7237 = t7209 + t7221;
  t454 = -1.*t223;
  t560 = 1. + t454;
  t622 = 0.135*t560;
  t702 = 0. + t622;
  t2959 = -0.135*t2929;
  t3059 = 0. + t2959;
  t7351 = -1.*t1070*t1662;
  t7353 = t1031*t1714*t1905;
  t7359 = t7351 + t7353;
  t7391 = t1031*t1070*t1714;
  t7407 = t1662*t1905;
  t7408 = t7391 + t7407;
  t3674 = 0.135*t3530;
  t3766 = 0.049*t3727;
  t3887 = 0. + t3674 + t3766;
  t4230 = -0.049*t3530;
  t4360 = 0.135*t3727;
  t4430 = 0. + t4230 + t4360;
  t7412 = t223*t7359;
  t7450 = t7408*t2929;
  t7461 = t7412 + t7450;
  t5676 = -0.049*t5478;
  t5792 = -0.09*t5715;
  t5793 = 0. + t5676 + t5792;
  t6287 = -0.09*t5478;
  t6288 = 0.049*t5715;
  t6292 = 0. + t6287 + t6288;
  t6433 = -0.049*t6432;
  t6450 = -0.21*t6437;
  t6483 = 0. + t6433 + t6450;
  t7508 = t1031*t4153*t3495;
  t7510 = t7461*t3727;
  t7524 = t7508 + t7510;
  t7533 = t223*t7408;
  t7536 = -1.*t7359*t2929;
  t7539 = t7533 + t7536;
  t6547 = -0.21*t6432;
  t6606 = 0.049*t6437;
  t6621 = 0. + t6547 + t6606;
  t6824 = -0.2707*t6788;
  t6840 = 0.0016*t6830;
  t6858 = 0. + t6824 + t6840;
  t7621 = t5023*t7524;
  t7634 = t7539*t5715;
  t7638 = t7621 + t7634;
  t7645 = t5023*t7539;
  t7648 = -1.*t7524*t5715;
  t7656 = t7645 + t7648;
  t7051 = -0.0016*t6788;
  t7062 = -0.2707*t6830;
  t7091 = 0. + t7051 + t7062;
  t7167 = 0.0184*t7164;
  t7179 = -0.7055*t7170;
  t7180 = 0. + t7167 + t7179;
  t7676 = -1.*t6437*t7638;
  t7697 = t6332*t7656;
  t7717 = t7676 + t7697;
  t7730 = t6332*t7638;
  t7731 = t6437*t7656;
  t7733 = t7730 + t7731;
  t7204 = -0.7055*t7164;
  t7205 = -0.0184*t7170;
  t7206 = 0. + t7204 + t7205;
  t7750 = t6830*t7717;
  t7753 = t6777*t7733;
  t7771 = t7750 + t7753;
  t7807 = t6777*t7717;
  t7823 = -1.*t6830*t7733;
  t7826 = t7807 + t7823;
  t7930 = t1031*t4153*t223*t1905;
  t7931 = t1031*t4153*t1070*t2929;
  t7938 = t7930 + t7931;
  t7977 = -1.*t1031*t3495*t1714;
  t7986 = t7938*t3727;
  t7988 = t7977 + t7986;
  t8011 = t1031*t4153*t1070*t223;
  t8013 = -1.*t1031*t4153*t1905*t2929;
  t8022 = t8011 + t8013;
  t8030 = t5023*t7988;
  t8031 = t8022*t5715;
  t8034 = t8030 + t8031;
  t8045 = t5023*t8022;
  t8050 = -1.*t7988*t5715;
  t8055 = t8045 + t8050;
  t8060 = -1.*t6437*t8034;
  t8061 = t6332*t8055;
  t8073 = t8060 + t8061;
  t8079 = t6332*t8034;
  t8086 = t6437*t8055;
  t8089 = t8079 + t8086;
  t8099 = t6830*t8073;
  t8111 = t6777*t8089;
  t8113 = t8099 + t8111;
  t8119 = t6777*t8073;
  t8120 = -1.*t6830*t8089;
  t8121 = t8119 + t8120;
  t8152 = t4153*t223*t1662*t1905;
  t8153 = t4153*t1070*t1662*t2929;
  t8155 = t8152 + t8153;
  t8178 = -1.*t3495*t1662*t1714;
  t8182 = t8155*t3727;
  t8187 = t8178 + t8182;
  t8198 = t4153*t1070*t223*t1662;
  t8205 = -1.*t4153*t1662*t1905*t2929;
  t8209 = t8198 + t8205;
  t8223 = t5023*t8187;
  t8226 = t8209*t5715;
  t8231 = t8223 + t8226;
  t8240 = t5023*t8209;
  t8241 = -1.*t8187*t5715;
  t8245 = t8240 + t8241;
  t8251 = -1.*t6437*t8231;
  t8254 = t6332*t8245;
  t8268 = t8251 + t8254;
  t8271 = t6332*t8231;
  t8274 = t6437*t8245;
  t8275 = t8271 + t8274;
  t8277 = t6830*t8268;
  t8279 = t6777*t8275;
  t8280 = t8277 + t8279;
  t8286 = t6777*t8268;
  t8289 = -1.*t6830*t8275;
  t8292 = t8286 + t8289;
  t8333 = -1.*t223*t1714*t1905;
  t8338 = -1.*t1070*t1714*t2929;
  t8342 = t8333 + t8338;
  t8363 = -1.*t4153*t3495;
  t8364 = t8342*t3727;
  t8366 = t8363 + t8364;
  t8373 = -1.*t1070*t223*t1714;
  t8374 = t1714*t1905*t2929;
  t8380 = t8373 + t8374;
  t8384 = t5023*t8366;
  t8388 = t8380*t5715;
  t8392 = t8384 + t8388;
  t8396 = t5023*t8380;
  t8399 = -1.*t8366*t5715;
  t8400 = t8396 + t8399;
  t8404 = -1.*t6437*t8392;
  t8405 = t6332*t8400;
  t8407 = t8404 + t8405;
  t8411 = t6332*t8392;
  t8412 = t6437*t8400;
  t8414 = t8411 + t8412;
  t8443 = t6830*t8407;
  t8446 = t6777*t8414;
  t8447 = t8443 + t8446;
  t8460 = t6777*t8407;
  t8462 = -1.*t6830*t8414;
  t8467 = t8460 + t8462;
  t8488 = t1070*t1662;
  t8489 = -1.*t1031*t1714*t1905;
  t8490 = t8488 + t8489;
  t8506 = t8490*t2929;
  t8509 = t7533 + t8506;
  t8523 = t223*t8490;
  t8529 = -1.*t7408*t2929;
  t8531 = t8523 + t8529;
  t8533 = t5023*t8509*t3727;
  t8534 = t8531*t5715;
  t8537 = t8533 + t8534;
  t8540 = t5023*t8531;
  t8542 = -1.*t8509*t3727*t5715;
  t8545 = t8540 + t8542;
  t8554 = -1.*t6437*t8537;
  t8559 = t6332*t8545;
  t8560 = t8554 + t8559;
  t8567 = t6332*t8537;
  t8574 = t6437*t8545;
  t8575 = t8567 + t8574;
  t8586 = t6830*t8560;
  t8587 = t6777*t8575;
  t8595 = t8586 + t8587;
  t8598 = t6777*t8560;
  t8601 = -1.*t6830*t8575;
  t8602 = t8598 + t8601;
  t8647 = t1070*t1662*t1714;
  t8662 = -1.*t1031*t1905;
  t8664 = t8647 + t8662;
  t8673 = t223*t8664;
  t8674 = t2271*t2929;
  t8677 = t8673 + t8674;
  t8689 = -1.*t8664*t2929;
  t8703 = t3321 + t8689;
  t8712 = t5023*t8677*t3727;
  t8713 = t8703*t5715;
  t8720 = t8712 + t8713;
  t8726 = t5023*t8703;
  t8727 = -1.*t8677*t3727*t5715;
  t8728 = t8726 + t8727;
  t8735 = -1.*t6437*t8720;
  t8736 = t6332*t8728;
  t8747 = t8735 + t8736;
  t8750 = t6332*t8720;
  t8751 = t6437*t8728;
  t8758 = t8750 + t8751;
  t8765 = t6830*t8747;
  t8766 = t6777*t8758;
  t8768 = t8765 + t8766;
  t8773 = t6777*t8747;
  t8775 = -1.*t6830*t8758;
  t8777 = t8773 + t8775;
  t8821 = t4153*t1070*t223;
  t8824 = -1.*t4153*t1905*t2929;
  t8828 = t8821 + t8824;
  t8838 = -1.*t4153*t223*t1905;
  t8841 = -1.*t4153*t1070*t2929;
  t8842 = t8838 + t8841;
  t8852 = t5023*t8828*t3727;
  t8855 = t8842*t5715;
  t8857 = t8852 + t8855;
  t8871 = t5023*t8842;
  t8872 = -1.*t8828*t3727*t5715;
  t8877 = t8871 + t8872;
  t8889 = -1.*t6437*t8857;
  t8891 = t6332*t8877;
  t8893 = t8889 + t8891;
  t8897 = t6332*t8857;
  t8898 = t6437*t8877;
  t8899 = t8897 + t8898;
  t8904 = t6830*t8893;
  t8908 = t6777*t8899;
  t8926 = t8904 + t8908;
  t8933 = t6777*t8893;
  t8943 = -1.*t6830*t8899;
  t8944 = t8933 + t8943;
  t8974 = -1.*t223*t7359;
  t8975 = t8974 + t8529;
  t8978 = t5023*t7539*t3727;
  t8979 = t8975*t5715;
  t8982 = t8978 + t8979;
  t8986 = t5023*t8975;
  t8987 = -1.*t7539*t3727*t5715;
  t8991 = t8986 + t8987;
  t9004 = -1.*t6437*t8982;
  t9005 = t6332*t8991;
  t9006 = t9004 + t9005;
  t9013 = t6332*t8982;
  t9014 = t6437*t8991;
  t9015 = t9013 + t9014;
  t9020 = t6830*t9006;
  t9024 = t6777*t9015;
  t9025 = t9020 + t9024;
  t9027 = t6777*t9006;
  t9028 = -1.*t6830*t9015;
  t9029 = t9027 + t9028;
  t9052 = t1031*t1070;
  t9055 = t1662*t1714*t1905;
  t9057 = t9052 + t9055;
  t9059 = -1.*t9057*t2929;
  t9060 = t8673 + t9059;
  t9070 = -1.*t223*t9057;
  t9071 = t9070 + t8689;
  t9075 = t5023*t9060*t3727;
  t9076 = t9071*t5715;
  t9077 = t9075 + t9076;
  t9081 = t5023*t9071;
  t9085 = -1.*t9060*t3727*t5715;
  t9086 = t9081 + t9085;
  t9090 = -1.*t6437*t9077;
  t9091 = t6332*t9086;
  t9093 = t9090 + t9091;
  t9098 = t6332*t9077;
  t9100 = t6437*t9086;
  t9101 = t9098 + t9100;
  t9104 = t6830*t9093;
  t9106 = t6777*t9101;
  t9107 = t9104 + t9106;
  t9110 = t6777*t9093;
  t9111 = -1.*t6830*t9101;
  t9115 = t9110 + t9111;
  t8829 = 0.1305*t3495*t8828;
  t8830 = t8828*t3887;
  t8837 = t8828*t3727*t5793;
  t8846 = t8842*t6292;
  t8863 = t6483*t8857;
  t8886 = t6621*t8877;
  t8895 = t6858*t8893;
  t8901 = t7091*t8899;
  t8929 = t7180*t8926;
  t8945 = t7206*t8944;
  t8949 = -1.*t7170*t8926;
  t8950 = t7154*t8944;
  t8951 = t8949 + t8950;
  t8953 = -0.7055*t8951;
  t8956 = t7154*t8926;
  t8961 = t7170*t8944;
  t8962 = t8956 + t8961;
  t8963 = 0.0184*t8962;
  t7482 = t3495*t7461;
  t7489 = -1.*t1031*t4153*t3727;
  t7493 = t7482 + t7489;
  t9183 = -1.*t5023*t6437*t7493;
  t9187 = -1.*t6332*t7493*t5715;
  t9188 = t9183 + t9187;
  t9191 = t6332*t5023*t7493;
  t9194 = -1.*t6437*t7493*t5715;
  t9195 = t9191 + t9194;
  t9197 = t6830*t9188;
  t9198 = t6777*t9195;
  t9199 = t9197 + t9198;
  t9202 = t6777*t9188;
  t9204 = -1.*t6830*t9195;
  t9205 = t9202 + t9204;
  t9138 = 0.135*t3495;
  t9143 = -0.049*t3727;
  t9145 = t9138 + t9143;
  t9158 = 0.049*t3495;
  t9160 = t9158 + t4360;
  t9237 = t223*t9057;
  t9243 = t8664*t2929;
  t9244 = t9237 + t9243;
  t9248 = t3495*t9244;
  t9250 = -1.*t4153*t1662*t3727;
  t9261 = t9248 + t9250;
  t9277 = -1.*t5023*t6437*t9261;
  t9279 = -1.*t6332*t9261*t5715;
  t9280 = t9277 + t9279;
  t9290 = t6332*t5023*t9261;
  t9291 = -1.*t6437*t9261*t5715;
  t9292 = t9290 + t9291;
  t9296 = t6830*t9280;
  t9304 = t6777*t9292;
  t9305 = t9296 + t9304;
  t9312 = t6777*t9280;
  t9313 = -1.*t6830*t9292;
  t9315 = t9312 + t9313;
  t9335 = t4153*t223*t1905;
  t9336 = t4153*t1070*t2929;
  t9340 = t9335 + t9336;
  t9342 = t3495*t9340;
  t9343 = t1714*t3727;
  t9344 = t9342 + t9343;
  t9371 = -1.*t5023*t6437*t9344;
  t9373 = -1.*t6332*t9344*t5715;
  t9381 = t9371 + t9373;
  t9383 = t6332*t5023*t9344;
  t9387 = -1.*t6437*t9344*t5715;
  t9388 = t9383 + t9387;
  t9396 = t6830*t9381;
  t9397 = t6777*t9388;
  t9398 = t9396 + t9397;
  t9402 = t6777*t9381;
  t9405 = -1.*t6830*t9388;
  t9407 = t9402 + t9405;
  t9450 = -1.*t5023*t7524;
  t9453 = -1.*t7539*t5715;
  t9459 = t9450 + t9453;
  t9468 = t6437*t9459;
  t9469 = t9468 + t7697;
  t9472 = t6332*t9459;
  t9473 = -1.*t6437*t7656;
  t9474 = t9472 + t9473;
  t9477 = -1.*t6830*t9469;
  t9479 = t6777*t9474;
  t9481 = t9477 + t9479;
  t9484 = t6777*t9469;
  t9485 = t6830*t9474;
  t9490 = t9484 + t9485;
  t9435 = 0.049*t5023;
  t9441 = t9435 + t5792;
  t9443 = -0.09*t5023;
  t9444 = -0.049*t5715;
  t9445 = t9443 + t9444;
  t9506 = t4153*t3495*t1662;
  t9511 = t9244*t3727;
  t9513 = t9506 + t9511;
  t9520 = -1.*t5023*t9513;
  t9522 = -1.*t9060*t5715;
  t9524 = t9520 + t9522;
  t9535 = t5023*t9060;
  t9549 = -1.*t9513*t5715;
  t9550 = t9535 + t9549;
  t9557 = t6437*t9524;
  t9562 = t6332*t9550;
  t9566 = t9557 + t9562;
  t9576 = t6332*t9524;
  t9580 = -1.*t6437*t9550;
  t9587 = t9576 + t9580;
  t9592 = -1.*t6830*t9566;
  t9594 = t6777*t9587;
  t9595 = t9592 + t9594;
  t9600 = t6777*t9566;
  t9601 = t6830*t9587;
  t9602 = t9600 + t9601;
  t9639 = -1.*t3495*t1714;
  t9651 = t9340*t3727;
  t9654 = t9639 + t9651;
  t9661 = -1.*t5023*t9654;
  t9664 = -1.*t8828*t5715;
  t9669 = t9661 + t9664;
  t9674 = t5023*t8828;
  t9676 = -1.*t9654*t5715;
  t9678 = t9674 + t9676;
  t9683 = t6437*t9669;
  t9684 = t6332*t9678;
  t9687 = t9683 + t9684;
  t9692 = t6332*t9669;
  t9693 = -1.*t6437*t9678;
  t9695 = t9692 + t9693;
  t9698 = -1.*t6830*t9687;
  t9704 = t6777*t9695;
  t9709 = t9698 + t9704;
  t9714 = t6777*t9687;
  t9716 = t6830*t9695;
  t9723 = t9714 + t9716;
  t9808 = -1.*t6332*t7638;
  t9809 = t9808 + t9473;
  t9818 = -1.*t6830*t7717;
  t9819 = t6777*t9809;
  t9822 = t9818 + t9819;
  t9825 = t6830*t9809;
  t9827 = t7807 + t9825;
  t9782 = -0.21*t6332;
  t9786 = -0.049*t6437;
  t9789 = t9782 + t9786;
  t9791 = 0.049*t6332;
  t9792 = t9791 + t6450;
  t9875 = t5023*t9513;
  t9876 = t9060*t5715;
  t9877 = t9875 + t9876;
  t9881 = -1.*t6437*t9877;
  t9885 = t9881 + t9562;
  t9888 = -1.*t6332*t9877;
  t9889 = t9888 + t9580;
  t9891 = -1.*t6830*t9885;
  t9893 = t6777*t9889;
  t9895 = t9891 + t9893;
  t9899 = t6777*t9885;
  t9901 = t6830*t9889;
  t9904 = t9899 + t9901;
  t9932 = t5023*t9654;
  t9935 = t8828*t5715;
  t9936 = t9932 + t9935;
  t9940 = -1.*t6437*t9936;
  t9941 = t9940 + t9684;
  t9948 = -1.*t6332*t9936;
  t9951 = t9948 + t9693;
  t9956 = -1.*t6830*t9941;
  t9961 = t6777*t9951;
  t9966 = t9956 + t9961;
  t9972 = t6777*t9941;
  t9973 = t6830*t9951;
  t9974 = t9972 + t9973;
  t10026 = -1.*t6777*t7733;
  t10027 = t9818 + t10026;
  t7839 = t7154*t7826;
  t10006 = 0.0016*t6777;
  t10007 = t10006 + t7062;
  t10019 = -0.2707*t6777;
  t10020 = -0.0016*t6830;
  t10021 = t10019 + t10020;
  t10066 = t6332*t9877;
  t10069 = t6437*t9550;
  t10070 = t10066 + t10069;
  t10080 = -1.*t6777*t10070;
  t10082 = t9891 + t10080;
  t10086 = -1.*t6830*t10070;
  t10088 = t9899 + t10086;
  t10115 = t6332*t9936;
  t10116 = t6437*t9678;
  t10118 = t10115 + t10116;
  t10124 = -1.*t6777*t10118;
  t10128 = t9956 + t10124;
  t10131 = -1.*t6830*t10118;
  t10132 = t9972 + t10131;
  t7834 = -1.*t7170*t7771;
  t7848 = t7834 + t7839;
  t10048 = -1.*t7170*t7826;
  t10153 = -0.7055*t7154;
  t10154 = 0.0184*t7170;
  t10159 = t10153 + t10154;
  t10172 = -0.0184*t7154;
  t10174 = t10172 + t7179;
  t10188 = t6830*t9885;
  t10190 = t6777*t10070;
  t10193 = t10188 + t10190;
  t10093 = t7154*t10088;
  t10102 = -1.*t7170*t10088;
  t10213 = t6830*t9941;
  t10214 = t6777*t10118;
  t10218 = t10213 + t10214;
  t10135 = t7154*t10132;
  t10143 = -1.*t7170*t10132;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t2896*t3059 + t3447*t3887 + 0.1305*(t3447*t3495 + t1662*t3727*t4153) - 1.*t1662*t4153*t4430 + t4953*t5793 + t6125*t6292 + t6483*t6501 + t6621*t6724 + t2271*t702 + t6858*t7037 + t7091*t7121 + t7180*t7200 + t7206*t7237 - 0.7055*(-1.*t7170*t7200 + t7154*t7237) + 0.0184*(t7154*t7200 + t7170*t7237);
  p_output1[10]=t1031*t4153*t4430 + t702*t7359 + t3059*t7408 + t3887*t7461 + 0.1305*t7493 + t5793*t7524 + t6292*t7539 + t6483*t7638 + t6621*t7656 + t6858*t7717 + t7091*t7733 + t7180*t7771 + t7206*t7826 + 0.0184*(t7154*t7771 + t7170*t7826) - 0.7055*t7848;
  p_output1[11]=0;
  p_output1[12]=t1031*t1070*t3059*t4153 - 1.*t1031*t1714*t4430 + t1031*t1905*t4153*t702 + t3887*t7938 + 0.1305*(t1031*t1714*t3727 + t3495*t7938) + t5793*t7988 + t6292*t8022 + t6483*t8034 + t6621*t8055 + t6858*t8073 + t7091*t8089 + t7180*t8113 + t7206*t8121 - 0.7055*(-1.*t7170*t8113 + t7154*t8121) + 0.0184*(t7154*t8113 + t7170*t8121);
  p_output1[13]=t1070*t1662*t3059*t4153 - 1.*t1662*t1714*t4430 + t1662*t1905*t4153*t702 + t3887*t8155 + 0.1305*(t1662*t1714*t3727 + t3495*t8155) + t5793*t8187 + t6292*t8209 + t6483*t8231 + t6621*t8245 + t6858*t8268 + t7091*t8275 + t7180*t8280 + t7206*t8292 - 0.7055*(-1.*t7170*t8280 + t7154*t8292) + 0.0184*(t7154*t8280 + t7170*t8292);
  p_output1[14]=-1.*t1070*t1714*t3059 - 1.*t4153*t4430 - 1.*t1714*t1905*t702 + t3887*t8342 + 0.1305*(t3727*t4153 + t3495*t8342) + t5793*t8366 + t6292*t8380 + t6483*t8392 + t6621*t8400 + t6858*t8407 + t7091*t8414 + t7180*t8447 + t7206*t8467 - 0.7055*(-1.*t7170*t8447 + t7154*t8467) + 0.0184*(t7154*t8447 + t7170*t8467);
  p_output1[15]=t702*t7408 + t3059*t8490 + 0.1305*t3495*t8509 + t3887*t8509 + t3727*t5793*t8509 + t6292*t8531 + t6483*t8537 + t6621*t8545 + t6858*t8560 + t7091*t8575 + t7180*t8595 + t7206*t8602 - 0.7055*(-1.*t7170*t8595 + t7154*t8602) + 0.0184*(t7154*t8595 + t7170*t8602);
  p_output1[16]=t2271*t3059 + t702*t8664 + 0.1305*t3495*t8677 + t3887*t8677 + t3727*t5793*t8677 + t6292*t8703 + t6483*t8720 + t6621*t8728 + t6858*t8747 + t7091*t8758 + t7180*t8768 + t7206*t8777 - 0.7055*(-1.*t7170*t8768 + t7154*t8777) + 0.0184*(t7154*t8768 + t7170*t8777);
  p_output1[17]=-1.*t1905*t3059*t4153 + t1070*t4153*t702 + t8829 + t8830 + t8837 + t8846 + t8863 + t8886 + t8895 + t8901 + t8929 + t8945 + t8953 + t8963;
  p_output1[18]=0.135*t2929*t7359 - 0.135*t223*t7408 + 0.1305*t3495*t7539 + t3887*t7539 + t3727*t5793*t7539 + t6292*t8975 + t6483*t8982 + t6621*t8991 + t6858*t9006 + t7091*t9015 + t7180*t9025 + t7206*t9029 - 0.7055*(-1.*t7170*t9025 + t7154*t9029) + 0.0184*(t7154*t9025 + t7170*t9029);
  p_output1[19]=-0.135*t223*t8664 + 0.135*t2929*t9057 + 0.1305*t3495*t9060 + t3887*t9060 + t3727*t5793*t9060 + t6292*t9071 + t6483*t9077 + t6621*t9086 + t6858*t9093 + t7091*t9101 + t7180*t9107 + t7206*t9115 - 0.7055*(-1.*t7170*t9107 + t7154*t9115) + 0.0184*(t7154*t9107 + t7170*t9115);
  p_output1[20]=-0.135*t1070*t223*t4153 + 0.135*t1905*t2929*t4153 + t8829 + t8830 + t8837 + t8846 + t8863 + t8886 + t8895 + t8901 + t8929 + t8945 + t8953 + t8963;
  p_output1[21]=0.1305*(-1.*t1031*t3495*t4153 - 1.*t3727*t7461) + t5793*t7493 + t5023*t6483*t7493 - 1.*t5715*t6621*t7493 + t1031*t4153*t9145 + t7461*t9160 + t6858*t9188 + t7091*t9195 + t7180*t9199 + t7206*t9205 - 0.7055*(-1.*t7170*t9199 + t7154*t9205) + 0.0184*(t7154*t9199 + t7170*t9205);
  p_output1[22]=t1662*t4153*t9145 + t9160*t9244 + 0.1305*(t4642 - 1.*t3727*t9244) + t5793*t9261 + t5023*t6483*t9261 - 1.*t5715*t6621*t9261 + t6858*t9280 + t7091*t9292 + t7180*t9305 + t7206*t9315 - 0.7055*(-1.*t7170*t9305 + t7154*t9315) + 0.0184*(t7154*t9305 + t7170*t9315);
  p_output1[23]=-1.*t1714*t9145 + t9160*t9340 + 0.1305*(t1714*t3495 - 1.*t3727*t9340) + t5793*t9344 + t5023*t6483*t9344 - 1.*t5715*t6621*t9344 + t6858*t9381 + t7091*t9388 + t7180*t9398 + t7206*t9407 - 0.7055*(-1.*t7170*t9398 + t7154*t9407) + 0.0184*(t7154*t9398 + t7170*t9407);
  p_output1[24]=t6483*t7656 + t7539*t9441 + t7524*t9445 + t6621*t9459 + t7091*t9469 + t6858*t9474 + t7206*t9481 + t7180*t9490 + 0.0184*(t7170*t9481 + t7154*t9490) - 0.7055*(t7154*t9481 - 1.*t7170*t9490);
  p_output1[25]=t9060*t9441 + t9445*t9513 + t6621*t9524 + t6483*t9550 + t7091*t9566 + t6858*t9587 + t7206*t9595 + t7180*t9602 + 0.0184*(t7170*t9595 + t7154*t9602) - 0.7055*(t7154*t9595 - 1.*t7170*t9602);
  p_output1[26]=t8828*t9441 + t9445*t9654 + t6621*t9669 + t6483*t9678 + t7091*t9687 + t6858*t9695 + t7206*t9709 + t7180*t9723 + 0.0184*(t7170*t9709 + t7154*t9723) - 0.7055*(t7154*t9709 - 1.*t7170*t9723);
  p_output1[27]=t7091*t7717 + t7638*t9789 + t7656*t9792 + t6858*t9809 + t7206*t9822 + t7180*t9827 + 0.0184*(t7170*t9822 + t7154*t9827) - 0.7055*(t7154*t9822 - 1.*t7170*t9827);
  p_output1[28]=t9550*t9792 + t9789*t9877 + t7091*t9885 + t6858*t9889 + t7206*t9895 + t7180*t9904 + 0.0184*(t7170*t9895 + t7154*t9904) - 0.7055*(t7154*t9895 - 1.*t7170*t9904);
  p_output1[29]=t9678*t9792 + t9789*t9936 + t7091*t9941 + t6858*t9951 + t7206*t9966 + t7180*t9974 + 0.0184*(t7170*t9966 + t7154*t9974) - 0.7055*(t7154*t9966 - 1.*t7170*t9974);
  p_output1[30]=-0.7055*(t10048 + t10027*t7154) + t10027*t7206 + t10007*t7717 + t10021*t7733 + t7180*t7826 + 0.0184*(t10027*t7170 + t7839);
  p_output1[31]=t10021*t10070 - 0.7055*(t10102 + t10082*t7154) + 0.0184*(t10093 + t10082*t7170) + t10088*t7180 + t10082*t7206 + t10007*t9885;
  p_output1[32]=t10021*t10118 - 0.7055*(t10143 + t10128*t7154) + 0.0184*(t10135 + t10128*t7170) + t10132*t7180 + t10128*t7206 + t10007*t9941;
  p_output1[33]=t10159*t7771 - 0.7055*(t10048 - 1.*t7154*t7771) + t10174*t7826 + 0.0184*t7848;
  p_output1[34]=t10088*t10174 + t10159*t10193 - 0.7055*(t10102 - 1.*t10193*t7154) + 0.0184*(t10093 - 1.*t10193*t7170);
  p_output1[35]=t10132*t10174 + t10159*t10218 - 0.7055*(t10143 - 1.*t10218*t7154) + 0.0184*(t10135 - 1.*t10218*t7170);
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "J_ankle_joint_left_mex.hh"

namespace SymExpression
{

void J_ankle_joint_left_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
