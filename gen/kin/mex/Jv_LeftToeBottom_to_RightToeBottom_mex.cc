/*
 * Automatically Generated from Mathematica.
 * Fri 16 Feb 2018 12:18:04 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t319;
  double t48;
  double t911;
  double t145;
  double t968;
  double t1000;
  double t1013;
  double t1050;
  double t1196;
  double t1202;
  double t1205;
  double t1245;
  double t1395;
  double t1437;
  double t1460;
  double t1543;
  double t1556;
  double t1571;
  double t1589;
  double t1597;
  double t1645;
  double t1744;
  double t1751;
  double t1755;
  double t1762;
  double t2070;
  double t2084;
  double t2133;
  double t2157;
  double t2191;
  double t2245;
  double t2330;
  double t2364;
  double t2393;
  double t2410;
  double t2575;
  double t2612;
  double t2655;
  double t2705;
  double t2712;
  double t2717;
  double t2795;
  double t2820;
  double t2824;
  double t2848;
  double t2928;
  double t2947;
  double t2970;
  double t805;
  double t813;
  double t824;
  double t914;
  double t921;
  double t1026;
  double t1112;
  double t1125;
  double t1163;
  double t1165;
  double t1179;
  double t1219;
  double t1337;
  double t1378;
  double t1515;
  double t1528;
  double t1532;
  double t1669;
  double t1746;
  double t1749;
  double t3192;
  double t3212;
  double t3231;
  double t3285;
  double t3295;
  double t3327;
  double t1828;
  double t2026;
  double t2059;
  double t2315;
  double t2350;
  double t2363;
  double t3393;
  double t3459;
  double t3465;
  double t3480;
  double t3484;
  double t3485;
  double t2475;
  double t2504;
  double t2521;
  double t2734;
  double t2802;
  double t2808;
  double t3513;
  double t3517;
  double t3523;
  double t3538;
  double t3541;
  double t3593;
  double t2858;
  double t2865;
  double t2923;
  double t3619;
  double t3631;
  double t3644;
  double t3659;
  double t3673;
  double t3681;
  double t3806;
  double t3828;
  double t3829;
  double t3864;
  double t3912;
  double t3920;
  double t3839;
  double t3962;
  double t4019;
  double t4052;
  double t4054;
  double t4097;
  double t4046;
  double t4098;
  double t4103;
  double t4111;
  double t4129;
  double t4132;
  double t4346;
  double t4477;
  double t4511;
  double t4523;
  double t4526;
  double t4532;
  double t4573;
  double t4797;
  double t4808;
  double t4821;
  double t4843;
  double t4773;
  double t4778;
  double t4793;
  double t4880;
  double t4882;
  double t4889;
  double t4988;
  double t5017;
  double t5033;
  double t5080;
  double t4969;
  double t4976;
  double t4977;
  double t5137;
  double t5140;
  double t5186;
  double t5318;
  double t5319;
  double t5321;
  double t5332;
  double t5294;
  double t5299;
  double t5309;
  double t5348;
  double t5353;
  double t5354;
  double t4108;
  double t4143;
  double t4190;
  double t4266;
  double t4309;
  double t4311;
  double t5520;
  double t4386;
  double t4395;
  double t4403;
  double t4483;
  double t4500;
  double t4506;
  double t4515;
  double t4519;
  double t5763;
  double t4555;
  double t4652;
  double t4656;
  double t4665;
  double t4717;
  double t4748;
  double t5784;
  double t5801;
  double t5805;
  double t5817;
  double t5856;
  double t5907;
  double t4831;
  double t4856;
  double t4860;
  double t4899;
  double t4915;
  double t4937;
  double t5937;
  double t5941;
  double t5944;
  double t5976;
  double t6035;
  double t6045;
  double t5034;
  double t5088;
  double t5103;
  double t5260;
  double t5261;
  double t5275;
  double t6091;
  double t6098;
  double t6105;
  double t6109;
  double t6135;
  double t6144;
  double t5327;
  double t5333;
  double t5339;
  double t5355;
  double t5368;
  double t5374;
  double t6194;
  double t6204;
  double t6208;
  double t6228;
  double t6242;
  double t6253;
  double t2988;
  double t3001;
  double t3021;
  double t3049;
  double t3056;
  double t3098;
  double t5688;
  double t5701;
  double t5702;
  double t5766;
  double t5769;
  double t5774;
  double t6417;
  double t6484;
  double t6513;
  double t6527;
  double t6528;
  double t6535;
  double t6549;
  double t6557;
  double t6558;
  double t6585;
  double t6587;
  double t6594;
  double t6607;
  double t6614;
  double t6618;
  double t6632;
  double t6647;
  double t6683;
  double t6724;
  double t6740;
  double t6746;
  double t6814;
  double t6816;
  double t6830;
  double t3701;
  double t3711;
  double t3718;
  double t3735;
  double t3737;
  double t3739;
  double t5489;
  double t5495;
  double t5500;
  double t4397;
  double t4411;
  double t4520;
  double t4661;
  double t4769;
  double t4875;
  double t4958;
  double t5113;
  double t5276;
  double t5342;
  double t5382;
  double t5397;
  double t5405;
  double t5410;
  double t5419;
  double t5431;
  double t5437;
  double t5463;
  double t5471;
  double t5484;
  double t4216;
  double t4314;
  double t4324;
  double t5537;
  double t5564;
  double t5605;
  double t5615;
  double t5726;
  double t5743;
  double t5782;
  double t5810;
  double t5922;
  double t5971;
  double t6058;
  double t6108;
  double t6161;
  double t6212;
  double t6277;
  double t6280;
  double t6286;
  double t6294;
  double t6301;
  double t6312;
  double t6315;
  double t6323;
  double t6334;
  double t6343;
  double t6376;
  double t6385;
  double t6390;
  double t6392;
  double t6404;
  double t6521;
  double t6545;
  double t6567;
  double t6604;
  double t6625;
  double t6696;
  double t6759;
  double t6853;
  double t6869;
  double t6870;
  double t6884;
  double t6905;
  double t6909;
  double t6938;
  double t6951;
  double t6956;
  double t6968;
  double t6348;
  double t6351;
  double t6359;
  double t6970;
  double t7011;
  double t7025;
  double t3163;
  double t3164;
  double t3169;
  double t3170;
  double t3183;
  double t3237;
  double t3385;
  double t3479;
  double t3502;
  double t3535;
  double t3597;
  double t3649;
  double t3687;
  double t3725;
  double t3773;
  double t7163;
  double t7174;
  double t7182;
  double t7187;
  double t7188;
  double t7199;
  double t7204;
  double t7206;
  double t7224;
  double t7271;
  double t7295;
  double t7316;
  double t7341;
  double t7362;
  double t7080;
  double t7105;
  double t7110;
  double t7393;
  double t7397;
  double t7404;
  double t7412;
  double t7417;
  double t7424;
  double t7426;
  double t7435;
  double t7439;
  double t7446;
  double t7447;
  double t7461;
  double t7472;
  double t7484;
  double t7494;
  double t7502;
  double t7532;
  double t7533;
  double t7135;
  double t7146;
  double t7147;
  double t7584;
  double t3147;
  double t3162;
  double t221;
  double t223;
  double t4329;
  double t4338;
  double t472;
  double t629;
  double t965;
  double t1149;
  double t1181;
  double t1479;
  double t1575;
  double t1791;
  double t2151;
  double t2444;
  double t2701;
  double t2857;
  double t2975;
  double t3040;
  double t3099;
  double t3102;
  double t3777;
  double t7707;
  double t7066;
  double t7067;
  double t7767;
  double t7794;
  double t8249;
  double t8251;
  double t5519;
  double t6366;
  double t7040;
  double t7057;
  double t8374;
  double t8382;
  double t8418;
  double t7077;
  double t7114;
  double t7152;
  double t7153;
  double t8231;
  double t8266;
  double t7379;
  double t7544;
  double t7600;
  double t7607;
  double t7617;
  double t7621;
  double t7622;
  double t7625;
  double t8252;
  double t8257;
  double t8310;
  double t8317;
  double t7696;
  double t7706;
  double t7710;
  double t7722;
  double t8417;
  double t8422;
  double t8457;
  double t7797;
  double t7807;
  double t7811;
  double t7821;
  double t8565;
  double t8595;
  double t8606;
  double t8627;
  double t8664;
  double t8672;
  double t8748;
  double t8753;
  double t8770;
  double t8786;
  double t8789;
  double t7826;
  double t7828;
  double t7832;
  double t7835;
  double t7843;
  double t7844;
  double t7845;
  double t7852;
  double t7869;
  double t7870;
  double t7879;
  double t7891;
  double t8469;
  double t8486;
  double t8510;
  double t9077;
  double t9083;
  double t9096;
  double t7931;
  double t7936;
  double t7995;
  double t8001;
  double t8059;
  double t8071;
  double t8079;
  double t8089;
  double t8134;
  double t8137;
  double t8143;
  double t8169;
  double t9574;
  double t9578;
  double t9593;
  double t9598;
  double t9623;
  double t9627;
  double t9527;
  double t9531;
  double t9532;
  double t9449;
  double t9465;
  double t9507;
  double t9698;
  double t9699;
  double t9703;
  double t7608;
  double t7634;
  double t7641;
  double t8826;
  double t8852;
  double t8855;
  double t8857;
  double t8872;
  double t8890;
  double t9522;
  double t9543;
  double t9544;
  double t9669;
  double t9671;
  double t9677;
  double t9681;
  double t9693;
  double t9705;
  double t9710;
  double t9719;
  double t9721;
  double t9722;
  double t9124;
  double t9150;
  double t9164;
  double t9182;
  double t9194;
  double t9209;
  double t7841;
  double t7853;
  double t7857;
  double t9738;
  double t9750;
  double t9751;
  double t9752;
  double t9590;
  double t9599;
  double t9657;
  double t9660;
  double t9297;
  double t9301;
  double t9304;
  double t9350;
  double t9375;
  double t9407;
  double t8090;
  double t8177;
  double t8179;
  double t9662;
  double t9687;
  double t9814;
  double t9818;
  double t9822;
  double t9807;
  double t9809;
  double t9810;
  double t9869;
  double t9872;
  double t9892;
  double t9728;
  double t9729;
  double t9730;
  double t9813;
  double t9823;
  double t9836;
  double t9753;
  double t9754;
  double t9845;
  double t9893;
  double t9897;
  double t9914;
  double t9918;
  double t9921;
  double t9767;
  double t9768;
  double t9769;
  double t9780;
  double t9781;
  double t9795;
  double t9796;
  double t9801;
  double t10008;
  double t10017;
  double t10018;
  double t9990;
  double t9993;
  double t10005;
  double t10030;
  double t10031;
  double t10043;
  double t10007;
  double t10022;
  double t10023;
  double t10027;
  double t10046;
  double t10047;
  double t10056;
  double t10057;
  double t10059;
  double t10101;
  double t10102;
  double t10106;
  double t10090;
  double t10093;
  double t10095;
  double t10124;
  double t10125;
  double t10126;
  double t10098;
  double t10111;
  double t10112;
  double t10121;
  double t10127;
  double t10132;
  double t10136;
  double t10137;
  double t10138;
  double t10169;
  double t10170;
  double t10172;
  double t10158;
  double t10163;
  double t10165;
  double t10182;
  double t10185;
  double t10186;
  double t10166;
  double t10173;
  double t10174;
  double t10180;
  double t10187;
  double t10188;
  double t10193;
  double t10194;
  double t10197;
  double t10217;
  double t10218;
  double t10219;
  double t10225;
  double t10227;
  double t10240;
  double t10242;
  double t10239;
  double t10249;
  double t10255;
  double t10256;
  double t10257;
  double t10261;
  double t10262;
  double t10263;
  double t10266;
  double t10269;
  double t10272;
  double t10273;
  double t10274;
  double t10243;
  double t10245;
  double t10250;
  double t10253;
  double t10296;
  double t10297;
  double t10302;
  double t10304;
  double t10292;
  double t10293;
  double t10322;
  double t10323;
  double t10327;
  double t10316;
  double t10317;
  double t10306;
  double t10308;
  double t10309;
  double t10335;
  double t10338;
  double t10341;
  double t10303;
  double t10310;
  double t10313;
  double t10319;
  double t10328;
  double t10331;
  double t10360;
  double t10361;
  double t10365;
  double t10382;
  double t10384;
  double t10388;
  double t10370;
  double t10374;
  double t10375;
  double t10398;
  double t10400;
  double t10404;
  double t10368;
  double t10377;
  double t10378;
  double t10381;
  double t10390;
  double t10391;
  double t10422;
  double t10423;
  double t10425;
  double t10445;
  double t10447;
  double t10448;
  double t10430;
  double t10431;
  double t10435;
  double t10453;
  double t10454;
  double t10455;
  double t10426;
  double t10439;
  double t10440;
  double t10444;
  double t10449;
  double t10451;
  double t10478;
  double t10481;
  double t10482;
  double t10492;
  double t10494;
  double t10495;
  double t10484;
  double t10485;
  double t10486;
  double t10500;
  double t10504;
  double t10505;
  double t10483;
  double t10487;
  double t10488;
  double t10490;
  double t10496;
  double t10498;
  double t10519;
  double t10520;
  double t10521;
  double t10531;
  double t10534;
  double t10536;
  double t10523;
  double t10524;
  double t10525;
  double t10543;
  double t10544;
  double t10546;
  double t10522;
  double t10526;
  double t10527;
  double t10530;
  double t10538;
  double t10540;
  t319 = Cos(var1[0]);
  t48 = Cos(var1[1]);
  t911 = Sin(var1[1]);
  t145 = Sin(var1[0]);
  t968 = Cos(var1[2]);
  t1000 = -1.*t968;
  t1013 = 1. + t1000;
  t1050 = Sin(var1[2]);
  t1196 = Cos(var1[3]);
  t1202 = -1.*t1196;
  t1205 = 1. + t1202;
  t1245 = Sin(var1[3]);
  t1395 = t319*t968*t911;
  t1437 = -1.*t145*t1050;
  t1460 = t1395 + t1437;
  t1543 = -1.*t968*t145;
  t1556 = -1.*t319*t911*t1050;
  t1571 = t1543 + t1556;
  t1589 = Cos(var1[4]);
  t1597 = -1.*t1589;
  t1645 = 1. + t1597;
  t1744 = Sin(var1[4]);
  t1751 = -1.*t1245*t1460;
  t1755 = t1196*t1571;
  t1762 = t1751 + t1755;
  t2070 = t1196*t1460;
  t2084 = t1245*t1571;
  t2133 = t2070 + t2084;
  t2157 = Cos(var1[5]);
  t2191 = -1.*t2157;
  t2245 = 1. + t2191;
  t2330 = Sin(var1[5]);
  t2364 = t1744*t1762;
  t2393 = t1589*t2133;
  t2410 = t2364 + t2393;
  t2575 = t1589*t1762;
  t2612 = -1.*t1744*t2133;
  t2655 = t2575 + t2612;
  t2705 = Cos(var1[6]);
  t2712 = -1.*t2705;
  t2717 = 1. + t2712;
  t2795 = Sin(var1[6]);
  t2820 = -1.*t2330*t2410;
  t2824 = t2157*t2655;
  t2848 = t2820 + t2824;
  t2928 = t2157*t2410;
  t2947 = t2330*t2655;
  t2970 = t2928 + t2947;
  t805 = -1.*t48;
  t813 = 1. + t805;
  t824 = 0.135*t813;
  t914 = 0.049*t911;
  t921 = 0. + t824 + t914;
  t1026 = -0.049*t1013;
  t1112 = -0.09*t1050;
  t1125 = 0. + t1026 + t1112;
  t1163 = -0.09*t1013;
  t1165 = 0.049*t1050;
  t1179 = 0. + t1163 + t1165;
  t1219 = -0.049*t1205;
  t1337 = -0.21*t1245;
  t1378 = 0. + t1219 + t1337;
  t1515 = -0.21*t1205;
  t1528 = 0.049*t1245;
  t1532 = 0. + t1515 + t1528;
  t1669 = -0.2707*t1645;
  t1746 = 0.0016*t1744;
  t1749 = 0. + t1669 + t1746;
  t3192 = t968*t145*t911;
  t3212 = t319*t1050;
  t3231 = t3192 + t3212;
  t3285 = t319*t968;
  t3295 = -1.*t145*t911*t1050;
  t3327 = t3285 + t3295;
  t1828 = -0.0016*t1645;
  t2026 = -0.2707*t1744;
  t2059 = 0. + t1828 + t2026;
  t2315 = 0.0184*t2245;
  t2350 = -0.7055*t2330;
  t2363 = 0. + t2315 + t2350;
  t3393 = -1.*t1245*t3231;
  t3459 = t1196*t3327;
  t3465 = t3393 + t3459;
  t3480 = t1196*t3231;
  t3484 = t1245*t3327;
  t3485 = t3480 + t3484;
  t2475 = -0.7055*t2245;
  t2504 = -0.0184*t2330;
  t2521 = 0. + t2475 + t2504;
  t2734 = -1.1135*t2717;
  t2802 = 0.0216*t2795;
  t2808 = 0. + t2734 + t2802;
  t3513 = t1744*t3465;
  t3517 = t1589*t3485;
  t3523 = t3513 + t3517;
  t3538 = t1589*t3465;
  t3541 = -1.*t1744*t3485;
  t3593 = t3538 + t3541;
  t2858 = -0.0216*t2717;
  t2865 = -1.1135*t2795;
  t2923 = 0. + t2858 + t2865;
  t3619 = -1.*t2330*t3523;
  t3631 = t2157*t3593;
  t3644 = t3619 + t3631;
  t3659 = t2157*t3523;
  t3673 = t2330*t3593;
  t3681 = t3659 + t3673;
  t3806 = -1.*t48*t968*t1245;
  t3828 = -1.*t1196*t48*t1050;
  t3829 = t3806 + t3828;
  t3864 = t1196*t48*t968;
  t3912 = -1.*t48*t1245*t1050;
  t3920 = t3864 + t3912;
  t3839 = t1744*t3829;
  t3962 = t1589*t3920;
  t4019 = t3839 + t3962;
  t4052 = t1589*t3829;
  t4054 = -1.*t1744*t3920;
  t4097 = t4052 + t4054;
  t4046 = -1.*t2330*t4019;
  t4098 = t2157*t4097;
  t4103 = t4046 + t4098;
  t4111 = t2157*t4019;
  t4129 = t2330*t4097;
  t4132 = t4111 + t4129;
  t4346 = Cos(var1[8]);
  t4477 = Cos(var1[9]);
  t4511 = Sin(var1[9]);
  t4523 = Cos(var1[10]);
  t4526 = -1.*t4523;
  t4532 = 1. + t4526;
  t4573 = Sin(var1[10]);
  t4797 = Cos(var1[11]);
  t4808 = -1.*t4797;
  t4821 = 1. + t4808;
  t4843 = Sin(var1[11]);
  t4773 = t4346*t4477*t4523;
  t4778 = -1.*t4346*t4511*t4573;
  t4793 = t4773 + t4778;
  t4880 = -1.*t4346*t4523*t4511;
  t4882 = -1.*t4346*t4477*t4573;
  t4889 = t4880 + t4882;
  t4988 = Cos(var1[12]);
  t5017 = -1.*t4988;
  t5033 = 1. + t5017;
  t5080 = Sin(var1[12]);
  t4969 = t4797*t4793;
  t4976 = t4889*t4843;
  t4977 = t4969 + t4976;
  t5137 = t4797*t4889;
  t5140 = -1.*t4793*t4843;
  t5186 = t5137 + t5140;
  t5318 = Cos(var1[13]);
  t5319 = -1.*t5318;
  t5321 = 1. + t5319;
  t5332 = Sin(var1[13]);
  t5294 = t4988*t4977;
  t5299 = t5186*t5080;
  t5309 = t5294 + t5299;
  t5348 = t4988*t5186;
  t5353 = -1.*t4977*t5080;
  t5354 = t5348 + t5353;
  t4108 = t2795*t4103;
  t4143 = t2705*t4132;
  t4190 = t4108 + t4143;
  t4266 = t2705*t4103;
  t4309 = -1.*t2795*t4132;
  t4311 = t4266 + t4309;
  t5520 = Cos(var1[7]);
  t4386 = -1.*t4346;
  t4395 = 1. + t4386;
  t4403 = Sin(var1[8]);
  t4483 = -1.*t4477;
  t4500 = 1. + t4483;
  t4506 = -0.049*t4500;
  t4515 = -0.09*t4511;
  t4519 = 0. + t4506 + t4515;
  t5763 = Sin(var1[7]);
  t4555 = -0.049*t4532;
  t4652 = -0.21*t4573;
  t4656 = 0. + t4555 + t4652;
  t4665 = -0.21*t4532;
  t4717 = 0.049*t4573;
  t4748 = 0. + t4665 + t4717;
  t5784 = t5520*t4477*t4403;
  t5801 = -1.*t5763*t4511;
  t5805 = t5784 + t5801;
  t5817 = -1.*t4477*t5763;
  t5856 = -1.*t5520*t4403*t4511;
  t5907 = t5817 + t5856;
  t4831 = -0.0016*t4821;
  t4856 = -0.2707*t4843;
  t4860 = 0. + t4831 + t4856;
  t4899 = -0.2707*t4821;
  t4915 = 0.0016*t4843;
  t4937 = 0. + t4899 + t4915;
  t5937 = t4523*t5805;
  t5941 = t5907*t4573;
  t5944 = t5937 + t5941;
  t5976 = t4523*t5907;
  t6035 = -1.*t5805*t4573;
  t6045 = t5976 + t6035;
  t5034 = 0.0184*t5033;
  t5088 = -0.7055*t5080;
  t5103 = 0. + t5034 + t5088;
  t5260 = -0.7055*t5033;
  t5261 = -0.0184*t5080;
  t5275 = 0. + t5260 + t5261;
  t6091 = t4797*t5944;
  t6098 = t6045*t4843;
  t6105 = t6091 + t6098;
  t6109 = t4797*t6045;
  t6135 = -1.*t5944*t4843;
  t6144 = t6109 + t6135;
  t5327 = -0.0216*t5321;
  t5333 = -1.1135*t5332;
  t5339 = 0. + t5327 + t5333;
  t5355 = -1.1135*t5321;
  t5368 = 0.0216*t5332;
  t5374 = 0. + t5355 + t5368;
  t6194 = t4988*t6105;
  t6204 = t6144*t5080;
  t6208 = t6194 + t6204;
  t6228 = t4988*t6144;
  t6242 = -1.*t6105*t5080;
  t6253 = t6228 + t6242;
  t2988 = t2795*t2848;
  t3001 = t2705*t2970;
  t3021 = t2988 + t3001;
  t3049 = t2705*t2848;
  t3056 = -1.*t2795*t2970;
  t3098 = t3049 + t3056;
  t5688 = -0.135*t4395;
  t5701 = 0.049*t4403;
  t5702 = 0. + t5688 + t5701;
  t5766 = -0.09*t4500;
  t5769 = 0.049*t4511;
  t5774 = 0. + t5766 + t5769;
  t6417 = t4477*t5763*t4403;
  t6484 = t5520*t4511;
  t6513 = t6417 + t6484;
  t6527 = t5520*t4477;
  t6528 = -1.*t5763*t4403*t4511;
  t6535 = t6527 + t6528;
  t6549 = t4523*t6513;
  t6557 = t6535*t4573;
  t6558 = t6549 + t6557;
  t6585 = t4523*t6535;
  t6587 = -1.*t6513*t4573;
  t6594 = t6585 + t6587;
  t6607 = t4797*t6558;
  t6614 = t6594*t4843;
  t6618 = t6607 + t6614;
  t6632 = t4797*t6594;
  t6647 = -1.*t6558*t4843;
  t6683 = t6632 + t6647;
  t6724 = t4988*t6618;
  t6740 = t6683*t5080;
  t6746 = t6724 + t6740;
  t6814 = t4988*t6683;
  t6816 = -1.*t6618*t5080;
  t6830 = t6814 + t6816;
  t3701 = t2795*t3644;
  t3711 = t2705*t3681;
  t3718 = t3701 + t3711;
  t3735 = t2705*t3644;
  t3737 = -1.*t2795*t3681;
  t3739 = t3735 + t3737;
  t5489 = 0.642788*t4190;
  t5495 = 0.766044*t4311;
  t5500 = 0. + t5489 + t5495;
  t4397 = -0.049*t4395;
  t4411 = -0.004500000000000004*t4403;
  t4520 = t4346*t4519;
  t4661 = t4346*t4477*t4656;
  t4769 = -1.*t4346*t4511*t4748;
  t4875 = t4793*t4860;
  t4958 = t4889*t4937;
  t5113 = t4977*t5103;
  t5276 = t5186*t5275;
  t5342 = t5309*t5339;
  t5382 = t5354*t5374;
  t5397 = t5318*t5309;
  t5405 = t5354*t5332;
  t5410 = t5397 + t5405;
  t5419 = 0.0306*t5410;
  t5431 = t5318*t5354;
  t5437 = -1.*t5309*t5332;
  t5463 = t5431 + t5437;
  t5471 = -1.1312*t5463;
  t5484 = -0.03155 + t4397 + t4411 + t4520 + t4661 + t4769 + t4875 + t4958 + t5113 + t5276 + t5342 + t5382 + t5419 + t5471;
  t4216 = -0.766044*t4190;
  t4314 = 0.642788*t4311;
  t4324 = 0. + t4216 + t4314;
  t5537 = -1.*t5520;
  t5564 = 1. + t5537;
  t5605 = 0.135*t5564;
  t5615 = 0.1305*t5520*t4346;
  t5726 = -1.*t5520*t5702;
  t5743 = -1.*t5520*t4403*t4519;
  t5782 = t5763*t5774;
  t5810 = -1.*t5805*t4656;
  t5922 = -1.*t5907*t4748;
  t5971 = -1.*t5944*t4860;
  t6058 = -1.*t6045*t4937;
  t6108 = -1.*t6105*t5103;
  t6161 = -1.*t6144*t5275;
  t6212 = -1.*t6208*t5339;
  t6277 = -1.*t6253*t5374;
  t6280 = t5318*t6208;
  t6286 = t6253*t5332;
  t6294 = t6280 + t6286;
  t6301 = -0.0306*t6294;
  t6312 = t5318*t6253;
  t6315 = -1.*t6208*t5332;
  t6323 = t6312 + t6315;
  t6334 = 1.1312*t6323;
  t6343 = 0. + t5605 + t5615 + t5726 + t5743 + t5782 + t5810 + t5922 + t5971 + t6058 + t6108 + t6161 + t6212 + t6277 + t6301 + t6334;
  t6376 = -0.135*t5763;
  t6385 = 0.1305*t4346*t5763;
  t6390 = -1.*t5763*t5702;
  t6392 = -1.*t5763*t4403*t4519;
  t6404 = -1.*t5520*t5774;
  t6521 = -1.*t6513*t4656;
  t6545 = -1.*t6535*t4748;
  t6567 = -1.*t6558*t4860;
  t6604 = -1.*t6594*t4937;
  t6625 = -1.*t6618*t5103;
  t6696 = -1.*t6683*t5275;
  t6759 = -1.*t6746*t5339;
  t6853 = -1.*t6830*t5374;
  t6869 = t5318*t6746;
  t6870 = t6830*t5332;
  t6884 = t6869 + t6870;
  t6905 = -0.0306*t6884;
  t6909 = t5318*t6830;
  t6938 = -1.*t6746*t5332;
  t6951 = t6909 + t6938;
  t6956 = 1.1312*t6951;
  t6968 = -0.07996 + t6376 + t6385 + t6390 + t6392 + t6404 + t6521 + t6545 + t6567 + t6604 + t6625 + t6696 + t6759 + t6853 + t6905 + t6956;
  t6348 = -0.642788*t3021;
  t6351 = -0.766044*t3098;
  t6359 = 0. + t6348 + t6351;
  t6970 = -0.642788*t3718;
  t7011 = -0.766044*t3739;
  t7025 = 0. + t6970 + t7011;
  t3163 = 0.135*t145;
  t3164 = -0.1305*t48*t145;
  t3169 = -1.*t145*t921;
  t3170 = -1.*t145*t911*t1125;
  t3183 = -1.*t319*t1179;
  t3237 = -1.*t1378*t3231;
  t3385 = -1.*t1532*t3327;
  t3479 = -1.*t1749*t3465;
  t3502 = -1.*t2059*t3485;
  t3535 = -1.*t2363*t3523;
  t3597 = -1.*t2521*t3593;
  t3649 = -1.*t2808*t3644;
  t3687 = -1.*t2923*t3681;
  t3725 = -0.0306*t3718;
  t3773 = 1.1312*t3739;
  t7163 = -0.049*t813;
  t7174 = t48*t968*t1378;
  t7182 = 0.004500000000000004*t911;
  t7187 = t48*t1125;
  t7188 = -1.*t48*t1532*t1050;
  t7199 = t1749*t3829;
  t7204 = t2059*t3920;
  t7206 = t2363*t4019;
  t7224 = t2521*t4097;
  t7271 = t2808*t4103;
  t7295 = t2923*t4132;
  t7316 = 0.0306*t4190;
  t7341 = -1.1312*t4311;
  t7362 = -0.03155 + t7163 + t7174 + t7182 + t7187 + t7188 + t7199 + t7204 + t7206 + t7224 + t7271 + t7295 + t7316 + t7341;
  t7080 = 0.766044*t3021;
  t7105 = -0.642788*t3098;
  t7110 = 0. + t7080 + t7105;
  t7393 = -1.*t319;
  t7397 = 1. + t7393;
  t7404 = -0.135*t7397;
  t7412 = -0.1305*t319*t48;
  t7417 = -1.*t319*t921;
  t7424 = -1.*t319*t911*t1125;
  t7426 = t145*t1179;
  t7435 = -1.*t1378*t1460;
  t7439 = -1.*t1532*t1571;
  t7446 = -1.*t1749*t1762;
  t7447 = -1.*t2059*t2133;
  t7461 = -1.*t2363*t2410;
  t7472 = -1.*t2521*t2655;
  t7484 = -1.*t2808*t2848;
  t7494 = -1.*t2923*t2970;
  t7502 = -0.0306*t3021;
  t7532 = 1.1312*t3098;
  t7533 = 0. + t7404 + t7412 + t7417 + t7424 + t7426 + t7435 + t7439 + t7446 + t7447 + t7461 + t7472 + t7484 + t7494 + t7502 + t7532;
  t7135 = 0.766044*t3718;
  t7146 = -0.642788*t3739;
  t7147 = 0. + t7135 + t7146;
  t7584 = -0.07996 + t3163 + t3164 + t3169 + t3170 + t3183 + t3237 + t3385 + t3479 + t3502 + t3535 + t3597 + t3649 + t3687 + t3725 + t3773;
  t3147 = t319*t48;
  t3162 = 0. + t3147;
  t221 = t48*t145;
  t223 = 0. + t221;
  t4329 = -1.*t4324;
  t4338 = 0. + t4329;
  t472 = -0.135*t319;
  t629 = 0.1305*t319*t48;
  t965 = t319*t921;
  t1149 = t319*t911*t1125;
  t1181 = -1.*t145*t1179;
  t1479 = t1378*t1460;
  t1575 = t1532*t1571;
  t1791 = t1749*t1762;
  t2151 = t2059*t2133;
  t2444 = t2363*t2410;
  t2701 = t2521*t2655;
  t2857 = t2808*t2848;
  t2975 = t2923*t2970;
  t3040 = 0.0306*t3021;
  t3099 = -1.1312*t3098;
  t3102 = 0. + t472 + t629 + t965 + t1149 + t1181 + t1479 + t1575 + t1791 + t2151 + t2444 + t2701 + t2857 + t2975 + t3040 + t3099;
  t3777 = 0. + t3163 + t3164 + t3169 + t3170 + t3183 + t3237 + t3385 + t3479 + t3502 + t3535 + t3597 + t3649 + t3687 + t3725 + t3773;
  t7707 = 0. + t911;
  t7066 = -1.*t5500;
  t7067 = 0. + t7066;
  t7767 = -1.*t7707;
  t7794 = 0. + t7767;
  t8249 = 0.049*t48;
  t8251 = 0. + t8249 + t7174 + t7182 + t7187 + t7188 + t7199 + t7204 + t7206 + t7224 + t7271 + t7295 + t7316 + t7341;
  t5519 = t5484*t5500;
  t6366 = t6343*t6359;
  t7040 = t6968*t7025;
  t7057 = t5519 + t6366 + t7040;
  t8374 = -1.*t145;
  t8382 = 0. + t8374;
  t8418 = 0. + t319;
  t7077 = -1.*t5484*t4324;
  t7114 = -1.*t6343*t7110;
  t7152 = -1.*t6968*t7147;
  t7153 = t7077 + t7114 + t7152;
  t8231 = 0. + t7393;
  t8266 = 0. + t145;
  t7379 = t7362*t5500;
  t7544 = t6359*t7533;
  t7600 = t7025*t7584;
  t7607 = t7379 + t7544 + t7600;
  t7617 = -1.*t7362*t4324;
  t7621 = -1.*t7110*t7533;
  t7622 = -1.*t7147*t7584;
  t7625 = t7617 + t7621 + t7622;
  t8252 = -1.*t8231*t8251;
  t8257 = 0. + t8252;
  t8310 = t8266*t8251;
  t8317 = 0. + t8310;
  t7696 = -1.*t3162*t6343;
  t7706 = -1.*t6968*t223;
  t7710 = -1.*t5484*t7707;
  t7722 = t7696 + t7706 + t7710;
  t8417 = t8382*t7110;
  t8422 = t8418*t7147;
  t8457 = 0. + t8417 + t8422;
  t7797 = t5484*t4324;
  t7807 = t6343*t7110;
  t7811 = t6968*t7147;
  t7821 = t7797 + t7807 + t7811;
  t8565 = 0.004500000000000004*t319*t48;
  t8595 = 0.09*t145;
  t8606 = -0.049*t319*t911;
  t8627 = 0. + t8565 + t8595 + t8606 + t7424 + t7426 + t7435 + t7439 + t7446 + t7447 + t7461 + t7472 + t7484 + t7494 + t7502 + t7532;
  t8664 = t8231*t8627;
  t8672 = -0.09*t319;
  t8748 = 0.004500000000000004*t48*t145;
  t8753 = -0.049*t145*t911;
  t8770 = 0. + t8672 + t8748 + t8753 + t3170 + t3183 + t3237 + t3385 + t3479 + t3502 + t3535 + t3597 + t3649 + t3687 + t3725 + t3773;
  t8786 = -1.*t8266*t8770;
  t8789 = t8664 + t8786;
  t7826 = -1.*t7707*t7362;
  t7828 = -1.*t3162*t7533;
  t7832 = -1.*t223*t7584;
  t7835 = t7826 + t7828 + t7832;
  t7843 = t7362*t4324;
  t7844 = t7110*t7533;
  t7845 = t7147*t7584;
  t7852 = t7843 + t7844 + t7845;
  t7869 = t3162*t6343;
  t7870 = t6968*t223;
  t7879 = t5484*t7707;
  t7891 = t7869 + t7870 + t7879;
  t8469 = t8382*t6359;
  t8486 = t8418*t7025;
  t8510 = 0. + t8469 + t8486;
  t9077 = t3162*t8382;
  t9083 = t8418*t223;
  t9096 = 0. + t9077 + t9083;
  t7931 = -1.*t5484*t5500;
  t7936 = -1.*t6343*t6359;
  t7995 = -1.*t6968*t7025;
  t8001 = t7931 + t7936 + t7995;
  t8059 = t7707*t7362;
  t8071 = t3162*t7533;
  t8079 = t223*t7584;
  t8089 = t8059 + t8071 + t8079;
  t8134 = -1.*t7362*t5500;
  t8137 = -1.*t6359*t7533;
  t8143 = -1.*t7025*t7584;
  t8169 = t8134 + t8137 + t8143;
  t9574 = -1.*t911;
  t9578 = 0. + t9574;
  t9593 = -1.*t319*t48;
  t9598 = 0. + t9593;
  t9623 = -1.*t48*t145;
  t9627 = 0. + t9623;
  t9527 = -0.049*t1460;
  t9531 = -0.09*t1571;
  t9532 = 0. + t8565 + t9527 + t7435 + t9531 + t7439 + t7446 + t7447 + t7461 + t7472 + t7484 + t7494 + t7502 + t7532;
  t9449 = 0.049*t48*t968;
  t9465 = -0.09*t48*t1050;
  t9507 = 0. + t9449 + t7174 + t7182 + t9465 + t7188 + t7199 + t7204 + t7206 + t7224 + t7271 + t7295 + t7316 + t7341;
  t9698 = -0.049*t3231;
  t9699 = -0.09*t3327;
  t9703 = 0. + t8748 + t9698 + t3237 + t9699 + t3385 + t3479 + t3502 + t3535 + t3597 + t3649 + t3687 + t3725 + t3773;
  t7608 = t4324*t7607;
  t7634 = t5500*t7625;
  t7641 = t7608 + t7634;
  t8826 = t7110*t7607;
  t8852 = t6359*t7625;
  t8855 = t8826 + t8852;
  t8857 = t7147*t7607;
  t8872 = t7025*t7625;
  t8890 = t8857 + t8872;
  t9522 = t3162*t9507;
  t9543 = -1.*t7707*t9532;
  t9544 = t9522 + t9543;
  t9669 = t9578*t4324;
  t9671 = t9598*t7110;
  t9677 = t9627*t7147;
  t9681 = t9669 + t9671 + t9677;
  t9693 = t223*t9532;
  t9705 = -1.*t3162*t9703;
  t9710 = t9693 + t9705;
  t9719 = -1.*t223*t9507;
  t9721 = t7707*t9703;
  t9722 = t9719 + t9721;
  t9124 = t7110*t7835;
  t9150 = t3162*t7852;
  t9164 = t9124 + t9150;
  t9182 = t7147*t7835;
  t9194 = t223*t7852;
  t9209 = t9182 + t9194;
  t7841 = t4324*t7835;
  t7853 = t7707*t7852;
  t7857 = t7841 + t7853;
  t9738 = t9598*t3162;
  t9750 = t9627*t223;
  t9751 = t9578*t7707;
  t9752 = t9738 + t9750 + t9751;
  t9590 = t9578*t5500;
  t9599 = t9598*t6359;
  t9657 = t9627*t7025;
  t9660 = t9590 + t9599 + t9657;
  t9297 = t6359*t8089;
  t9301 = t3162*t8169;
  t9304 = t9297 + t9301;
  t9350 = t7025*t8089;
  t9375 = t223*t8169;
  t9407 = t9350 + t9375;
  t8090 = t5500*t8089;
  t8177 = t7707*t8169;
  t8179 = t8090 + t8177;
  t9662 = -1.*t9660*t7153;
  t9687 = -1.*t7057*t9681;
  t9814 = -0.21*t1762;
  t9818 = -0.049*t2133;
  t9822 = 0. + t9814 + t7446 + t9818 + t7447 + t7461 + t7472 + t7484 + t7494 + t7502 + t7532;
  t9807 = 0.21*t3829;
  t9809 = 0.049*t3920;
  t9810 = 0. + t9807 + t7199 + t9809 + t7204 + t7206 + t7224 + t7271 + t7295 + t7316 + t7341;
  t9869 = -0.21*t3465;
  t9872 = -0.049*t3485;
  t9892 = 0. + t9869 + t3479 + t9872 + t3502 + t3535 + t3597 + t3649 + t3687 + t3725 + t3773;
  t9728 = t9578*t7641;
  t9729 = t9598*t8855;
  t9730 = t9627*t8890;
  t9813 = t3162*t9810;
  t9823 = -1.*t7707*t9822;
  t9836 = t9813 + t9823;
  t9753 = -1.*t9752*t7821;
  t9754 = -1.*t7722*t9681;
  t9845 = t223*t9822;
  t9893 = -1.*t3162*t9892;
  t9897 = t9845 + t9893;
  t9914 = -1.*t223*t9810;
  t9918 = t7707*t9892;
  t9921 = t9914 + t9918;
  t9767 = t9598*t9164;
  t9768 = t9627*t9209;
  t9769 = t9578*t7857;
  t9780 = -1.*t9752*t8001;
  t9781 = -1.*t7891*t9660;
  t9795 = t9598*t9304;
  t9796 = t9627*t9407;
  t9801 = t9578*t8179;
  t10008 = -0.0016*t2410;
  t10017 = -0.2707*t2655;
  t10018 = 0. + t10008 + t7461 + t10017 + t7472 + t7484 + t7494 + t7502 + t7532;
  t9990 = 0.0016*t4019;
  t9993 = 0.2707*t4097;
  t10005 = 0. + t9990 + t7206 + t9993 + t7224 + t7271 + t7295 + t7316 + t7341;
  t10030 = -0.0016*t3523;
  t10031 = -0.2707*t3593;
  t10043 = 0. + t10030 + t3535 + t10031 + t3597 + t3649 + t3687 + t3725 + t3773;
  t10007 = t3162*t10005;
  t10022 = -1.*t7707*t10018;
  t10023 = t10007 + t10022;
  t10027 = t223*t10018;
  t10046 = -1.*t3162*t10043;
  t10047 = t10027 + t10046;
  t10056 = -1.*t223*t10005;
  t10057 = t7707*t10043;
  t10059 = t10056 + t10057;
  t10101 = -0.7055*t2848;
  t10102 = 0.0184*t2970;
  t10106 = 0. + t10101 + t7484 + t10102 + t7494 + t7502 + t7532;
  t10090 = 0.7055*t4103;
  t10093 = -0.0184*t4132;
  t10095 = 0. + t10090 + t7271 + t10093 + t7295 + t7316 + t7341;
  t10124 = -0.7055*t3644;
  t10125 = 0.0184*t3681;
  t10126 = 0. + t10124 + t3649 + t10125 + t3687 + t3725 + t3773;
  t10098 = t3162*t10095;
  t10111 = -1.*t7707*t10106;
  t10112 = t10098 + t10111;
  t10121 = t223*t10106;
  t10127 = -1.*t3162*t10126;
  t10132 = t10121 + t10127;
  t10136 = -1.*t223*t10095;
  t10137 = t7707*t10126;
  t10138 = t10136 + t10137;
  t10169 = -0.052199999999999996*t3021;
  t10170 = 0.01770000000000005*t3098;
  t10172 = 0. + t10169 + t10170;
  t10158 = 0.052199999999999996*t4190;
  t10163 = -0.01770000000000005*t4311;
  t10165 = 0. + t10158 + t10163;
  t10182 = -0.052199999999999996*t3718;
  t10185 = 0.01770000000000005*t3739;
  t10186 = 0. + t10182 + t10185;
  t10166 = t3162*t10165;
  t10173 = -1.*t7707*t10172;
  t10174 = t10166 + t10173;
  t10180 = t223*t10172;
  t10187 = -1.*t3162*t10186;
  t10188 = t10180 + t10187;
  t10193 = -1.*t223*t10165;
  t10194 = t7707*t10186;
  t10197 = t10193 + t10194;
  t10217 = 0. + t6376 + t6385 + t6390 + t6392 + t6404 + t6521 + t6545 + t6567 + t6604 + t6625 + t6696 + t6759 + t6853 + t6905 + t6956;
  t10218 = -1.*t10217;
  t10219 = 0. + t10218;
  t10225 = -0.135*t5520;
  t10227 = 0. + t10225 + t5615 + t5726 + t5743 + t5782 + t5810 + t5922 + t5971 + t6058 + t6108 + t6161 + t6212 + t6277 + t6301 + t6334;
  t10240 = 0.049*t4346;
  t10242 = 0. + t10240 + t4411 + t4520 + t4661 + t4769 + t4875 + t4958 + t5113 + t5276 + t5342 + t5382 + t5419 + t5471;
  t10239 = 0. + t5537;
  t10249 = 0. + t5763;
  t10255 = -0.004500000000000004*t5520*t4346;
  t10256 = 0.09*t5763;
  t10257 = -0.049*t5520*t4403;
  t10261 = 0. + t10255 + t10256 + t10257 + t5743 + t5782 + t5810 + t5922 + t5971 + t6058 + t6108 + t6161 + t6212 + t6277 + t6301 + t6334;
  t10262 = -1.*t10239*t10261;
  t10263 = -0.09*t5520;
  t10266 = -0.004500000000000004*t4346*t5763;
  t10269 = -0.049*t5763*t4403;
  t10272 = 0. + t10263 + t10266 + t10269 + t6392 + t6404 + t6521 + t6545 + t6567 + t6604 + t6625 + t6696 + t6759 + t6853 + t6905 + t6956;
  t10273 = t10249*t10272;
  t10274 = t10262 + t10273;
  t10243 = t10239*t10242;
  t10245 = 0. + t10243;
  t10250 = -1.*t10249*t10242;
  t10253 = 0. + t10250;
  t10296 = 0.049*t4346*t4477;
  t10297 = -0.09*t4346*t4511;
  t10302 = 0. + t10296 + t4411 + t10297 + t4661 + t4769 + t4875 + t4958 + t5113 + t5276 + t5342 + t5382 + t5419 + t5471;
  t10304 = 0. + t4403;
  t10292 = t4346*t5763;
  t10293 = 0. + t10292;
  t10322 = -0.049*t5805;
  t10323 = -0.09*t5907;
  t10327 = 0. + t10255 + t10322 + t10323 + t5810 + t5922 + t5971 + t6058 + t6108 + t6161 + t6212 + t6277 + t6301 + t6334;
  t10316 = t5520*t4346;
  t10317 = 0. + t10316;
  t10306 = -0.049*t6513;
  t10308 = -0.09*t6535;
  t10309 = 0. + t10266 + t10306 + t10308 + t6521 + t6545 + t6567 + t6604 + t6625 + t6696 + t6759 + t6853 + t6905 + t6956;
  t10335 = -1.*t10293*t10327;
  t10338 = t10317*t10309;
  t10341 = t10335 + t10338;
  t10303 = t10293*t10302;
  t10310 = -1.*t10304*t10309;
  t10313 = t10303 + t10310;
  t10319 = -1.*t10317*t10302;
  t10328 = t10304*t10327;
  t10331 = t10319 + t10328;
  t10360 = 0.21*t4889;
  t10361 = 0.049*t4793;
  t10365 = 0. + t10360 + t10361 + t4875 + t4958 + t5113 + t5276 + t5342 + t5382 + t5419 + t5471;
  t10382 = -0.21*t6045;
  t10384 = -0.049*t5944;
  t10388 = 0. + t10382 + t10384 + t5971 + t6058 + t6108 + t6161 + t6212 + t6277 + t6301 + t6334;
  t10370 = -0.21*t6594;
  t10374 = -0.049*t6558;
  t10375 = 0. + t10370 + t10374 + t6567 + t6604 + t6625 + t6696 + t6759 + t6853 + t6905 + t6956;
  t10398 = -1.*t10293*t10388;
  t10400 = t10317*t10375;
  t10404 = t10398 + t10400;
  t10368 = t10293*t10365;
  t10377 = -1.*t10304*t10375;
  t10378 = t10368 + t10377;
  t10381 = -1.*t10317*t10365;
  t10390 = t10304*t10388;
  t10391 = t10381 + t10390;
  t10422 = 0.0016*t4977;
  t10423 = 0.2707*t5186;
  t10425 = 0. + t10422 + t10423 + t5113 + t5276 + t5342 + t5382 + t5419 + t5471;
  t10445 = -0.0016*t6105;
  t10447 = -0.2707*t6144;
  t10448 = 0. + t10445 + t10447 + t6108 + t6161 + t6212 + t6277 + t6301 + t6334;
  t10430 = -0.0016*t6618;
  t10431 = -0.2707*t6683;
  t10435 = 0. + t10430 + t10431 + t6625 + t6696 + t6759 + t6853 + t6905 + t6956;
  t10453 = -1.*t10293*t10448;
  t10454 = t10317*t10435;
  t10455 = t10453 + t10454;
  t10426 = t10293*t10425;
  t10439 = -1.*t10304*t10435;
  t10440 = t10426 + t10439;
  t10444 = -1.*t10317*t10425;
  t10449 = t10304*t10448;
  t10451 = t10444 + t10449;
  t10478 = 0.7055*t5354;
  t10481 = -0.0184*t5309;
  t10482 = 0. + t10478 + t10481 + t5342 + t5382 + t5419 + t5471;
  t10492 = -0.7055*t6253;
  t10494 = 0.0184*t6208;
  t10495 = 0. + t10492 + t10494 + t6212 + t6277 + t6301 + t6334;
  t10484 = -0.7055*t6830;
  t10485 = 0.0184*t6746;
  t10486 = 0. + t10484 + t10485 + t6759 + t6853 + t6905 + t6956;
  t10500 = -1.*t10293*t10495;
  t10504 = t10317*t10486;
  t10505 = t10500 + t10504;
  t10483 = t10293*t10482;
  t10487 = -1.*t10304*t10486;
  t10488 = t10483 + t10487;
  t10490 = -1.*t10317*t10482;
  t10496 = t10304*t10495;
  t10498 = t10490 + t10496;
  t10519 = 0.052199999999999996*t5410;
  t10520 = -0.01770000000000005*t5463;
  t10521 = 0. + t10519 + t10520;
  t10531 = -0.052199999999999996*t6294;
  t10534 = 0.01770000000000005*t6323;
  t10536 = 0. + t10531 + t10534;
  t10523 = -0.052199999999999996*t6884;
  t10524 = 0.01770000000000005*t6951;
  t10525 = 0. + t10523 + t10524;
  t10543 = -1.*t10293*t10536;
  t10544 = t10317*t10525;
  t10546 = t10543 + t10544;
  t10522 = t10293*t10521;
  t10526 = -1.*t10304*t10525;
  t10527 = t10522 + t10526;
  t10530 = -1.*t10317*t10521;
  t10538 = t10304*t10536;
  t10540 = t10530 + t10538;
  p_output1[0]=0. + t223*t3102 + t3162*t3777 - 1.*t4338*t7057 - 1.*t7067*t7153 - 1.*t7641;
  p_output1[1]=0. + t3777*t6359 + t3102*t7025 - 1.*t4338*t7722 - 1.*t7794*t7821 - 1.*t7857;
  p_output1[2]=0. + t3777*t7110 + t3102*t7147 - 1.*t7067*t7891 - 1.*t7794*t8001 - 1.*t8179;
  p_output1[3]=0. + t3162*t8257 + t223*t8317 - 1.*t7057*t8457 - 1.*t7153*t8510 + t7707*t8789 + t8382*t8855 + t8418*t8890;
  p_output1[4]=0. + t6359*t8257 + t7025*t8317 - 1.*t7722*t8457 + t5500*t8789 - 1.*t7821*t9096 + t8382*t9164 + t8418*t9209;
  p_output1[5]=0. + t7110*t8257 + t7147*t8317 - 1.*t7891*t8510 + t4324*t8789 - 1.*t8001*t9096 + t8382*t9304 + t8418*t9407;
  p_output1[6]=t223*t9544 + t9662 + t9687 + t7707*t9710 + t3162*t9722 + t9728 + t9729 + t9730;
  p_output1[7]=t7025*t9544 + t5500*t9710 + t6359*t9722 + t9753 + t9754 + t9767 + t9768 + t9769;
  p_output1[8]=t7147*t9544 + t4324*t9710 + t7110*t9722 + t9780 + t9781 + t9795 + t9796 + t9801;
  p_output1[9]=t9662 + t9687 + t9728 + t9729 + t9730 + t223*t9836 + t7707*t9897 + t3162*t9921;
  p_output1[10]=t9753 + t9754 + t9767 + t9768 + t9769 + t7025*t9836 + t5500*t9897 + t6359*t9921;
  p_output1[11]=t9780 + t9781 + t9795 + t9796 + t9801 + t7147*t9836 + t4324*t9897 + t7110*t9921;
  p_output1[12]=t10023*t223 + t10059*t3162 + t10047*t7707 + t9662 + t9687 + t9728 + t9729 + t9730;
  p_output1[13]=t10047*t5500 + t10059*t6359 + t10023*t7025 + t9753 + t9754 + t9767 + t9768 + t9769;
  p_output1[14]=t10047*t4324 + t10059*t7110 + t10023*t7147 + t9780 + t9781 + t9795 + t9796 + t9801;
  p_output1[15]=t10112*t223 + t10138*t3162 + t10132*t7707 + t9662 + t9687 + t9728 + t9729 + t9730;
  p_output1[16]=t10132*t5500 + t10138*t6359 + t10112*t7025 + t9753 + t9754 + t9767 + t9768 + t9769;
  p_output1[17]=t10132*t4324 + t10138*t7110 + t10112*t7147 + t9780 + t9781 + t9795 + t9796 + t9801;
  p_output1[18]=t10174*t223 + t10197*t3162 + t10188*t7707 + t9662 + t9687 + t9728 + t9729 + t9730;
  p_output1[19]=t10188*t5500 + t10197*t6359 + t10174*t7025 + t9753 + t9754 + t9767 + t9768 + t9769;
  p_output1[20]=t10188*t4324 + t10197*t7110 + t10174*t7147 + t9780 + t9781 + t9795 + t9796 + t9801;
  p_output1[21]=0. + t10227*t223 + t10219*t3162;
  p_output1[22]=0. + t10219*t6359 + t10227*t7025;
  p_output1[23]=0. + t10219*t7110 + t10227*t7147;
  p_output1[24]=t10253*t223 + t10245*t3162 + t10274*t7707;
  p_output1[25]=t10274*t5500 + t10245*t6359 + t10253*t7025;
  p_output1[26]=t10274*t4324 + t10245*t7110 + t10253*t7147;
  p_output1[27]=t10331*t223 + t10313*t3162 + t10341*t7707;
  p_output1[28]=t10341*t5500 + t10313*t6359 + t10331*t7025;
  p_output1[29]=t10341*t4324 + t10313*t7110 + t10331*t7147;
  p_output1[30]=t10391*t223 + t10378*t3162 + t10404*t7707;
  p_output1[31]=t10404*t5500 + t10378*t6359 + t10391*t7025;
  p_output1[32]=t10404*t4324 + t10378*t7110 + t10391*t7147;
  p_output1[33]=t10451*t223 + t10440*t3162 + t10455*t7707;
  p_output1[34]=t10455*t5500 + t10440*t6359 + t10451*t7025;
  p_output1[35]=t10455*t4324 + t10440*t7110 + t10451*t7147;
  p_output1[36]=t10498*t223 + t10488*t3162 + t10505*t7707;
  p_output1[37]=t10505*t5500 + t10488*t6359 + t10498*t7025;
  p_output1[38]=t10505*t4324 + t10488*t7110 + t10498*t7147;
  p_output1[39]=t10540*t223 + t10527*t3162 + t10546*t7707;
  p_output1[40]=t10546*t5500 + t10527*t6359 + t10540*t7025;
  p_output1[41]=t10546*t4324 + t10527*t7110 + t10540*t7147;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 14 && ncols == 1) && 
      !(mrows == 1 && ncols == 14))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 14, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Jv_LeftToeBottom_to_RightToeBottom_mex.hh"

namespace SymExpression
{

void Jv_LeftToeBottom_to_RightToeBottom_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
