/*
 * Automatically Generated from Mathematica.
 * Mon 6 Nov 2017 23:13:11 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t1480;
  double t2169;
  double t1966;
  double t1996;
  double t2188;
  double t614;
  double t728;
  double t729;
  double t1050;
  double t1596;
  double t2126;
  double t2233;
  double t2255;
  double t2317;
  double t2499;
  double t2524;
  double t2538;
  double t400;
  double t2624;
  double t2644;
  double t2655;
  double t2714;
  double t2724;
  double t2738;
  double t2790;
  double t2821;
  double t2836;
  double t2870;
  double t3463;
  double t3478;
  double t3520;
  double t3635;
  double t3644;
  double t3678;
  double t3815;
  double t3996;
  double t4033;
  double t4081;
  double t4147;
  double t4184;
  double t4239;
  double t4379;
  double t4383;
  double t4415;
  double t4492;
  double t4537;
  double t4553;
  double t4560;
  double t4661;
  double t4677;
  double t4741;
  double t4804;
  double t4816;
  double t4819;
  double t4826;
  double t4858;
  double t4891;
  double t4907;
  double t4964;
  double t4969;
  double t4985;
  double t5012;
  double t5029;
  double t5040;
  double t5153;
  double t5249;
  double t5253;
  double t5285;
  double t5367;
  double t5368;
  double t5370;
  double t902;
  double t1259;
  double t1385;
  double t1634;
  double t1780;
  double t2324;
  double t2333;
  double t2376;
  double t2429;
  double t2561;
  double t2576;
  double t2599;
  double t5606;
  double t5616;
  double t5617;
  double t5626;
  double t5629;
  double t5630;
  double t2782;
  double t2811;
  double t2819;
  double t5639;
  double t5646;
  double t5654;
  double t3338;
  double t3405;
  double t3447;
  double t3681;
  double t3976;
  double t3988;
  double t5662;
  double t5667;
  double t5670;
  double t5702;
  double t5703;
  double t5705;
  double t4115;
  double t4133;
  double t4140;
  double t4486;
  double t4500;
  double t4515;
  double t5723;
  double t5724;
  double t5731;
  double t5737;
  double t5741;
  double t5744;
  double t4620;
  double t4644;
  double t4650;
  double t4821;
  double t4848;
  double t4851;
  double t5750;
  double t5757;
  double t5758;
  double t5769;
  double t5773;
  double t5780;
  double t4935;
  double t4955;
  double t4960;
  double t5101;
  double t5190;
  double t5206;
  double t5857;
  double t5861;
  double t5877;
  double t5913;
  double t5930;
  double t5932;
  double t5291;
  double t5328;
  double t5334;
  double t5951;
  double t5970;
  double t5989;
  double t6009;
  double t6034;
  double t6040;
  double t6244;
  double t6265;
  double t6271;
  double t6294;
  double t6308;
  double t6311;
  double t6361;
  double t6365;
  double t6366;
  double t6369;
  double t6370;
  double t6372;
  double t6385;
  double t6386;
  double t6391;
  double t6403;
  double t6405;
  double t6407;
  double t6422;
  double t6426;
  double t6429;
  double t6435;
  double t6436;
  double t6439;
  double t6443;
  double t6446;
  double t6450;
  double t6454;
  double t6455;
  double t6457;
  double t6462;
  double t6476;
  double t6478;
  double t6704;
  double t6719;
  double t6731;
  double t6740;
  double t6746;
  double t6748;
  double t6888;
  double t6903;
  double t6905;
  double t6961;
  double t6962;
  double t6964;
  double t6969;
  double t6970;
  double t6972;
  double t6975;
  double t6979;
  double t6981;
  double t6984;
  double t6986;
  double t6993;
  double t6995;
  double t6996;
  double t6997;
  double t6999;
  double t7000;
  double t7003;
  double t7005;
  double t7008;
  double t7009;
  double t7014;
  double t7018;
  double t7020;
  double t7080;
  double t7091;
  double t7096;
  double t7139;
  double t7163;
  double t7178;
  double t7287;
  double t7298;
  double t7310;
  double t7351;
  double t7358;
  double t7375;
  double t7497;
  double t7500;
  double t7504;
  double t7619;
  double t7645;
  double t7682;
  double t7746;
  double t7779;
  double t7788;
  double t7793;
  double t7806;
  double t7834;
  double t8191;
  double t8219;
  double t8276;
  double t8422;
  double t8525;
  double t8555;
  double t8655;
  double t8692;
  double t8741;
  double t8967;
  double t9036;
  double t9051;
  double t9123;
  double t9130;
  double t9085;
  double t9100;
  double t9110;
  double t9163;
  double t9166;
  double t9185;
  double t9210;
  double t9212;
  double t9218;
  double t9227;
  double t9239;
  double t9243;
  double t9267;
  double t9271;
  double t9275;
  double t9290;
  double t9291;
  double t9297;
  double t9313;
  double t9337;
  double t9339;
  double t9352;
  double t9353;
  double t9356;
  double t9363;
  double t9367;
  double t9368;
  double t9430;
  double t9434;
  double t9438;
  double t9461;
  double t9464;
  double t9470;
  double t9449;
  double t9452;
  double t9489;
  double t9492;
  double t9497;
  double t9506;
  double t9508;
  double t9515;
  double t9526;
  double t9527;
  double t9531;
  double t9556;
  double t9559;
  double t9563;
  double t9576;
  double t9580;
  double t9581;
  double t9588;
  double t9595;
  double t9599;
  double t9609;
  double t9616;
  double t9617;
  double t9624;
  double t9625;
  double t9635;
  double t9698;
  double t9702;
  double t9709;
  double t9681;
  double t9687;
  double t9688;
  double t9727;
  double t9729;
  double t9733;
  double t9737;
  double t9740;
  double t9741;
  double t9744;
  double t9745;
  double t9746;
  double t9750;
  double t9754;
  double t9756;
  double t9763;
  double t9768;
  double t9770;
  double t9773;
  double t9775;
  double t9776;
  double t9784;
  double t9785;
  double t9790;
  double t9794;
  double t9800;
  double t9801;
  double t9826;
  double t9827;
  double t9832;
  double t9834;
  double t9835;
  double t9841;
  double t9842;
  double t9845;
  double t9847;
  double t9851;
  double t9852;
  double t9863;
  double t9865;
  double t9871;
  double t9873;
  double t9875;
  double t9876;
  double t9879;
  double t9881;
  double t9885;
  double t9891;
  double t9893;
  double t9894;
  double t9898;
  double t9903;
  double t9904;
  double t9930;
  double t9932;
  double t9933;
  double t9941;
  double t9945;
  double t9937;
  double t9938;
  double t9954;
  double t9957;
  double t9958;
  double t9963;
  double t9967;
  double t9972;
  double t9974;
  double t9976;
  double t9977;
  double t9980;
  double t9982;
  double t9986;
  double t9988;
  double t9991;
  double t9992;
  double t9996;
  double t9999;
  double t10000;
  double t10006;
  double t10007;
  double t10010;
  double t10013;
  double t10017;
  double t10018;
  double t9694;
  double t9713;
  double t9721;
  double t9723;
  double t9736;
  double t9743;
  double t9747;
  double t9762;
  double t9772;
  double t9779;
  double t9793;
  double t9805;
  double t9806;
  double t9809;
  double t9812;
  double t9813;
  double t9815;
  double t9818;
  double t9819;
  double t9821;
  double t5679;
  double t5684;
  double t5690;
  double t10092;
  double t10095;
  double t10098;
  double t10104;
  double t10105;
  double t10108;
  double t10112;
  double t10113;
  double t10114;
  double t10117;
  double t10118;
  double t10121;
  double t10129;
  double t10133;
  double t10134;
  double t10140;
  double t10141;
  double t10142;
  double t10056;
  double t10057;
  double t10058;
  double t10060;
  double t10061;
  double t10166;
  double t10167;
  double t10174;
  double t10176;
  double t10177;
  double t10179;
  double t10193;
  double t10195;
  double t10197;
  double t10201;
  double t10202;
  double t10203;
  double t10209;
  double t10210;
  double t10213;
  double t10219;
  double t10221;
  double t10222;
  double t10225;
  double t10227;
  double t10228;
  double t10233;
  double t10238;
  double t10240;
  double t10267;
  double t10268;
  double t10269;
  double t10272;
  double t10275;
  double t10280;
  double t10300;
  double t10301;
  double t10304;
  double t10311;
  double t10312;
  double t10314;
  double t10316;
  double t10317;
  double t10318;
  double t10320;
  double t10321;
  double t10322;
  double t10325;
  double t10328;
  double t10331;
  double t10334;
  double t10338;
  double t10339;
  double t10377;
  double t10379;
  double t10380;
  double t10385;
  double t10387;
  double t10394;
  double t10395;
  double t10398;
  double t10400;
  double t10402;
  double t10403;
  double t10407;
  double t10408;
  double t10409;
  double t10411;
  double t10413;
  double t10415;
  double t10419;
  double t10420;
  double t10421;
  double t10362;
  double t10364;
  double t10368;
  double t10369;
  double t10370;
  double t10439;
  double t10442;
  double t10444;
  double t10447;
  double t10448;
  double t10449;
  double t10452;
  double t10454;
  double t10455;
  double t10459;
  double t10462;
  double t10464;
  double t10467;
  double t10468;
  double t10469;
  double t10473;
  double t10474;
  double t10477;
  double t10480;
  double t10482;
  double t10483;
  double t10486;
  double t10487;
  double t10488;
  double t10491;
  double t10492;
  double t10494;
  double t10512;
  double t10513;
  double t10514;
  double t10516;
  double t10517;
  double t10518;
  double t10520;
  double t10521;
  double t10522;
  double t10524;
  double t10525;
  double t10526;
  double t10529;
  double t10530;
  double t10531;
  double t10533;
  double t10534;
  double t10535;
  double t10537;
  double t10538;
  double t10540;
  double t10542;
  double t10543;
  double t10544;
  double t10546;
  double t10547;
  double t10548;
  double t10567;
  double t10568;
  double t10570;
  double t10571;
  double t10572;
  double t10574;
  double t10575;
  double t10577;
  double t10578;
  double t10579;
  double t10581;
  double t10582;
  double t10583;
  double t10559;
  double t10560;
  double t10561;
  double t10563;
  double t10564;
  double t10594;
  double t10595;
  double t10596;
  double t10599;
  double t10600;
  double t10602;
  double t10603;
  double t10605;
  double t10606;
  double t10607;
  double t10609;
  double t10610;
  double t10611;
  double t10613;
  double t10614;
  double t10615;
  double t10617;
  double t10618;
  double t10619;
  double t10630;
  double t10631;
  double t10632;
  double t10635;
  double t10636;
  double t10638;
  double t10639;
  double t10641;
  double t10642;
  double t10643;
  double t10645;
  double t10646;
  double t10647;
  double t10649;
  double t10650;
  double t10651;
  double t10653;
  double t10654;
  double t10655;
  double t10673;
  double t10674;
  double t10677;
  double t10678;
  double t10680;
  double t10681;
  double t10682;
  double t10666;
  double t10667;
  double t10669;
  double t10670;
  double t10671;
  double t10694;
  double t10695;
  double t10696;
  double t10698;
  double t10699;
  double t10701;
  double t10702;
  double t10704;
  double t10705;
  double t10706;
  double t10708;
  double t10709;
  double t10710;
  double t10722;
  double t10723;
  double t10724;
  double t10726;
  double t10727;
  double t10729;
  double t10730;
  double t10732;
  double t10733;
  double t10734;
  double t10736;
  double t10737;
  double t10738;
  double t10757;
  double t10758;
  double t6090;
  double t10749;
  double t10750;
  double t10751;
  double t10753;
  double t10754;
  double t10768;
  double t10769;
  double t10770;
  double t10773;
  double t10774;
  double t10776;
  double t10777;
  double t10788;
  double t10789;
  double t10790;
  double t10793;
  double t10794;
  double t10796;
  double t10797;
  double t10760;
  double t6110;
  double t6140;
  double t10808;
  double t10809;
  double t10811;
  double t10812;
  double t10813;
  double t10779;
  double t10821;
  double t10822;
  double t10823;
  double t10783;
  double t10799;
  double t10833;
  double t10834;
  double t10835;
  double t10803;
  t1480 = Sin(var1[3]);
  t2169 = Cos(var1[3]);
  t1966 = Cos(var1[5]);
  t1996 = Sin(var1[4]);
  t2188 = Sin(var1[5]);
  t614 = Cos(var1[14]);
  t728 = -1.*t614;
  t729 = 1. + t728;
  t1050 = Sin(var1[14]);
  t1596 = Sin(var1[13]);
  t2126 = -1.*t1966*t1480*t1996;
  t2233 = t2169*t2188;
  t2255 = t2126 + t2233;
  t2317 = Cos(var1[13]);
  t2499 = -1.*t2169*t1966;
  t2524 = -1.*t1480*t1996*t2188;
  t2538 = t2499 + t2524;
  t400 = Cos(var1[4]);
  t2624 = t1596*t2255;
  t2644 = t2317*t2538;
  t2655 = t2624 + t2644;
  t2714 = Cos(var1[15]);
  t2724 = -1.*t2714;
  t2738 = 1. + t2724;
  t2790 = Sin(var1[15]);
  t2821 = t2317*t2255;
  t2836 = -1.*t1596*t2538;
  t2870 = t2821 + t2836;
  t3463 = -1.*t614*t400*t1480;
  t3478 = t1050*t2655;
  t3520 = t3463 + t3478;
  t3635 = Cos(var1[16]);
  t3644 = -1.*t3635;
  t3678 = 1. + t3644;
  t3815 = Sin(var1[16]);
  t3996 = t2790*t2870;
  t4033 = t2714*t3520;
  t4081 = t3996 + t4033;
  t4147 = t2714*t2870;
  t4184 = -1.*t2790*t3520;
  t4239 = t4147 + t4184;
  t4379 = Cos(var1[17]);
  t4383 = -1.*t4379;
  t4415 = 1. + t4383;
  t4492 = Sin(var1[17]);
  t4537 = -1.*t3815*t4081;
  t4553 = t3635*t4239;
  t4560 = t4537 + t4553;
  t4661 = t3635*t4081;
  t4677 = t3815*t4239;
  t4741 = t4661 + t4677;
  t4804 = Cos(var1[18]);
  t4816 = -1.*t4804;
  t4819 = 1. + t4816;
  t4826 = Sin(var1[18]);
  t4858 = t4492*t4560;
  t4891 = t4379*t4741;
  t4907 = t4858 + t4891;
  t4964 = t4379*t4560;
  t4969 = -1.*t4492*t4741;
  t4985 = t4964 + t4969;
  t5012 = Cos(var1[19]);
  t5029 = -1.*t5012;
  t5040 = 1. + t5029;
  t5153 = Sin(var1[19]);
  t5249 = -1.*t4826*t4907;
  t5253 = t4804*t4985;
  t5285 = t5249 + t5253;
  t5367 = t4804*t4907;
  t5368 = t4826*t4985;
  t5370 = t5367 + t5368;
  t902 = -0.049*t729;
  t1259 = -0.135*t1050;
  t1385 = 0. + t902 + t1259;
  t1634 = 0.135*t1596;
  t1780 = 0. + t1634;
  t2324 = -1.*t2317;
  t2333 = 1. + t2324;
  t2376 = -0.135*t2333;
  t2429 = 0. + t2376;
  t2561 = -0.135*t729;
  t2576 = 0.049*t1050;
  t2599 = 0. + t2561 + t2576;
  t5606 = t2169*t1966*t1996;
  t5616 = t1480*t2188;
  t5617 = t5606 + t5616;
  t5626 = -1.*t1966*t1480;
  t5629 = t2169*t1996*t2188;
  t5630 = t5626 + t5629;
  t2782 = -0.09*t2738;
  t2811 = 0.049*t2790;
  t2819 = 0. + t2782 + t2811;
  t5639 = t1596*t5617;
  t5646 = t2317*t5630;
  t5654 = t5639 + t5646;
  t3338 = -0.049*t2738;
  t3405 = -0.09*t2790;
  t3447 = 0. + t3338 + t3405;
  t3681 = -0.049*t3678;
  t3976 = -0.21*t3815;
  t3988 = 0. + t3681 + t3976;
  t5662 = t2317*t5617;
  t5667 = -1.*t1596*t5630;
  t5670 = t5662 + t5667;
  t5702 = t614*t2169*t400;
  t5703 = t1050*t5654;
  t5705 = t5702 + t5703;
  t4115 = -0.21*t3678;
  t4133 = 0.049*t3815;
  t4140 = 0. + t4115 + t4133;
  t4486 = -0.2707*t4415;
  t4500 = 0.0016*t4492;
  t4515 = 0. + t4486 + t4500;
  t5723 = t2790*t5670;
  t5724 = t2714*t5705;
  t5731 = t5723 + t5724;
  t5737 = t2714*t5670;
  t5741 = -1.*t2790*t5705;
  t5744 = t5737 + t5741;
  t4620 = -0.0016*t4415;
  t4644 = -0.2707*t4492;
  t4650 = 0. + t4620 + t4644;
  t4821 = 0.0184*t4819;
  t4848 = -0.7055*t4826;
  t4851 = 0. + t4821 + t4848;
  t5750 = -1.*t3815*t5731;
  t5757 = t3635*t5744;
  t5758 = t5750 + t5757;
  t5769 = t3635*t5731;
  t5773 = t3815*t5744;
  t5780 = t5769 + t5773;
  t4935 = -0.7055*t4819;
  t4955 = -0.0184*t4826;
  t4960 = 0. + t4935 + t4955;
  t5101 = -1.1135*t5040;
  t5190 = 0.0216*t5153;
  t5206 = 0. + t5101 + t5190;
  t5857 = t4492*t5758;
  t5861 = t4379*t5780;
  t5877 = t5857 + t5861;
  t5913 = t4379*t5758;
  t5930 = -1.*t4492*t5780;
  t5932 = t5913 + t5930;
  t5291 = -0.0216*t5040;
  t5328 = -1.1135*t5153;
  t5334 = 0. + t5291 + t5328;
  t5951 = -1.*t4826*t5877;
  t5970 = t4804*t5932;
  t5989 = t5951 + t5970;
  t6009 = t4804*t5877;
  t6034 = t4826*t5932;
  t6040 = t6009 + t6034;
  t6244 = t2169*t400*t1966*t1596;
  t6265 = t2317*t2169*t400*t2188;
  t6271 = t6244 + t6265;
  t6294 = t2317*t2169*t400*t1966;
  t6308 = -1.*t2169*t400*t1596*t2188;
  t6311 = t6294 + t6308;
  t6361 = -1.*t614*t2169*t1996;
  t6365 = t1050*t6271;
  t6366 = t6361 + t6365;
  t6369 = t2790*t6311;
  t6370 = t2714*t6366;
  t6372 = t6369 + t6370;
  t6385 = t2714*t6311;
  t6386 = -1.*t2790*t6366;
  t6391 = t6385 + t6386;
  t6403 = -1.*t3815*t6372;
  t6405 = t3635*t6391;
  t6407 = t6403 + t6405;
  t6422 = t3635*t6372;
  t6426 = t3815*t6391;
  t6429 = t6422 + t6426;
  t6435 = t4492*t6407;
  t6436 = t4379*t6429;
  t6439 = t6435 + t6436;
  t6443 = t4379*t6407;
  t6446 = -1.*t4492*t6429;
  t6450 = t6443 + t6446;
  t6454 = -1.*t4826*t6439;
  t6455 = t4804*t6450;
  t6457 = t6454 + t6455;
  t6462 = t4804*t6439;
  t6476 = t4826*t6450;
  t6478 = t6462 + t6476;
  t6704 = t400*t1966*t1596*t1480;
  t6719 = t2317*t400*t1480*t2188;
  t6731 = t6704 + t6719;
  t6740 = t2317*t400*t1966*t1480;
  t6746 = -1.*t400*t1596*t1480*t2188;
  t6748 = t6740 + t6746;
  t6888 = -1.*t614*t1480*t1996;
  t6903 = t1050*t6731;
  t6905 = t6888 + t6903;
  t6961 = t2790*t6748;
  t6962 = t2714*t6905;
  t6964 = t6961 + t6962;
  t6969 = t2714*t6748;
  t6970 = -1.*t2790*t6905;
  t6972 = t6969 + t6970;
  t6975 = -1.*t3815*t6964;
  t6979 = t3635*t6972;
  t6981 = t6975 + t6979;
  t6984 = t3635*t6964;
  t6986 = t3815*t6972;
  t6993 = t6984 + t6986;
  t6995 = t4492*t6981;
  t6996 = t4379*t6993;
  t6997 = t6995 + t6996;
  t6999 = t4379*t6981;
  t7000 = -1.*t4492*t6993;
  t7003 = t6999 + t7000;
  t7005 = -1.*t4826*t6997;
  t7008 = t4804*t7003;
  t7009 = t7005 + t7008;
  t7014 = t4804*t6997;
  t7018 = t4826*t7003;
  t7020 = t7014 + t7018;
  t7080 = -1.*t1966*t1596*t1996;
  t7091 = -1.*t2317*t1996*t2188;
  t7096 = t7080 + t7091;
  t7139 = -1.*t2317*t1966*t1996;
  t7163 = t1596*t1996*t2188;
  t7178 = t7139 + t7163;
  t7287 = -1.*t614*t400;
  t7298 = t1050*t7096;
  t7310 = t7287 + t7298;
  t7351 = t2790*t7178;
  t7358 = t2714*t7310;
  t7375 = t7351 + t7358;
  t7497 = t2714*t7178;
  t7500 = -1.*t2790*t7310;
  t7504 = t7497 + t7500;
  t7619 = -1.*t3815*t7375;
  t7645 = t3635*t7504;
  t7682 = t7619 + t7645;
  t7746 = t3635*t7375;
  t7779 = t3815*t7504;
  t7788 = t7746 + t7779;
  t7793 = t4492*t7682;
  t7806 = t4379*t7788;
  t7834 = t7793 + t7806;
  t8191 = t4379*t7682;
  t8219 = -1.*t4492*t7788;
  t8276 = t8191 + t8219;
  t8422 = -1.*t4826*t7834;
  t8525 = t4804*t8276;
  t8555 = t8422 + t8525;
  t8655 = t4804*t7834;
  t8692 = t4826*t8276;
  t8741 = t8655 + t8692;
  t8967 = t1966*t1480;
  t9036 = -1.*t2169*t1996*t2188;
  t9051 = t8967 + t9036;
  t9123 = t1596*t9051;
  t9130 = t5662 + t9123;
  t9085 = -1.*t1596*t5617;
  t9100 = t2317*t9051;
  t9110 = t9085 + t9100;
  t9163 = t2790*t9110;
  t9166 = t2714*t1050*t9130;
  t9185 = t9163 + t9166;
  t9210 = t2714*t9110;
  t9212 = -1.*t1050*t2790*t9130;
  t9218 = t9210 + t9212;
  t9227 = -1.*t3815*t9185;
  t9239 = t3635*t9218;
  t9243 = t9227 + t9239;
  t9267 = t3635*t9185;
  t9271 = t3815*t9218;
  t9275 = t9267 + t9271;
  t9290 = t4492*t9243;
  t9291 = t4379*t9275;
  t9297 = t9290 + t9291;
  t9313 = t4379*t9243;
  t9337 = -1.*t4492*t9275;
  t9339 = t9313 + t9337;
  t9352 = -1.*t4826*t9297;
  t9353 = t4804*t9339;
  t9356 = t9352 + t9353;
  t9363 = t4804*t9297;
  t9367 = t4826*t9339;
  t9368 = t9363 + t9367;
  t9430 = t1966*t1480*t1996;
  t9434 = -1.*t2169*t2188;
  t9438 = t9430 + t9434;
  t9461 = t2317*t9438;
  t9464 = t1596*t2538;
  t9470 = t9461 + t9464;
  t9449 = -1.*t1596*t9438;
  t9452 = t9449 + t2644;
  t9489 = t2790*t9452;
  t9492 = t2714*t1050*t9470;
  t9497 = t9489 + t9492;
  t9506 = t2714*t9452;
  t9508 = -1.*t1050*t2790*t9470;
  t9515 = t9506 + t9508;
  t9526 = -1.*t3815*t9497;
  t9527 = t3635*t9515;
  t9531 = t9526 + t9527;
  t9556 = t3635*t9497;
  t9559 = t3815*t9515;
  t9563 = t9556 + t9559;
  t9576 = t4492*t9531;
  t9580 = t4379*t9563;
  t9581 = t9576 + t9580;
  t9588 = t4379*t9531;
  t9595 = -1.*t4492*t9563;
  t9599 = t9588 + t9595;
  t9609 = -1.*t4826*t9581;
  t9616 = t4804*t9599;
  t9617 = t9609 + t9616;
  t9624 = t4804*t9581;
  t9625 = t4826*t9599;
  t9635 = t9624 + t9625;
  t9698 = t2317*t400*t1966;
  t9702 = -1.*t400*t1596*t2188;
  t9709 = t9698 + t9702;
  t9681 = -1.*t400*t1966*t1596;
  t9687 = -1.*t2317*t400*t2188;
  t9688 = t9681 + t9687;
  t9727 = t2790*t9688;
  t9729 = t2714*t1050*t9709;
  t9733 = t9727 + t9729;
  t9737 = t2714*t9688;
  t9740 = -1.*t1050*t2790*t9709;
  t9741 = t9737 + t9740;
  t9744 = -1.*t3815*t9733;
  t9745 = t3635*t9741;
  t9746 = t9744 + t9745;
  t9750 = t3635*t9733;
  t9754 = t3815*t9741;
  t9756 = t9750 + t9754;
  t9763 = t4492*t9746;
  t9768 = t4379*t9756;
  t9770 = t9763 + t9768;
  t9773 = t4379*t9746;
  t9775 = -1.*t4492*t9756;
  t9776 = t9773 + t9775;
  t9784 = -1.*t4826*t9770;
  t9785 = t4804*t9776;
  t9790 = t9784 + t9785;
  t9794 = t4804*t9770;
  t9800 = t4826*t9776;
  t9801 = t9794 + t9800;
  t9826 = -1.*t2317*t5630;
  t9827 = t9085 + t9826;
  t9832 = t2790*t9827;
  t9834 = t2714*t1050*t5670;
  t9835 = t9832 + t9834;
  t9841 = t2714*t9827;
  t9842 = -1.*t1050*t2790*t5670;
  t9845 = t9841 + t9842;
  t9847 = -1.*t3815*t9835;
  t9851 = t3635*t9845;
  t9852 = t9847 + t9851;
  t9863 = t3635*t9835;
  t9865 = t3815*t9845;
  t9871 = t9863 + t9865;
  t9873 = t4492*t9852;
  t9875 = t4379*t9871;
  t9876 = t9873 + t9875;
  t9879 = t4379*t9852;
  t9881 = -1.*t4492*t9871;
  t9885 = t9879 + t9881;
  t9891 = -1.*t4826*t9876;
  t9893 = t4804*t9885;
  t9894 = t9891 + t9893;
  t9898 = t4804*t9876;
  t9903 = t4826*t9885;
  t9904 = t9898 + t9903;
  t9930 = t2169*t1966;
  t9932 = t1480*t1996*t2188;
  t9933 = t9930 + t9932;
  t9941 = -1.*t1596*t9933;
  t9945 = t9461 + t9941;
  t9937 = -1.*t2317*t9933;
  t9938 = t9449 + t9937;
  t9954 = t2790*t9938;
  t9957 = t2714*t1050*t9945;
  t9958 = t9954 + t9957;
  t9963 = t2714*t9938;
  t9967 = -1.*t1050*t2790*t9945;
  t9972 = t9963 + t9967;
  t9974 = -1.*t3815*t9958;
  t9976 = t3635*t9972;
  t9977 = t9974 + t9976;
  t9980 = t3635*t9958;
  t9982 = t3815*t9972;
  t9986 = t9980 + t9982;
  t9988 = t4492*t9977;
  t9991 = t4379*t9986;
  t9992 = t9988 + t9991;
  t9996 = t4379*t9977;
  t9999 = -1.*t4492*t9986;
  t10000 = t9996 + t9999;
  t10006 = -1.*t4826*t9992;
  t10007 = t4804*t10000;
  t10010 = t10006 + t10007;
  t10013 = t4804*t9992;
  t10017 = t4826*t10000;
  t10018 = t10013 + t10017;
  t9694 = t2819*t9688;
  t9713 = -0.1305*t614*t9709;
  t9721 = t2599*t9709;
  t9723 = t1050*t3447*t9709;
  t9736 = t3988*t9733;
  t9743 = t4140*t9741;
  t9747 = t4515*t9746;
  t9762 = t4650*t9756;
  t9772 = t4851*t9770;
  t9779 = t4960*t9776;
  t9793 = t5206*t9790;
  t9805 = t5334*t9801;
  t9806 = t5153*t9790;
  t9809 = t5012*t9801;
  t9812 = t9806 + t9809;
  t9813 = 0.0306*t9812;
  t9815 = t5012*t9790;
  t9818 = -1.*t5153*t9801;
  t9819 = t9815 + t9818;
  t9821 = -1.1312*t9819;
  t5679 = -1.*t2169*t400*t1050;
  t5684 = t614*t5654;
  t5690 = t5679 + t5684;
  t10092 = -1.*t3635*t2790*t5690;
  t10095 = -1.*t2714*t3815*t5690;
  t10098 = t10092 + t10095;
  t10104 = t2714*t3635*t5690;
  t10105 = -1.*t2790*t3815*t5690;
  t10108 = t10104 + t10105;
  t10112 = t4492*t10098;
  t10113 = t4379*t10108;
  t10114 = t10112 + t10113;
  t10117 = t4379*t10098;
  t10118 = -1.*t4492*t10108;
  t10121 = t10117 + t10118;
  t10129 = -1.*t4826*t10114;
  t10133 = t4804*t10121;
  t10134 = t10129 + t10133;
  t10140 = t4804*t10114;
  t10141 = t4826*t10121;
  t10142 = t10140 + t10141;
  t10056 = -0.135*t614;
  t10057 = -0.049*t1050;
  t10058 = t10056 + t10057;
  t10060 = 0.049*t614;
  t10061 = t10060 + t1259;
  t10166 = t1596*t9438;
  t10167 = t2317*t9933;
  t10174 = t10166 + t10167;
  t10176 = -1.*t400*t1050*t1480;
  t10177 = t614*t10174;
  t10179 = t10176 + t10177;
  t10193 = -1.*t3635*t2790*t10179;
  t10195 = -1.*t2714*t3815*t10179;
  t10197 = t10193 + t10195;
  t10201 = t2714*t3635*t10179;
  t10202 = -1.*t2790*t3815*t10179;
  t10203 = t10201 + t10202;
  t10209 = t4492*t10197;
  t10210 = t4379*t10203;
  t10213 = t10209 + t10210;
  t10219 = t4379*t10197;
  t10221 = -1.*t4492*t10203;
  t10222 = t10219 + t10221;
  t10225 = -1.*t4826*t10213;
  t10227 = t4804*t10222;
  t10228 = t10225 + t10227;
  t10233 = t4804*t10213;
  t10238 = t4826*t10222;
  t10240 = t10233 + t10238;
  t10267 = t400*t1966*t1596;
  t10268 = t2317*t400*t2188;
  t10269 = t10267 + t10268;
  t10272 = t1050*t1996;
  t10275 = t614*t10269;
  t10280 = t10272 + t10275;
  t10300 = -1.*t3635*t2790*t10280;
  t10301 = -1.*t2714*t3815*t10280;
  t10304 = t10300 + t10301;
  t10311 = t2714*t3635*t10280;
  t10312 = -1.*t2790*t3815*t10280;
  t10314 = t10311 + t10312;
  t10316 = t4492*t10304;
  t10317 = t4379*t10314;
  t10318 = t10316 + t10317;
  t10320 = t4379*t10304;
  t10321 = -1.*t4492*t10314;
  t10322 = t10320 + t10321;
  t10325 = -1.*t4826*t10318;
  t10328 = t4804*t10322;
  t10331 = t10325 + t10328;
  t10334 = t4804*t10318;
  t10338 = t4826*t10322;
  t10339 = t10334 + t10338;
  t10377 = -1.*t2790*t5670;
  t10379 = -1.*t2714*t5705;
  t10380 = t10377 + t10379;
  t10385 = t3815*t10380;
  t10387 = t10385 + t5757;
  t10394 = t3635*t10380;
  t10395 = -1.*t3815*t5744;
  t10398 = t10394 + t10395;
  t10400 = -1.*t4492*t10387;
  t10402 = t4379*t10398;
  t10403 = t10400 + t10402;
  t10407 = t4379*t10387;
  t10408 = t4492*t10398;
  t10409 = t10407 + t10408;
  t10411 = t4826*t10403;
  t10413 = t4804*t10409;
  t10415 = t10411 + t10413;
  t10419 = t4804*t10403;
  t10420 = -1.*t4826*t10409;
  t10421 = t10419 + t10420;
  t10362 = 0.049*t2714;
  t10364 = t10362 + t3405;
  t10368 = -0.09*t2714;
  t10369 = -0.049*t2790;
  t10370 = t10368 + t10369;
  t10439 = t614*t400*t1480;
  t10442 = t1050*t10174;
  t10444 = t10439 + t10442;
  t10447 = -1.*t2790*t9945;
  t10448 = -1.*t2714*t10444;
  t10449 = t10447 + t10448;
  t10452 = t2714*t9945;
  t10454 = -1.*t2790*t10444;
  t10455 = t10452 + t10454;
  t10459 = t3815*t10449;
  t10462 = t3635*t10455;
  t10464 = t10459 + t10462;
  t10467 = t3635*t10449;
  t10468 = -1.*t3815*t10455;
  t10469 = t10467 + t10468;
  t10473 = -1.*t4492*t10464;
  t10474 = t4379*t10469;
  t10477 = t10473 + t10474;
  t10480 = t4379*t10464;
  t10482 = t4492*t10469;
  t10483 = t10480 + t10482;
  t10486 = t4826*t10477;
  t10487 = t4804*t10483;
  t10488 = t10486 + t10487;
  t10491 = t4804*t10477;
  t10492 = -1.*t4826*t10483;
  t10494 = t10491 + t10492;
  t10512 = -1.*t614*t1996;
  t10513 = t1050*t10269;
  t10514 = t10512 + t10513;
  t10516 = -1.*t2790*t9709;
  t10517 = -1.*t2714*t10514;
  t10518 = t10516 + t10517;
  t10520 = t2714*t9709;
  t10521 = -1.*t2790*t10514;
  t10522 = t10520 + t10521;
  t10524 = t3815*t10518;
  t10525 = t3635*t10522;
  t10526 = t10524 + t10525;
  t10529 = t3635*t10518;
  t10530 = -1.*t3815*t10522;
  t10531 = t10529 + t10530;
  t10533 = -1.*t4492*t10526;
  t10534 = t4379*t10531;
  t10535 = t10533 + t10534;
  t10537 = t4379*t10526;
  t10538 = t4492*t10531;
  t10540 = t10537 + t10538;
  t10542 = t4826*t10535;
  t10543 = t4804*t10540;
  t10544 = t10542 + t10543;
  t10546 = t4804*t10535;
  t10547 = -1.*t4826*t10540;
  t10548 = t10546 + t10547;
  t10567 = -1.*t3635*t5731;
  t10568 = t10567 + t10395;
  t10570 = -1.*t4492*t5758;
  t10571 = t4379*t10568;
  t10572 = t10570 + t10571;
  t10574 = t4492*t10568;
  t10575 = t5913 + t10574;
  t10577 = t4826*t10572;
  t10578 = t4804*t10575;
  t10579 = t10577 + t10578;
  t10581 = t4804*t10572;
  t10582 = -1.*t4826*t10575;
  t10583 = t10581 + t10582;
  t10559 = -0.21*t3635;
  t10560 = -0.049*t3815;
  t10561 = t10559 + t10560;
  t10563 = 0.049*t3635;
  t10564 = t10563 + t3976;
  t10594 = t2790*t9945;
  t10595 = t2714*t10444;
  t10596 = t10594 + t10595;
  t10599 = -1.*t3815*t10596;
  t10600 = t10599 + t10462;
  t10602 = -1.*t3635*t10596;
  t10603 = t10602 + t10468;
  t10605 = -1.*t4492*t10600;
  t10606 = t4379*t10603;
  t10607 = t10605 + t10606;
  t10609 = t4379*t10600;
  t10610 = t4492*t10603;
  t10611 = t10609 + t10610;
  t10613 = t4826*t10607;
  t10614 = t4804*t10611;
  t10615 = t10613 + t10614;
  t10617 = t4804*t10607;
  t10618 = -1.*t4826*t10611;
  t10619 = t10617 + t10618;
  t10630 = t2790*t9709;
  t10631 = t2714*t10514;
  t10632 = t10630 + t10631;
  t10635 = -1.*t3815*t10632;
  t10636 = t10635 + t10525;
  t10638 = -1.*t3635*t10632;
  t10639 = t10638 + t10530;
  t10641 = -1.*t4492*t10636;
  t10642 = t4379*t10639;
  t10643 = t10641 + t10642;
  t10645 = t4379*t10636;
  t10646 = t4492*t10639;
  t10647 = t10645 + t10646;
  t10649 = t4826*t10643;
  t10650 = t4804*t10647;
  t10651 = t10649 + t10650;
  t10653 = t4804*t10643;
  t10654 = -1.*t4826*t10647;
  t10655 = t10653 + t10654;
  t10673 = -1.*t4379*t5780;
  t10674 = t10570 + t10673;
  t10677 = t4826*t10674;
  t10678 = t10677 + t5970;
  t10680 = t4804*t10674;
  t10681 = -1.*t4826*t5932;
  t10682 = t10680 + t10681;
  t10666 = 0.0016*t4379;
  t10667 = t10666 + t4644;
  t10669 = -0.2707*t4379;
  t10670 = -0.0016*t4492;
  t10671 = t10669 + t10670;
  t10694 = t3635*t10596;
  t10695 = t3815*t10455;
  t10696 = t10694 + t10695;
  t10698 = -1.*t4379*t10696;
  t10699 = t10605 + t10698;
  t10701 = -1.*t4492*t10696;
  t10702 = t10609 + t10701;
  t10704 = t4826*t10699;
  t10705 = t4804*t10702;
  t10706 = t10704 + t10705;
  t10708 = t4804*t10699;
  t10709 = -1.*t4826*t10702;
  t10710 = t10708 + t10709;
  t10722 = t3635*t10632;
  t10723 = t3815*t10522;
  t10724 = t10722 + t10723;
  t10726 = -1.*t4379*t10724;
  t10727 = t10641 + t10726;
  t10729 = -1.*t4492*t10724;
  t10730 = t10645 + t10729;
  t10732 = t4826*t10727;
  t10733 = t4804*t10730;
  t10734 = t10732 + t10733;
  t10736 = t4804*t10727;
  t10737 = -1.*t4826*t10730;
  t10738 = t10736 + t10737;
  t10757 = -1.*t4804*t5877;
  t10758 = t10757 + t10681;
  t6090 = t5012*t5989;
  t10749 = -0.7055*t4804;
  t10750 = 0.0184*t4826;
  t10751 = t10749 + t10750;
  t10753 = -0.0184*t4804;
  t10754 = t10753 + t4848;
  t10768 = t4492*t10600;
  t10769 = t4379*t10696;
  t10770 = t10768 + t10769;
  t10773 = -1.*t4826*t10770;
  t10774 = t10773 + t10705;
  t10776 = -1.*t4804*t10770;
  t10777 = t10776 + t10709;
  t10788 = t4492*t10636;
  t10789 = t4379*t10724;
  t10790 = t10788 + t10789;
  t10793 = -1.*t4826*t10790;
  t10794 = t10793 + t10733;
  t10796 = -1.*t4804*t10790;
  t10797 = t10796 + t10737;
  t10760 = -1.*t5153*t5989;
  t6110 = -1.*t5153*t6040;
  t6140 = t6090 + t6110;
  t10808 = 0.0216*t5012;
  t10809 = t10808 + t5328;
  t10811 = -1.1135*t5012;
  t10812 = -0.0216*t5153;
  t10813 = t10811 + t10812;
  t10779 = -1.*t5153*t10774;
  t10821 = t4804*t10770;
  t10822 = t4826*t10702;
  t10823 = t10821 + t10822;
  t10783 = t5012*t10774;
  t10799 = -1.*t5153*t10794;
  t10833 = t4804*t10790;
  t10834 = t4826*t10730;
  t10835 = t10833 + t10834;
  t10803 = t5012*t10794;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t1780*t2255 + t2429*t2538 + t2599*t2655 + t2819*t2870 + t3447*t3520 - 1.*t1385*t1480*t400 + t3988*t4081 + t4140*t4239 + t4515*t4560 + t4650*t4741 + t4851*t4907 + t4960*t4985 + t5206*t5285 + t5334*t5370 + 0.0306*(t5153*t5285 + t5012*t5370) - 1.1312*(t5012*t5285 - 1.*t5153*t5370) - 0.1305*(t1050*t1480*t400 + t2655*t614);
  p_output1[10]=t1385*t2169*t400 + t1780*t5617 + t2429*t5630 + t2599*t5654 + t2819*t5670 - 0.1305*t5690 + t3447*t5705 + t3988*t5731 + t4140*t5744 + t4515*t5758 + t4650*t5780 + t4851*t5877 + t4960*t5932 + t5206*t5989 + t5334*t6040 + 0.0306*(t5153*t5989 + t5012*t6040) - 1.1312*t6140;
  p_output1[11]=0;
  p_output1[12]=-1.*t1385*t1996*t2169 + t1780*t1966*t2169*t400 + t2169*t2188*t2429*t400 + t2599*t6271 - 0.1305*(t1050*t1996*t2169 + t614*t6271) + t2819*t6311 + t3447*t6366 + t3988*t6372 + t4140*t6391 + t4515*t6407 + t4650*t6429 + t4851*t6439 + t4960*t6450 + t5206*t6457 + t5334*t6478 + 0.0306*(t5153*t6457 + t5012*t6478) - 1.1312*(t5012*t6457 - 1.*t5153*t6478);
  p_output1[13]=-1.*t1385*t1480*t1996 + t1480*t1780*t1966*t400 + t1480*t2188*t2429*t400 + t2599*t6731 - 0.1305*(t1050*t1480*t1996 + t614*t6731) + t2819*t6748 + t3447*t6905 + t3988*t6964 + t4140*t6972 + t4515*t6981 + t4650*t6993 + t4851*t6997 + t4960*t7003 + t5206*t7009 + t5334*t7020 + 0.0306*(t5153*t7009 + t5012*t7020) - 1.1312*(t5012*t7009 - 1.*t5153*t7020);
  p_output1[14]=-1.*t1780*t1966*t1996 - 1.*t1996*t2188*t2429 - 1.*t1385*t400 + t2599*t7096 - 0.1305*(t1050*t400 + t614*t7096) + t2819*t7178 + t3447*t7310 + t3988*t7375 + t4140*t7504 + t4515*t7682 + t4650*t7788 + t4851*t7834 + t4960*t8276 + t5206*t8555 + t5334*t8741 + 0.0306*(t5153*t8555 + t5012*t8741) - 1.1312*(t5012*t8555 - 1.*t5153*t8741);
  p_output1[15]=t2429*t5617 + t1780*t9051 + t2819*t9110 + t2599*t9130 + t1050*t3447*t9130 - 0.1305*t614*t9130 + t3988*t9185 + t4140*t9218 + t4515*t9243 + t4650*t9275 + t4851*t9297 + t4960*t9339 + t5206*t9356 + t5334*t9368 + 0.0306*(t5153*t9356 + t5012*t9368) - 1.1312*(t5012*t9356 - 1.*t5153*t9368);
  p_output1[16]=t1780*t2538 + t2429*t9438 + t2819*t9452 + t2599*t9470 + t1050*t3447*t9470 - 0.1305*t614*t9470 + t3988*t9497 + t4140*t9515 + t4515*t9531 + t4650*t9563 + t4851*t9581 + t4960*t9599 + t5206*t9617 + t5334*t9635 + 0.0306*(t5153*t9617 + t5012*t9635) - 1.1312*(t5012*t9617 - 1.*t5153*t9635);
  p_output1[17]=-1.*t1780*t2188*t400 + t1966*t2429*t400 + t9694 + t9713 + t9721 + t9723 + t9736 + t9743 + t9747 + t9762 + t9772 + t9779 + t9793 + t9805 + t9813 + t9821;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0.135*t2317*t5617 - 0.135*t1596*t5630 + t2599*t5670 + t1050*t3447*t5670 - 0.1305*t5670*t614 + t2819*t9827 + t3988*t9835 + t4140*t9845 + t4515*t9852 + t4650*t9871 + t4851*t9876 + t4960*t9885 + t5206*t9894 + t5334*t9904 + 0.0306*(t5153*t9894 + t5012*t9904) - 1.1312*(t5012*t9894 - 1.*t5153*t9904);
  p_output1[40]=t10000*t4960 + 0.0306*(t10018*t5012 + t10010*t5153) - 1.1312*(t10010*t5012 - 1.*t10018*t5153) + t10010*t5206 + t10018*t5334 + 0.135*t2317*t9438 - 0.135*t1596*t9933 + t2819*t9938 + t2599*t9945 + t1050*t3447*t9945 - 0.1305*t614*t9945 + t3988*t9958 + t4140*t9972 + t4515*t9977 + t4650*t9986 + t4851*t9992;
  p_output1[41]=-0.135*t1596*t2188*t400 + 0.135*t1966*t2317*t400 + t9694 + t9713 + t9721 + t9723 + t9736 + t9743 + t9747 + t9762 + t9772 + t9779 + t9793 + t9805 + t9813 + t9821;
  p_output1[42]=t10058*t2169*t400 + t10098*t4515 + t10108*t4650 + t10114*t4851 + t10121*t4960 + 0.0306*(t10142*t5012 + t10134*t5153) - 1.1312*(t10134*t5012 - 1.*t10142*t5153) + t10134*t5206 + t10142*t5334 + t10061*t5654 + t3447*t5690 + t2714*t3988*t5690 - 1.*t2790*t4140*t5690 - 0.1305*(-1.*t1050*t5654 - 1.*t2169*t400*t614);
  p_output1[43]=t10061*t10174 + t10179*t3447 - 0.1305*(-1.*t10174*t1050 + t3463) + t10179*t2714*t3988 + t10058*t1480*t400 - 1.*t10179*t2790*t4140 + t10197*t4515 + t10203*t4650 + t10213*t4851 + t10222*t4960 + 0.0306*(t10240*t5012 + t10228*t5153) - 1.1312*(t10228*t5012 - 1.*t10240*t5153) + t10228*t5206 + t10240*t5334;
  p_output1[44]=t10061*t10269 - 1.*t10058*t1996 + t10280*t3447 + t10280*t2714*t3988 - 1.*t10280*t2790*t4140 + t10304*t4515 + t10314*t4650 + t10318*t4851 + t10322*t4960 + 0.0306*(t10339*t5012 + t10331*t5153) - 1.1312*(t10331*t5012 - 1.*t10339*t5153) + t10331*t5206 + t10339*t5334 - 0.1305*(-1.*t10269*t1050 + t1996*t614);
  p_output1[45]=t10380*t4140 + t10398*t4515 + t10387*t4650 + t10409*t4851 + t10403*t4960 - 1.1312*(t10421*t5012 - 1.*t10415*t5153) + 0.0306*(t10415*t5012 + t10421*t5153) + t10421*t5206 + t10415*t5334 + t10364*t5670 + t10370*t5705 + t3988*t5744;
  p_output1[46]=t10370*t10444 + t10455*t3988 + t10449*t4140 + t10469*t4515 + t10464*t4650 + t10483*t4851 + t10477*t4960 - 1.1312*(t10494*t5012 - 1.*t10488*t5153) + 0.0306*(t10488*t5012 + t10494*t5153) + t10494*t5206 + t10488*t5334 + t10364*t9945;
  p_output1[47]=t10370*t10514 + t10522*t3988 + t10518*t4140 + t10531*t4515 + t10526*t4650 + t10540*t4851 + t10535*t4960 - 1.1312*(t10548*t5012 - 1.*t10544*t5153) + 0.0306*(t10544*t5012 + t10548*t5153) + t10548*t5206 + t10544*t5334 + t10364*t9709;
  p_output1[48]=t10568*t4515 + t10575*t4851 + t10572*t4960 - 1.1312*(t10583*t5012 - 1.*t10579*t5153) + 0.0306*(t10579*t5012 + t10583*t5153) + t10583*t5206 + t10579*t5334 + t10561*t5731 + t10564*t5744 + t4650*t5758;
  p_output1[49]=t10455*t10564 + t10561*t10596 + t10603*t4515 + t10600*t4650 + t10611*t4851 + t10607*t4960 - 1.1312*(t10619*t5012 - 1.*t10615*t5153) + 0.0306*(t10615*t5012 + t10619*t5153) + t10619*t5206 + t10615*t5334;
  p_output1[50]=t10522*t10564 + t10561*t10632 + t10639*t4515 + t10636*t4650 + t10647*t4851 + t10643*t4960 - 1.1312*(t10655*t5012 - 1.*t10651*t5153) + 0.0306*(t10651*t5012 + t10655*t5153) + t10655*t5206 + t10651*t5334;
  p_output1[51]=t10674*t4960 - 1.1312*(t10682*t5012 - 1.*t10678*t5153) + 0.0306*(t10678*t5012 + t10682*t5153) + t10682*t5206 + t10678*t5334 + t10667*t5758 + t10671*t5780 + t4851*t5932;
  p_output1[52]=t10600*t10667 + t10671*t10696 + t10702*t4851 + t10699*t4960 - 1.1312*(t10710*t5012 - 1.*t10706*t5153) + 0.0306*(t10706*t5012 + t10710*t5153) + t10710*t5206 + t10706*t5334;
  p_output1[53]=t10636*t10667 + t10671*t10724 + t10730*t4851 + t10727*t4960 - 1.1312*(t10738*t5012 - 1.*t10734*t5153) + 0.0306*(t10734*t5012 + t10738*t5153) + t10738*t5206 + t10734*t5334;
  p_output1[54]=-1.1312*(t10760 + t10758*t5012) + t10758*t5206 + t10751*t5877 + t10754*t5932 + t5334*t5989 + 0.0306*(t10758*t5153 + t6090);
  p_output1[55]=t10702*t10754 + t10751*t10770 - 1.1312*(t10779 + t10777*t5012) + 0.0306*(t10783 + t10777*t5153) + t10777*t5206 + t10774*t5334;
  p_output1[56]=t10730*t10754 + t10751*t10790 - 1.1312*(t10799 + t10797*t5012) + 0.0306*(t10803 + t10797*t5153) + t10797*t5206 + t10794*t5334;
  p_output1[57]=t10809*t5989 + t10813*t6040 - 1.1312*(t10760 - 1.*t5012*t6040) + 0.0306*t6140;
  p_output1[58]=t10774*t10809 + t10813*t10823 - 1.1312*(t10779 - 1.*t10823*t5012) + 0.0306*(t10783 - 1.*t10823*t5153);
  p_output1[59]=t10794*t10809 + t10813*t10835 - 1.1312*(t10799 - 1.*t10835*t5012) + 0.0306*(t10803 - 1.*t10835*t5153);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "J_RightToeBottom_mex.hh"

namespace SymExpression
{

void J_RightToeBottom_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
