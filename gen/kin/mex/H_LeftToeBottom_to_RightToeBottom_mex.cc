/*
 * Automatically Generated from Mathematica.
 * Mon 2 Jul 2018 15:37:11 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t410;
  double t447;
  double t418;
  double t422;
  double t457;
  double t573;
  double t440;
  double t531;
  double t537;
  double t374;
  double t634;
  double t651;
  double t690;
  double t1082;
  double t557;
  double t805;
  double t874;
  double t240;
  double t1178;
  double t1230;
  double t1249;
  double t1370;
  double t998;
  double t1258;
  double t1264;
  double t108;
  double t1392;
  double t1412;
  double t1454;
  double t1723;
  double t1688;
  double t1696;
  double t1705;
  double t1727;
  double t1844;
  double t1872;
  double t1921;
  double t1963;
  double t1869;
  double t1967;
  double t1972;
  double t2005;
  double t2024;
  double t2028;
  double t1984;
  double t2062;
  double t2064;
  double t2248;
  double t2275;
  double t2374;
  double t2146;
  double t2414;
  double t2474;
  double t2565;
  double t2602;
  double t2619;
  double t1324;
  double t1457;
  double t1470;
  double t1547;
  double t1563;
  double t1600;
  double t2513;
  double t2646;
  double t2670;
  double t2697;
  double t2701;
  double t2704;
  double t2876;
  double t2945;
  double t3006;
  double t3125;
  double t3139;
  double t3200;
  double t3072;
  double t3206;
  double t3235;
  double t3365;
  double t3388;
  double t3424;
  double t3320;
  double t3441;
  double t3510;
  double t3529;
  double t3581;
  double t3592;
  double t3515;
  double t3602;
  double t3606;
  double t3681;
  double t3740;
  double t3780;
  double t2766;
  double t2792;
  double t2793;
  double t2691;
  double t2720;
  double t2724;
  double t3652;
  double t3925;
  double t3978;
  double t4062;
  double t4073;
  double t4088;
  double t1490;
  double t1674;
  double t1678;
  double t2833;
  double t2834;
  double t2864;
  double t2750;
  double t2869;
  double t7;
  double t4301;
  double t4303;
  double t4329;
  double t4021;
  double t4151;
  double t4246;
  double t4247;
  double t4265;
  double t4271;
  double t4272;
  double t4330;
  double t4378;
  double t4388;
  double t4499;
  double t4525;
  double t4532;
  double t4549;
  double t4558;
  double t11;
  double t4738;
  double t4643;
  double t5991;
  double t6018;
  double t5964;
  double t6181;
  double t6203;
  double t6263;
  double t5996;
  double t6127;
  double t6168;
  double t6264;
  double t5945;
  double t6330;
  double t6366;
  double t6456;
  double t6175;
  double t6280;
  double t6291;
  double t6507;
  double t5886;
  double t6773;
  double t6803;
  double t6834;
  double t6295;
  double t6594;
  double t6737;
  double t6839;
  double t5870;
  double t6914;
  double t6920;
  double t6931;
  double t6744;
  double t6891;
  double t6902;
  double t6949;
  double t2872;
  double t7129;
  double t7171;
  double t7193;
  double t7066;
  double t7106;
  double t7107;
  double t7328;
  double t7353;
  double t7367;
  double t7109;
  double t7207;
  double t7209;
  double t7682;
  double t7702;
  double t7724;
  double t7300;
  double t7393;
  double t7428;
  double t7780;
  double t7801;
  double t7807;
  double t7533;
  double t7737;
  double t7772;
  double t4652;
  double t4678;
  double t4693;
  double t7969;
  double t7971;
  double t7979;
  double t7924;
  double t7928;
  double t7932;
  double t8096;
  double t8098;
  double t8100;
  double t7954;
  double t7980;
  double t8052;
  double t8144;
  double t8147;
  double t8148;
  double t8074;
  double t8105;
  double t8115;
  double t4774;
  double t4801;
  double t4830;
  double t6907;
  double t6953;
  double t6964;
  double t6971;
  double t6977;
  double t6978;
  double t6987;
  double t6990;
  double t7027;
  double t5026;
  double t5116;
  double t5151;
  double t8133;
  double t8149;
  double t8151;
  double t8177;
  double t8205;
  double t8207;
  double t8214;
  double t8239;
  double t8253;
  double t5227;
  double t5231;
  double t5250;
  double t7777;
  double t7824;
  double t7826;
  double t7841;
  double t7865;
  double t7881;
  double t7902;
  double t7909;
  double t7917;
  double t5300;
  double t5379;
  double t5472;
  double t5578;
  double t5589;
  double t5612;
  double t5636;
  double t5790;
  double t5799;
  double t5844;
  double t8364;
  double t8365;
  double t8377;
  double t8420;
  double t8423;
  double t8428;
  double t8386;
  double t8393;
  double t8394;
  double t8494;
  double t8507;
  double t8559;
  double t8564;
  double t8599;
  double t8601;
  double t8633;
  double t8635;
  double t8668;
  double t8672;
  double t8477;
  double t8479;
  double t8480;
  double t8484;
  double t8490;
  double t8513;
  double t8516;
  double t8527;
  double t8542;
  double t8545;
  double t8546;
  double t8570;
  double t8578;
  double t8580;
  double t8587;
  double t8592;
  double t8594;
  double t8602;
  double t8609;
  double t8610;
  double t8622;
  double t8630;
  double t8631;
  double t8641;
  double t8645;
  double t8650;
  double t8656;
  double t8658;
  double t8660;
  double t8673;
  double t8675;
  double t8677;
  double t8681;
  double t8685;
  double t8687;
  double t8782;
  double t8783;
  double t8795;
  double t8796;
  double t8807;
  double t8809;
  double t8823;
  double t8824;
  double t8834;
  double t8836;
  double t8776;
  double t8777;
  double t8797;
  double t8798;
  double t8799;
  double t8785;
  double t8786;
  double t8787;
  double t8801;
  double t8802;
  double t8804;
  double t8810;
  double t8811;
  double t8812;
  double t8817;
  double t8819;
  double t8820;
  double t8825;
  double t8826;
  double t8827;
  double t8829;
  double t8830;
  double t8832;
  double t8837;
  double t8838;
  double t8839;
  double t8843;
  double t8844;
  double t8846;
  double t8770;
  double t8772;
  double t8773;
  double t8775;
  double t8778;
  double t8779;
  double t8780;
  double t8781;
  double t8788;
  double t8791;
  double t8792;
  double t8793;
  double t8794;
  double t8800;
  double t8805;
  double t8816;
  double t8822;
  double t8828;
  double t8833;
  double t8842;
  double t8847;
  double t8848;
  double t8849;
  double t8850;
  double t8852;
  double t8854;
  double t8855;
  double t8856;
  double t8858;
  double t8859;
  double t8860;
  double t8861;
  double t8862;
  double t8863;
  double t8864;
  double t8865;
  double t8866;
  double t8867;
  double t8472;
  double t8476;
  double t8493;
  double t8540;
  double t8558;
  double t8586;
  double t8596;
  double t8619;
  double t8632;
  double t8651;
  double t8663;
  double t8680;
  double t8693;
  double t8695;
  double t8697;
  double t8699;
  double t8745;
  double t8747;
  double t8748;
  double t8749;
  double t8750;
  double t8752;
  double t8756;
  double t8757;
  double t8758;
  double t8760;
  double t8761;
  double t8762;
  double t8765;
  double t8767;
  double t8703;
  double t8706;
  double t8707;
  double t8708;
  double t8709;
  double t8712;
  double t8713;
  double t8716;
  double t8721;
  double t8722;
  double t8728;
  double t8731;
  double t8733;
  double t8736;
  double t8737;
  double t8738;
  double t8739;
  double t8740;
  double t8881;
  double t8884;
  double t8888;
  double t8890;
  double t8893;
  double t8894;
  double t8895;
  double t8896;
  double t8897;
  double t8898;
  double t8899;
  double t8901;
  double t8903;
  double t8904;
  double t8905;
  double t8906;
  double t8851;
  double t8868;
  double t8870;
  double t8918;
  double t8919;
  double t8921;
  double t8872;
  double t8874;
  double t8877;
  t410 = Cos(var1[1]);
  t447 = Cos(var1[3]);
  t418 = Cos(var1[2]);
  t422 = Sin(var1[3]);
  t457 = Sin(var1[2]);
  t573 = Cos(var1[4]);
  t440 = -1.*t410*t418*t422;
  t531 = -1.*t447*t410*t457;
  t537 = t440 + t531;
  t374 = Sin(var1[4]);
  t634 = t447*t410*t418;
  t651 = -1.*t410*t422*t457;
  t690 = t634 + t651;
  t1082 = Cos(var1[5]);
  t557 = t374*t537;
  t805 = t573*t690;
  t874 = t557 + t805;
  t240 = Sin(var1[5]);
  t1178 = t573*t537;
  t1230 = -1.*t374*t690;
  t1249 = t1178 + t1230;
  t1370 = Cos(var1[6]);
  t998 = -1.*t240*t874;
  t1258 = t1082*t1249;
  t1264 = t998 + t1258;
  t108 = Sin(var1[6]);
  t1392 = t1082*t874;
  t1412 = t240*t1249;
  t1454 = t1392 + t1412;
  t1723 = Sin(var1[0]);
  t1688 = Cos(var1[0]);
  t1696 = Sin(var1[1]);
  t1705 = t1688*t418*t1696;
  t1727 = -1.*t1723*t457;
  t1844 = t1705 + t1727;
  t1872 = -1.*t418*t1723;
  t1921 = -1.*t1688*t1696*t457;
  t1963 = t1872 + t1921;
  t1869 = -1.*t422*t1844;
  t1967 = t447*t1963;
  t1972 = t1869 + t1967;
  t2005 = t447*t1844;
  t2024 = t422*t1963;
  t2028 = t2005 + t2024;
  t1984 = t374*t1972;
  t2062 = t573*t2028;
  t2064 = t1984 + t2062;
  t2248 = t573*t1972;
  t2275 = -1.*t374*t2028;
  t2374 = t2248 + t2275;
  t2146 = -1.*t240*t2064;
  t2414 = t1082*t2374;
  t2474 = t2146 + t2414;
  t2565 = t1082*t2064;
  t2602 = t240*t2374;
  t2619 = t2565 + t2602;
  t1324 = t108*t1264;
  t1457 = t1370*t1454;
  t1470 = t1324 + t1457;
  t1547 = t1370*t1264;
  t1563 = -1.*t108*t1454;
  t1600 = t1547 + t1563;
  t2513 = t108*t2474;
  t2646 = t1370*t2619;
  t2670 = t2513 + t2646;
  t2697 = t1370*t2474;
  t2701 = -1.*t108*t2619;
  t2704 = t2697 + t2701;
  t2876 = t418*t1723*t1696;
  t2945 = t1688*t457;
  t3006 = t2876 + t2945;
  t3125 = t1688*t418;
  t3139 = -1.*t1723*t1696*t457;
  t3200 = t3125 + t3139;
  t3072 = -1.*t422*t3006;
  t3206 = t447*t3200;
  t3235 = t3072 + t3206;
  t3365 = t447*t3006;
  t3388 = t422*t3200;
  t3424 = t3365 + t3388;
  t3320 = t374*t3235;
  t3441 = t573*t3424;
  t3510 = t3320 + t3441;
  t3529 = t573*t3235;
  t3581 = -1.*t374*t3424;
  t3592 = t3529 + t3581;
  t3515 = -1.*t240*t3510;
  t3602 = t1082*t3592;
  t3606 = t3515 + t3602;
  t3681 = t1082*t3510;
  t3740 = t240*t3592;
  t3780 = t3681 + t3740;
  t2766 = -0.766044*t1470;
  t2792 = 0.642788*t1600;
  t2793 = t2766 + t2792;
  t2691 = -0.766044*t2670;
  t2720 = 0.642788*t2704;
  t2724 = t2691 + t2720;
  t3652 = t108*t3606;
  t3925 = t1370*t3780;
  t3978 = t3652 + t3925;
  t4062 = t1370*t3606;
  t4073 = -1.*t108*t3780;
  t4088 = t4062 + t4073;
  t1490 = 0.642788*t1470;
  t1674 = 0.766044*t1600;
  t1678 = t1490 + t1674;
  t2833 = 0.642788*t2670;
  t2834 = 0.766044*t2704;
  t2864 = t2833 + t2834;
  t2750 = t1678*t2724;
  t2869 = -1.*t2793*t2864;
  t7 = Cos(var1[8]);
  t4301 = -0.766044*t3978;
  t4303 = 0.642788*t4088;
  t4329 = t4301 + t4303;
  t4021 = 0.642788*t3978;
  t4151 = 0.766044*t4088;
  t4246 = t4021 + t4151;
  t4247 = t1688*t410*t2793;
  t4265 = t1696*t2724;
  t4271 = t4247 + t4265;
  t4272 = -1.*t4246*t4271;
  t4330 = t1688*t410*t1678;
  t4378 = t1696*t2864;
  t4388 = t4330 + t4378;
  t4499 = t4329*t4388;
  t4525 = t2750 + t2869;
  t4532 = -1.*t410*t1723*t4525;
  t4549 = 0. + t4272 + t4499 + t4532;
  t4558 = 1/t4549;
  t11 = Sin(var1[7]);
  t4738 = Sin(var1[8]);
  t4643 = Cos(var1[7]);
  t5991 = Cos(var1[9]);
  t6018 = Sin(var1[9]);
  t5964 = Cos(var1[10]);
  t6181 = t4643*t5991;
  t6203 = -1.*t11*t4738*t6018;
  t6263 = t6181 + t6203;
  t5996 = t5991*t11*t4738;
  t6127 = t4643*t6018;
  t6168 = t5996 + t6127;
  t6264 = Sin(var1[10]);
  t5945 = Cos(var1[11]);
  t6330 = t5964*t6263;
  t6366 = -1.*t6168*t6264;
  t6456 = t6330 + t6366;
  t6175 = t5964*t6168;
  t6280 = t6263*t6264;
  t6291 = t6175 + t6280;
  t6507 = Sin(var1[11]);
  t5886 = Cos(var1[12]);
  t6773 = t5945*t6456;
  t6803 = -1.*t6291*t6507;
  t6834 = t6773 + t6803;
  t6295 = t5945*t6291;
  t6594 = t6456*t6507;
  t6737 = t6295 + t6594;
  t6839 = Sin(var1[12]);
  t5870 = Cos(var1[13]);
  t6914 = t5886*t6834;
  t6920 = -1.*t6737*t6839;
  t6931 = t6914 + t6920;
  t6744 = t5886*t6737;
  t6891 = t6834*t6839;
  t6902 = t6744 + t6891;
  t6949 = Sin(var1[13]);
  t2872 = 0. + t2750 + t2869;
  t7129 = -1.*t5991*t11;
  t7171 = -1.*t4643*t4738*t6018;
  t7193 = t7129 + t7171;
  t7066 = t4643*t5991*t4738;
  t7106 = -1.*t11*t6018;
  t7107 = t7066 + t7106;
  t7328 = t5964*t7193;
  t7353 = -1.*t7107*t6264;
  t7367 = t7328 + t7353;
  t7109 = t5964*t7107;
  t7207 = t7193*t6264;
  t7209 = t7109 + t7207;
  t7682 = t5945*t7367;
  t7702 = -1.*t7209*t6507;
  t7724 = t7682 + t7702;
  t7300 = t5945*t7209;
  t7393 = t7367*t6507;
  t7428 = t7300 + t7393;
  t7780 = t5886*t7724;
  t7801 = -1.*t7428*t6839;
  t7807 = t7780 + t7801;
  t7533 = t5886*t7428;
  t7737 = t7724*t6839;
  t7772 = t7533 + t7737;
  t4652 = -1.*t1678*t4329;
  t4678 = t2793*t4246;
  t4693 = 0. + t4652 + t4678;
  t7969 = -1.*t7*t5964*t6018;
  t7971 = -1.*t7*t5991*t6264;
  t7979 = t7969 + t7971;
  t7924 = t7*t5991*t5964;
  t7928 = -1.*t7*t6018*t6264;
  t7932 = t7924 + t7928;
  t8096 = t5945*t7979;
  t8098 = -1.*t7932*t6507;
  t8100 = t8096 + t8098;
  t7954 = t5945*t7932;
  t7980 = t7979*t6507;
  t8052 = t7954 + t7980;
  t8144 = t5886*t8100;
  t8147 = -1.*t8052*t6839;
  t8148 = t8144 + t8147;
  t8074 = t5886*t8052;
  t8105 = t8100*t6839;
  t8115 = t8074 + t8105;
  t4774 = t2864*t4329;
  t4801 = -1.*t2724*t4246;
  t4830 = 0. + t4774 + t4801;
  t6907 = t5870*t6902;
  t6953 = t6931*t6949;
  t6964 = t6907 + t6953;
  t6971 = 0.642788*t6964;
  t6977 = t5870*t6931;
  t6978 = -1.*t6902*t6949;
  t6987 = t6977 + t6978;
  t6990 = 0.766044*t6987;
  t7027 = t6971 + t6990;
  t5026 = -1.*t1688*t410*t2793;
  t5116 = -1.*t1696*t2724;
  t5151 = 0. + t5026 + t5116;
  t8133 = t5870*t8115;
  t8149 = t8148*t6949;
  t8151 = t8133 + t8149;
  t8177 = 0.642788*t8151;
  t8205 = t5870*t8148;
  t8207 = -1.*t8115*t6949;
  t8214 = t8205 + t8207;
  t8239 = 0.766044*t8214;
  t8253 = t8177 + t8239;
  t5227 = -1.*t410*t1723*t2724;
  t5231 = t1688*t410*t4329;
  t5250 = 0. + t5227 + t5231;
  t7777 = t5870*t7772;
  t7824 = t7807*t6949;
  t7826 = t7777 + t7824;
  t7841 = 0.642788*t7826;
  t7865 = t5870*t7807;
  t7881 = -1.*t7772*t6949;
  t7902 = t7865 + t7881;
  t7909 = 0.766044*t7902;
  t7917 = t7841 + t7909;
  t5300 = t410*t1723*t2793;
  t5379 = t1696*t4329;
  t5472 = 0. + t5300 + t5379;
  t5578 = 0. + t4330 + t4378;
  t5589 = t410*t1723*t2864;
  t5612 = -1.*t1688*t410*t4246;
  t5636 = 0. + t5589 + t5612;
  t5790 = -1.*t410*t1723*t1678;
  t5799 = -1.*t1696*t4246;
  t5844 = 0. + t5790 + t5799;
  t8364 = -0.766044*t6964;
  t8365 = 0.642788*t6987;
  t8377 = t8364 + t8365;
  t8420 = -0.766044*t8151;
  t8423 = 0.642788*t8214;
  t8428 = t8420 + t8423;
  t8386 = -0.766044*t7826;
  t8393 = 0.642788*t7902;
  t8394 = t8386 + t8393;
  t8494 = -1.*t5991;
  t8507 = 1. + t8494;
  t8559 = -1.*t5964;
  t8564 = 1. + t8559;
  t8599 = -1.*t5945;
  t8601 = 1. + t8599;
  t8633 = -1.*t5886;
  t8635 = 1. + t8633;
  t8668 = -1.*t5870;
  t8672 = 1. + t8668;
  t8477 = -1.*t7;
  t8479 = 1. + t8477;
  t8480 = -0.135*t8479;
  t8484 = 0.049*t4738;
  t8490 = 0. + t8480 + t8484;
  t8513 = -0.049*t8507;
  t8516 = -0.09*t6018;
  t8527 = 0. + t8513 + t8516;
  t8542 = -0.09*t8507;
  t8545 = 0.049*t6018;
  t8546 = 0. + t8542 + t8545;
  t8570 = -0.049*t8564;
  t8578 = -0.21*t6264;
  t8580 = 0. + t8570 + t8578;
  t8587 = -0.21*t8564;
  t8592 = 0.049*t6264;
  t8594 = 0. + t8587 + t8592;
  t8602 = -0.0016*t8601;
  t8609 = -0.2707*t6507;
  t8610 = 0. + t8602 + t8609;
  t8622 = -0.2707*t8601;
  t8630 = 0.0016*t6507;
  t8631 = 0. + t8622 + t8630;
  t8641 = 0.0184*t8635;
  t8645 = -0.7055*t6839;
  t8650 = 0. + t8641 + t8645;
  t8656 = -0.7055*t8635;
  t8658 = -0.0184*t6839;
  t8660 = 0. + t8656 + t8658;
  t8673 = -0.0216*t8672;
  t8675 = -1.1135*t6949;
  t8677 = 0. + t8673 + t8675;
  t8681 = -1.1135*t8672;
  t8685 = 0.0216*t6949;
  t8687 = 0. + t8681 + t8685;
  t8782 = -1.*t418;
  t8783 = 1. + t8782;
  t8795 = -1.*t447;
  t8796 = 1. + t8795;
  t8807 = -1.*t573;
  t8809 = 1. + t8807;
  t8823 = -1.*t1082;
  t8824 = 1. + t8823;
  t8834 = -1.*t1370;
  t8836 = 1. + t8834;
  t8776 = -1.*t410;
  t8777 = 1. + t8776;
  t8797 = -0.049*t8796;
  t8798 = -0.21*t422;
  t8799 = 0. + t8797 + t8798;
  t8785 = -0.049*t8783;
  t8786 = -0.09*t457;
  t8787 = 0. + t8785 + t8786;
  t8801 = -0.21*t8796;
  t8802 = 0.049*t422;
  t8804 = 0. + t8801 + t8802;
  t8810 = -0.2707*t8809;
  t8811 = 0.0016*t374;
  t8812 = 0. + t8810 + t8811;
  t8817 = -0.0016*t8809;
  t8819 = -0.2707*t374;
  t8820 = 0. + t8817 + t8819;
  t8825 = 0.0184*t8824;
  t8826 = -0.7055*t240;
  t8827 = 0. + t8825 + t8826;
  t8829 = -0.7055*t8824;
  t8830 = -0.0184*t240;
  t8832 = 0. + t8829 + t8830;
  t8837 = -1.1135*t8836;
  t8838 = 0.0216*t108;
  t8839 = 0. + t8837 + t8838;
  t8843 = -0.0216*t8836;
  t8844 = -1.1135*t108;
  t8846 = 0. + t8843 + t8844;
  t8770 = -1.*t1688;
  t8772 = 1. + t8770;
  t8773 = 0.135*t8772;
  t8775 = 0.1305*t1688*t410;
  t8778 = 0.135*t8777;
  t8779 = 0.049*t1696;
  t8780 = 0. + t8778 + t8779;
  t8781 = t1688*t8780;
  t8788 = t1688*t1696*t8787;
  t8791 = -0.09*t8783;
  t8792 = 0.049*t457;
  t8793 = 0. + t8791 + t8792;
  t8794 = -1.*t1723*t8793;
  t8800 = t8799*t1844;
  t8805 = t8804*t1963;
  t8816 = t8812*t1972;
  t8822 = t8820*t2028;
  t8828 = t8827*t2064;
  t8833 = t8832*t2374;
  t8842 = t8839*t2474;
  t8847 = t8846*t2619;
  t8848 = 0.0306*t2670;
  t8849 = -1.1312*t2704;
  t8850 = 0. + t8773 + t8775 + t8781 + t8788 + t8794 + t8800 + t8805 + t8816 + t8822 + t8828 + t8833 + t8842 + t8847 + t8848 + t8849;
  t8852 = -0.049*t8777;
  t8854 = t410*t418*t8799;
  t8855 = 0.004500000000000004*t1696;
  t8856 = t410*t8787;
  t8858 = -1.*t410*t8804*t457;
  t8859 = t8812*t537;
  t8860 = t8820*t690;
  t8861 = t8827*t874;
  t8862 = t8832*t1249;
  t8863 = t8839*t1264;
  t8864 = t8846*t1454;
  t8865 = 0.0306*t1470;
  t8866 = -1.1312*t1600;
  t8867 = 0. + t8852 + t8854 + t8855 + t8856 + t8858 + t8859 + t8860 + t8861 + t8862 + t8863 + t8864 + t8865 + t8866;
  t8472 = 0.135*t11;
  t8476 = -0.1305*t7*t11;
  t8493 = t11*t8490;
  t8540 = t11*t4738*t8527;
  t8558 = t4643*t8546;
  t8586 = t6168*t8580;
  t8596 = t6263*t8594;
  t8619 = t6291*t8610;
  t8632 = t6456*t8631;
  t8651 = t6737*t8650;
  t8663 = t6834*t8660;
  t8680 = t6902*t8677;
  t8693 = t6931*t8687;
  t8695 = 0.0306*t6964;
  t8697 = -1.1312*t6987;
  t8699 = 0. + t8472 + t8476 + t8493 + t8540 + t8558 + t8586 + t8596 + t8619 + t8632 + t8651 + t8663 + t8680 + t8693 + t8695 + t8697;
  t8745 = -0.049*t8479;
  t8747 = -0.004500000000000004*t4738;
  t8748 = t7*t8527;
  t8749 = t7*t5991*t8580;
  t8750 = -1.*t7*t6018*t8594;
  t8752 = t7932*t8610;
  t8756 = t7979*t8631;
  t8757 = t8052*t8650;
  t8758 = t8100*t8660;
  t8760 = t8115*t8677;
  t8761 = t8148*t8687;
  t8762 = 0.0306*t8151;
  t8765 = -1.1312*t8214;
  t8767 = 0. + t8745 + t8747 + t8748 + t8749 + t8750 + t8752 + t8756 + t8757 + t8758 + t8760 + t8761 + t8762 + t8765;
  t8703 = -1.*t4643;
  t8706 = 1. + t8703;
  t8707 = -0.135*t8706;
  t8708 = -0.1305*t4643*t7;
  t8709 = t4643*t8490;
  t8712 = t4643*t4738*t8527;
  t8713 = -1.*t11*t8546;
  t8716 = t7107*t8580;
  t8721 = t7193*t8594;
  t8722 = t7209*t8610;
  t8728 = t7367*t8631;
  t8731 = t7428*t8650;
  t8733 = t7724*t8660;
  t8736 = t7772*t8677;
  t8737 = t7807*t8687;
  t8738 = 0.0306*t7826;
  t8739 = -1.1312*t7902;
  t8740 = 0. + t8707 + t8708 + t8709 + t8712 + t8713 + t8716 + t8721 + t8722 + t8728 + t8731 + t8733 + t8736 + t8737 + t8738 + t8739;
  t8881 = -0.135*t1723;
  t8884 = 0.1305*t410*t1723;
  t8888 = t1723*t8780;
  t8890 = t1723*t1696*t8787;
  t8893 = t1688*t8793;
  t8894 = t8799*t3006;
  t8895 = t8804*t3200;
  t8896 = t8812*t3235;
  t8897 = t8820*t3424;
  t8898 = t8827*t3510;
  t8899 = t8832*t3592;
  t8901 = t8839*t3606;
  t8903 = t8846*t3780;
  t8904 = 0.0306*t3978;
  t8905 = -1.1312*t4088;
  t8906 = 0. + t8881 + t8884 + t8888 + t8890 + t8893 + t8894 + t8895 + t8896 + t8897 + t8898 + t8899 + t8901 + t8903 + t8904 + t8905;
  t8851 = t2793*t8850;
  t8868 = -1.*t8867*t2724;
  t8870 = t8851 + t8868;
  t8918 = t1688*t410*t8867;
  t8919 = t1696*t8850;
  t8921 = t8918 + t8919;
  t8872 = t1678*t8850;
  t8874 = -1.*t8867*t2864;
  t8877 = t8872 + t8874;
  p_output1[0]=0. + t4558*t4738*t4830 - 1.*t11*t2872*t4558*t7 - 1.*t4558*t4643*t4693*t7;
  p_output1[1]=0. + t4558*t4738*t5250 - 1.*t11*t4558*t5151*t7 - 1.*t4558*t4643*t5472*t7;
  p_output1[2]=0. + t4558*t4738*t5636 - 1.*t11*t4558*t5578*t7 - 1.*t4558*t4643*t5844*t7;
  p_output1[3]=0.;
  p_output1[4]=0. + t2872*t4558*t7027 + t4558*t4693*t7917 + t4558*t4830*t8253;
  p_output1[5]=0. + t4558*t5151*t7027 + t4558*t5472*t7917 + t4558*t5250*t8253;
  p_output1[6]=0. + t4558*t5578*t7027 + t4558*t5844*t7917 + t4558*t5636*t8253;
  p_output1[7]=0.;
  p_output1[8]=0. + t2872*t4558*t8377 + t4558*t4693*t8394 + t4558*t4830*t8428;
  p_output1[9]=0. + t4558*t5151*t8377 + t4558*t5472*t8394 + t4558*t5250*t8428;
  p_output1[10]=0. + t4558*t5578*t8377 + t4558*t5844*t8394 + t4558*t5636*t8428;
  p_output1[11]=0.;
  p_output1[12]=t2872*t4558*t8699 + t4558*t4693*t8740 + t4558*t4830*t8767 + t4558*(-1.*t4246*t8870 + t4329*t8877 - 1.*t4525*t8906);
  p_output1[13]=t4558*t5151*t8699 + t4558*t5472*t8740 + t4558*t5250*t8767 + t4558*(-1.*t1723*t410*t8870 + t4271*t8906 - 1.*t4329*t8921);
  p_output1[14]=t4558*t5578*t8699 + t4558*t5844*t8740 + t4558*t5636*t8767 + t4558*(t1723*t410*t8877 - 1.*t4388*t8906 + t4246*t8921);
  p_output1[15]=0. + (t4272 + t4499 + t4532)*t4558;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 14 && ncols == 1) && 
      !(mrows == 1 && ncols == 14))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 4, (mwSize) 4, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "H_LeftToeBottom_to_RightToeBottom_mex.hh"

namespace SymExpression
{

void H_LeftToeBottom_to_RightToeBottom_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
