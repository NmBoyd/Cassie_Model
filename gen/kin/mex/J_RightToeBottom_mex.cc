/*
 * Automatically Generated from Mathematica.
 * Fri 16 Mar 2018 11:08:40 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t1669;
  double t2229;
  double t2012;
  double t2062;
  double t2501;
  double t763;
  double t829;
  double t1329;
  double t1426;
  double t1791;
  double t2218;
  double t2520;
  double t2534;
  double t2643;
  double t3215;
  double t3293;
  double t3295;
  double t315;
  double t3938;
  double t4009;
  double t4018;
  double t4055;
  double t4061;
  double t4117;
  double t4138;
  double t4256;
  double t4266;
  double t4370;
  double t4880;
  double t4904;
  double t4964;
  double t5117;
  double t5169;
  double t5192;
  double t5211;
  double t5234;
  double t5244;
  double t5250;
  double t5337;
  double t5339;
  double t5361;
  double t5402;
  double t5411;
  double t5416;
  double t5427;
  double t5440;
  double t5444;
  double t5462;
  double t5507;
  double t5514;
  double t5522;
  double t5530;
  double t5535;
  double t5538;
  double t5554;
  double t5581;
  double t5584;
  double t5593;
  double t5626;
  double t5627;
  double t5628;
  double t5645;
  double t5654;
  double t5655;
  double t5665;
  double t5696;
  double t5700;
  double t5702;
  double t5714;
  double t5719;
  double t5726;
  double t1412;
  double t1463;
  double t1573;
  double t1821;
  double t1879;
  double t2656;
  double t2659;
  double t3042;
  double t3177;
  double t3494;
  double t3810;
  double t3838;
  double t5809;
  double t5813;
  double t5815;
  double t5832;
  double t5836;
  double t5842;
  double t4119;
  double t4171;
  double t4230;
  double t5854;
  double t5860;
  double t5862;
  double t4835;
  double t4837;
  double t4861;
  double t5205;
  double t5213;
  double t5232;
  double t5877;
  double t5879;
  double t5880;
  double t5902;
  double t5908;
  double t5909;
  double t5275;
  double t5303;
  double t5322;
  double t5418;
  double t5433;
  double t5437;
  double t5920;
  double t5923;
  double t5924;
  double t5933;
  double t5940;
  double t5949;
  double t5488;
  double t5499;
  double t5502;
  double t5549;
  double t5556;
  double t5577;
  double t5955;
  double t5962;
  double t5968;
  double t5994;
  double t5996;
  double t6005;
  double t5608;
  double t5610;
  double t5616;
  double t5663;
  double t5671;
  double t5694;
  double t6040;
  double t6069;
  double t6085;
  double t6099;
  double t6106;
  double t6108;
  double t5708;
  double t5709;
  double t5711;
  double t6155;
  double t6157;
  double t6161;
  double t6188;
  double t6196;
  double t6204;
  double t6287;
  double t6292;
  double t6296;
  double t6302;
  double t6303;
  double t6311;
  double t6346;
  double t6350;
  double t6356;
  double t6366;
  double t6367;
  double t6372;
  double t6374;
  double t6377;
  double t6378;
  double t6383;
  double t6386;
  double t6387;
  double t6391;
  double t6393;
  double t6396;
  double t6411;
  double t6412;
  double t6414;
  double t6419;
  double t6423;
  double t6430;
  double t6434;
  double t6437;
  double t6446;
  double t6456;
  double t6460;
  double t6462;
  double t6563;
  double t6569;
  double t6576;
  double t6581;
  double t6587;
  double t6591;
  double t6662;
  double t6669;
  double t6673;
  double t6700;
  double t6714;
  double t6722;
  double t6735;
  double t6742;
  double t6743;
  double t6749;
  double t6750;
  double t6770;
  double t6783;
  double t6784;
  double t6788;
  double t6794;
  double t6803;
  double t6812;
  double t6815;
  double t6829;
  double t6833;
  double t6843;
  double t6846;
  double t6855;
  double t6883;
  double t6891;
  double t6894;
  double t6973;
  double t6974;
  double t6976;
  double t6982;
  double t6984;
  double t6990;
  double t7014;
  double t7018;
  double t7022;
  double t7026;
  double t7032;
  double t7033;
  double t7039;
  double t7044;
  double t7045;
  double t7050;
  double t7065;
  double t7068;
  double t7072;
  double t7074;
  double t7079;
  double t7084;
  double t7097;
  double t7108;
  double t7135;
  double t7142;
  double t7143;
  double t7177;
  double t7179;
  double t7186;
  double t7209;
  double t7215;
  double t7222;
  double t7306;
  double t7309;
  double t7320;
  double t7362;
  double t7373;
  double t7326;
  double t7327;
  double t7329;
  double t7413;
  double t7415;
  double t7419;
  double t7427;
  double t7468;
  double t7473;
  double t7478;
  double t7490;
  double t7493;
  double t7503;
  double t7508;
  double t7510;
  double t7535;
  double t7537;
  double t7541;
  double t7546;
  double t7550;
  double t7564;
  double t7579;
  double t7598;
  double t7603;
  double t7625;
  double t7632;
  double t7642;
  double t7765;
  double t7766;
  double t7767;
  double t7811;
  double t7815;
  double t7836;
  double t7794;
  double t7797;
  double t7924;
  double t7933;
  double t7960;
  double t7970;
  double t7975;
  double t7983;
  double t7998;
  double t8002;
  double t8012;
  double t8039;
  double t8041;
  double t8048;
  double t8087;
  double t8128;
  double t8134;
  double t8141;
  double t8149;
  double t8153;
  double t8161;
  double t8167;
  double t8168;
  double t8175;
  double t8178;
  double t8181;
  double t8343;
  double t8351;
  double t8365;
  double t8311;
  double t8313;
  double t8316;
  double t8374;
  double t8395;
  double t8407;
  double t8411;
  double t8416;
  double t8455;
  double t8462;
  double t8490;
  double t8499;
  double t8516;
  double t8523;
  double t8546;
  double t8595;
  double t8603;
  double t8629;
  double t8653;
  double t8659;
  double t8672;
  double t8717;
  double t8721;
  double t8722;
  double t8728;
  double t8733;
  double t8739;
  double t8903;
  double t8907;
  double t8982;
  double t8988;
  double t9010;
  double t9042;
  double t9054;
  double t9063;
  double t9071;
  double t9079;
  double t9083;
  double t9098;
  double t9123;
  double t9124;
  double t9158;
  double t9195;
  double t9203;
  double t9231;
  double t9241;
  double t9258;
  double t9271;
  double t9277;
  double t9279;
  double t9319;
  double t9342;
  double t9368;
  double t9605;
  double t9611;
  double t9680;
  double t9721;
  double t9740;
  double t9694;
  double t9698;
  double t9830;
  double t9831;
  double t9848;
  double t9919;
  double t9920;
  double t9929;
  double t9948;
  double t9949;
  double t9965;
  double t9992;
  double t9999;
  double t10001;
  double t10009;
  double t10013;
  double t10026;
  double t10034;
  double t10038;
  double t10041;
  double t10077;
  double t10078;
  double t10086;
  double t10099;
  double t10101;
  double t10108;
  double t8337;
  double t8367;
  double t8370;
  double t8373;
  double t8410;
  double t8456;
  double t8509;
  double t8566;
  double t8651;
  double t8714;
  double t8723;
  double t8745;
  double t8749;
  double t8753;
  double t8759;
  double t8763;
  double t8787;
  double t8798;
  double t8830;
  double t8862;
  double t5887;
  double t5896;
  double t5897;
  double t10279;
  double t10291;
  double t10298;
  double t10304;
  double t10307;
  double t10308;
  double t10329;
  double t10357;
  double t10361;
  double t10374;
  double t10378;
  double t10381;
  double t10394;
  double t10400;
  double t10406;
  double t10409;
  double t10411;
  double t10414;
  double t10200;
  double t10202;
  double t10205;
  double t10231;
  double t10242;
  double t10472;
  double t10473;
  double t10476;
  double t10482;
  double t10489;
  double t10491;
  double t10529;
  double t10531;
  double t10533;
  double t10537;
  double t10541;
  double t10550;
  double t10559;
  double t10580;
  double t10587;
  double t10594;
  double t10596;
  double t10614;
  double t10623;
  double t10625;
  double t10629;
  double t10644;
  double t10646;
  double t10650;
  double t10695;
  double t10696;
  double t10697;
  double t10710;
  double t10713;
  double t10715;
  double t10757;
  double t10758;
  double t10764;
  double t10780;
  double t10785;
  double t10795;
  double t10808;
  double t10809;
  double t10813;
  double t10816;
  double t10819;
  double t10820;
  double t10823;
  double t10827;
  double t10831;
  double t10836;
  double t10843;
  double t10853;
  double t10936;
  double t10937;
  double t10949;
  double t10958;
  double t10963;
  double t10966;
  double t10971;
  double t10978;
  double t10981;
  double t10984;
  double t10986;
  double t10993;
  double t10998;
  double t11007;
  double t11011;
  double t11017;
  double t11018;
  double t11022;
  double t11027;
  double t11031;
  double t10914;
  double t10915;
  double t10917;
  double t10919;
  double t10920;
  double t11072;
  double t11073;
  double t11074;
  double t11079;
  double t11083;
  double t11084;
  double t11088;
  double t11089;
  double t11090;
  double t11092;
  double t11093;
  double t11094;
  double t11097;
  double t11099;
  double t11100;
  double t11102;
  double t11106;
  double t11109;
  double t11112;
  double t11115;
  double t11122;
  double t11126;
  double t11127;
  double t11128;
  double t11130;
  double t11131;
  double t11132;
  double t11164;
  double t11165;
  double t11168;
  double t11175;
  double t11178;
  double t11180;
  double t11184;
  double t11186;
  double t11187;
  double t11191;
  double t11194;
  double t11197;
  double t11200;
  double t11202;
  double t11203;
  double t11206;
  double t11210;
  double t11214;
  double t11222;
  double t11223;
  double t11224;
  double t11226;
  double t11228;
  double t11229;
  double t11232;
  double t11233;
  double t11238;
  double t11273;
  double t11277;
  double t11282;
  double t11286;
  double t11289;
  double t11291;
  double t11292;
  double t11294;
  double t11296;
  double t11297;
  double t11300;
  double t11301;
  double t11302;
  double t11258;
  double t11259;
  double t11260;
  double t11263;
  double t11265;
  double t11338;
  double t11339;
  double t11340;
  double t11344;
  double t11345;
  double t11347;
  double t11348;
  double t11353;
  double t11355;
  double t11356;
  double t11360;
  double t11362;
  double t11365;
  double t11374;
  double t11375;
  double t11376;
  double t11379;
  double t11380;
  double t11381;
  double t11398;
  double t11400;
  double t11401;
  double t11405;
  double t11406;
  double t11408;
  double t11409;
  double t11411;
  double t11413;
  double t11414;
  double t11420;
  double t11421;
  double t11423;
  double t11425;
  double t11427;
  double t11428;
  double t11431;
  double t11432;
  double t11433;
  double t11457;
  double t11458;
  double t11461;
  double t11462;
  double t11464;
  double t11465;
  double t11466;
  double t11450;
  double t11451;
  double t11453;
  double t11454;
  double t11455;
  double t11480;
  double t11481;
  double t11482;
  double t11484;
  double t11485;
  double t11487;
  double t11488;
  double t11490;
  double t11491;
  double t11492;
  double t11494;
  double t11495;
  double t11496;
  double t11508;
  double t11509;
  double t11510;
  double t11512;
  double t11513;
  double t11515;
  double t11516;
  double t11518;
  double t11519;
  double t11520;
  double t11522;
  double t11523;
  double t11524;
  double t11543;
  double t11544;
  double t6257;
  double t11535;
  double t11536;
  double t11537;
  double t11539;
  double t11540;
  double t11554;
  double t11555;
  double t11556;
  double t11559;
  double t11560;
  double t11562;
  double t11563;
  double t11574;
  double t11575;
  double t11576;
  double t11579;
  double t11580;
  double t11582;
  double t11583;
  double t11546;
  double t6260;
  double t6268;
  double t11594;
  double t11595;
  double t11597;
  double t11598;
  double t11599;
  double t11565;
  double t11607;
  double t11608;
  double t11609;
  double t11569;
  double t11585;
  double t11619;
  double t11620;
  double t11621;
  double t11589;
  t1669 = Sin(var1[3]);
  t2229 = Cos(var1[3]);
  t2012 = Cos(var1[5]);
  t2062 = Sin(var1[4]);
  t2501 = Sin(var1[5]);
  t763 = Cos(var1[14]);
  t829 = -1.*t763;
  t1329 = 1. + t829;
  t1426 = Sin(var1[14]);
  t1791 = Sin(var1[13]);
  t2218 = -1.*t2012*t1669*t2062;
  t2520 = t2229*t2501;
  t2534 = t2218 + t2520;
  t2643 = Cos(var1[13]);
  t3215 = -1.*t2229*t2012;
  t3293 = -1.*t1669*t2062*t2501;
  t3295 = t3215 + t3293;
  t315 = Cos(var1[4]);
  t3938 = t1791*t2534;
  t4009 = t2643*t3295;
  t4018 = t3938 + t4009;
  t4055 = Cos(var1[15]);
  t4061 = -1.*t4055;
  t4117 = 1. + t4061;
  t4138 = Sin(var1[15]);
  t4256 = t2643*t2534;
  t4266 = -1.*t1791*t3295;
  t4370 = t4256 + t4266;
  t4880 = -1.*t763*t315*t1669;
  t4904 = t1426*t4018;
  t4964 = t4880 + t4904;
  t5117 = Cos(var1[16]);
  t5169 = -1.*t5117;
  t5192 = 1. + t5169;
  t5211 = Sin(var1[16]);
  t5234 = t4138*t4370;
  t5244 = t4055*t4964;
  t5250 = t5234 + t5244;
  t5337 = t4055*t4370;
  t5339 = -1.*t4138*t4964;
  t5361 = t5337 + t5339;
  t5402 = Cos(var1[17]);
  t5411 = -1.*t5402;
  t5416 = 1. + t5411;
  t5427 = Sin(var1[17]);
  t5440 = -1.*t5211*t5250;
  t5444 = t5117*t5361;
  t5462 = t5440 + t5444;
  t5507 = t5117*t5250;
  t5514 = t5211*t5361;
  t5522 = t5507 + t5514;
  t5530 = Cos(var1[18]);
  t5535 = -1.*t5530;
  t5538 = 1. + t5535;
  t5554 = Sin(var1[18]);
  t5581 = t5427*t5462;
  t5584 = t5402*t5522;
  t5593 = t5581 + t5584;
  t5626 = t5402*t5462;
  t5627 = -1.*t5427*t5522;
  t5628 = t5626 + t5627;
  t5645 = Cos(var1[19]);
  t5654 = -1.*t5645;
  t5655 = 1. + t5654;
  t5665 = Sin(var1[19]);
  t5696 = -1.*t5554*t5593;
  t5700 = t5530*t5628;
  t5702 = t5696 + t5700;
  t5714 = t5530*t5593;
  t5719 = t5554*t5628;
  t5726 = t5714 + t5719;
  t1412 = -0.049*t1329;
  t1463 = -0.135*t1426;
  t1573 = 0. + t1412 + t1463;
  t1821 = 0.135*t1791;
  t1879 = 0. + t1821;
  t2656 = -1.*t2643;
  t2659 = 1. + t2656;
  t3042 = -0.135*t2659;
  t3177 = 0. + t3042;
  t3494 = -0.135*t1329;
  t3810 = 0.049*t1426;
  t3838 = 0. + t3494 + t3810;
  t5809 = t2229*t2012*t2062;
  t5813 = t1669*t2501;
  t5815 = t5809 + t5813;
  t5832 = -1.*t2012*t1669;
  t5836 = t2229*t2062*t2501;
  t5842 = t5832 + t5836;
  t4119 = -0.09*t4117;
  t4171 = 0.049*t4138;
  t4230 = 0. + t4119 + t4171;
  t5854 = t1791*t5815;
  t5860 = t2643*t5842;
  t5862 = t5854 + t5860;
  t4835 = -0.049*t4117;
  t4837 = -0.09*t4138;
  t4861 = 0. + t4835 + t4837;
  t5205 = -0.049*t5192;
  t5213 = -0.21*t5211;
  t5232 = 0. + t5205 + t5213;
  t5877 = t2643*t5815;
  t5879 = -1.*t1791*t5842;
  t5880 = t5877 + t5879;
  t5902 = t763*t2229*t315;
  t5908 = t1426*t5862;
  t5909 = t5902 + t5908;
  t5275 = -0.21*t5192;
  t5303 = 0.049*t5211;
  t5322 = 0. + t5275 + t5303;
  t5418 = -0.2707*t5416;
  t5433 = 0.0016*t5427;
  t5437 = 0. + t5418 + t5433;
  t5920 = t4138*t5880;
  t5923 = t4055*t5909;
  t5924 = t5920 + t5923;
  t5933 = t4055*t5880;
  t5940 = -1.*t4138*t5909;
  t5949 = t5933 + t5940;
  t5488 = -0.0016*t5416;
  t5499 = -0.2707*t5427;
  t5502 = 0. + t5488 + t5499;
  t5549 = 0.0184*t5538;
  t5556 = -0.7055*t5554;
  t5577 = 0. + t5549 + t5556;
  t5955 = -1.*t5211*t5924;
  t5962 = t5117*t5949;
  t5968 = t5955 + t5962;
  t5994 = t5117*t5924;
  t5996 = t5211*t5949;
  t6005 = t5994 + t5996;
  t5608 = -0.7055*t5538;
  t5610 = -0.0184*t5554;
  t5616 = 0. + t5608 + t5610;
  t5663 = -1.1135*t5655;
  t5671 = 0.0216*t5665;
  t5694 = 0. + t5663 + t5671;
  t6040 = t5427*t5968;
  t6069 = t5402*t6005;
  t6085 = t6040 + t6069;
  t6099 = t5402*t5968;
  t6106 = -1.*t5427*t6005;
  t6108 = t6099 + t6106;
  t5708 = -0.0216*t5655;
  t5709 = -1.1135*t5665;
  t5711 = 0. + t5708 + t5709;
  t6155 = -1.*t5554*t6085;
  t6157 = t5530*t6108;
  t6161 = t6155 + t6157;
  t6188 = t5530*t6085;
  t6196 = t5554*t6108;
  t6204 = t6188 + t6196;
  t6287 = t2229*t315*t2012*t1791;
  t6292 = t2643*t2229*t315*t2501;
  t6296 = t6287 + t6292;
  t6302 = t2643*t2229*t315*t2012;
  t6303 = -1.*t2229*t315*t1791*t2501;
  t6311 = t6302 + t6303;
  t6346 = -1.*t763*t2229*t2062;
  t6350 = t1426*t6296;
  t6356 = t6346 + t6350;
  t6366 = t4138*t6311;
  t6367 = t4055*t6356;
  t6372 = t6366 + t6367;
  t6374 = t4055*t6311;
  t6377 = -1.*t4138*t6356;
  t6378 = t6374 + t6377;
  t6383 = -1.*t5211*t6372;
  t6386 = t5117*t6378;
  t6387 = t6383 + t6386;
  t6391 = t5117*t6372;
  t6393 = t5211*t6378;
  t6396 = t6391 + t6393;
  t6411 = t5427*t6387;
  t6412 = t5402*t6396;
  t6414 = t6411 + t6412;
  t6419 = t5402*t6387;
  t6423 = -1.*t5427*t6396;
  t6430 = t6419 + t6423;
  t6434 = -1.*t5554*t6414;
  t6437 = t5530*t6430;
  t6446 = t6434 + t6437;
  t6456 = t5530*t6414;
  t6460 = t5554*t6430;
  t6462 = t6456 + t6460;
  t6563 = t315*t2012*t1791*t1669;
  t6569 = t2643*t315*t1669*t2501;
  t6576 = t6563 + t6569;
  t6581 = t2643*t315*t2012*t1669;
  t6587 = -1.*t315*t1791*t1669*t2501;
  t6591 = t6581 + t6587;
  t6662 = -1.*t763*t1669*t2062;
  t6669 = t1426*t6576;
  t6673 = t6662 + t6669;
  t6700 = t4138*t6591;
  t6714 = t4055*t6673;
  t6722 = t6700 + t6714;
  t6735 = t4055*t6591;
  t6742 = -1.*t4138*t6673;
  t6743 = t6735 + t6742;
  t6749 = -1.*t5211*t6722;
  t6750 = t5117*t6743;
  t6770 = t6749 + t6750;
  t6783 = t5117*t6722;
  t6784 = t5211*t6743;
  t6788 = t6783 + t6784;
  t6794 = t5427*t6770;
  t6803 = t5402*t6788;
  t6812 = t6794 + t6803;
  t6815 = t5402*t6770;
  t6829 = -1.*t5427*t6788;
  t6833 = t6815 + t6829;
  t6843 = -1.*t5554*t6812;
  t6846 = t5530*t6833;
  t6855 = t6843 + t6846;
  t6883 = t5530*t6812;
  t6891 = t5554*t6833;
  t6894 = t6883 + t6891;
  t6973 = -1.*t2012*t1791*t2062;
  t6974 = -1.*t2643*t2062*t2501;
  t6976 = t6973 + t6974;
  t6982 = -1.*t2643*t2012*t2062;
  t6984 = t1791*t2062*t2501;
  t6990 = t6982 + t6984;
  t7014 = -1.*t763*t315;
  t7018 = t1426*t6976;
  t7022 = t7014 + t7018;
  t7026 = t4138*t6990;
  t7032 = t4055*t7022;
  t7033 = t7026 + t7032;
  t7039 = t4055*t6990;
  t7044 = -1.*t4138*t7022;
  t7045 = t7039 + t7044;
  t7050 = -1.*t5211*t7033;
  t7065 = t5117*t7045;
  t7068 = t7050 + t7065;
  t7072 = t5117*t7033;
  t7074 = t5211*t7045;
  t7079 = t7072 + t7074;
  t7084 = t5427*t7068;
  t7097 = t5402*t7079;
  t7108 = t7084 + t7097;
  t7135 = t5402*t7068;
  t7142 = -1.*t5427*t7079;
  t7143 = t7135 + t7142;
  t7177 = -1.*t5554*t7108;
  t7179 = t5530*t7143;
  t7186 = t7177 + t7179;
  t7209 = t5530*t7108;
  t7215 = t5554*t7143;
  t7222 = t7209 + t7215;
  t7306 = t2012*t1669;
  t7309 = -1.*t2229*t2062*t2501;
  t7320 = t7306 + t7309;
  t7362 = t1791*t7320;
  t7373 = t5877 + t7362;
  t7326 = -1.*t1791*t5815;
  t7327 = t2643*t7320;
  t7329 = t7326 + t7327;
  t7413 = t4138*t7329;
  t7415 = t4055*t1426*t7373;
  t7419 = t7413 + t7415;
  t7427 = t4055*t7329;
  t7468 = -1.*t1426*t4138*t7373;
  t7473 = t7427 + t7468;
  t7478 = -1.*t5211*t7419;
  t7490 = t5117*t7473;
  t7493 = t7478 + t7490;
  t7503 = t5117*t7419;
  t7508 = t5211*t7473;
  t7510 = t7503 + t7508;
  t7535 = t5427*t7493;
  t7537 = t5402*t7510;
  t7541 = t7535 + t7537;
  t7546 = t5402*t7493;
  t7550 = -1.*t5427*t7510;
  t7564 = t7546 + t7550;
  t7579 = -1.*t5554*t7541;
  t7598 = t5530*t7564;
  t7603 = t7579 + t7598;
  t7625 = t5530*t7541;
  t7632 = t5554*t7564;
  t7642 = t7625 + t7632;
  t7765 = t2012*t1669*t2062;
  t7766 = -1.*t2229*t2501;
  t7767 = t7765 + t7766;
  t7811 = t2643*t7767;
  t7815 = t1791*t3295;
  t7836 = t7811 + t7815;
  t7794 = -1.*t1791*t7767;
  t7797 = t7794 + t4009;
  t7924 = t4138*t7797;
  t7933 = t4055*t1426*t7836;
  t7960 = t7924 + t7933;
  t7970 = t4055*t7797;
  t7975 = -1.*t1426*t4138*t7836;
  t7983 = t7970 + t7975;
  t7998 = -1.*t5211*t7960;
  t8002 = t5117*t7983;
  t8012 = t7998 + t8002;
  t8039 = t5117*t7960;
  t8041 = t5211*t7983;
  t8048 = t8039 + t8041;
  t8087 = t5427*t8012;
  t8128 = t5402*t8048;
  t8134 = t8087 + t8128;
  t8141 = t5402*t8012;
  t8149 = -1.*t5427*t8048;
  t8153 = t8141 + t8149;
  t8161 = -1.*t5554*t8134;
  t8167 = t5530*t8153;
  t8168 = t8161 + t8167;
  t8175 = t5530*t8134;
  t8178 = t5554*t8153;
  t8181 = t8175 + t8178;
  t8343 = t2643*t315*t2012;
  t8351 = -1.*t315*t1791*t2501;
  t8365 = t8343 + t8351;
  t8311 = -1.*t315*t2012*t1791;
  t8313 = -1.*t2643*t315*t2501;
  t8316 = t8311 + t8313;
  t8374 = t4138*t8316;
  t8395 = t4055*t1426*t8365;
  t8407 = t8374 + t8395;
  t8411 = t4055*t8316;
  t8416 = -1.*t1426*t4138*t8365;
  t8455 = t8411 + t8416;
  t8462 = -1.*t5211*t8407;
  t8490 = t5117*t8455;
  t8499 = t8462 + t8490;
  t8516 = t5117*t8407;
  t8523 = t5211*t8455;
  t8546 = t8516 + t8523;
  t8595 = t5427*t8499;
  t8603 = t5402*t8546;
  t8629 = t8595 + t8603;
  t8653 = t5402*t8499;
  t8659 = -1.*t5427*t8546;
  t8672 = t8653 + t8659;
  t8717 = -1.*t5554*t8629;
  t8721 = t5530*t8672;
  t8722 = t8717 + t8721;
  t8728 = t5530*t8629;
  t8733 = t5554*t8672;
  t8739 = t8728 + t8733;
  t8903 = -1.*t2643*t5842;
  t8907 = t7326 + t8903;
  t8982 = t4138*t8907;
  t8988 = t4055*t1426*t5880;
  t9010 = t8982 + t8988;
  t9042 = t4055*t8907;
  t9054 = -1.*t1426*t4138*t5880;
  t9063 = t9042 + t9054;
  t9071 = -1.*t5211*t9010;
  t9079 = t5117*t9063;
  t9083 = t9071 + t9079;
  t9098 = t5117*t9010;
  t9123 = t5211*t9063;
  t9124 = t9098 + t9123;
  t9158 = t5427*t9083;
  t9195 = t5402*t9124;
  t9203 = t9158 + t9195;
  t9231 = t5402*t9083;
  t9241 = -1.*t5427*t9124;
  t9258 = t9231 + t9241;
  t9271 = -1.*t5554*t9203;
  t9277 = t5530*t9258;
  t9279 = t9271 + t9277;
  t9319 = t5530*t9203;
  t9342 = t5554*t9258;
  t9368 = t9319 + t9342;
  t9605 = t2229*t2012;
  t9611 = t1669*t2062*t2501;
  t9680 = t9605 + t9611;
  t9721 = -1.*t1791*t9680;
  t9740 = t7811 + t9721;
  t9694 = -1.*t2643*t9680;
  t9698 = t7794 + t9694;
  t9830 = t4138*t9698;
  t9831 = t4055*t1426*t9740;
  t9848 = t9830 + t9831;
  t9919 = t4055*t9698;
  t9920 = -1.*t1426*t4138*t9740;
  t9929 = t9919 + t9920;
  t9948 = -1.*t5211*t9848;
  t9949 = t5117*t9929;
  t9965 = t9948 + t9949;
  t9992 = t5117*t9848;
  t9999 = t5211*t9929;
  t10001 = t9992 + t9999;
  t10009 = t5427*t9965;
  t10013 = t5402*t10001;
  t10026 = t10009 + t10013;
  t10034 = t5402*t9965;
  t10038 = -1.*t5427*t10001;
  t10041 = t10034 + t10038;
  t10077 = -1.*t5554*t10026;
  t10078 = t5530*t10041;
  t10086 = t10077 + t10078;
  t10099 = t5530*t10026;
  t10101 = t5554*t10041;
  t10108 = t10099 + t10101;
  t8337 = t4230*t8316;
  t8367 = -0.1305*t763*t8365;
  t8370 = t3838*t8365;
  t8373 = t1426*t4861*t8365;
  t8410 = t5232*t8407;
  t8456 = t5322*t8455;
  t8509 = t5437*t8499;
  t8566 = t5502*t8546;
  t8651 = t5577*t8629;
  t8714 = t5616*t8672;
  t8723 = t5694*t8722;
  t8745 = t5711*t8739;
  t8749 = t5665*t8722;
  t8753 = t5645*t8739;
  t8759 = t8749 + t8753;
  t8763 = 0.0306*t8759;
  t8787 = t5645*t8722;
  t8798 = -1.*t5665*t8739;
  t8830 = t8787 + t8798;
  t8862 = -1.1312*t8830;
  t5887 = -1.*t2229*t315*t1426;
  t5896 = t763*t5862;
  t5897 = t5887 + t5896;
  t10279 = -1.*t5117*t4138*t5897;
  t10291 = -1.*t4055*t5211*t5897;
  t10298 = t10279 + t10291;
  t10304 = t4055*t5117*t5897;
  t10307 = -1.*t4138*t5211*t5897;
  t10308 = t10304 + t10307;
  t10329 = t5427*t10298;
  t10357 = t5402*t10308;
  t10361 = t10329 + t10357;
  t10374 = t5402*t10298;
  t10378 = -1.*t5427*t10308;
  t10381 = t10374 + t10378;
  t10394 = -1.*t5554*t10361;
  t10400 = t5530*t10381;
  t10406 = t10394 + t10400;
  t10409 = t5530*t10361;
  t10411 = t5554*t10381;
  t10414 = t10409 + t10411;
  t10200 = -0.135*t763;
  t10202 = -0.049*t1426;
  t10205 = t10200 + t10202;
  t10231 = 0.049*t763;
  t10242 = t10231 + t1463;
  t10472 = t1791*t7767;
  t10473 = t2643*t9680;
  t10476 = t10472 + t10473;
  t10482 = -1.*t315*t1426*t1669;
  t10489 = t763*t10476;
  t10491 = t10482 + t10489;
  t10529 = -1.*t5117*t4138*t10491;
  t10531 = -1.*t4055*t5211*t10491;
  t10533 = t10529 + t10531;
  t10537 = t4055*t5117*t10491;
  t10541 = -1.*t4138*t5211*t10491;
  t10550 = t10537 + t10541;
  t10559 = t5427*t10533;
  t10580 = t5402*t10550;
  t10587 = t10559 + t10580;
  t10594 = t5402*t10533;
  t10596 = -1.*t5427*t10550;
  t10614 = t10594 + t10596;
  t10623 = -1.*t5554*t10587;
  t10625 = t5530*t10614;
  t10629 = t10623 + t10625;
  t10644 = t5530*t10587;
  t10646 = t5554*t10614;
  t10650 = t10644 + t10646;
  t10695 = t315*t2012*t1791;
  t10696 = t2643*t315*t2501;
  t10697 = t10695 + t10696;
  t10710 = t1426*t2062;
  t10713 = t763*t10697;
  t10715 = t10710 + t10713;
  t10757 = -1.*t5117*t4138*t10715;
  t10758 = -1.*t4055*t5211*t10715;
  t10764 = t10757 + t10758;
  t10780 = t4055*t5117*t10715;
  t10785 = -1.*t4138*t5211*t10715;
  t10795 = t10780 + t10785;
  t10808 = t5427*t10764;
  t10809 = t5402*t10795;
  t10813 = t10808 + t10809;
  t10816 = t5402*t10764;
  t10819 = -1.*t5427*t10795;
  t10820 = t10816 + t10819;
  t10823 = -1.*t5554*t10813;
  t10827 = t5530*t10820;
  t10831 = t10823 + t10827;
  t10836 = t5530*t10813;
  t10843 = t5554*t10820;
  t10853 = t10836 + t10843;
  t10936 = -1.*t4138*t5880;
  t10937 = -1.*t4055*t5909;
  t10949 = t10936 + t10937;
  t10958 = t5211*t10949;
  t10963 = t10958 + t5962;
  t10966 = t5117*t10949;
  t10971 = -1.*t5211*t5949;
  t10978 = t10966 + t10971;
  t10981 = -1.*t5427*t10963;
  t10984 = t5402*t10978;
  t10986 = t10981 + t10984;
  t10993 = t5402*t10963;
  t10998 = t5427*t10978;
  t11007 = t10993 + t10998;
  t11011 = t5554*t10986;
  t11017 = t5530*t11007;
  t11018 = t11011 + t11017;
  t11022 = t5530*t10986;
  t11027 = -1.*t5554*t11007;
  t11031 = t11022 + t11027;
  t10914 = 0.049*t4055;
  t10915 = t10914 + t4837;
  t10917 = -0.09*t4055;
  t10919 = -0.049*t4138;
  t10920 = t10917 + t10919;
  t11072 = t763*t315*t1669;
  t11073 = t1426*t10476;
  t11074 = t11072 + t11073;
  t11079 = -1.*t4138*t9740;
  t11083 = -1.*t4055*t11074;
  t11084 = t11079 + t11083;
  t11088 = t4055*t9740;
  t11089 = -1.*t4138*t11074;
  t11090 = t11088 + t11089;
  t11092 = t5211*t11084;
  t11093 = t5117*t11090;
  t11094 = t11092 + t11093;
  t11097 = t5117*t11084;
  t11099 = -1.*t5211*t11090;
  t11100 = t11097 + t11099;
  t11102 = -1.*t5427*t11094;
  t11106 = t5402*t11100;
  t11109 = t11102 + t11106;
  t11112 = t5402*t11094;
  t11115 = t5427*t11100;
  t11122 = t11112 + t11115;
  t11126 = t5554*t11109;
  t11127 = t5530*t11122;
  t11128 = t11126 + t11127;
  t11130 = t5530*t11109;
  t11131 = -1.*t5554*t11122;
  t11132 = t11130 + t11131;
  t11164 = -1.*t763*t2062;
  t11165 = t1426*t10697;
  t11168 = t11164 + t11165;
  t11175 = -1.*t4138*t8365;
  t11178 = -1.*t4055*t11168;
  t11180 = t11175 + t11178;
  t11184 = t4055*t8365;
  t11186 = -1.*t4138*t11168;
  t11187 = t11184 + t11186;
  t11191 = t5211*t11180;
  t11194 = t5117*t11187;
  t11197 = t11191 + t11194;
  t11200 = t5117*t11180;
  t11202 = -1.*t5211*t11187;
  t11203 = t11200 + t11202;
  t11206 = -1.*t5427*t11197;
  t11210 = t5402*t11203;
  t11214 = t11206 + t11210;
  t11222 = t5402*t11197;
  t11223 = t5427*t11203;
  t11224 = t11222 + t11223;
  t11226 = t5554*t11214;
  t11228 = t5530*t11224;
  t11229 = t11226 + t11228;
  t11232 = t5530*t11214;
  t11233 = -1.*t5554*t11224;
  t11238 = t11232 + t11233;
  t11273 = -1.*t5117*t5924;
  t11277 = t11273 + t10971;
  t11282 = -1.*t5427*t5968;
  t11286 = t5402*t11277;
  t11289 = t11282 + t11286;
  t11291 = t5427*t11277;
  t11292 = t6099 + t11291;
  t11294 = t5554*t11289;
  t11296 = t5530*t11292;
  t11297 = t11294 + t11296;
  t11300 = t5530*t11289;
  t11301 = -1.*t5554*t11292;
  t11302 = t11300 + t11301;
  t11258 = -0.21*t5117;
  t11259 = -0.049*t5211;
  t11260 = t11258 + t11259;
  t11263 = 0.049*t5117;
  t11265 = t11263 + t5213;
  t11338 = t4138*t9740;
  t11339 = t4055*t11074;
  t11340 = t11338 + t11339;
  t11344 = -1.*t5211*t11340;
  t11345 = t11344 + t11093;
  t11347 = -1.*t5117*t11340;
  t11348 = t11347 + t11099;
  t11353 = -1.*t5427*t11345;
  t11355 = t5402*t11348;
  t11356 = t11353 + t11355;
  t11360 = t5402*t11345;
  t11362 = t5427*t11348;
  t11365 = t11360 + t11362;
  t11374 = t5554*t11356;
  t11375 = t5530*t11365;
  t11376 = t11374 + t11375;
  t11379 = t5530*t11356;
  t11380 = -1.*t5554*t11365;
  t11381 = t11379 + t11380;
  t11398 = t4138*t8365;
  t11400 = t4055*t11168;
  t11401 = t11398 + t11400;
  t11405 = -1.*t5211*t11401;
  t11406 = t11405 + t11194;
  t11408 = -1.*t5117*t11401;
  t11409 = t11408 + t11202;
  t11411 = -1.*t5427*t11406;
  t11413 = t5402*t11409;
  t11414 = t11411 + t11413;
  t11420 = t5402*t11406;
  t11421 = t5427*t11409;
  t11423 = t11420 + t11421;
  t11425 = t5554*t11414;
  t11427 = t5530*t11423;
  t11428 = t11425 + t11427;
  t11431 = t5530*t11414;
  t11432 = -1.*t5554*t11423;
  t11433 = t11431 + t11432;
  t11457 = -1.*t5402*t6005;
  t11458 = t11282 + t11457;
  t11461 = t5554*t11458;
  t11462 = t11461 + t6157;
  t11464 = t5530*t11458;
  t11465 = -1.*t5554*t6108;
  t11466 = t11464 + t11465;
  t11450 = 0.0016*t5402;
  t11451 = t11450 + t5499;
  t11453 = -0.2707*t5402;
  t11454 = -0.0016*t5427;
  t11455 = t11453 + t11454;
  t11480 = t5117*t11340;
  t11481 = t5211*t11090;
  t11482 = t11480 + t11481;
  t11484 = -1.*t5402*t11482;
  t11485 = t11353 + t11484;
  t11487 = -1.*t5427*t11482;
  t11488 = t11360 + t11487;
  t11490 = t5554*t11485;
  t11491 = t5530*t11488;
  t11492 = t11490 + t11491;
  t11494 = t5530*t11485;
  t11495 = -1.*t5554*t11488;
  t11496 = t11494 + t11495;
  t11508 = t5117*t11401;
  t11509 = t5211*t11187;
  t11510 = t11508 + t11509;
  t11512 = -1.*t5402*t11510;
  t11513 = t11411 + t11512;
  t11515 = -1.*t5427*t11510;
  t11516 = t11420 + t11515;
  t11518 = t5554*t11513;
  t11519 = t5530*t11516;
  t11520 = t11518 + t11519;
  t11522 = t5530*t11513;
  t11523 = -1.*t5554*t11516;
  t11524 = t11522 + t11523;
  t11543 = -1.*t5530*t6085;
  t11544 = t11543 + t11465;
  t6257 = t5645*t6161;
  t11535 = -0.7055*t5530;
  t11536 = 0.0184*t5554;
  t11537 = t11535 + t11536;
  t11539 = -0.0184*t5530;
  t11540 = t11539 + t5556;
  t11554 = t5427*t11345;
  t11555 = t5402*t11482;
  t11556 = t11554 + t11555;
  t11559 = -1.*t5554*t11556;
  t11560 = t11559 + t11491;
  t11562 = -1.*t5530*t11556;
  t11563 = t11562 + t11495;
  t11574 = t5427*t11406;
  t11575 = t5402*t11510;
  t11576 = t11574 + t11575;
  t11579 = -1.*t5554*t11576;
  t11580 = t11579 + t11519;
  t11582 = -1.*t5530*t11576;
  t11583 = t11582 + t11523;
  t11546 = -1.*t5665*t6161;
  t6260 = -1.*t5665*t6204;
  t6268 = t6257 + t6260;
  t11594 = 0.0216*t5645;
  t11595 = t11594 + t5709;
  t11597 = -1.1135*t5645;
  t11598 = -0.0216*t5665;
  t11599 = t11597 + t11598;
  t11565 = -1.*t5665*t11560;
  t11607 = t5530*t11556;
  t11608 = t5554*t11488;
  t11609 = t11607 + t11608;
  t11569 = t5645*t11560;
  t11585 = -1.*t5665*t11580;
  t11619 = t5530*t11576;
  t11620 = t5554*t11516;
  t11621 = t11619 + t11620;
  t11589 = t5645*t11580;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t1879*t2534 - 1.*t1573*t1669*t315 + t3177*t3295 + t3838*t4018 + t4230*t4370 + t4861*t4964 + t5232*t5250 + t5322*t5361 + t5437*t5462 + t5502*t5522 + t5577*t5593 + t5616*t5628 + t5694*t5702 + t5711*t5726 + 0.0306*(t5665*t5702 + t5645*t5726) - 1.1312*(t5645*t5702 - 1.*t5665*t5726) - 0.1305*(t1426*t1669*t315 + t4018*t763);
  p_output1[10]=t1573*t2229*t315 + t1879*t5815 + t3177*t5842 + t3838*t5862 + t4230*t5880 - 0.1305*t5897 + t4861*t5909 + t5232*t5924 + t5322*t5949 + t5437*t5968 + t5502*t6005 + t5577*t6085 + t5616*t6108 + t5694*t6161 + t5711*t6204 + 0.0306*(t5665*t6161 + t5645*t6204) - 1.1312*t6268;
  p_output1[11]=0;
  p_output1[12]=-1.*t1573*t2062*t2229 + t1879*t2012*t2229*t315 + t2229*t2501*t315*t3177 + t3838*t6296 + t4230*t6311 + t4861*t6356 + t5232*t6372 + t5322*t6378 + t5437*t6387 + t5502*t6396 + t5577*t6414 + t5616*t6430 + t5694*t6446 + t5711*t6462 + 0.0306*(t5665*t6446 + t5645*t6462) - 1.1312*(t5645*t6446 - 1.*t5665*t6462) - 0.1305*(t1426*t2062*t2229 + t6296*t763);
  p_output1[13]=-1.*t1573*t1669*t2062 + t1669*t1879*t2012*t315 + t1669*t2501*t315*t3177 + t3838*t6576 + t4230*t6591 + t4861*t6673 + t5232*t6722 + t5322*t6743 + t5437*t6770 + t5502*t6788 + t5577*t6812 + t5616*t6833 + t5694*t6855 + t5711*t6894 + 0.0306*(t5665*t6855 + t5645*t6894) - 1.1312*(t5645*t6855 - 1.*t5665*t6894) - 0.1305*(t1426*t1669*t2062 + t6576*t763);
  p_output1[14]=-1.*t1879*t2012*t2062 - 1.*t1573*t315 - 1.*t2062*t2501*t3177 + t3838*t6976 + t4230*t6990 + t4861*t7022 + t5232*t7033 + t5322*t7045 + t5437*t7068 + t5502*t7079 + t5577*t7108 + t5616*t7143 + t5694*t7186 + t5711*t7222 + 0.0306*(t5665*t7186 + t5645*t7222) - 1.1312*(t5645*t7186 - 1.*t5665*t7222) - 0.1305*(t1426*t315 + t6976*t763);
  p_output1[15]=t3177*t5815 + t1879*t7320 + t4230*t7329 + t3838*t7373 + t1426*t4861*t7373 + t5232*t7419 + t5322*t7473 + t5437*t7493 + t5502*t7510 + t5577*t7541 + t5616*t7564 + t5694*t7603 - 0.1305*t7373*t763 + t5711*t7642 + 0.0306*(t5665*t7603 + t5645*t7642) - 1.1312*(t5645*t7603 - 1.*t5665*t7642);
  p_output1[16]=t1879*t3295 + t3177*t7767 + t4230*t7797 + t3838*t7836 + t1426*t4861*t7836 - 0.1305*t763*t7836 + t5232*t7960 + t5322*t7983 + t5437*t8012 + t5502*t8048 + t5577*t8134 + t5616*t8153 + t5694*t8168 + t5711*t8181 + 0.0306*(t5665*t8168 + t5645*t8181) - 1.1312*(t5645*t8168 - 1.*t5665*t8181);
  p_output1[17]=-1.*t1879*t2501*t315 + t2012*t315*t3177 + t8337 + t8367 + t8370 + t8373 + t8410 + t8456 + t8509 + t8566 + t8651 + t8714 + t8723 + t8745 + t8763 + t8862;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0.135*t2643*t5815 - 0.135*t1791*t5842 + t3838*t5880 + t1426*t4861*t5880 - 0.1305*t5880*t763 + t4230*t8907 + t5232*t9010 + t5322*t9063 + t5437*t9083 + t5502*t9124 + t5577*t9203 + t5616*t9258 + t5694*t9279 + t5711*t9368 + 0.0306*(t5665*t9279 + t5645*t9368) - 1.1312*(t5645*t9279 - 1.*t5665*t9368);
  p_output1[40]=t10001*t5502 + t10026*t5577 + t10041*t5616 + 0.0306*(t10108*t5645 + t10086*t5665) - 1.1312*(t10086*t5645 - 1.*t10108*t5665) + t10086*t5694 + t10108*t5711 + 0.135*t2643*t7767 - 0.135*t1791*t9680 + t4230*t9698 + t3838*t9740 + t1426*t4861*t9740 - 0.1305*t763*t9740 + t5232*t9848 + t5322*t9929 + t5437*t9965;
  p_output1[41]=-0.135*t1791*t2501*t315 + 0.135*t2012*t2643*t315 + t8337 + t8367 + t8370 + t8373 + t8410 + t8456 + t8509 + t8566 + t8651 + t8714 + t8723 + t8745 + t8763 + t8862;
  p_output1[42]=t10205*t2229*t315 + t10298*t5437 + t10308*t5502 + t10361*t5577 + t10381*t5616 + 0.0306*(t10414*t5645 + t10406*t5665) - 1.1312*(t10406*t5645 - 1.*t10414*t5665) + t10406*t5694 + t10414*t5711 + t10242*t5862 + t4861*t5897 + t4055*t5232*t5897 - 1.*t4138*t5322*t5897 - 0.1305*(-1.*t1426*t5862 - 1.*t2229*t315*t763);
  p_output1[43]=t10242*t10476 + t10205*t1669*t315 + t10491*t4861 - 0.1305*(-1.*t10476*t1426 + t4880) + t10491*t4055*t5232 - 1.*t10491*t4138*t5322 + t10533*t5437 + t10550*t5502 + t10587*t5577 + t10614*t5616 + 0.0306*(t10650*t5645 + t10629*t5665) - 1.1312*(t10629*t5645 - 1.*t10650*t5665) + t10629*t5694 + t10650*t5711;
  p_output1[44]=t10242*t10697 - 1.*t10205*t2062 + t10715*t4861 + t10715*t4055*t5232 - 1.*t10715*t4138*t5322 + t10764*t5437 + t10795*t5502 + t10813*t5577 + t10820*t5616 + 0.0306*(t10853*t5645 + t10831*t5665) - 1.1312*(t10831*t5645 - 1.*t10853*t5665) + t10831*t5694 + t10853*t5711 - 0.1305*(-1.*t10697*t1426 + t2062*t763);
  p_output1[45]=t10949*t5322 + t10978*t5437 + t10963*t5502 + t11007*t5577 + t10986*t5616 - 1.1312*(t11031*t5645 - 1.*t11018*t5665) + 0.0306*(t11018*t5645 + t11031*t5665) + t11031*t5694 + t11018*t5711 + t10915*t5880 + t10920*t5909 + t5232*t5949;
  p_output1[46]=t10920*t11074 + t11090*t5232 + t11084*t5322 + t11100*t5437 + t11094*t5502 + t11122*t5577 + t11109*t5616 - 1.1312*(t11132*t5645 - 1.*t11128*t5665) + 0.0306*(t11128*t5645 + t11132*t5665) + t11132*t5694 + t11128*t5711 + t10915*t9740;
  p_output1[47]=t10920*t11168 + t11187*t5232 + t11180*t5322 + t11203*t5437 + t11197*t5502 + t11224*t5577 + t11214*t5616 - 1.1312*(t11238*t5645 - 1.*t11229*t5665) + 0.0306*(t11229*t5645 + t11238*t5665) + t11238*t5694 + t11229*t5711 + t10915*t8365;
  p_output1[48]=t11277*t5437 + t11292*t5577 + t11289*t5616 - 1.1312*(t11302*t5645 - 1.*t11297*t5665) + 0.0306*(t11297*t5645 + t11302*t5665) + t11302*t5694 + t11297*t5711 + t11260*t5924 + t11265*t5949 + t5502*t5968;
  p_output1[49]=t11090*t11265 + t11260*t11340 + t11348*t5437 + t11345*t5502 + t11365*t5577 + t11356*t5616 - 1.1312*(t11381*t5645 - 1.*t11376*t5665) + 0.0306*(t11376*t5645 + t11381*t5665) + t11381*t5694 + t11376*t5711;
  p_output1[50]=t11187*t11265 + t11260*t11401 + t11409*t5437 + t11406*t5502 + t11423*t5577 + t11414*t5616 - 1.1312*(t11433*t5645 - 1.*t11428*t5665) + 0.0306*(t11428*t5645 + t11433*t5665) + t11433*t5694 + t11428*t5711;
  p_output1[51]=t11458*t5616 - 1.1312*(t11466*t5645 - 1.*t11462*t5665) + 0.0306*(t11462*t5645 + t11466*t5665) + t11466*t5694 + t11462*t5711 + t11451*t5968 + t11455*t6005 + t5577*t6108;
  p_output1[52]=t11345*t11451 + t11455*t11482 + t11488*t5577 + t11485*t5616 - 1.1312*(t11496*t5645 - 1.*t11492*t5665) + 0.0306*(t11492*t5645 + t11496*t5665) + t11496*t5694 + t11492*t5711;
  p_output1[53]=t11406*t11451 + t11455*t11510 + t11516*t5577 + t11513*t5616 - 1.1312*(t11524*t5645 - 1.*t11520*t5665) + 0.0306*(t11520*t5645 + t11524*t5665) + t11524*t5694 + t11520*t5711;
  p_output1[54]=-1.1312*(t11546 + t11544*t5645) + t11544*t5694 + t11537*t6085 + t11540*t6108 + t5711*t6161 + 0.0306*(t11544*t5665 + t6257);
  p_output1[55]=t11488*t11540 + t11537*t11556 - 1.1312*(t11565 + t11563*t5645) + 0.0306*(t11569 + t11563*t5665) + t11563*t5694 + t11560*t5711;
  p_output1[56]=t11516*t11540 + t11537*t11576 - 1.1312*(t11585 + t11583*t5645) + 0.0306*(t11589 + t11583*t5665) + t11583*t5694 + t11580*t5711;
  p_output1[57]=t11595*t6161 + t11599*t6204 - 1.1312*(t11546 - 1.*t5645*t6204) + 0.0306*t6268;
  p_output1[58]=t11560*t11595 + t11599*t11609 - 1.1312*(t11565 - 1.*t11609*t5645) + 0.0306*(t11569 - 1.*t11609*t5665);
  p_output1[59]=t11580*t11595 + t11599*t11621 - 1.1312*(t11585 - 1.*t11621*t5645) + 0.0306*(t11589 - 1.*t11621*t5665);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "J_RightToeBottom_mex.hh"

namespace SymExpression
{

void J_RightToeBottom_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
