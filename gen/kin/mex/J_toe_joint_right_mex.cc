/*
 * Automatically Generated from Mathematica.
 * Wed 15 Nov 2017 08:32:55 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t1095;
  double t2320;
  double t1911;
  double t1969;
  double t2412;
  double t108;
  double t172;
  double t440;
  double t627;
  double t1468;
  double t2293;
  double t2432;
  double t2455;
  double t2501;
  double t2922;
  double t2936;
  double t3020;
  double t93;
  double t3402;
  double t3460;
  double t3462;
  double t3628;
  double t3632;
  double t3842;
  double t4006;
  double t4375;
  double t4382;
  double t4422;
  double t5965;
  double t5971;
  double t5979;
  double t6381;
  double t6519;
  double t6529;
  double t7024;
  double t7137;
  double t7140;
  double t7256;
  double t9071;
  double t9075;
  double t9091;
  double t9103;
  double t9131;
  double t9168;
  double t9179;
  double t9231;
  double t9261;
  double t9263;
  double t9289;
  double t9291;
  double t9302;
  double t9409;
  double t9416;
  double t9418;
  double t9428;
  double t9436;
  double t9440;
  double t9443;
  double t9472;
  double t9484;
  double t9486;
  double t9492;
  double t9495;
  double t9500;
  double t9509;
  double t9515;
  double t9520;
  double t9523;
  double t9542;
  double t9556;
  double t9558;
  double t510;
  double t798;
  double t802;
  double t1682;
  double t1772;
  double t2512;
  double t2693;
  double t2781;
  double t2884;
  double t3354;
  double t3400;
  double t3401;
  double t9606;
  double t9607;
  double t9610;
  double t9616;
  double t9624;
  double t9629;
  double t3890;
  double t4012;
  double t4089;
  double t9633;
  double t9638;
  double t9639;
  double t5315;
  double t5683;
  double t5779;
  double t6832;
  double t7028;
  double t7030;
  double t9651;
  double t9659;
  double t9661;
  double t9697;
  double t9704;
  double t9706;
  double t9031;
  double t9048;
  double t9068;
  double t9176;
  double t9200;
  double t9208;
  double t9713;
  double t9715;
  double t9719;
  double t9730;
  double t9736;
  double t9741;
  double t9266;
  double t9283;
  double t9288;
  double t9422;
  double t9433;
  double t9435;
  double t9749;
  double t9751;
  double t9755;
  double t9761;
  double t9764;
  double t9766;
  double t9454;
  double t9466;
  double t9467;
  double t9506;
  double t9512;
  double t9514;
  double t9769;
  double t9771;
  double t9774;
  double t9776;
  double t9783;
  double t9785;
  double t9528;
  double t9529;
  double t9537;
  double t9790;
  double t9792;
  double t9798;
  double t9804;
  double t9805;
  double t9808;
  double t9842;
  double t9846;
  double t9848;
  double t9865;
  double t9868;
  double t9870;
  double t9886;
  double t9888;
  double t9889;
  double t9892;
  double t9895;
  double t9897;
  double t9900;
  double t9902;
  double t9904;
  double t9911;
  double t9912;
  double t9913;
  double t9918;
  double t9919;
  double t9921;
  double t9924;
  double t9926;
  double t9928;
  double t9931;
  double t9932;
  double t9935;
  double t9937;
  double t9938;
  double t9939;
  double t9943;
  double t9944;
  double t9947;
  double t9971;
  double t9974;
  double t9975;
  double t9977;
  double t9978;
  double t9979;
  double t9985;
  double t9987;
  double t9988;
  double t9994;
  double t9995;
  double t9997;
  double t10000;
  double t10001;
  double t10004;
  double t10006;
  double t10007;
  double t10008;
  double t10010;
  double t10011;
  double t10012;
  double t10014;
  double t10015;
  double t10017;
  double t10021;
  double t10023;
  double t10024;
  double t10028;
  double t10029;
  double t10030;
  double t10033;
  double t10034;
  double t10035;
  double t10050;
  double t10051;
  double t10052;
  double t10054;
  double t10055;
  double t10056;
  double t10063;
  double t10065;
  double t10067;
  double t10071;
  double t10072;
  double t10074;
  double t10076;
  double t10078;
  double t10079;
  double t10081;
  double t10082;
  double t10083;
  double t10087;
  double t10088;
  double t10091;
  double t10094;
  double t10095;
  double t10096;
  double t10099;
  double t10100;
  double t10101;
  double t10103;
  double t10104;
  double t10105;
  double t10107;
  double t10108;
  double t10109;
  double t10122;
  double t10123;
  double t10124;
  double t10131;
  double t10132;
  double t10126;
  double t10128;
  double t10129;
  double t10136;
  double t10137;
  double t10138;
  double t10140;
  double t10141;
  double t10142;
  double t10144;
  double t10145;
  double t10146;
  double t10148;
  double t10149;
  double t10150;
  double t10152;
  double t10153;
  double t10154;
  double t10156;
  double t10157;
  double t10158;
  double t10160;
  double t10161;
  double t10162;
  double t10164;
  double t10165;
  double t10166;
  double t10177;
  double t10178;
  double t10179;
  double t10185;
  double t10186;
  double t10187;
  double t10182;
  double t10183;
  double t10191;
  double t10192;
  double t10193;
  double t10195;
  double t10196;
  double t10197;
  double t10199;
  double t10200;
  double t10201;
  double t10203;
  double t10204;
  double t10205;
  double t10207;
  double t10208;
  double t10209;
  double t10211;
  double t10212;
  double t10213;
  double t10215;
  double t10216;
  double t10217;
  double t10219;
  double t10220;
  double t10221;
  double t10238;
  double t10239;
  double t10240;
  double t10234;
  double t10235;
  double t10236;
  double t10244;
  double t10245;
  double t10246;
  double t10248;
  double t10249;
  double t10250;
  double t10252;
  double t10253;
  double t10254;
  double t10256;
  double t10257;
  double t10258;
  double t10260;
  double t10261;
  double t10262;
  double t10264;
  double t10265;
  double t10266;
  double t10268;
  double t10269;
  double t10270;
  double t10272;
  double t10273;
  double t10274;
  double t10287;
  double t10288;
  double t10293;
  double t10294;
  double t10295;
  double t10297;
  double t10298;
  double t10299;
  double t10301;
  double t10302;
  double t10303;
  double t10305;
  double t10306;
  double t10307;
  double t10309;
  double t10310;
  double t10311;
  double t10313;
  double t10314;
  double t10315;
  double t10317;
  double t10318;
  double t10319;
  double t10321;
  double t10322;
  double t10323;
  double t10335;
  double t10336;
  double t10337;
  double t10342;
  double t10343;
  double t10339;
  double t10340;
  double t10347;
  double t10348;
  double t10349;
  double t10351;
  double t10352;
  double t10353;
  double t10355;
  double t10356;
  double t10357;
  double t10359;
  double t10360;
  double t10361;
  double t10363;
  double t10364;
  double t10365;
  double t10367;
  double t10368;
  double t10369;
  double t10371;
  double t10372;
  double t10373;
  double t10375;
  double t10376;
  double t10377;
  double t10237;
  double t10241;
  double t10242;
  double t10243;
  double t10247;
  double t10251;
  double t10255;
  double t10259;
  double t10263;
  double t10267;
  double t10271;
  double t10275;
  double t10276;
  double t10277;
  double t10278;
  double t10279;
  double t10280;
  double t10281;
  double t10282;
  double t10283;
  double t9668;
  double t9669;
  double t9674;
  double t10405;
  double t10406;
  double t10407;
  double t10409;
  double t10410;
  double t10411;
  double t10413;
  double t10414;
  double t10415;
  double t10417;
  double t10418;
  double t10419;
  double t10421;
  double t10422;
  double t10423;
  double t10425;
  double t10426;
  double t10427;
  double t10391;
  double t10392;
  double t10393;
  double t10395;
  double t10396;
  double t10439;
  double t10440;
  double t10441;
  double t10443;
  double t10444;
  double t10445;
  double t10452;
  double t10453;
  double t10454;
  double t10456;
  double t10457;
  double t10458;
  double t10460;
  double t10461;
  double t10462;
  double t10464;
  double t10465;
  double t10466;
  double t10468;
  double t10469;
  double t10470;
  double t10472;
  double t10473;
  double t10474;
  double t10486;
  double t10487;
  double t10488;
  double t10490;
  double t10491;
  double t10492;
  double t10500;
  double t10501;
  double t10502;
  double t10504;
  double t10505;
  double t10506;
  double t10508;
  double t10509;
  double t10510;
  double t10512;
  double t10513;
  double t10514;
  double t10516;
  double t10517;
  double t10518;
  double t10520;
  double t10521;
  double t10522;
  double t10540;
  double t10541;
  double t10542;
  double t10545;
  double t10546;
  double t10548;
  double t10549;
  double t10550;
  double t10552;
  double t10553;
  double t10554;
  double t10556;
  double t10557;
  double t10558;
  double t10560;
  double t10561;
  double t10562;
  double t10564;
  double t10565;
  double t10566;
  double t10533;
  double t10534;
  double t10536;
  double t10537;
  double t10538;
  double t10578;
  double t10579;
  double t10580;
  double t10582;
  double t10583;
  double t10584;
  double t10586;
  double t10587;
  double t10588;
  double t10590;
  double t10591;
  double t10592;
  double t10594;
  double t10595;
  double t10596;
  double t10598;
  double t10599;
  double t10600;
  double t10602;
  double t10603;
  double t10604;
  double t10606;
  double t10607;
  double t10608;
  double t10610;
  double t10611;
  double t10612;
  double t10624;
  double t10625;
  double t10626;
  double t10628;
  double t10629;
  double t10630;
  double t10632;
  double t10633;
  double t10634;
  double t10636;
  double t10637;
  double t10638;
  double t10640;
  double t10641;
  double t10642;
  double t10644;
  double t10645;
  double t10646;
  double t10648;
  double t10649;
  double t10650;
  double t10652;
  double t10653;
  double t10654;
  double t10656;
  double t10657;
  double t10658;
  double t10677;
  double t10678;
  double t10680;
  double t10681;
  double t10682;
  double t10684;
  double t10685;
  double t10687;
  double t10688;
  double t10689;
  double t10691;
  double t10692;
  double t10693;
  double t10669;
  double t10670;
  double t10671;
  double t10673;
  double t10674;
  double t10704;
  double t10705;
  double t10706;
  double t10709;
  double t10710;
  double t10712;
  double t10713;
  double t10715;
  double t10716;
  double t10717;
  double t10719;
  double t10720;
  double t10721;
  double t10723;
  double t10724;
  double t10725;
  double t10727;
  double t10728;
  double t10729;
  double t10740;
  double t10741;
  double t10742;
  double t10745;
  double t10746;
  double t10748;
  double t10749;
  double t10751;
  double t10752;
  double t10753;
  double t10755;
  double t10756;
  double t10757;
  double t10759;
  double t10760;
  double t10761;
  double t10763;
  double t10764;
  double t10765;
  double t10783;
  double t10784;
  double t10787;
  double t10788;
  double t10790;
  double t10791;
  double t10792;
  double t10776;
  double t10777;
  double t10779;
  double t10780;
  double t10781;
  double t10804;
  double t10805;
  double t10806;
  double t10808;
  double t10809;
  double t10811;
  double t10812;
  double t10814;
  double t10815;
  double t10816;
  double t10818;
  double t10819;
  double t10820;
  double t10832;
  double t10833;
  double t10834;
  double t10836;
  double t10837;
  double t10839;
  double t10840;
  double t10842;
  double t10843;
  double t10844;
  double t10846;
  double t10847;
  double t10848;
  double t10867;
  double t10868;
  double t9826;
  double t10859;
  double t10860;
  double t10861;
  double t10863;
  double t10864;
  double t10878;
  double t10879;
  double t10880;
  double t10883;
  double t10884;
  double t10886;
  double t10887;
  double t10898;
  double t10899;
  double t10900;
  double t10903;
  double t10904;
  double t10906;
  double t10907;
  double t10870;
  double t9828;
  double t9829;
  double t10918;
  double t10919;
  double t10921;
  double t10922;
  double t10923;
  double t10889;
  double t10931;
  double t10932;
  double t10933;
  double t10893;
  double t10909;
  double t10943;
  double t10944;
  double t10945;
  double t10913;
  t1095 = Sin(var1[3]);
  t2320 = Cos(var1[3]);
  t1911 = Cos(var1[5]);
  t1969 = Sin(var1[4]);
  t2412 = Sin(var1[5]);
  t108 = Cos(var1[14]);
  t172 = -1.*t108;
  t440 = 1. + t172;
  t627 = Sin(var1[14]);
  t1468 = Sin(var1[13]);
  t2293 = -1.*t1911*t1095*t1969;
  t2432 = t2320*t2412;
  t2455 = t2293 + t2432;
  t2501 = Cos(var1[13]);
  t2922 = -1.*t2320*t1911;
  t2936 = -1.*t1095*t1969*t2412;
  t3020 = t2922 + t2936;
  t93 = Cos(var1[4]);
  t3402 = t1468*t2455;
  t3460 = t2501*t3020;
  t3462 = t3402 + t3460;
  t3628 = Cos(var1[15]);
  t3632 = -1.*t3628;
  t3842 = 1. + t3632;
  t4006 = Sin(var1[15]);
  t4375 = t2501*t2455;
  t4382 = -1.*t1468*t3020;
  t4422 = t4375 + t4382;
  t5965 = -1.*t108*t93*t1095;
  t5971 = t627*t3462;
  t5979 = t5965 + t5971;
  t6381 = Cos(var1[16]);
  t6519 = -1.*t6381;
  t6529 = 1. + t6519;
  t7024 = Sin(var1[16]);
  t7137 = t4006*t4422;
  t7140 = t3628*t5979;
  t7256 = t7137 + t7140;
  t9071 = t3628*t4422;
  t9075 = -1.*t4006*t5979;
  t9091 = t9071 + t9075;
  t9103 = Cos(var1[17]);
  t9131 = -1.*t9103;
  t9168 = 1. + t9131;
  t9179 = Sin(var1[17]);
  t9231 = -1.*t7024*t7256;
  t9261 = t6381*t9091;
  t9263 = t9231 + t9261;
  t9289 = t6381*t7256;
  t9291 = t7024*t9091;
  t9302 = t9289 + t9291;
  t9409 = Cos(var1[18]);
  t9416 = -1.*t9409;
  t9418 = 1. + t9416;
  t9428 = Sin(var1[18]);
  t9436 = t9179*t9263;
  t9440 = t9103*t9302;
  t9443 = t9436 + t9440;
  t9472 = t9103*t9263;
  t9484 = -1.*t9179*t9302;
  t9486 = t9472 + t9484;
  t9492 = Cos(var1[19]);
  t9495 = -1.*t9492;
  t9500 = 1. + t9495;
  t9509 = Sin(var1[19]);
  t9515 = -1.*t9428*t9443;
  t9520 = t9409*t9486;
  t9523 = t9515 + t9520;
  t9542 = t9409*t9443;
  t9556 = t9428*t9486;
  t9558 = t9542 + t9556;
  t510 = -0.049*t440;
  t798 = -0.135*t627;
  t802 = 0. + t510 + t798;
  t1682 = 0.135*t1468;
  t1772 = 0. + t1682;
  t2512 = -1.*t2501;
  t2693 = 1. + t2512;
  t2781 = -0.135*t2693;
  t2884 = 0. + t2781;
  t3354 = -0.135*t440;
  t3400 = 0.049*t627;
  t3401 = 0. + t3354 + t3400;
  t9606 = t2320*t1911*t1969;
  t9607 = t1095*t2412;
  t9610 = t9606 + t9607;
  t9616 = -1.*t1911*t1095;
  t9624 = t2320*t1969*t2412;
  t9629 = t9616 + t9624;
  t3890 = -0.09*t3842;
  t4012 = 0.049*t4006;
  t4089 = 0. + t3890 + t4012;
  t9633 = t1468*t9610;
  t9638 = t2501*t9629;
  t9639 = t9633 + t9638;
  t5315 = -0.049*t3842;
  t5683 = -0.09*t4006;
  t5779 = 0. + t5315 + t5683;
  t6832 = -0.049*t6529;
  t7028 = -0.21*t7024;
  t7030 = 0. + t6832 + t7028;
  t9651 = t2501*t9610;
  t9659 = -1.*t1468*t9629;
  t9661 = t9651 + t9659;
  t9697 = t108*t2320*t93;
  t9704 = t627*t9639;
  t9706 = t9697 + t9704;
  t9031 = -0.21*t6529;
  t9048 = 0.049*t7024;
  t9068 = 0. + t9031 + t9048;
  t9176 = -0.2707*t9168;
  t9200 = 0.0016*t9179;
  t9208 = 0. + t9176 + t9200;
  t9713 = t4006*t9661;
  t9715 = t3628*t9706;
  t9719 = t9713 + t9715;
  t9730 = t3628*t9661;
  t9736 = -1.*t4006*t9706;
  t9741 = t9730 + t9736;
  t9266 = -0.0016*t9168;
  t9283 = -0.2707*t9179;
  t9288 = 0. + t9266 + t9283;
  t9422 = 0.0184*t9418;
  t9433 = -0.7055*t9428;
  t9435 = 0. + t9422 + t9433;
  t9749 = -1.*t7024*t9719;
  t9751 = t6381*t9741;
  t9755 = t9749 + t9751;
  t9761 = t6381*t9719;
  t9764 = t7024*t9741;
  t9766 = t9761 + t9764;
  t9454 = -0.7055*t9418;
  t9466 = -0.0184*t9428;
  t9467 = 0. + t9454 + t9466;
  t9506 = -1.1135*t9500;
  t9512 = 0.0216*t9509;
  t9514 = 0. + t9506 + t9512;
  t9769 = t9179*t9755;
  t9771 = t9103*t9766;
  t9774 = t9769 + t9771;
  t9776 = t9103*t9755;
  t9783 = -1.*t9179*t9766;
  t9785 = t9776 + t9783;
  t9528 = -0.0216*t9500;
  t9529 = -1.1135*t9509;
  t9537 = 0. + t9528 + t9529;
  t9790 = -1.*t9428*t9774;
  t9792 = t9409*t9785;
  t9798 = t9790 + t9792;
  t9804 = t9409*t9774;
  t9805 = t9428*t9785;
  t9808 = t9804 + t9805;
  t9842 = t2320*t93*t1911*t1468;
  t9846 = t2501*t2320*t93*t2412;
  t9848 = t9842 + t9846;
  t9865 = t2501*t2320*t93*t1911;
  t9868 = -1.*t2320*t93*t1468*t2412;
  t9870 = t9865 + t9868;
  t9886 = -1.*t108*t2320*t1969;
  t9888 = t627*t9848;
  t9889 = t9886 + t9888;
  t9892 = t4006*t9870;
  t9895 = t3628*t9889;
  t9897 = t9892 + t9895;
  t9900 = t3628*t9870;
  t9902 = -1.*t4006*t9889;
  t9904 = t9900 + t9902;
  t9911 = -1.*t7024*t9897;
  t9912 = t6381*t9904;
  t9913 = t9911 + t9912;
  t9918 = t6381*t9897;
  t9919 = t7024*t9904;
  t9921 = t9918 + t9919;
  t9924 = t9179*t9913;
  t9926 = t9103*t9921;
  t9928 = t9924 + t9926;
  t9931 = t9103*t9913;
  t9932 = -1.*t9179*t9921;
  t9935 = t9931 + t9932;
  t9937 = -1.*t9428*t9928;
  t9938 = t9409*t9935;
  t9939 = t9937 + t9938;
  t9943 = t9409*t9928;
  t9944 = t9428*t9935;
  t9947 = t9943 + t9944;
  t9971 = t93*t1911*t1468*t1095;
  t9974 = t2501*t93*t1095*t2412;
  t9975 = t9971 + t9974;
  t9977 = t2501*t93*t1911*t1095;
  t9978 = -1.*t93*t1468*t1095*t2412;
  t9979 = t9977 + t9978;
  t9985 = -1.*t108*t1095*t1969;
  t9987 = t627*t9975;
  t9988 = t9985 + t9987;
  t9994 = t4006*t9979;
  t9995 = t3628*t9988;
  t9997 = t9994 + t9995;
  t10000 = t3628*t9979;
  t10001 = -1.*t4006*t9988;
  t10004 = t10000 + t10001;
  t10006 = -1.*t7024*t9997;
  t10007 = t6381*t10004;
  t10008 = t10006 + t10007;
  t10010 = t6381*t9997;
  t10011 = t7024*t10004;
  t10012 = t10010 + t10011;
  t10014 = t9179*t10008;
  t10015 = t9103*t10012;
  t10017 = t10014 + t10015;
  t10021 = t9103*t10008;
  t10023 = -1.*t9179*t10012;
  t10024 = t10021 + t10023;
  t10028 = -1.*t9428*t10017;
  t10029 = t9409*t10024;
  t10030 = t10028 + t10029;
  t10033 = t9409*t10017;
  t10034 = t9428*t10024;
  t10035 = t10033 + t10034;
  t10050 = -1.*t1911*t1468*t1969;
  t10051 = -1.*t2501*t1969*t2412;
  t10052 = t10050 + t10051;
  t10054 = -1.*t2501*t1911*t1969;
  t10055 = t1468*t1969*t2412;
  t10056 = t10054 + t10055;
  t10063 = -1.*t108*t93;
  t10065 = t627*t10052;
  t10067 = t10063 + t10065;
  t10071 = t4006*t10056;
  t10072 = t3628*t10067;
  t10074 = t10071 + t10072;
  t10076 = t3628*t10056;
  t10078 = -1.*t4006*t10067;
  t10079 = t10076 + t10078;
  t10081 = -1.*t7024*t10074;
  t10082 = t6381*t10079;
  t10083 = t10081 + t10082;
  t10087 = t6381*t10074;
  t10088 = t7024*t10079;
  t10091 = t10087 + t10088;
  t10094 = t9179*t10083;
  t10095 = t9103*t10091;
  t10096 = t10094 + t10095;
  t10099 = t9103*t10083;
  t10100 = -1.*t9179*t10091;
  t10101 = t10099 + t10100;
  t10103 = -1.*t9428*t10096;
  t10104 = t9409*t10101;
  t10105 = t10103 + t10104;
  t10107 = t9409*t10096;
  t10108 = t9428*t10101;
  t10109 = t10107 + t10108;
  t10122 = t1911*t1095;
  t10123 = -1.*t2320*t1969*t2412;
  t10124 = t10122 + t10123;
  t10131 = t1468*t10124;
  t10132 = t9651 + t10131;
  t10126 = -1.*t1468*t9610;
  t10128 = t2501*t10124;
  t10129 = t10126 + t10128;
  t10136 = t4006*t10129;
  t10137 = t3628*t627*t10132;
  t10138 = t10136 + t10137;
  t10140 = t3628*t10129;
  t10141 = -1.*t627*t4006*t10132;
  t10142 = t10140 + t10141;
  t10144 = -1.*t7024*t10138;
  t10145 = t6381*t10142;
  t10146 = t10144 + t10145;
  t10148 = t6381*t10138;
  t10149 = t7024*t10142;
  t10150 = t10148 + t10149;
  t10152 = t9179*t10146;
  t10153 = t9103*t10150;
  t10154 = t10152 + t10153;
  t10156 = t9103*t10146;
  t10157 = -1.*t9179*t10150;
  t10158 = t10156 + t10157;
  t10160 = -1.*t9428*t10154;
  t10161 = t9409*t10158;
  t10162 = t10160 + t10161;
  t10164 = t9409*t10154;
  t10165 = t9428*t10158;
  t10166 = t10164 + t10165;
  t10177 = t1911*t1095*t1969;
  t10178 = -1.*t2320*t2412;
  t10179 = t10177 + t10178;
  t10185 = t2501*t10179;
  t10186 = t1468*t3020;
  t10187 = t10185 + t10186;
  t10182 = -1.*t1468*t10179;
  t10183 = t10182 + t3460;
  t10191 = t4006*t10183;
  t10192 = t3628*t627*t10187;
  t10193 = t10191 + t10192;
  t10195 = t3628*t10183;
  t10196 = -1.*t627*t4006*t10187;
  t10197 = t10195 + t10196;
  t10199 = -1.*t7024*t10193;
  t10200 = t6381*t10197;
  t10201 = t10199 + t10200;
  t10203 = t6381*t10193;
  t10204 = t7024*t10197;
  t10205 = t10203 + t10204;
  t10207 = t9179*t10201;
  t10208 = t9103*t10205;
  t10209 = t10207 + t10208;
  t10211 = t9103*t10201;
  t10212 = -1.*t9179*t10205;
  t10213 = t10211 + t10212;
  t10215 = -1.*t9428*t10209;
  t10216 = t9409*t10213;
  t10217 = t10215 + t10216;
  t10219 = t9409*t10209;
  t10220 = t9428*t10213;
  t10221 = t10219 + t10220;
  t10238 = t2501*t93*t1911;
  t10239 = -1.*t93*t1468*t2412;
  t10240 = t10238 + t10239;
  t10234 = -1.*t93*t1911*t1468;
  t10235 = -1.*t2501*t93*t2412;
  t10236 = t10234 + t10235;
  t10244 = t4006*t10236;
  t10245 = t3628*t627*t10240;
  t10246 = t10244 + t10245;
  t10248 = t3628*t10236;
  t10249 = -1.*t627*t4006*t10240;
  t10250 = t10248 + t10249;
  t10252 = -1.*t7024*t10246;
  t10253 = t6381*t10250;
  t10254 = t10252 + t10253;
  t10256 = t6381*t10246;
  t10257 = t7024*t10250;
  t10258 = t10256 + t10257;
  t10260 = t9179*t10254;
  t10261 = t9103*t10258;
  t10262 = t10260 + t10261;
  t10264 = t9103*t10254;
  t10265 = -1.*t9179*t10258;
  t10266 = t10264 + t10265;
  t10268 = -1.*t9428*t10262;
  t10269 = t9409*t10266;
  t10270 = t10268 + t10269;
  t10272 = t9409*t10262;
  t10273 = t9428*t10266;
  t10274 = t10272 + t10273;
  t10287 = -1.*t2501*t9629;
  t10288 = t10126 + t10287;
  t10293 = t4006*t10288;
  t10294 = t3628*t627*t9661;
  t10295 = t10293 + t10294;
  t10297 = t3628*t10288;
  t10298 = -1.*t627*t4006*t9661;
  t10299 = t10297 + t10298;
  t10301 = -1.*t7024*t10295;
  t10302 = t6381*t10299;
  t10303 = t10301 + t10302;
  t10305 = t6381*t10295;
  t10306 = t7024*t10299;
  t10307 = t10305 + t10306;
  t10309 = t9179*t10303;
  t10310 = t9103*t10307;
  t10311 = t10309 + t10310;
  t10313 = t9103*t10303;
  t10314 = -1.*t9179*t10307;
  t10315 = t10313 + t10314;
  t10317 = -1.*t9428*t10311;
  t10318 = t9409*t10315;
  t10319 = t10317 + t10318;
  t10321 = t9409*t10311;
  t10322 = t9428*t10315;
  t10323 = t10321 + t10322;
  t10335 = t2320*t1911;
  t10336 = t1095*t1969*t2412;
  t10337 = t10335 + t10336;
  t10342 = -1.*t1468*t10337;
  t10343 = t10185 + t10342;
  t10339 = -1.*t2501*t10337;
  t10340 = t10182 + t10339;
  t10347 = t4006*t10340;
  t10348 = t3628*t627*t10343;
  t10349 = t10347 + t10348;
  t10351 = t3628*t10340;
  t10352 = -1.*t627*t4006*t10343;
  t10353 = t10351 + t10352;
  t10355 = -1.*t7024*t10349;
  t10356 = t6381*t10353;
  t10357 = t10355 + t10356;
  t10359 = t6381*t10349;
  t10360 = t7024*t10353;
  t10361 = t10359 + t10360;
  t10363 = t9179*t10357;
  t10364 = t9103*t10361;
  t10365 = t10363 + t10364;
  t10367 = t9103*t10357;
  t10368 = -1.*t9179*t10361;
  t10369 = t10367 + t10368;
  t10371 = -1.*t9428*t10365;
  t10372 = t9409*t10369;
  t10373 = t10371 + t10372;
  t10375 = t9409*t10365;
  t10376 = t9428*t10369;
  t10377 = t10375 + t10376;
  t10237 = t4089*t10236;
  t10241 = -0.1305*t108*t10240;
  t10242 = t3401*t10240;
  t10243 = t627*t5779*t10240;
  t10247 = t7030*t10246;
  t10251 = t9068*t10250;
  t10255 = t9208*t10254;
  t10259 = t9288*t10258;
  t10263 = t9435*t10262;
  t10267 = t9467*t10266;
  t10271 = t9514*t10270;
  t10275 = t9537*t10274;
  t10276 = t9509*t10270;
  t10277 = t9492*t10274;
  t10278 = t10276 + t10277;
  t10279 = -0.0216*t10278;
  t10280 = t9492*t10270;
  t10281 = -1.*t9509*t10274;
  t10282 = t10280 + t10281;
  t10283 = -1.1135*t10282;
  t9668 = -1.*t2320*t93*t627;
  t9669 = t108*t9639;
  t9674 = t9668 + t9669;
  t10405 = -1.*t6381*t4006*t9674;
  t10406 = -1.*t3628*t7024*t9674;
  t10407 = t10405 + t10406;
  t10409 = t3628*t6381*t9674;
  t10410 = -1.*t4006*t7024*t9674;
  t10411 = t10409 + t10410;
  t10413 = t9179*t10407;
  t10414 = t9103*t10411;
  t10415 = t10413 + t10414;
  t10417 = t9103*t10407;
  t10418 = -1.*t9179*t10411;
  t10419 = t10417 + t10418;
  t10421 = -1.*t9428*t10415;
  t10422 = t9409*t10419;
  t10423 = t10421 + t10422;
  t10425 = t9409*t10415;
  t10426 = t9428*t10419;
  t10427 = t10425 + t10426;
  t10391 = -0.135*t108;
  t10392 = -0.049*t627;
  t10393 = t10391 + t10392;
  t10395 = 0.049*t108;
  t10396 = t10395 + t798;
  t10439 = t1468*t10179;
  t10440 = t2501*t10337;
  t10441 = t10439 + t10440;
  t10443 = -1.*t93*t627*t1095;
  t10444 = t108*t10441;
  t10445 = t10443 + t10444;
  t10452 = -1.*t6381*t4006*t10445;
  t10453 = -1.*t3628*t7024*t10445;
  t10454 = t10452 + t10453;
  t10456 = t3628*t6381*t10445;
  t10457 = -1.*t4006*t7024*t10445;
  t10458 = t10456 + t10457;
  t10460 = t9179*t10454;
  t10461 = t9103*t10458;
  t10462 = t10460 + t10461;
  t10464 = t9103*t10454;
  t10465 = -1.*t9179*t10458;
  t10466 = t10464 + t10465;
  t10468 = -1.*t9428*t10462;
  t10469 = t9409*t10466;
  t10470 = t10468 + t10469;
  t10472 = t9409*t10462;
  t10473 = t9428*t10466;
  t10474 = t10472 + t10473;
  t10486 = t93*t1911*t1468;
  t10487 = t2501*t93*t2412;
  t10488 = t10486 + t10487;
  t10490 = t627*t1969;
  t10491 = t108*t10488;
  t10492 = t10490 + t10491;
  t10500 = -1.*t6381*t4006*t10492;
  t10501 = -1.*t3628*t7024*t10492;
  t10502 = t10500 + t10501;
  t10504 = t3628*t6381*t10492;
  t10505 = -1.*t4006*t7024*t10492;
  t10506 = t10504 + t10505;
  t10508 = t9179*t10502;
  t10509 = t9103*t10506;
  t10510 = t10508 + t10509;
  t10512 = t9103*t10502;
  t10513 = -1.*t9179*t10506;
  t10514 = t10512 + t10513;
  t10516 = -1.*t9428*t10510;
  t10517 = t9409*t10514;
  t10518 = t10516 + t10517;
  t10520 = t9409*t10510;
  t10521 = t9428*t10514;
  t10522 = t10520 + t10521;
  t10540 = -1.*t4006*t9661;
  t10541 = -1.*t3628*t9706;
  t10542 = t10540 + t10541;
  t10545 = t7024*t10542;
  t10546 = t10545 + t9751;
  t10548 = t6381*t10542;
  t10549 = -1.*t7024*t9741;
  t10550 = t10548 + t10549;
  t10552 = -1.*t9179*t10546;
  t10553 = t9103*t10550;
  t10554 = t10552 + t10553;
  t10556 = t9103*t10546;
  t10557 = t9179*t10550;
  t10558 = t10556 + t10557;
  t10560 = t9428*t10554;
  t10561 = t9409*t10558;
  t10562 = t10560 + t10561;
  t10564 = t9409*t10554;
  t10565 = -1.*t9428*t10558;
  t10566 = t10564 + t10565;
  t10533 = 0.049*t3628;
  t10534 = t10533 + t5683;
  t10536 = -0.09*t3628;
  t10537 = -0.049*t4006;
  t10538 = t10536 + t10537;
  t10578 = t108*t93*t1095;
  t10579 = t627*t10441;
  t10580 = t10578 + t10579;
  t10582 = -1.*t4006*t10343;
  t10583 = -1.*t3628*t10580;
  t10584 = t10582 + t10583;
  t10586 = t3628*t10343;
  t10587 = -1.*t4006*t10580;
  t10588 = t10586 + t10587;
  t10590 = t7024*t10584;
  t10591 = t6381*t10588;
  t10592 = t10590 + t10591;
  t10594 = t6381*t10584;
  t10595 = -1.*t7024*t10588;
  t10596 = t10594 + t10595;
  t10598 = -1.*t9179*t10592;
  t10599 = t9103*t10596;
  t10600 = t10598 + t10599;
  t10602 = t9103*t10592;
  t10603 = t9179*t10596;
  t10604 = t10602 + t10603;
  t10606 = t9428*t10600;
  t10607 = t9409*t10604;
  t10608 = t10606 + t10607;
  t10610 = t9409*t10600;
  t10611 = -1.*t9428*t10604;
  t10612 = t10610 + t10611;
  t10624 = -1.*t108*t1969;
  t10625 = t627*t10488;
  t10626 = t10624 + t10625;
  t10628 = -1.*t4006*t10240;
  t10629 = -1.*t3628*t10626;
  t10630 = t10628 + t10629;
  t10632 = t3628*t10240;
  t10633 = -1.*t4006*t10626;
  t10634 = t10632 + t10633;
  t10636 = t7024*t10630;
  t10637 = t6381*t10634;
  t10638 = t10636 + t10637;
  t10640 = t6381*t10630;
  t10641 = -1.*t7024*t10634;
  t10642 = t10640 + t10641;
  t10644 = -1.*t9179*t10638;
  t10645 = t9103*t10642;
  t10646 = t10644 + t10645;
  t10648 = t9103*t10638;
  t10649 = t9179*t10642;
  t10650 = t10648 + t10649;
  t10652 = t9428*t10646;
  t10653 = t9409*t10650;
  t10654 = t10652 + t10653;
  t10656 = t9409*t10646;
  t10657 = -1.*t9428*t10650;
  t10658 = t10656 + t10657;
  t10677 = -1.*t6381*t9719;
  t10678 = t10677 + t10549;
  t10680 = -1.*t9179*t9755;
  t10681 = t9103*t10678;
  t10682 = t10680 + t10681;
  t10684 = t9179*t10678;
  t10685 = t9776 + t10684;
  t10687 = t9428*t10682;
  t10688 = t9409*t10685;
  t10689 = t10687 + t10688;
  t10691 = t9409*t10682;
  t10692 = -1.*t9428*t10685;
  t10693 = t10691 + t10692;
  t10669 = -0.21*t6381;
  t10670 = -0.049*t7024;
  t10671 = t10669 + t10670;
  t10673 = 0.049*t6381;
  t10674 = t10673 + t7028;
  t10704 = t4006*t10343;
  t10705 = t3628*t10580;
  t10706 = t10704 + t10705;
  t10709 = -1.*t7024*t10706;
  t10710 = t10709 + t10591;
  t10712 = -1.*t6381*t10706;
  t10713 = t10712 + t10595;
  t10715 = -1.*t9179*t10710;
  t10716 = t9103*t10713;
  t10717 = t10715 + t10716;
  t10719 = t9103*t10710;
  t10720 = t9179*t10713;
  t10721 = t10719 + t10720;
  t10723 = t9428*t10717;
  t10724 = t9409*t10721;
  t10725 = t10723 + t10724;
  t10727 = t9409*t10717;
  t10728 = -1.*t9428*t10721;
  t10729 = t10727 + t10728;
  t10740 = t4006*t10240;
  t10741 = t3628*t10626;
  t10742 = t10740 + t10741;
  t10745 = -1.*t7024*t10742;
  t10746 = t10745 + t10637;
  t10748 = -1.*t6381*t10742;
  t10749 = t10748 + t10641;
  t10751 = -1.*t9179*t10746;
  t10752 = t9103*t10749;
  t10753 = t10751 + t10752;
  t10755 = t9103*t10746;
  t10756 = t9179*t10749;
  t10757 = t10755 + t10756;
  t10759 = t9428*t10753;
  t10760 = t9409*t10757;
  t10761 = t10759 + t10760;
  t10763 = t9409*t10753;
  t10764 = -1.*t9428*t10757;
  t10765 = t10763 + t10764;
  t10783 = -1.*t9103*t9766;
  t10784 = t10680 + t10783;
  t10787 = t9428*t10784;
  t10788 = t10787 + t9792;
  t10790 = t9409*t10784;
  t10791 = -1.*t9428*t9785;
  t10792 = t10790 + t10791;
  t10776 = 0.0016*t9103;
  t10777 = t10776 + t9283;
  t10779 = -0.2707*t9103;
  t10780 = -0.0016*t9179;
  t10781 = t10779 + t10780;
  t10804 = t6381*t10706;
  t10805 = t7024*t10588;
  t10806 = t10804 + t10805;
  t10808 = -1.*t9103*t10806;
  t10809 = t10715 + t10808;
  t10811 = -1.*t9179*t10806;
  t10812 = t10719 + t10811;
  t10814 = t9428*t10809;
  t10815 = t9409*t10812;
  t10816 = t10814 + t10815;
  t10818 = t9409*t10809;
  t10819 = -1.*t9428*t10812;
  t10820 = t10818 + t10819;
  t10832 = t6381*t10742;
  t10833 = t7024*t10634;
  t10834 = t10832 + t10833;
  t10836 = -1.*t9103*t10834;
  t10837 = t10751 + t10836;
  t10839 = -1.*t9179*t10834;
  t10840 = t10755 + t10839;
  t10842 = t9428*t10837;
  t10843 = t9409*t10840;
  t10844 = t10842 + t10843;
  t10846 = t9409*t10837;
  t10847 = -1.*t9428*t10840;
  t10848 = t10846 + t10847;
  t10867 = -1.*t9409*t9774;
  t10868 = t10867 + t10791;
  t9826 = t9492*t9798;
  t10859 = -0.7055*t9409;
  t10860 = 0.0184*t9428;
  t10861 = t10859 + t10860;
  t10863 = -0.0184*t9409;
  t10864 = t10863 + t9433;
  t10878 = t9179*t10710;
  t10879 = t9103*t10806;
  t10880 = t10878 + t10879;
  t10883 = -1.*t9428*t10880;
  t10884 = t10883 + t10815;
  t10886 = -1.*t9409*t10880;
  t10887 = t10886 + t10819;
  t10898 = t9179*t10746;
  t10899 = t9103*t10834;
  t10900 = t10898 + t10899;
  t10903 = -1.*t9428*t10900;
  t10904 = t10903 + t10843;
  t10906 = -1.*t9409*t10900;
  t10907 = t10906 + t10847;
  t10870 = -1.*t9509*t9798;
  t9828 = -1.*t9509*t9808;
  t9829 = t9826 + t9828;
  t10918 = 0.0216*t9492;
  t10919 = t10918 + t9529;
  t10921 = -1.1135*t9492;
  t10922 = -0.0216*t9509;
  t10923 = t10921 + t10922;
  t10889 = -1.*t9509*t10884;
  t10931 = t9409*t10880;
  t10932 = t9428*t10812;
  t10933 = t10931 + t10932;
  t10893 = t9492*t10884;
  t10909 = -1.*t9509*t10904;
  t10943 = t9409*t10900;
  t10944 = t9428*t10840;
  t10945 = t10943 + t10944;
  t10913 = t9492*t10904;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t1772*t2455 + t2884*t3020 + t3401*t3462 + t4089*t4422 + t5779*t5979 + t7030*t7256 + t9068*t9091 + t9208*t9263 - 1.*t1095*t802*t93 - 0.1305*(t108*t3462 + t1095*t627*t93) + t9288*t9302 + t9435*t9443 + t9467*t9486 + t9514*t9523 + t9537*t9558 - 0.0216*(t9509*t9523 + t9492*t9558) - 1.1135*(t9492*t9523 - 1.*t9509*t9558);
  p_output1[10]=t2320*t802*t93 + t1772*t9610 + t2884*t9629 + t3401*t9639 + t4089*t9661 - 0.1305*t9674 + t5779*t9706 + t7030*t9719 + t9068*t9741 + t9208*t9755 + t9288*t9766 + t9435*t9774 + t9467*t9785 + t9514*t9798 + t9537*t9808 - 0.0216*(t9509*t9798 + t9492*t9808) - 1.1135*t9829;
  p_output1[11]=0;
  p_output1[12]=-1.*t1969*t2320*t802 + t1772*t1911*t2320*t93 + t2320*t2412*t2884*t93 + t3401*t9848 - 0.1305*(t1969*t2320*t627 + t108*t9848) + t4089*t9870 + t5779*t9889 + t7030*t9897 + t9068*t9904 + t9208*t9913 + t9288*t9921 + t9435*t9928 + t9467*t9935 + t9514*t9939 + t9537*t9947 - 0.0216*(t9509*t9939 + t9492*t9947) - 1.1135*(t9492*t9939 - 1.*t9509*t9947);
  p_output1[13]=-1.*t1095*t1969*t802 + t10004*t9068 + t10008*t9208 + t10012*t9288 + t1095*t1772*t1911*t93 + t1095*t2412*t2884*t93 + t10017*t9435 + t10024*t9467 - 0.0216*(t10035*t9492 + t10030*t9509) - 1.1135*(t10030*t9492 - 1.*t10035*t9509) + t10030*t9514 + t10035*t9537 + t3401*t9975 - 0.1305*(t1095*t1969*t627 + t108*t9975) + t4089*t9979 + t5779*t9988 + t7030*t9997;
  p_output1[14]=-1.*t1772*t1911*t1969 - 1.*t1969*t2412*t2884 + t10052*t3401 + t10056*t4089 + t10067*t5779 + t10074*t7030 + t10079*t9068 + t10083*t9208 + t10091*t9288 - 1.*t802*t93 - 0.1305*(t10052*t108 + t627*t93) + t10096*t9435 + t10101*t9467 - 0.0216*(t10109*t9492 + t10105*t9509) - 1.1135*(t10105*t9492 - 1.*t10109*t9509) + t10105*t9514 + t10109*t9537;
  p_output1[15]=-0.1305*t10132*t108 + t10124*t1772 + t10132*t3401 + t10129*t4089 + t10132*t5779*t627 + t10138*t7030 + t10142*t9068 + t10146*t9208 + t10150*t9288 + t10154*t9435 + t10158*t9467 - 0.0216*(t10166*t9492 + t10162*t9509) - 1.1135*(t10162*t9492 - 1.*t10166*t9509) + t10162*t9514 + t10166*t9537 + t2884*t9610;
  p_output1[16]=-0.1305*t10187*t108 + t10179*t2884 + t1772*t3020 + t10187*t3401 + t10183*t4089 + t10187*t5779*t627 + t10193*t7030 + t10197*t9068 + t10201*t9208 + t10205*t9288 + t10209*t9435 + t10213*t9467 - 0.0216*(t10221*t9492 + t10217*t9509) - 1.1135*(t10217*t9492 - 1.*t10221*t9509) + t10217*t9514 + t10221*t9537;
  p_output1[17]=t10237 + t10241 + t10242 + t10243 + t10247 + t10251 + t10255 + t10259 + t10263 + t10267 + t10271 + t10275 + t10279 + t10283 - 1.*t1772*t2412*t93 + t1911*t2884*t93;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=t10288*t4089 + t10295*t7030 + t10299*t9068 + t10303*t9208 + t10307*t9288 + t10311*t9435 + t10315*t9467 - 0.0216*(t10323*t9492 + t10319*t9509) - 1.1135*(t10319*t9492 - 1.*t10323*t9509) + t10319*t9514 + t10323*t9537 + 0.135*t2501*t9610 - 0.135*t1468*t9629 - 0.1305*t108*t9661 + t3401*t9661 + t5779*t627*t9661;
  p_output1[40]=-0.1305*t10343*t108 - 0.135*t10337*t1468 + 0.135*t10179*t2501 + t10343*t3401 + t10340*t4089 + t10343*t5779*t627 + t10349*t7030 + t10353*t9068 + t10357*t9208 + t10361*t9288 + t10365*t9435 + t10369*t9467 - 0.0216*(t10377*t9492 + t10373*t9509) - 1.1135*(t10373*t9492 - 1.*t10377*t9509) + t10373*t9514 + t10377*t9537;
  p_output1[41]=t10237 + t10241 + t10242 + t10243 + t10247 + t10251 + t10255 + t10259 + t10263 + t10267 + t10271 + t10275 + t10279 + t10283 - 0.135*t1468*t2412*t93 + 0.135*t1911*t2501*t93;
  p_output1[42]=t10407*t9208 + t10411*t9288 + t10393*t2320*t93 + t10415*t9435 + t10419*t9467 - 0.0216*(t10427*t9492 + t10423*t9509) - 1.1135*(t10423*t9492 - 1.*t10427*t9509) + t10423*t9514 + t10427*t9537 + t10396*t9639 - 0.1305*(-1.*t108*t2320*t93 - 1.*t627*t9639) + t5779*t9674 + t3628*t7030*t9674 - 1.*t4006*t9068*t9674;
  p_output1[43]=t10396*t10441 + t10445*t5779 - 0.1305*(t5965 - 1.*t10441*t627) + t10445*t3628*t7030 - 1.*t10445*t4006*t9068 + t10454*t9208 + t10458*t9288 + t10393*t1095*t93 + t10462*t9435 + t10466*t9467 - 0.0216*(t10474*t9492 + t10470*t9509) - 1.1135*(t10470*t9492 - 1.*t10474*t9509) + t10470*t9514 + t10474*t9537;
  p_output1[44]=t10396*t10488 - 1.*t10393*t1969 + t10492*t5779 - 0.1305*(t108*t1969 - 1.*t10488*t627) + t10492*t3628*t7030 - 1.*t10492*t4006*t9068 + t10502*t9208 + t10506*t9288 + t10510*t9435 + t10514*t9467 - 0.0216*(t10522*t9492 + t10518*t9509) - 1.1135*(t10518*t9492 - 1.*t10522*t9509) + t10518*t9514 + t10522*t9537;
  p_output1[45]=t10542*t9068 + t10550*t9208 + t10546*t9288 + t10558*t9435 + t10554*t9467 - 1.1135*(t10566*t9492 - 1.*t10562*t9509) - 0.0216*(t10562*t9492 + t10566*t9509) + t10566*t9514 + t10562*t9537 + t10534*t9661 + t10538*t9706 + t7030*t9741;
  p_output1[46]=t10343*t10534 + t10538*t10580 + t10588*t7030 + t10584*t9068 + t10596*t9208 + t10592*t9288 + t10604*t9435 + t10600*t9467 - 1.1135*(t10612*t9492 - 1.*t10608*t9509) - 0.0216*(t10608*t9492 + t10612*t9509) + t10612*t9514 + t10608*t9537;
  p_output1[47]=t10240*t10534 + t10538*t10626 + t10634*t7030 + t10630*t9068 + t10642*t9208 + t10638*t9288 + t10650*t9435 + t10646*t9467 - 1.1135*(t10658*t9492 - 1.*t10654*t9509) - 0.0216*(t10654*t9492 + t10658*t9509) + t10658*t9514 + t10654*t9537;
  p_output1[48]=t10678*t9208 + t10685*t9435 + t10682*t9467 - 1.1135*(t10693*t9492 - 1.*t10689*t9509) - 0.0216*(t10689*t9492 + t10693*t9509) + t10693*t9514 + t10689*t9537 + t10671*t9719 + t10674*t9741 + t9288*t9755;
  p_output1[49]=t10588*t10674 + t10671*t10706 + t10713*t9208 + t10710*t9288 + t10721*t9435 + t10717*t9467 - 1.1135*(t10729*t9492 - 1.*t10725*t9509) - 0.0216*(t10725*t9492 + t10729*t9509) + t10729*t9514 + t10725*t9537;
  p_output1[50]=t10634*t10674 + t10671*t10742 + t10749*t9208 + t10746*t9288 + t10757*t9435 + t10753*t9467 - 1.1135*(t10765*t9492 - 1.*t10761*t9509) - 0.0216*(t10761*t9492 + t10765*t9509) + t10765*t9514 + t10761*t9537;
  p_output1[51]=t10784*t9467 - 1.1135*(t10792*t9492 - 1.*t10788*t9509) - 0.0216*(t10788*t9492 + t10792*t9509) + t10792*t9514 + t10788*t9537 + t10777*t9755 + t10781*t9766 + t9435*t9785;
  p_output1[52]=t10710*t10777 + t10781*t10806 + t10812*t9435 + t10809*t9467 - 1.1135*(t10820*t9492 - 1.*t10816*t9509) - 0.0216*(t10816*t9492 + t10820*t9509) + t10820*t9514 + t10816*t9537;
  p_output1[53]=t10746*t10777 + t10781*t10834 + t10840*t9435 + t10837*t9467 - 1.1135*(t10848*t9492 - 1.*t10844*t9509) - 0.0216*(t10844*t9492 + t10848*t9509) + t10848*t9514 + t10844*t9537;
  p_output1[54]=-1.1135*(t10870 + t10868*t9492) + t10868*t9514 + t10861*t9774 + t10864*t9785 + t9537*t9798 - 0.0216*(t10868*t9509 + t9826);
  p_output1[55]=t10812*t10864 + t10861*t10880 - 1.1135*(t10889 + t10887*t9492) - 0.0216*(t10893 + t10887*t9509) + t10887*t9514 + t10884*t9537;
  p_output1[56]=t10840*t10864 + t10861*t10900 - 1.1135*(t10909 + t10907*t9492) - 0.0216*(t10913 + t10907*t9509) + t10907*t9514 + t10904*t9537;
  p_output1[57]=t10919*t9798 + t10923*t9808 - 1.1135*(t10870 - 1.*t9492*t9808) - 0.0216*t9829;
  p_output1[58]=t10884*t10919 + t10923*t10933 - 1.1135*(t10889 - 1.*t10933*t9492) - 0.0216*(t10893 - 1.*t10933*t9509);
  p_output1[59]=t10904*t10919 + t10923*t10945 - 1.1135*(t10909 - 1.*t10945*t9492) - 0.0216*(t10913 - 1.*t10945*t9509);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "J_toe_joint_right_mex.hh"

namespace SymExpression
{

void J_toe_joint_right_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
