/*
 * Automatically Generated from Mathematica.
 * Wed 15 Nov 2017 08:33:00 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t1469;
  double t1667;
  double t1703;
  double t1384;
  double t1771;
  double t141;
  double t1644;
  double t1838;
  double t2202;
  double t2239;
  double t2246;
  double t2257;
  double t2377;
  double t2694;
  double t2752;
  double t2755;
  double t2775;
  double t2402;
  double t2439;
  double t2681;
  double t2893;
  double t3272;
  double t3276;
  double t3277;
  double t3286;
  double t3266;
  double t3268;
  double t3271;
  double t3304;
  double t3305;
  double t3306;
  double t3312;
  double t3317;
  double t3318;
  double t3328;
  double t3337;
  double t3339;
  double t3340;
  double t3346;
  double t3350;
  double t3352;
  double t3357;
  double t3358;
  double t3365;
  double t3368;
  double t3372;
  double t3373;
  double t3381;
  double t3497;
  double t3500;
  double t3513;
  double t3591;
  double t3615;
  double t3693;
  double t3793;
  double t3946;
  double t3947;
  double t4018;
  double t4329;
  double t4335;
  double t4336;
  double t4342;
  double t4351;
  double t4352;
  double t4455;
  double t4685;
  double t4949;
  double t4994;
  double t5237;
  double t5252;
  double t5296;
  double t166;
  double t369;
  double t420;
  double t1038;
  double t2382;
  double t2392;
  double t5513;
  double t5522;
  double t5544;
  double t5592;
  double t5599;
  double t5619;
  double t2766;
  double t2788;
  double t2790;
  double t2978;
  double t2984;
  double t3022;
  double t5682;
  double t5701;
  double t5730;
  double t3279;
  double t3291;
  double t3299;
  double t3308;
  double t3309;
  double t3310;
  double t3325;
  double t3332;
  double t3336;
  double t5886;
  double t5891;
  double t5985;
  double t6148;
  double t6192;
  double t6277;
  double t3342;
  double t3343;
  double t3344;
  double t3366;
  double t3369;
  double t3370;
  double t6308;
  double t6327;
  double t6358;
  double t6383;
  double t6389;
  double t6391;
  double t3386;
  double t3390;
  double t3450;
  double t3705;
  double t3799;
  double t3922;
  double t6409;
  double t6439;
  double t6448;
  double t6456;
  double t6459;
  double t6477;
  double t4158;
  double t4230;
  double t4243;
  double t4454;
  double t4639;
  double t4647;
  double t6497;
  double t6503;
  double t6509;
  double t6554;
  double t6604;
  double t6606;
  double t5037;
  double t5055;
  double t5056;
  double t6634;
  double t6638;
  double t6641;
  double t6686;
  double t6692;
  double t6701;
  double t7030;
  double t7090;
  double t7099;
  double t7243;
  double t7246;
  double t7252;
  double t7288;
  double t7318;
  double t7343;
  double t7371;
  double t7380;
  double t7383;
  double t7395;
  double t7408;
  double t7435;
  double t7529;
  double t7551;
  double t7557;
  double t7631;
  double t7668;
  double t7676;
  double t7693;
  double t7698;
  double t7773;
  double t7883;
  double t8002;
  double t8078;
  double t8184;
  double t8253;
  double t8271;
  double t8354;
  double t8406;
  double t8444;
  double t9116;
  double t9200;
  double t9261;
  double t9472;
  double t9506;
  double t9514;
  double t9524;
  double t9528;
  double t9529;
  double t9556;
  double t9559;
  double t9567;
  double t9594;
  double t9598;
  double t9607;
  double t9631;
  double t9633;
  double t9647;
  double t9663;
  double t9669;
  double t9693;
  double t9709;
  double t9730;
  double t9744;
  double t9764;
  double t9767;
  double t9769;
  double t9788;
  double t9800;
  double t9804;
  double t9820;
  double t9826;
  double t9831;
  double t9904;
  double t9908;
  double t9910;
  double t9954;
  double t9958;
  double t9961;
  double t9974;
  double t9977;
  double t9979;
  double t9992;
  double t10004;
  double t10007;
  double t10011;
  double t10015;
  double t10018;
  double t10026;
  double t10032;
  double t10037;
  double t10040;
  double t10042;
  double t10043;
  double t10046;
  double t10047;
  double t10048;
  double t10056;
  double t10059;
  double t10062;
  double t10071;
  double t10072;
  double t10076;
  double t10080;
  double t10085;
  double t10088;
  double t10119;
  double t10122;
  double t10125;
  double t10135;
  double t10139;
  double t10149;
  double t10151;
  double t10156;
  double t10168;
  double t10172;
  double t10175;
  double t10177;
  double t10181;
  double t10186;
  double t10191;
  double t10192;
  double t10195;
  double t10198;
  double t10200;
  double t10202;
  double t10207;
  double t10210;
  double t10213;
  double t10219;
  double t10220;
  double t10222;
  double t10227;
  double t10228;
  double t10230;
  double t10236;
  double t10244;
  double t10245;
  double t10269;
  double t10276;
  double t10277;
  double t10285;
  double t10286;
  double t10288;
  double t10294;
  double t10300;
  double t10303;
  double t10308;
  double t10310;
  double t10316;
  double t10320;
  double t10324;
  double t10328;
  double t10330;
  double t10331;
  double t10334;
  double t10335;
  double t10336;
  double t10340;
  double t10341;
  double t10344;
  double t10347;
  double t10348;
  double t10350;
  double t10353;
  double t10356;
  double t10358;
  double t10364;
  double t10366;
  double t10367;
  double t10399;
  double t10401;
  double t10402;
  double t10414;
  double t10416;
  double t10417;
  double t10420;
  double t10425;
  double t10426;
  double t10431;
  double t10432;
  double t10433;
  double t10438;
  double t10439;
  double t10446;
  double t10448;
  double t10450;
  double t10451;
  double t10455;
  double t10460;
  double t10461;
  double t10467;
  double t10469;
  double t10472;
  double t10477;
  double t10479;
  double t10480;
  double t10486;
  double t10487;
  double t10489;
  double t10523;
  double t10524;
  double t10528;
  double t10529;
  double t10530;
  double t10533;
  double t10537;
  double t10538;
  double t10544;
  double t10545;
  double t10548;
  double t10554;
  double t10555;
  double t10556;
  double t10561;
  double t10568;
  double t10571;
  double t10573;
  double t10574;
  double t10575;
  double t10577;
  double t10578;
  double t10579;
  double t10584;
  double t10585;
  double t10590;
  double t10627;
  double t10630;
  double t10635;
  double t10639;
  double t10640;
  double t10651;
  double t10653;
  double t10660;
  double t10661;
  double t10664;
  double t10666;
  double t10668;
  double t10669;
  double t10674;
  double t10676;
  double t10682;
  double t10684;
  double t10694;
  double t10695;
  double t10698;
  double t10699;
  double t10701;
  double t10704;
  double t10705;
  double t10707;
  double t10711;
  double t10714;
  double t10716;
  double t10722;
  double t10723;
  double t10730;
  double t10403;
  double t10409;
  double t10413;
  double t10419;
  double t10428;
  double t10436;
  double t10447;
  double t10454;
  double t10463;
  double t10475;
  double t10482;
  double t10494;
  double t10495;
  double t10497;
  double t10498;
  double t10502;
  double t10503;
  double t10507;
  double t10509;
  double t10511;
  double t5793;
  double t5804;
  double t5840;
  double t10784;
  double t10787;
  double t10789;
  double t10793;
  double t10794;
  double t10795;
  double t10797;
  double t10798;
  double t10800;
  double t10804;
  double t10809;
  double t10813;
  double t10822;
  double t10823;
  double t10826;
  double t10830;
  double t10831;
  double t10832;
  double t10752;
  double t10753;
  double t10754;
  double t10762;
  double t10766;
  double t10856;
  double t10857;
  double t10858;
  double t10861;
  double t10864;
  double t10866;
  double t10881;
  double t10885;
  double t10887;
  double t10894;
  double t10896;
  double t10901;
  double t10908;
  double t10910;
  double t10911;
  double t10914;
  double t10915;
  double t10916;
  double t10918;
  double t10920;
  double t10922;
  double t10926;
  double t10927;
  double t10928;
  double t10949;
  double t10950;
  double t10951;
  double t10953;
  double t10955;
  double t10956;
  double t10972;
  double t10974;
  double t10977;
  double t10982;
  double t10983;
  double t10984;
  double t10986;
  double t10988;
  double t10989;
  double t10994;
  double t10995;
  double t10997;
  double t10999;
  double t11002;
  double t11004;
  double t11008;
  double t11009;
  double t11010;
  double t11033;
  double t11034;
  double t11035;
  double t11040;
  double t11041;
  double t11043;
  double t11044;
  double t11045;
  double t11047;
  double t11048;
  double t11050;
  double t11054;
  double t11056;
  double t11057;
  double t11060;
  double t11061;
  double t11063;
  double t11065;
  double t11066;
  double t11067;
  double t11025;
  double t11026;
  double t11028;
  double t11029;
  double t11030;
  double t11085;
  double t11086;
  double t11087;
  double t11089;
  double t11090;
  double t11091;
  double t11093;
  double t11094;
  double t11095;
  double t11097;
  double t11098;
  double t11099;
  double t11101;
  double t11103;
  double t11104;
  double t11106;
  double t11107;
  double t11108;
  double t11110;
  double t11111;
  double t11112;
  double t11115;
  double t11116;
  double t11117;
  double t11119;
  double t11120;
  double t11121;
  double t11133;
  double t11134;
  double t11135;
  double t11137;
  double t11138;
  double t11139;
  double t11141;
  double t11142;
  double t11143;
  double t11145;
  double t11146;
  double t11147;
  double t11149;
  double t11150;
  double t11151;
  double t11153;
  double t11154;
  double t11155;
  double t11157;
  double t11158;
  double t11159;
  double t11161;
  double t11162;
  double t11163;
  double t11165;
  double t11166;
  double t11167;
  double t11186;
  double t11187;
  double t11189;
  double t11190;
  double t11191;
  double t11193;
  double t11194;
  double t11196;
  double t11197;
  double t11198;
  double t11200;
  double t11201;
  double t11202;
  double t11178;
  double t11179;
  double t11180;
  double t11182;
  double t11183;
  double t11213;
  double t11214;
  double t11215;
  double t11218;
  double t11219;
  double t11221;
  double t11222;
  double t11224;
  double t11225;
  double t11226;
  double t11228;
  double t11229;
  double t11230;
  double t11232;
  double t11233;
  double t11234;
  double t11236;
  double t11237;
  double t11238;
  double t11249;
  double t11250;
  double t11251;
  double t11254;
  double t11255;
  double t11257;
  double t11258;
  double t11260;
  double t11261;
  double t11262;
  double t11264;
  double t11265;
  double t11266;
  double t11268;
  double t11269;
  double t11270;
  double t11272;
  double t11273;
  double t11274;
  double t11292;
  double t11293;
  double t11296;
  double t11297;
  double t11299;
  double t11300;
  double t11301;
  double t11285;
  double t11286;
  double t11288;
  double t11289;
  double t11290;
  double t11313;
  double t11314;
  double t11315;
  double t11317;
  double t11318;
  double t11320;
  double t11321;
  double t11323;
  double t11324;
  double t11325;
  double t11327;
  double t11328;
  double t11329;
  double t11341;
  double t11342;
  double t11343;
  double t11345;
  double t11346;
  double t11348;
  double t11349;
  double t11351;
  double t11352;
  double t11353;
  double t11355;
  double t11356;
  double t11357;
  double t11376;
  double t11377;
  double t6832;
  double t11368;
  double t11369;
  double t11370;
  double t11372;
  double t11373;
  double t11387;
  double t11388;
  double t11389;
  double t11392;
  double t11393;
  double t11395;
  double t11396;
  double t11407;
  double t11408;
  double t11409;
  double t11412;
  double t11413;
  double t11415;
  double t11416;
  double t11379;
  double t6846;
  double t6876;
  double t11427;
  double t11428;
  double t11430;
  double t11431;
  double t11432;
  double t11398;
  double t11440;
  double t11441;
  double t11442;
  double t11402;
  double t11418;
  double t11452;
  double t11453;
  double t11454;
  double t11422;
  t1469 = Cos(var1[5]);
  t1667 = Sin(var1[3]);
  t1703 = Sin(var1[4]);
  t1384 = Cos(var1[3]);
  t1771 = Sin(var1[5]);
  t141 = Cos(var1[6]);
  t1644 = -1.*t1384*t1469;
  t1838 = -1.*t1667*t1703*t1771;
  t2202 = t1644 + t1838;
  t2239 = -1.*t1469*t1667*t1703;
  t2246 = t1384*t1771;
  t2257 = t2239 + t2246;
  t2377 = Sin(var1[6]);
  t2694 = Cos(var1[7]);
  t2752 = -1.*t2694;
  t2755 = 1. + t2752;
  t2775 = Sin(var1[7]);
  t2402 = t141*t2202;
  t2439 = t2257*t2377;
  t2681 = t2402 + t2439;
  t2893 = Cos(var1[4]);
  t3272 = Cos(var1[8]);
  t3276 = -1.*t3272;
  t3277 = 1. + t3276;
  t3286 = Sin(var1[8]);
  t3266 = -1.*t2893*t2694*t1667;
  t3268 = t2681*t2775;
  t3271 = t3266 + t3268;
  t3304 = t141*t2257;
  t3305 = -1.*t2202*t2377;
  t3306 = t3304 + t3305;
  t3312 = Cos(var1[9]);
  t3317 = -1.*t3312;
  t3318 = 1. + t3317;
  t3328 = Sin(var1[9]);
  t3337 = t3272*t3271;
  t3339 = t3306*t3286;
  t3340 = t3337 + t3339;
  t3346 = t3272*t3306;
  t3350 = -1.*t3271*t3286;
  t3352 = t3346 + t3350;
  t3357 = Cos(var1[10]);
  t3358 = -1.*t3357;
  t3365 = 1. + t3358;
  t3368 = Sin(var1[10]);
  t3372 = -1.*t3328*t3340;
  t3373 = t3312*t3352;
  t3381 = t3372 + t3373;
  t3497 = t3312*t3340;
  t3500 = t3328*t3352;
  t3513 = t3497 + t3500;
  t3591 = Cos(var1[11]);
  t3615 = -1.*t3591;
  t3693 = 1. + t3615;
  t3793 = Sin(var1[11]);
  t3946 = t3368*t3381;
  t3947 = t3357*t3513;
  t4018 = t3946 + t3947;
  t4329 = t3357*t3381;
  t4335 = -1.*t3368*t3513;
  t4336 = t4329 + t4335;
  t4342 = Cos(var1[12]);
  t4351 = -1.*t4342;
  t4352 = 1. + t4351;
  t4455 = Sin(var1[12]);
  t4685 = -1.*t3793*t4018;
  t4949 = t3591*t4336;
  t4994 = t4685 + t4949;
  t5237 = t3591*t4018;
  t5252 = t3793*t4336;
  t5296 = t5237 + t5252;
  t166 = -1.*t141;
  t369 = 1. + t166;
  t420 = 0.135*t369;
  t1038 = 0. + t420;
  t2382 = -0.135*t2377;
  t2392 = 0. + t2382;
  t5513 = -1.*t1469*t1667;
  t5522 = t1384*t1703*t1771;
  t5544 = t5513 + t5522;
  t5592 = t1384*t1469*t1703;
  t5599 = t1667*t1771;
  t5619 = t5592 + t5599;
  t2766 = 0.135*t2755;
  t2788 = 0.049*t2775;
  t2790 = 0. + t2766 + t2788;
  t2978 = -0.049*t2755;
  t2984 = 0.135*t2775;
  t3022 = 0. + t2978 + t2984;
  t5682 = t141*t5544;
  t5701 = t5619*t2377;
  t5730 = t5682 + t5701;
  t3279 = -0.049*t3277;
  t3291 = -0.09*t3286;
  t3299 = 0. + t3279 + t3291;
  t3308 = -0.09*t3277;
  t3309 = 0.049*t3286;
  t3310 = 0. + t3308 + t3309;
  t3325 = -0.049*t3318;
  t3332 = -0.21*t3328;
  t3336 = 0. + t3325 + t3332;
  t5886 = t1384*t2893*t2694;
  t5891 = t5730*t2775;
  t5985 = t5886 + t5891;
  t6148 = t141*t5619;
  t6192 = -1.*t5544*t2377;
  t6277 = t6148 + t6192;
  t3342 = -0.21*t3318;
  t3343 = 0.049*t3328;
  t3344 = 0. + t3342 + t3343;
  t3366 = -0.2707*t3365;
  t3369 = 0.0016*t3368;
  t3370 = 0. + t3366 + t3369;
  t6308 = t3272*t5985;
  t6327 = t6277*t3286;
  t6358 = t6308 + t6327;
  t6383 = t3272*t6277;
  t6389 = -1.*t5985*t3286;
  t6391 = t6383 + t6389;
  t3386 = -0.0016*t3365;
  t3390 = -0.2707*t3368;
  t3450 = 0. + t3386 + t3390;
  t3705 = 0.0184*t3693;
  t3799 = -0.7055*t3793;
  t3922 = 0. + t3705 + t3799;
  t6409 = -1.*t3328*t6358;
  t6439 = t3312*t6391;
  t6448 = t6409 + t6439;
  t6456 = t3312*t6358;
  t6459 = t3328*t6391;
  t6477 = t6456 + t6459;
  t4158 = -0.7055*t3693;
  t4230 = -0.0184*t3793;
  t4243 = 0. + t4158 + t4230;
  t4454 = -1.1135*t4352;
  t4639 = 0.0216*t4455;
  t4647 = 0. + t4454 + t4639;
  t6497 = t3368*t6448;
  t6503 = t3357*t6477;
  t6509 = t6497 + t6503;
  t6554 = t3357*t6448;
  t6604 = -1.*t3368*t6477;
  t6606 = t6554 + t6604;
  t5037 = -0.0216*t4352;
  t5055 = -1.1135*t4455;
  t5056 = 0. + t5037 + t5055;
  t6634 = -1.*t3793*t6509;
  t6638 = t3591*t6606;
  t6641 = t6634 + t6638;
  t6686 = t3591*t6509;
  t6692 = t3793*t6606;
  t6701 = t6686 + t6692;
  t7030 = t1384*t2893*t141*t1771;
  t7090 = t1384*t2893*t1469*t2377;
  t7099 = t7030 + t7090;
  t7243 = -1.*t1384*t2694*t1703;
  t7246 = t7099*t2775;
  t7252 = t7243 + t7246;
  t7288 = t1384*t2893*t1469*t141;
  t7318 = -1.*t1384*t2893*t1771*t2377;
  t7343 = t7288 + t7318;
  t7371 = t3272*t7252;
  t7380 = t7343*t3286;
  t7383 = t7371 + t7380;
  t7395 = t3272*t7343;
  t7408 = -1.*t7252*t3286;
  t7435 = t7395 + t7408;
  t7529 = -1.*t3328*t7383;
  t7551 = t3312*t7435;
  t7557 = t7529 + t7551;
  t7631 = t3312*t7383;
  t7668 = t3328*t7435;
  t7676 = t7631 + t7668;
  t7693 = t3368*t7557;
  t7698 = t3357*t7676;
  t7773 = t7693 + t7698;
  t7883 = t3357*t7557;
  t8002 = -1.*t3368*t7676;
  t8078 = t7883 + t8002;
  t8184 = -1.*t3793*t7773;
  t8253 = t3591*t8078;
  t8271 = t8184 + t8253;
  t8354 = t3591*t7773;
  t8406 = t3793*t8078;
  t8444 = t8354 + t8406;
  t9116 = t2893*t141*t1667*t1771;
  t9200 = t2893*t1469*t1667*t2377;
  t9261 = t9116 + t9200;
  t9472 = -1.*t2694*t1667*t1703;
  t9506 = t9261*t2775;
  t9514 = t9472 + t9506;
  t9524 = t2893*t1469*t141*t1667;
  t9528 = -1.*t2893*t1667*t1771*t2377;
  t9529 = t9524 + t9528;
  t9556 = t3272*t9514;
  t9559 = t9529*t3286;
  t9567 = t9556 + t9559;
  t9594 = t3272*t9529;
  t9598 = -1.*t9514*t3286;
  t9607 = t9594 + t9598;
  t9631 = -1.*t3328*t9567;
  t9633 = t3312*t9607;
  t9647 = t9631 + t9633;
  t9663 = t3312*t9567;
  t9669 = t3328*t9607;
  t9693 = t9663 + t9669;
  t9709 = t3368*t9647;
  t9730 = t3357*t9693;
  t9744 = t9709 + t9730;
  t9764 = t3357*t9647;
  t9767 = -1.*t3368*t9693;
  t9769 = t9764 + t9767;
  t9788 = -1.*t3793*t9744;
  t9800 = t3591*t9769;
  t9804 = t9788 + t9800;
  t9820 = t3591*t9744;
  t9826 = t3793*t9769;
  t9831 = t9820 + t9826;
  t9904 = -1.*t141*t1703*t1771;
  t9908 = -1.*t1469*t1703*t2377;
  t9910 = t9904 + t9908;
  t9954 = -1.*t2893*t2694;
  t9958 = t9910*t2775;
  t9961 = t9954 + t9958;
  t9974 = -1.*t1469*t141*t1703;
  t9977 = t1703*t1771*t2377;
  t9979 = t9974 + t9977;
  t9992 = t3272*t9961;
  t10004 = t9979*t3286;
  t10007 = t9992 + t10004;
  t10011 = t3272*t9979;
  t10015 = -1.*t9961*t3286;
  t10018 = t10011 + t10015;
  t10026 = -1.*t3328*t10007;
  t10032 = t3312*t10018;
  t10037 = t10026 + t10032;
  t10040 = t3312*t10007;
  t10042 = t3328*t10018;
  t10043 = t10040 + t10042;
  t10046 = t3368*t10037;
  t10047 = t3357*t10043;
  t10048 = t10046 + t10047;
  t10056 = t3357*t10037;
  t10059 = -1.*t3368*t10043;
  t10062 = t10056 + t10059;
  t10071 = -1.*t3793*t10048;
  t10072 = t3591*t10062;
  t10076 = t10071 + t10072;
  t10080 = t3591*t10048;
  t10085 = t3793*t10062;
  t10088 = t10080 + t10085;
  t10119 = t1469*t1667;
  t10122 = -1.*t1384*t1703*t1771;
  t10125 = t10119 + t10122;
  t10135 = t10125*t2377;
  t10139 = t6148 + t10135;
  t10149 = t141*t10125;
  t10151 = -1.*t5619*t2377;
  t10156 = t10149 + t10151;
  t10168 = t3272*t10139*t2775;
  t10172 = t10156*t3286;
  t10175 = t10168 + t10172;
  t10177 = t3272*t10156;
  t10181 = -1.*t10139*t2775*t3286;
  t10186 = t10177 + t10181;
  t10191 = -1.*t3328*t10175;
  t10192 = t3312*t10186;
  t10195 = t10191 + t10192;
  t10198 = t3312*t10175;
  t10200 = t3328*t10186;
  t10202 = t10198 + t10200;
  t10207 = t3368*t10195;
  t10210 = t3357*t10202;
  t10213 = t10207 + t10210;
  t10219 = t3357*t10195;
  t10220 = -1.*t3368*t10202;
  t10222 = t10219 + t10220;
  t10227 = -1.*t3793*t10213;
  t10228 = t3591*t10222;
  t10230 = t10227 + t10228;
  t10236 = t3591*t10213;
  t10244 = t3793*t10222;
  t10245 = t10236 + t10244;
  t10269 = t1469*t1667*t1703;
  t10276 = -1.*t1384*t1771;
  t10277 = t10269 + t10276;
  t10285 = t141*t10277;
  t10286 = t2202*t2377;
  t10288 = t10285 + t10286;
  t10294 = -1.*t10277*t2377;
  t10300 = t2402 + t10294;
  t10303 = t3272*t10288*t2775;
  t10308 = t10300*t3286;
  t10310 = t10303 + t10308;
  t10316 = t3272*t10300;
  t10320 = -1.*t10288*t2775*t3286;
  t10324 = t10316 + t10320;
  t10328 = -1.*t3328*t10310;
  t10330 = t3312*t10324;
  t10331 = t10328 + t10330;
  t10334 = t3312*t10310;
  t10335 = t3328*t10324;
  t10336 = t10334 + t10335;
  t10340 = t3368*t10331;
  t10341 = t3357*t10336;
  t10344 = t10340 + t10341;
  t10347 = t3357*t10331;
  t10348 = -1.*t3368*t10336;
  t10350 = t10347 + t10348;
  t10353 = -1.*t3793*t10344;
  t10356 = t3591*t10350;
  t10358 = t10353 + t10356;
  t10364 = t3591*t10344;
  t10366 = t3793*t10350;
  t10367 = t10364 + t10366;
  t10399 = t2893*t1469*t141;
  t10401 = -1.*t2893*t1771*t2377;
  t10402 = t10399 + t10401;
  t10414 = -1.*t2893*t141*t1771;
  t10416 = -1.*t2893*t1469*t2377;
  t10417 = t10414 + t10416;
  t10420 = t3272*t10402*t2775;
  t10425 = t10417*t3286;
  t10426 = t10420 + t10425;
  t10431 = t3272*t10417;
  t10432 = -1.*t10402*t2775*t3286;
  t10433 = t10431 + t10432;
  t10438 = -1.*t3328*t10426;
  t10439 = t3312*t10433;
  t10446 = t10438 + t10439;
  t10448 = t3312*t10426;
  t10450 = t3328*t10433;
  t10451 = t10448 + t10450;
  t10455 = t3368*t10446;
  t10460 = t3357*t10451;
  t10461 = t10455 + t10460;
  t10467 = t3357*t10446;
  t10469 = -1.*t3368*t10451;
  t10472 = t10467 + t10469;
  t10477 = -1.*t3793*t10461;
  t10479 = t3591*t10472;
  t10480 = t10477 + t10479;
  t10486 = t3591*t10461;
  t10487 = t3793*t10472;
  t10489 = t10486 + t10487;
  t10523 = -1.*t141*t5544;
  t10524 = t10523 + t10151;
  t10528 = t3272*t6277*t2775;
  t10529 = t10524*t3286;
  t10530 = t10528 + t10529;
  t10533 = t3272*t10524;
  t10537 = -1.*t6277*t2775*t3286;
  t10538 = t10533 + t10537;
  t10544 = -1.*t3328*t10530;
  t10545 = t3312*t10538;
  t10548 = t10544 + t10545;
  t10554 = t3312*t10530;
  t10555 = t3328*t10538;
  t10556 = t10554 + t10555;
  t10561 = t3368*t10548;
  t10568 = t3357*t10556;
  t10571 = t10561 + t10568;
  t10573 = t3357*t10548;
  t10574 = -1.*t3368*t10556;
  t10575 = t10573 + t10574;
  t10577 = -1.*t3793*t10571;
  t10578 = t3591*t10575;
  t10579 = t10577 + t10578;
  t10584 = t3591*t10571;
  t10585 = t3793*t10575;
  t10590 = t10584 + t10585;
  t10627 = t1384*t1469;
  t10630 = t1667*t1703*t1771;
  t10635 = t10627 + t10630;
  t10639 = -1.*t10635*t2377;
  t10640 = t10285 + t10639;
  t10651 = -1.*t141*t10635;
  t10653 = t10651 + t10294;
  t10660 = t3272*t10640*t2775;
  t10661 = t10653*t3286;
  t10664 = t10660 + t10661;
  t10666 = t3272*t10653;
  t10668 = -1.*t10640*t2775*t3286;
  t10669 = t10666 + t10668;
  t10674 = -1.*t3328*t10664;
  t10676 = t3312*t10669;
  t10682 = t10674 + t10676;
  t10684 = t3312*t10664;
  t10694 = t3328*t10669;
  t10695 = t10684 + t10694;
  t10698 = t3368*t10682;
  t10699 = t3357*t10695;
  t10701 = t10698 + t10699;
  t10704 = t3357*t10682;
  t10705 = -1.*t3368*t10695;
  t10707 = t10704 + t10705;
  t10711 = -1.*t3793*t10701;
  t10714 = t3591*t10707;
  t10716 = t10711 + t10714;
  t10722 = t3591*t10701;
  t10723 = t3793*t10707;
  t10730 = t10722 + t10723;
  t10403 = 0.1305*t2694*t10402;
  t10409 = t10402*t2790;
  t10413 = t10402*t2775*t3299;
  t10419 = t10417*t3310;
  t10428 = t3336*t10426;
  t10436 = t3344*t10433;
  t10447 = t3370*t10446;
  t10454 = t3450*t10451;
  t10463 = t3922*t10461;
  t10475 = t4243*t10472;
  t10482 = t4647*t10480;
  t10494 = t5056*t10489;
  t10495 = t4455*t10480;
  t10497 = t4342*t10489;
  t10498 = t10495 + t10497;
  t10502 = 0.0306*t10498;
  t10503 = t4342*t10480;
  t10507 = -1.*t4455*t10489;
  t10509 = t10503 + t10507;
  t10511 = -1.1312*t10509;
  t5793 = t2694*t5730;
  t5804 = -1.*t1384*t2893*t2775;
  t5840 = t5793 + t5804;
  t10784 = -1.*t3272*t3328*t5840;
  t10787 = -1.*t3312*t5840*t3286;
  t10789 = t10784 + t10787;
  t10793 = t3312*t3272*t5840;
  t10794 = -1.*t3328*t5840*t3286;
  t10795 = t10793 + t10794;
  t10797 = t3368*t10789;
  t10798 = t3357*t10795;
  t10800 = t10797 + t10798;
  t10804 = t3357*t10789;
  t10809 = -1.*t3368*t10795;
  t10813 = t10804 + t10809;
  t10822 = -1.*t3793*t10800;
  t10823 = t3591*t10813;
  t10826 = t10822 + t10823;
  t10830 = t3591*t10800;
  t10831 = t3793*t10813;
  t10832 = t10830 + t10831;
  t10752 = 0.135*t2694;
  t10753 = -0.049*t2775;
  t10754 = t10752 + t10753;
  t10762 = 0.049*t2694;
  t10766 = t10762 + t2984;
  t10856 = t141*t10635;
  t10857 = t10277*t2377;
  t10858 = t10856 + t10857;
  t10861 = t2694*t10858;
  t10864 = -1.*t2893*t1667*t2775;
  t10866 = t10861 + t10864;
  t10881 = -1.*t3272*t3328*t10866;
  t10885 = -1.*t3312*t10866*t3286;
  t10887 = t10881 + t10885;
  t10894 = t3312*t3272*t10866;
  t10896 = -1.*t3328*t10866*t3286;
  t10901 = t10894 + t10896;
  t10908 = t3368*t10887;
  t10910 = t3357*t10901;
  t10911 = t10908 + t10910;
  t10914 = t3357*t10887;
  t10915 = -1.*t3368*t10901;
  t10916 = t10914 + t10915;
  t10918 = -1.*t3793*t10911;
  t10920 = t3591*t10916;
  t10922 = t10918 + t10920;
  t10926 = t3591*t10911;
  t10927 = t3793*t10916;
  t10928 = t10926 + t10927;
  t10949 = t2893*t141*t1771;
  t10950 = t2893*t1469*t2377;
  t10951 = t10949 + t10950;
  t10953 = t2694*t10951;
  t10955 = t1703*t2775;
  t10956 = t10953 + t10955;
  t10972 = -1.*t3272*t3328*t10956;
  t10974 = -1.*t3312*t10956*t3286;
  t10977 = t10972 + t10974;
  t10982 = t3312*t3272*t10956;
  t10983 = -1.*t3328*t10956*t3286;
  t10984 = t10982 + t10983;
  t10986 = t3368*t10977;
  t10988 = t3357*t10984;
  t10989 = t10986 + t10988;
  t10994 = t3357*t10977;
  t10995 = -1.*t3368*t10984;
  t10997 = t10994 + t10995;
  t10999 = -1.*t3793*t10989;
  t11002 = t3591*t10997;
  t11004 = t10999 + t11002;
  t11008 = t3591*t10989;
  t11009 = t3793*t10997;
  t11010 = t11008 + t11009;
  t11033 = -1.*t3272*t5985;
  t11034 = -1.*t6277*t3286;
  t11035 = t11033 + t11034;
  t11040 = t3328*t11035;
  t11041 = t11040 + t6439;
  t11043 = t3312*t11035;
  t11044 = -1.*t3328*t6391;
  t11045 = t11043 + t11044;
  t11047 = -1.*t3368*t11041;
  t11048 = t3357*t11045;
  t11050 = t11047 + t11048;
  t11054 = t3357*t11041;
  t11056 = t3368*t11045;
  t11057 = t11054 + t11056;
  t11060 = t3793*t11050;
  t11061 = t3591*t11057;
  t11063 = t11060 + t11061;
  t11065 = t3591*t11050;
  t11066 = -1.*t3793*t11057;
  t11067 = t11065 + t11066;
  t11025 = 0.049*t3272;
  t11026 = t11025 + t3291;
  t11028 = -0.09*t3272;
  t11029 = -0.049*t3286;
  t11030 = t11028 + t11029;
  t11085 = t2893*t2694*t1667;
  t11086 = t10858*t2775;
  t11087 = t11085 + t11086;
  t11089 = -1.*t3272*t11087;
  t11090 = -1.*t10640*t3286;
  t11091 = t11089 + t11090;
  t11093 = t3272*t10640;
  t11094 = -1.*t11087*t3286;
  t11095 = t11093 + t11094;
  t11097 = t3328*t11091;
  t11098 = t3312*t11095;
  t11099 = t11097 + t11098;
  t11101 = t3312*t11091;
  t11103 = -1.*t3328*t11095;
  t11104 = t11101 + t11103;
  t11106 = -1.*t3368*t11099;
  t11107 = t3357*t11104;
  t11108 = t11106 + t11107;
  t11110 = t3357*t11099;
  t11111 = t3368*t11104;
  t11112 = t11110 + t11111;
  t11115 = t3793*t11108;
  t11116 = t3591*t11112;
  t11117 = t11115 + t11116;
  t11119 = t3591*t11108;
  t11120 = -1.*t3793*t11112;
  t11121 = t11119 + t11120;
  t11133 = -1.*t2694*t1703;
  t11134 = t10951*t2775;
  t11135 = t11133 + t11134;
  t11137 = -1.*t3272*t11135;
  t11138 = -1.*t10402*t3286;
  t11139 = t11137 + t11138;
  t11141 = t3272*t10402;
  t11142 = -1.*t11135*t3286;
  t11143 = t11141 + t11142;
  t11145 = t3328*t11139;
  t11146 = t3312*t11143;
  t11147 = t11145 + t11146;
  t11149 = t3312*t11139;
  t11150 = -1.*t3328*t11143;
  t11151 = t11149 + t11150;
  t11153 = -1.*t3368*t11147;
  t11154 = t3357*t11151;
  t11155 = t11153 + t11154;
  t11157 = t3357*t11147;
  t11158 = t3368*t11151;
  t11159 = t11157 + t11158;
  t11161 = t3793*t11155;
  t11162 = t3591*t11159;
  t11163 = t11161 + t11162;
  t11165 = t3591*t11155;
  t11166 = -1.*t3793*t11159;
  t11167 = t11165 + t11166;
  t11186 = -1.*t3312*t6358;
  t11187 = t11186 + t11044;
  t11189 = -1.*t3368*t6448;
  t11190 = t3357*t11187;
  t11191 = t11189 + t11190;
  t11193 = t3368*t11187;
  t11194 = t6554 + t11193;
  t11196 = t3793*t11191;
  t11197 = t3591*t11194;
  t11198 = t11196 + t11197;
  t11200 = t3591*t11191;
  t11201 = -1.*t3793*t11194;
  t11202 = t11200 + t11201;
  t11178 = -0.21*t3312;
  t11179 = -0.049*t3328;
  t11180 = t11178 + t11179;
  t11182 = 0.049*t3312;
  t11183 = t11182 + t3332;
  t11213 = t3272*t11087;
  t11214 = t10640*t3286;
  t11215 = t11213 + t11214;
  t11218 = -1.*t3328*t11215;
  t11219 = t11218 + t11098;
  t11221 = -1.*t3312*t11215;
  t11222 = t11221 + t11103;
  t11224 = -1.*t3368*t11219;
  t11225 = t3357*t11222;
  t11226 = t11224 + t11225;
  t11228 = t3357*t11219;
  t11229 = t3368*t11222;
  t11230 = t11228 + t11229;
  t11232 = t3793*t11226;
  t11233 = t3591*t11230;
  t11234 = t11232 + t11233;
  t11236 = t3591*t11226;
  t11237 = -1.*t3793*t11230;
  t11238 = t11236 + t11237;
  t11249 = t3272*t11135;
  t11250 = t10402*t3286;
  t11251 = t11249 + t11250;
  t11254 = -1.*t3328*t11251;
  t11255 = t11254 + t11146;
  t11257 = -1.*t3312*t11251;
  t11258 = t11257 + t11150;
  t11260 = -1.*t3368*t11255;
  t11261 = t3357*t11258;
  t11262 = t11260 + t11261;
  t11264 = t3357*t11255;
  t11265 = t3368*t11258;
  t11266 = t11264 + t11265;
  t11268 = t3793*t11262;
  t11269 = t3591*t11266;
  t11270 = t11268 + t11269;
  t11272 = t3591*t11262;
  t11273 = -1.*t3793*t11266;
  t11274 = t11272 + t11273;
  t11292 = -1.*t3357*t6477;
  t11293 = t11189 + t11292;
  t11296 = t3793*t11293;
  t11297 = t11296 + t6638;
  t11299 = t3591*t11293;
  t11300 = -1.*t3793*t6606;
  t11301 = t11299 + t11300;
  t11285 = 0.0016*t3357;
  t11286 = t11285 + t3390;
  t11288 = -0.2707*t3357;
  t11289 = -0.0016*t3368;
  t11290 = t11288 + t11289;
  t11313 = t3312*t11215;
  t11314 = t3328*t11095;
  t11315 = t11313 + t11314;
  t11317 = -1.*t3357*t11315;
  t11318 = t11224 + t11317;
  t11320 = -1.*t3368*t11315;
  t11321 = t11228 + t11320;
  t11323 = t3793*t11318;
  t11324 = t3591*t11321;
  t11325 = t11323 + t11324;
  t11327 = t3591*t11318;
  t11328 = -1.*t3793*t11321;
  t11329 = t11327 + t11328;
  t11341 = t3312*t11251;
  t11342 = t3328*t11143;
  t11343 = t11341 + t11342;
  t11345 = -1.*t3357*t11343;
  t11346 = t11260 + t11345;
  t11348 = -1.*t3368*t11343;
  t11349 = t11264 + t11348;
  t11351 = t3793*t11346;
  t11352 = t3591*t11349;
  t11353 = t11351 + t11352;
  t11355 = t3591*t11346;
  t11356 = -1.*t3793*t11349;
  t11357 = t11355 + t11356;
  t11376 = -1.*t3591*t6509;
  t11377 = t11376 + t11300;
  t6832 = t4342*t6641;
  t11368 = -0.7055*t3591;
  t11369 = 0.0184*t3793;
  t11370 = t11368 + t11369;
  t11372 = -0.0184*t3591;
  t11373 = t11372 + t3799;
  t11387 = t3368*t11219;
  t11388 = t3357*t11315;
  t11389 = t11387 + t11388;
  t11392 = -1.*t3793*t11389;
  t11393 = t11392 + t11324;
  t11395 = -1.*t3591*t11389;
  t11396 = t11395 + t11328;
  t11407 = t3368*t11255;
  t11408 = t3357*t11343;
  t11409 = t11407 + t11408;
  t11412 = -1.*t3793*t11409;
  t11413 = t11412 + t11352;
  t11415 = -1.*t3591*t11409;
  t11416 = t11415 + t11356;
  t11379 = -1.*t4455*t6641;
  t6846 = -1.*t4455*t6701;
  t6876 = t6832 + t6846;
  t11427 = 0.0216*t4342;
  t11428 = t11427 + t5055;
  t11430 = -1.1135*t4342;
  t11431 = -0.0216*t4455;
  t11432 = t11430 + t11431;
  t11398 = -1.*t4455*t11393;
  t11440 = t3591*t11389;
  t11441 = t3793*t11321;
  t11442 = t11440 + t11441;
  t11402 = t4342*t11393;
  t11418 = -1.*t4455*t11413;
  t11452 = t3591*t11409;
  t11453 = t3793*t11349;
  t11454 = t11452 + t11453;
  t11422 = t4342*t11413;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t1038*t2202 + t2257*t2392 + t2681*t2790 + 0.1305*(t2681*t2694 + t1667*t2775*t2893) - 1.*t1667*t2893*t3022 + t3271*t3299 + t3306*t3310 + t3336*t3340 + t3344*t3352 + t3370*t3381 + t3450*t3513 + t3922*t4018 + t4243*t4336 + t4647*t4994 + t5056*t5296 + 0.0306*(t4455*t4994 + t4342*t5296) - 1.1312*(t4342*t4994 - 1.*t4455*t5296);
  p_output1[10]=t1384*t2893*t3022 + t1038*t5544 + t2392*t5619 + t2790*t5730 + 0.1305*t5840 + t3299*t5985 + t3310*t6277 + t3336*t6358 + t3344*t6391 + t3370*t6448 + t3450*t6477 + t3922*t6509 + t4243*t6606 + t4647*t6641 + t5056*t6701 + 0.0306*(t4455*t6641 + t4342*t6701) - 1.1312*t6876;
  p_output1[11]=0;
  p_output1[12]=t1038*t1384*t1771*t2893 + t1384*t1469*t2392*t2893 - 1.*t1384*t1703*t3022 + t2790*t7099 + 0.1305*(t1384*t1703*t2775 + t2694*t7099) + t3299*t7252 + t3310*t7343 + t3336*t7383 + t3344*t7435 + t3370*t7557 + t3450*t7676 + t3922*t7773 + t4243*t8078 + t4647*t8271 + t5056*t8444 + 0.0306*(t4455*t8271 + t4342*t8444) - 1.1312*(t4342*t8271 - 1.*t4455*t8444);
  p_output1[13]=t1038*t1667*t1771*t2893 + t1469*t1667*t2392*t2893 - 1.*t1667*t1703*t3022 + t2790*t9261 + 0.1305*(t1667*t1703*t2775 + t2694*t9261) + t3299*t9514 + t3310*t9529 + t3336*t9567 + t3344*t9607 + t3370*t9647 + t3450*t9693 + t3922*t9744 + t4243*t9769 + t4647*t9804 + t5056*t9831 + 0.0306*(t4455*t9804 + t4342*t9831) - 1.1312*(t4342*t9804 - 1.*t4455*t9831);
  p_output1[14]=-1.*t1038*t1703*t1771 - 1.*t1469*t1703*t2392 - 1.*t2893*t3022 + t10007*t3336 + t10018*t3344 + t10037*t3370 + t10043*t3450 + t10048*t3922 + t10062*t4243 + 0.0306*(t10088*t4342 + t10076*t4455) - 1.1312*(t10076*t4342 - 1.*t10088*t4455) + t10076*t4647 + t10088*t5056 + t2790*t9910 + 0.1305*(t2775*t2893 + t2694*t9910) + t3299*t9961 + t3310*t9979;
  p_output1[15]=t10125*t2392 + 0.1305*t10139*t2694 + t10139*t2790 + t10139*t2775*t3299 + t10156*t3310 + t10175*t3336 + t10186*t3344 + t10195*t3370 + t10202*t3450 + t10213*t3922 + t10222*t4243 + 0.0306*(t10245*t4342 + t10230*t4455) - 1.1312*(t10230*t4342 - 1.*t10245*t4455) + t10230*t4647 + t10245*t5056 + t1038*t5619;
  p_output1[16]=t10277*t1038 + t2202*t2392 + 0.1305*t10288*t2694 + t10288*t2790 + t10288*t2775*t3299 + t10300*t3310 + t10310*t3336 + t10324*t3344 + t10331*t3370 + t10336*t3450 + t10344*t3922 + t10350*t4243 + 0.0306*(t10367*t4342 + t10358*t4455) - 1.1312*(t10358*t4342 - 1.*t10367*t4455) + t10358*t4647 + t10367*t5056;
  p_output1[17]=t10403 + t10409 + t10413 + t10419 + t10428 + t10436 + t10447 + t10454 + t10463 + t10475 + t10482 + t10494 + t10502 + t10511 + t1038*t1469*t2893 - 1.*t1771*t2392*t2893;
  p_output1[18]=t10524*t3310 + t10530*t3336 + t10538*t3344 + t10548*t3370 + t10556*t3450 + t10571*t3922 + t10575*t4243 + 0.0306*(t10590*t4342 + t10579*t4455) - 1.1312*(t10579*t4342 - 1.*t10590*t4455) + t10579*t4647 + t10590*t5056 + 0.135*t2377*t5544 - 0.135*t141*t5619 + 0.1305*t2694*t6277 + t2790*t6277 + t2775*t3299*t6277;
  p_output1[19]=-0.135*t10277*t141 + 0.135*t10635*t2377 + 0.1305*t10640*t2694 + t10640*t2790 + t10640*t2775*t3299 + t10653*t3310 + t10664*t3336 + t10669*t3344 + t10682*t3370 + t10695*t3450 + t10701*t3922 + t10707*t4243 + 0.0306*(t10730*t4342 + t10716*t4455) - 1.1312*(t10716*t4342 - 1.*t10730*t4455) + t10716*t4647 + t10730*t5056;
  p_output1[20]=t10403 + t10409 + t10413 + t10419 + t10428 + t10436 + t10447 + t10454 + t10463 + t10475 + t10482 + t10494 + t10502 + t10511 - 0.135*t141*t1469*t2893 + 0.135*t1771*t2377*t2893;
  p_output1[21]=t10754*t1384*t2893 + t10789*t3370 + t10795*t3450 + t10800*t3922 + t10813*t4243 + 0.0306*(t10832*t4342 + t10826*t4455) - 1.1312*(t10826*t4342 - 1.*t10832*t4455) + t10826*t4647 + t10832*t5056 + t10766*t5730 + 0.1305*(-1.*t1384*t2694*t2893 - 1.*t2775*t5730) + t3299*t5840 + t3272*t3336*t5840 - 1.*t3286*t3344*t5840;
  p_output1[22]=t10766*t10858 + t10754*t1667*t2893 + 0.1305*(-1.*t10858*t2775 + t3266) + t10866*t3299 + t10866*t3272*t3336 - 1.*t10866*t3286*t3344 + t10887*t3370 + t10901*t3450 + t10911*t3922 + t10916*t4243 + 0.0306*(t10928*t4342 + t10922*t4455) - 1.1312*(t10922*t4342 - 1.*t10928*t4455) + t10922*t4647 + t10928*t5056;
  p_output1[23]=t10766*t10951 - 1.*t10754*t1703 + 0.1305*(t1703*t2694 - 1.*t10951*t2775) + t10956*t3299 + t10956*t3272*t3336 - 1.*t10956*t3286*t3344 + t10977*t3370 + t10984*t3450 + t10989*t3922 + t10997*t4243 + 0.0306*(t11010*t4342 + t11004*t4455) - 1.1312*(t11004*t4342 - 1.*t11010*t4455) + t11004*t4647 + t11010*t5056;
  p_output1[24]=t11035*t3344 + t11045*t3370 + t11041*t3450 + t11057*t3922 + t11050*t4243 - 1.1312*(t11067*t4342 - 1.*t11063*t4455) + 0.0306*(t11063*t4342 + t11067*t4455) + t11067*t4647 + t11063*t5056 + t11030*t5985 + t11026*t6277 + t3336*t6391;
  p_output1[25]=t10640*t11026 + t11030*t11087 + t11095*t3336 + t11091*t3344 + t11104*t3370 + t11099*t3450 + t11112*t3922 + t11108*t4243 - 1.1312*(t11121*t4342 - 1.*t11117*t4455) + 0.0306*(t11117*t4342 + t11121*t4455) + t11121*t4647 + t11117*t5056;
  p_output1[26]=t10402*t11026 + t11030*t11135 + t11143*t3336 + t11139*t3344 + t11151*t3370 + t11147*t3450 + t11159*t3922 + t11155*t4243 - 1.1312*(t11167*t4342 - 1.*t11163*t4455) + 0.0306*(t11163*t4342 + t11167*t4455) + t11167*t4647 + t11163*t5056;
  p_output1[27]=t11187*t3370 + t11194*t3922 + t11191*t4243 - 1.1312*(t11202*t4342 - 1.*t11198*t4455) + 0.0306*(t11198*t4342 + t11202*t4455) + t11202*t4647 + t11198*t5056 + t11180*t6358 + t11183*t6391 + t3450*t6448;
  p_output1[28]=t11095*t11183 + t11180*t11215 + t11222*t3370 + t11219*t3450 + t11230*t3922 + t11226*t4243 - 1.1312*(t11238*t4342 - 1.*t11234*t4455) + 0.0306*(t11234*t4342 + t11238*t4455) + t11238*t4647 + t11234*t5056;
  p_output1[29]=t11143*t11183 + t11180*t11251 + t11258*t3370 + t11255*t3450 + t11266*t3922 + t11262*t4243 - 1.1312*(t11274*t4342 - 1.*t11270*t4455) + 0.0306*(t11270*t4342 + t11274*t4455) + t11274*t4647 + t11270*t5056;
  p_output1[30]=t11293*t4243 - 1.1312*(t11301*t4342 - 1.*t11297*t4455) + 0.0306*(t11297*t4342 + t11301*t4455) + t11301*t4647 + t11297*t5056 + t11286*t6448 + t11290*t6477 + t3922*t6606;
  p_output1[31]=t11219*t11286 + t11290*t11315 + t11321*t3922 + t11318*t4243 - 1.1312*(t11329*t4342 - 1.*t11325*t4455) + 0.0306*(t11325*t4342 + t11329*t4455) + t11329*t4647 + t11325*t5056;
  p_output1[32]=t11255*t11286 + t11290*t11343 + t11349*t3922 + t11346*t4243 - 1.1312*(t11357*t4342 - 1.*t11353*t4455) + 0.0306*(t11353*t4342 + t11357*t4455) + t11357*t4647 + t11353*t5056;
  p_output1[33]=-1.1312*(t11379 + t11377*t4342) + t11377*t4647 + t11370*t6509 + t11373*t6606 + t5056*t6641 + 0.0306*(t11377*t4455 + t6832);
  p_output1[34]=t11321*t11373 + t11370*t11389 - 1.1312*(t11398 + t11396*t4342) + 0.0306*(t11402 + t11396*t4455) + t11396*t4647 + t11393*t5056;
  p_output1[35]=t11349*t11373 + t11370*t11409 - 1.1312*(t11418 + t11416*t4342) + 0.0306*(t11422 + t11416*t4455) + t11416*t4647 + t11413*t5056;
  p_output1[36]=t11428*t6641 + t11432*t6701 - 1.1312*(t11379 - 1.*t4342*t6701) + 0.0306*t6876;
  p_output1[37]=t11393*t11428 + t11432*t11442 - 1.1312*(t11398 - 1.*t11442*t4342) + 0.0306*(t11402 - 1.*t11442*t4455);
  p_output1[38]=t11413*t11428 + t11432*t11454 - 1.1312*(t11418 - 1.*t11454*t4342) + 0.0306*(t11422 - 1.*t11454*t4455);
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "J_LeftToeBottom_mex.hh"

namespace SymExpression
{

void J_LeftToeBottom_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
