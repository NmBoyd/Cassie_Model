/*
 * Automatically Generated from Mathematica.
 * Fri 16 Mar 2018 11:08:08 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t4856;
  double t4859;
  double t4862;
  double t4854;
  double t4867;
  double t130;
  double t4857;
  double t4869;
  double t4871;
  double t4892;
  double t4898;
  double t4899;
  double t4903;
  double t4927;
  double t4931;
  double t4933;
  double t4954;
  double t4920;
  double t4924;
  double t4926;
  double t4961;
  double t5002;
  double t5008;
  double t5011;
  double t5017;
  double t4991;
  double t4997;
  double t5001;
  double t5033;
  double t5035;
  double t5036;
  double t5041;
  double t5044;
  double t5049;
  double t5053;
  double t5059;
  double t5060;
  double t5062;
  double t5079;
  double t5083;
  double t5084;
  double t5092;
  double t5093;
  double t5095;
  double t5098;
  double t5105;
  double t5106;
  double t5107;
  double t5113;
  double t5114;
  double t5115;
  double t5118;
  double t5119;
  double t5121;
  double t5123;
  double t5127;
  double t5128;
  double t5129;
  double t5138;
  double t5139;
  double t5142;
  double t5145;
  double t5147;
  double t5149;
  double t5153;
  double t5158;
  double t5160;
  double t5161;
  double t5171;
  double t5172;
  double t5174;
  double t1641;
  double t4815;
  double t4821;
  double t4838;
  double t4905;
  double t4907;
  double t5188;
  double t5189;
  double t5190;
  double t5192;
  double t5193;
  double t5194;
  double t4946;
  double t4955;
  double t4957;
  double t4962;
  double t4963;
  double t4964;
  double t5196;
  double t5197;
  double t5198;
  double t5014;
  double t5023;
  double t5028;
  double t5037;
  double t5038;
  double t5039;
  double t5052;
  double t5054;
  double t5055;
  double t5207;
  double t5208;
  double t5210;
  double t5212;
  double t5213;
  double t5215;
  double t5065;
  double t5070;
  double t5071;
  double t5097;
  double t5100;
  double t5103;
  double t5218;
  double t5219;
  double t5221;
  double t5223;
  double t5224;
  double t5225;
  double t5110;
  double t5111;
  double t5112;
  double t5122;
  double t5124;
  double t5126;
  double t5228;
  double t5229;
  double t5231;
  double t5234;
  double t5235;
  double t5237;
  double t5133;
  double t5134;
  double t5136;
  double t5150;
  double t5154;
  double t5157;
  double t5240;
  double t5241;
  double t5243;
  double t5245;
  double t5246;
  double t5247;
  double t5166;
  double t5167;
  double t5169;
  double t5249;
  double t5250;
  double t5251;
  double t5253;
  double t5254;
  double t5255;
  double t5268;
  double t5269;
  double t5270;
  double t5277;
  double t5278;
  double t5279;
  double t5281;
  double t5282;
  double t5283;
  double t5285;
  double t5286;
  double t5287;
  double t5289;
  double t5290;
  double t5291;
  double t5293;
  double t5294;
  double t5295;
  double t5297;
  double t5298;
  double t5299;
  double t5301;
  double t5302;
  double t5303;
  double t5305;
  double t5306;
  double t5307;
  double t5309;
  double t5310;
  double t5311;
  double t5313;
  double t5314;
  double t5315;
  double t5328;
  double t5329;
  double t5330;
  double t5337;
  double t5338;
  double t5339;
  double t5341;
  double t5342;
  double t5343;
  double t5345;
  double t5346;
  double t5347;
  double t5349;
  double t5350;
  double t5351;
  double t5353;
  double t5354;
  double t5355;
  double t5357;
  double t5358;
  double t5359;
  double t5361;
  double t5362;
  double t5363;
  double t5365;
  double t5366;
  double t5367;
  double t5369;
  double t5370;
  double t5371;
  double t5373;
  double t5374;
  double t5375;
  double t5388;
  double t5389;
  double t5390;
  double t5397;
  double t5398;
  double t5399;
  double t5401;
  double t5402;
  double t5403;
  double t5405;
  double t5406;
  double t5407;
  double t5409;
  double t5410;
  double t5411;
  double t5413;
  double t5414;
  double t5415;
  double t5417;
  double t5418;
  double t5419;
  double t5421;
  double t5422;
  double t5423;
  double t5425;
  double t5426;
  double t5427;
  double t5429;
  double t5430;
  double t5431;
  double t5433;
  double t5434;
  double t5435;
  double t5447;
  double t5448;
  double t5449;
  double t5451;
  double t5452;
  double t5456;
  double t5457;
  double t5458;
  double t5460;
  double t5461;
  double t5462;
  double t5464;
  double t5465;
  double t5466;
  double t5468;
  double t5469;
  double t5470;
  double t5472;
  double t5473;
  double t5474;
  double t5476;
  double t5477;
  double t5478;
  double t5480;
  double t5481;
  double t5482;
  double t5484;
  double t5485;
  double t5486;
  double t5488;
  double t5489;
  double t5490;
  double t5501;
  double t5502;
  double t5503;
  double t5506;
  double t5507;
  double t5508;
  double t5512;
  double t5513;
  double t5515;
  double t5516;
  double t5517;
  double t5519;
  double t5520;
  double t5521;
  double t5523;
  double t5524;
  double t5525;
  double t5527;
  double t5528;
  double t5529;
  double t5531;
  double t5532;
  double t5533;
  double t5535;
  double t5536;
  double t5537;
  double t5539;
  double t5540;
  double t5541;
  double t5543;
  double t5544;
  double t5545;
  double t5558;
  double t5559;
  double t5560;
  double t5564;
  double t5565;
  double t5566;
  double t5568;
  double t5569;
  double t5570;
  double t5572;
  double t5573;
  double t5574;
  double t5576;
  double t5577;
  double t5578;
  double t5580;
  double t5581;
  double t5582;
  double t5584;
  double t5585;
  double t5586;
  double t5588;
  double t5589;
  double t5590;
  double t5592;
  double t5593;
  double t5594;
  double t5596;
  double t5597;
  double t5598;
  double t5614;
  double t5615;
  double t5617;
  double t5618;
  double t5619;
  double t5621;
  double t5622;
  double t5623;
  double t5625;
  double t5626;
  double t5627;
  double t5629;
  double t5630;
  double t5631;
  double t5633;
  double t5634;
  double t5635;
  double t5637;
  double t5638;
  double t5639;
  double t5641;
  double t5642;
  double t5643;
  double t5645;
  double t5646;
  double t5647;
  double t5659;
  double t5660;
  double t5661;
  double t5663;
  double t5664;
  double t5668;
  double t5669;
  double t5671;
  double t5672;
  double t5673;
  double t5675;
  double t5676;
  double t5677;
  double t5679;
  double t5680;
  double t5681;
  double t5683;
  double t5684;
  double t5685;
  double t5687;
  double t5688;
  double t5689;
  double t5691;
  double t5692;
  double t5693;
  double t5695;
  double t5696;
  double t5697;
  double t5699;
  double t5700;
  double t5701;
  double t5561;
  double t5562;
  double t5563;
  double t5567;
  double t5571;
  double t5575;
  double t5579;
  double t5583;
  double t5587;
  double t5591;
  double t5595;
  double t5599;
  double t5600;
  double t5601;
  double t5602;
  double t5603;
  double t5604;
  double t5605;
  double t5606;
  double t5607;
  double t5201;
  double t5202;
  double t5203;
  double t5729;
  double t5730;
  double t5731;
  double t5733;
  double t5734;
  double t5735;
  double t5737;
  double t5738;
  double t5739;
  double t5741;
  double t5742;
  double t5743;
  double t5745;
  double t5746;
  double t5747;
  double t5749;
  double t5750;
  double t5751;
  double t5715;
  double t5716;
  double t5717;
  double t5719;
  double t5720;
  double t5763;
  double t5764;
  double t5765;
  double t5767;
  double t5768;
  double t5769;
  double t5776;
  double t5777;
  double t5778;
  double t5780;
  double t5781;
  double t5782;
  double t5784;
  double t5785;
  double t5786;
  double t5788;
  double t5789;
  double t5790;
  double t5792;
  double t5793;
  double t5794;
  double t5796;
  double t5797;
  double t5798;
  double t5810;
  double t5811;
  double t5812;
  double t5814;
  double t5815;
  double t5816;
  double t5824;
  double t5825;
  double t5826;
  double t5828;
  double t5829;
  double t5830;
  double t5832;
  double t5833;
  double t5834;
  double t5836;
  double t5837;
  double t5838;
  double t5840;
  double t5841;
  double t5842;
  double t5844;
  double t5845;
  double t5846;
  double t5864;
  double t5865;
  double t5866;
  double t5869;
  double t5870;
  double t5872;
  double t5873;
  double t5874;
  double t5876;
  double t5877;
  double t5878;
  double t5880;
  double t5881;
  double t5882;
  double t5884;
  double t5885;
  double t5886;
  double t5888;
  double t5889;
  double t5890;
  double t5857;
  double t5858;
  double t5860;
  double t5861;
  double t5862;
  double t5902;
  double t5903;
  double t5904;
  double t5906;
  double t5907;
  double t5908;
  double t5910;
  double t5911;
  double t5912;
  double t5914;
  double t5915;
  double t5916;
  double t5918;
  double t5919;
  double t5920;
  double t5922;
  double t5923;
  double t5924;
  double t5926;
  double t5927;
  double t5928;
  double t5930;
  double t5931;
  double t5932;
  double t5934;
  double t5935;
  double t5936;
  double t5948;
  double t5949;
  double t5950;
  double t5952;
  double t5953;
  double t5954;
  double t5956;
  double t5957;
  double t5958;
  double t5960;
  double t5961;
  double t5962;
  double t5964;
  double t5965;
  double t5966;
  double t5968;
  double t5969;
  double t5970;
  double t5972;
  double t5973;
  double t5974;
  double t5976;
  double t5977;
  double t5978;
  double t5980;
  double t5981;
  double t5982;
  double t6001;
  double t6002;
  double t6004;
  double t6005;
  double t6006;
  double t6008;
  double t6009;
  double t6011;
  double t6012;
  double t6013;
  double t6015;
  double t6016;
  double t6017;
  double t5993;
  double t5994;
  double t5995;
  double t5997;
  double t5998;
  double t6028;
  double t6029;
  double t6030;
  double t6033;
  double t6034;
  double t6036;
  double t6037;
  double t6039;
  double t6040;
  double t6041;
  double t6043;
  double t6044;
  double t6045;
  double t6047;
  double t6048;
  double t6049;
  double t6051;
  double t6052;
  double t6053;
  double t6064;
  double t6065;
  double t6066;
  double t6069;
  double t6070;
  double t6072;
  double t6073;
  double t6075;
  double t6076;
  double t6077;
  double t6079;
  double t6080;
  double t6081;
  double t6083;
  double t6084;
  double t6085;
  double t6087;
  double t6088;
  double t6089;
  double t6107;
  double t6108;
  double t6111;
  double t6112;
  double t6114;
  double t6115;
  double t6116;
  double t6100;
  double t6101;
  double t6103;
  double t6104;
  double t6105;
  double t6128;
  double t6129;
  double t6130;
  double t6132;
  double t6133;
  double t6135;
  double t6136;
  double t6138;
  double t6139;
  double t6140;
  double t6142;
  double t6143;
  double t6144;
  double t6156;
  double t6157;
  double t6158;
  double t6160;
  double t6161;
  double t6163;
  double t6164;
  double t6166;
  double t6167;
  double t6168;
  double t6170;
  double t6171;
  double t6172;
  double t6191;
  double t6192;
  double t5261;
  double t6183;
  double t6184;
  double t6185;
  double t6187;
  double t6188;
  double t6202;
  double t6203;
  double t6204;
  double t6207;
  double t6208;
  double t6210;
  double t6211;
  double t6222;
  double t6223;
  double t6224;
  double t6227;
  double t6228;
  double t6230;
  double t6231;
  double t6194;
  double t5262;
  double t5263;
  double t6242;
  double t6243;
  double t6245;
  double t6246;
  double t6247;
  double t6213;
  double t6255;
  double t6256;
  double t6257;
  double t6217;
  double t6233;
  double t6267;
  double t6268;
  double t6269;
  double t6237;
  t4856 = Cos(var1[5]);
  t4859 = Sin(var1[3]);
  t4862 = Sin(var1[4]);
  t4854 = Cos(var1[3]);
  t4867 = Sin(var1[5]);
  t130 = Cos(var1[6]);
  t4857 = -1.*t4854*t4856;
  t4869 = -1.*t4859*t4862*t4867;
  t4871 = t4857 + t4869;
  t4892 = -1.*t4856*t4859*t4862;
  t4898 = t4854*t4867;
  t4899 = t4892 + t4898;
  t4903 = Sin(var1[6]);
  t4927 = Cos(var1[7]);
  t4931 = -1.*t4927;
  t4933 = 1. + t4931;
  t4954 = Sin(var1[7]);
  t4920 = t130*t4871;
  t4924 = t4899*t4903;
  t4926 = t4920 + t4924;
  t4961 = Cos(var1[4]);
  t5002 = Cos(var1[8]);
  t5008 = -1.*t5002;
  t5011 = 1. + t5008;
  t5017 = Sin(var1[8]);
  t4991 = -1.*t4961*t4927*t4859;
  t4997 = t4926*t4954;
  t5001 = t4991 + t4997;
  t5033 = t130*t4899;
  t5035 = -1.*t4871*t4903;
  t5036 = t5033 + t5035;
  t5041 = Cos(var1[9]);
  t5044 = -1.*t5041;
  t5049 = 1. + t5044;
  t5053 = Sin(var1[9]);
  t5059 = t5002*t5001;
  t5060 = t5036*t5017;
  t5062 = t5059 + t5060;
  t5079 = t5002*t5036;
  t5083 = -1.*t5001*t5017;
  t5084 = t5079 + t5083;
  t5092 = Cos(var1[10]);
  t5093 = -1.*t5092;
  t5095 = 1. + t5093;
  t5098 = Sin(var1[10]);
  t5105 = -1.*t5053*t5062;
  t5106 = t5041*t5084;
  t5107 = t5105 + t5106;
  t5113 = t5041*t5062;
  t5114 = t5053*t5084;
  t5115 = t5113 + t5114;
  t5118 = Cos(var1[11]);
  t5119 = -1.*t5118;
  t5121 = 1. + t5119;
  t5123 = Sin(var1[11]);
  t5127 = t5098*t5107;
  t5128 = t5092*t5115;
  t5129 = t5127 + t5128;
  t5138 = t5092*t5107;
  t5139 = -1.*t5098*t5115;
  t5142 = t5138 + t5139;
  t5145 = Cos(var1[12]);
  t5147 = -1.*t5145;
  t5149 = 1. + t5147;
  t5153 = Sin(var1[12]);
  t5158 = -1.*t5123*t5129;
  t5160 = t5118*t5142;
  t5161 = t5158 + t5160;
  t5171 = t5118*t5129;
  t5172 = t5123*t5142;
  t5174 = t5171 + t5172;
  t1641 = -1.*t130;
  t4815 = 1. + t1641;
  t4821 = 0.135*t4815;
  t4838 = 0. + t4821;
  t4905 = -0.135*t4903;
  t4907 = 0. + t4905;
  t5188 = -1.*t4856*t4859;
  t5189 = t4854*t4862*t4867;
  t5190 = t5188 + t5189;
  t5192 = t4854*t4856*t4862;
  t5193 = t4859*t4867;
  t5194 = t5192 + t5193;
  t4946 = 0.135*t4933;
  t4955 = 0.049*t4954;
  t4957 = 0. + t4946 + t4955;
  t4962 = -0.049*t4933;
  t4963 = 0.135*t4954;
  t4964 = 0. + t4962 + t4963;
  t5196 = t130*t5190;
  t5197 = t5194*t4903;
  t5198 = t5196 + t5197;
  t5014 = -0.049*t5011;
  t5023 = -0.09*t5017;
  t5028 = 0. + t5014 + t5023;
  t5037 = -0.09*t5011;
  t5038 = 0.049*t5017;
  t5039 = 0. + t5037 + t5038;
  t5052 = -0.049*t5049;
  t5054 = -0.21*t5053;
  t5055 = 0. + t5052 + t5054;
  t5207 = t4854*t4961*t4927;
  t5208 = t5198*t4954;
  t5210 = t5207 + t5208;
  t5212 = t130*t5194;
  t5213 = -1.*t5190*t4903;
  t5215 = t5212 + t5213;
  t5065 = -0.21*t5049;
  t5070 = 0.049*t5053;
  t5071 = 0. + t5065 + t5070;
  t5097 = -0.2707*t5095;
  t5100 = 0.0016*t5098;
  t5103 = 0. + t5097 + t5100;
  t5218 = t5002*t5210;
  t5219 = t5215*t5017;
  t5221 = t5218 + t5219;
  t5223 = t5002*t5215;
  t5224 = -1.*t5210*t5017;
  t5225 = t5223 + t5224;
  t5110 = -0.0016*t5095;
  t5111 = -0.2707*t5098;
  t5112 = 0. + t5110 + t5111;
  t5122 = 0.0184*t5121;
  t5124 = -0.7055*t5123;
  t5126 = 0. + t5122 + t5124;
  t5228 = -1.*t5053*t5221;
  t5229 = t5041*t5225;
  t5231 = t5228 + t5229;
  t5234 = t5041*t5221;
  t5235 = t5053*t5225;
  t5237 = t5234 + t5235;
  t5133 = -0.7055*t5121;
  t5134 = -0.0184*t5123;
  t5136 = 0. + t5133 + t5134;
  t5150 = -1.1135*t5149;
  t5154 = 0.0216*t5153;
  t5157 = 0. + t5150 + t5154;
  t5240 = t5098*t5231;
  t5241 = t5092*t5237;
  t5243 = t5240 + t5241;
  t5245 = t5092*t5231;
  t5246 = -1.*t5098*t5237;
  t5247 = t5245 + t5246;
  t5166 = -0.0216*t5149;
  t5167 = -1.1135*t5153;
  t5169 = 0. + t5166 + t5167;
  t5249 = -1.*t5123*t5243;
  t5250 = t5118*t5247;
  t5251 = t5249 + t5250;
  t5253 = t5118*t5243;
  t5254 = t5123*t5247;
  t5255 = t5253 + t5254;
  t5268 = t4854*t4961*t130*t4867;
  t5269 = t4854*t4961*t4856*t4903;
  t5270 = t5268 + t5269;
  t5277 = -1.*t4854*t4927*t4862;
  t5278 = t5270*t4954;
  t5279 = t5277 + t5278;
  t5281 = t4854*t4961*t4856*t130;
  t5282 = -1.*t4854*t4961*t4867*t4903;
  t5283 = t5281 + t5282;
  t5285 = t5002*t5279;
  t5286 = t5283*t5017;
  t5287 = t5285 + t5286;
  t5289 = t5002*t5283;
  t5290 = -1.*t5279*t5017;
  t5291 = t5289 + t5290;
  t5293 = -1.*t5053*t5287;
  t5294 = t5041*t5291;
  t5295 = t5293 + t5294;
  t5297 = t5041*t5287;
  t5298 = t5053*t5291;
  t5299 = t5297 + t5298;
  t5301 = t5098*t5295;
  t5302 = t5092*t5299;
  t5303 = t5301 + t5302;
  t5305 = t5092*t5295;
  t5306 = -1.*t5098*t5299;
  t5307 = t5305 + t5306;
  t5309 = -1.*t5123*t5303;
  t5310 = t5118*t5307;
  t5311 = t5309 + t5310;
  t5313 = t5118*t5303;
  t5314 = t5123*t5307;
  t5315 = t5313 + t5314;
  t5328 = t4961*t130*t4859*t4867;
  t5329 = t4961*t4856*t4859*t4903;
  t5330 = t5328 + t5329;
  t5337 = -1.*t4927*t4859*t4862;
  t5338 = t5330*t4954;
  t5339 = t5337 + t5338;
  t5341 = t4961*t4856*t130*t4859;
  t5342 = -1.*t4961*t4859*t4867*t4903;
  t5343 = t5341 + t5342;
  t5345 = t5002*t5339;
  t5346 = t5343*t5017;
  t5347 = t5345 + t5346;
  t5349 = t5002*t5343;
  t5350 = -1.*t5339*t5017;
  t5351 = t5349 + t5350;
  t5353 = -1.*t5053*t5347;
  t5354 = t5041*t5351;
  t5355 = t5353 + t5354;
  t5357 = t5041*t5347;
  t5358 = t5053*t5351;
  t5359 = t5357 + t5358;
  t5361 = t5098*t5355;
  t5362 = t5092*t5359;
  t5363 = t5361 + t5362;
  t5365 = t5092*t5355;
  t5366 = -1.*t5098*t5359;
  t5367 = t5365 + t5366;
  t5369 = -1.*t5123*t5363;
  t5370 = t5118*t5367;
  t5371 = t5369 + t5370;
  t5373 = t5118*t5363;
  t5374 = t5123*t5367;
  t5375 = t5373 + t5374;
  t5388 = -1.*t130*t4862*t4867;
  t5389 = -1.*t4856*t4862*t4903;
  t5390 = t5388 + t5389;
  t5397 = -1.*t4961*t4927;
  t5398 = t5390*t4954;
  t5399 = t5397 + t5398;
  t5401 = -1.*t4856*t130*t4862;
  t5402 = t4862*t4867*t4903;
  t5403 = t5401 + t5402;
  t5405 = t5002*t5399;
  t5406 = t5403*t5017;
  t5407 = t5405 + t5406;
  t5409 = t5002*t5403;
  t5410 = -1.*t5399*t5017;
  t5411 = t5409 + t5410;
  t5413 = -1.*t5053*t5407;
  t5414 = t5041*t5411;
  t5415 = t5413 + t5414;
  t5417 = t5041*t5407;
  t5418 = t5053*t5411;
  t5419 = t5417 + t5418;
  t5421 = t5098*t5415;
  t5422 = t5092*t5419;
  t5423 = t5421 + t5422;
  t5425 = t5092*t5415;
  t5426 = -1.*t5098*t5419;
  t5427 = t5425 + t5426;
  t5429 = -1.*t5123*t5423;
  t5430 = t5118*t5427;
  t5431 = t5429 + t5430;
  t5433 = t5118*t5423;
  t5434 = t5123*t5427;
  t5435 = t5433 + t5434;
  t5447 = t4856*t4859;
  t5448 = -1.*t4854*t4862*t4867;
  t5449 = t5447 + t5448;
  t5451 = t5449*t4903;
  t5452 = t5212 + t5451;
  t5456 = t130*t5449;
  t5457 = -1.*t5194*t4903;
  t5458 = t5456 + t5457;
  t5460 = t5002*t5452*t4954;
  t5461 = t5458*t5017;
  t5462 = t5460 + t5461;
  t5464 = t5002*t5458;
  t5465 = -1.*t5452*t4954*t5017;
  t5466 = t5464 + t5465;
  t5468 = -1.*t5053*t5462;
  t5469 = t5041*t5466;
  t5470 = t5468 + t5469;
  t5472 = t5041*t5462;
  t5473 = t5053*t5466;
  t5474 = t5472 + t5473;
  t5476 = t5098*t5470;
  t5477 = t5092*t5474;
  t5478 = t5476 + t5477;
  t5480 = t5092*t5470;
  t5481 = -1.*t5098*t5474;
  t5482 = t5480 + t5481;
  t5484 = -1.*t5123*t5478;
  t5485 = t5118*t5482;
  t5486 = t5484 + t5485;
  t5488 = t5118*t5478;
  t5489 = t5123*t5482;
  t5490 = t5488 + t5489;
  t5501 = t4856*t4859*t4862;
  t5502 = -1.*t4854*t4867;
  t5503 = t5501 + t5502;
  t5506 = t130*t5503;
  t5507 = t4871*t4903;
  t5508 = t5506 + t5507;
  t5512 = -1.*t5503*t4903;
  t5513 = t4920 + t5512;
  t5515 = t5002*t5508*t4954;
  t5516 = t5513*t5017;
  t5517 = t5515 + t5516;
  t5519 = t5002*t5513;
  t5520 = -1.*t5508*t4954*t5017;
  t5521 = t5519 + t5520;
  t5523 = -1.*t5053*t5517;
  t5524 = t5041*t5521;
  t5525 = t5523 + t5524;
  t5527 = t5041*t5517;
  t5528 = t5053*t5521;
  t5529 = t5527 + t5528;
  t5531 = t5098*t5525;
  t5532 = t5092*t5529;
  t5533 = t5531 + t5532;
  t5535 = t5092*t5525;
  t5536 = -1.*t5098*t5529;
  t5537 = t5535 + t5536;
  t5539 = -1.*t5123*t5533;
  t5540 = t5118*t5537;
  t5541 = t5539 + t5540;
  t5543 = t5118*t5533;
  t5544 = t5123*t5537;
  t5545 = t5543 + t5544;
  t5558 = t4961*t4856*t130;
  t5559 = -1.*t4961*t4867*t4903;
  t5560 = t5558 + t5559;
  t5564 = -1.*t4961*t130*t4867;
  t5565 = -1.*t4961*t4856*t4903;
  t5566 = t5564 + t5565;
  t5568 = t5002*t5560*t4954;
  t5569 = t5566*t5017;
  t5570 = t5568 + t5569;
  t5572 = t5002*t5566;
  t5573 = -1.*t5560*t4954*t5017;
  t5574 = t5572 + t5573;
  t5576 = -1.*t5053*t5570;
  t5577 = t5041*t5574;
  t5578 = t5576 + t5577;
  t5580 = t5041*t5570;
  t5581 = t5053*t5574;
  t5582 = t5580 + t5581;
  t5584 = t5098*t5578;
  t5585 = t5092*t5582;
  t5586 = t5584 + t5585;
  t5588 = t5092*t5578;
  t5589 = -1.*t5098*t5582;
  t5590 = t5588 + t5589;
  t5592 = -1.*t5123*t5586;
  t5593 = t5118*t5590;
  t5594 = t5592 + t5593;
  t5596 = t5118*t5586;
  t5597 = t5123*t5590;
  t5598 = t5596 + t5597;
  t5614 = -1.*t130*t5190;
  t5615 = t5614 + t5457;
  t5617 = t5002*t5215*t4954;
  t5618 = t5615*t5017;
  t5619 = t5617 + t5618;
  t5621 = t5002*t5615;
  t5622 = -1.*t5215*t4954*t5017;
  t5623 = t5621 + t5622;
  t5625 = -1.*t5053*t5619;
  t5626 = t5041*t5623;
  t5627 = t5625 + t5626;
  t5629 = t5041*t5619;
  t5630 = t5053*t5623;
  t5631 = t5629 + t5630;
  t5633 = t5098*t5627;
  t5634 = t5092*t5631;
  t5635 = t5633 + t5634;
  t5637 = t5092*t5627;
  t5638 = -1.*t5098*t5631;
  t5639 = t5637 + t5638;
  t5641 = -1.*t5123*t5635;
  t5642 = t5118*t5639;
  t5643 = t5641 + t5642;
  t5645 = t5118*t5635;
  t5646 = t5123*t5639;
  t5647 = t5645 + t5646;
  t5659 = t4854*t4856;
  t5660 = t4859*t4862*t4867;
  t5661 = t5659 + t5660;
  t5663 = -1.*t5661*t4903;
  t5664 = t5506 + t5663;
  t5668 = -1.*t130*t5661;
  t5669 = t5668 + t5512;
  t5671 = t5002*t5664*t4954;
  t5672 = t5669*t5017;
  t5673 = t5671 + t5672;
  t5675 = t5002*t5669;
  t5676 = -1.*t5664*t4954*t5017;
  t5677 = t5675 + t5676;
  t5679 = -1.*t5053*t5673;
  t5680 = t5041*t5677;
  t5681 = t5679 + t5680;
  t5683 = t5041*t5673;
  t5684 = t5053*t5677;
  t5685 = t5683 + t5684;
  t5687 = t5098*t5681;
  t5688 = t5092*t5685;
  t5689 = t5687 + t5688;
  t5691 = t5092*t5681;
  t5692 = -1.*t5098*t5685;
  t5693 = t5691 + t5692;
  t5695 = -1.*t5123*t5689;
  t5696 = t5118*t5693;
  t5697 = t5695 + t5696;
  t5699 = t5118*t5689;
  t5700 = t5123*t5693;
  t5701 = t5699 + t5700;
  t5561 = 0.1305*t4927*t5560;
  t5562 = t5560*t4957;
  t5563 = t5560*t4954*t5028;
  t5567 = t5566*t5039;
  t5571 = t5055*t5570;
  t5575 = t5071*t5574;
  t5579 = t5103*t5578;
  t5583 = t5112*t5582;
  t5587 = t5126*t5586;
  t5591 = t5136*t5590;
  t5595 = t5157*t5594;
  t5599 = t5169*t5598;
  t5600 = t5153*t5594;
  t5601 = t5145*t5598;
  t5602 = t5600 + t5601;
  t5603 = -0.0216*t5602;
  t5604 = t5145*t5594;
  t5605 = -1.*t5153*t5598;
  t5606 = t5604 + t5605;
  t5607 = -1.1135*t5606;
  t5201 = t4927*t5198;
  t5202 = -1.*t4854*t4961*t4954;
  t5203 = t5201 + t5202;
  t5729 = -1.*t5002*t5053*t5203;
  t5730 = -1.*t5041*t5203*t5017;
  t5731 = t5729 + t5730;
  t5733 = t5041*t5002*t5203;
  t5734 = -1.*t5053*t5203*t5017;
  t5735 = t5733 + t5734;
  t5737 = t5098*t5731;
  t5738 = t5092*t5735;
  t5739 = t5737 + t5738;
  t5741 = t5092*t5731;
  t5742 = -1.*t5098*t5735;
  t5743 = t5741 + t5742;
  t5745 = -1.*t5123*t5739;
  t5746 = t5118*t5743;
  t5747 = t5745 + t5746;
  t5749 = t5118*t5739;
  t5750 = t5123*t5743;
  t5751 = t5749 + t5750;
  t5715 = 0.135*t4927;
  t5716 = -0.049*t4954;
  t5717 = t5715 + t5716;
  t5719 = 0.049*t4927;
  t5720 = t5719 + t4963;
  t5763 = t130*t5661;
  t5764 = t5503*t4903;
  t5765 = t5763 + t5764;
  t5767 = t4927*t5765;
  t5768 = -1.*t4961*t4859*t4954;
  t5769 = t5767 + t5768;
  t5776 = -1.*t5002*t5053*t5769;
  t5777 = -1.*t5041*t5769*t5017;
  t5778 = t5776 + t5777;
  t5780 = t5041*t5002*t5769;
  t5781 = -1.*t5053*t5769*t5017;
  t5782 = t5780 + t5781;
  t5784 = t5098*t5778;
  t5785 = t5092*t5782;
  t5786 = t5784 + t5785;
  t5788 = t5092*t5778;
  t5789 = -1.*t5098*t5782;
  t5790 = t5788 + t5789;
  t5792 = -1.*t5123*t5786;
  t5793 = t5118*t5790;
  t5794 = t5792 + t5793;
  t5796 = t5118*t5786;
  t5797 = t5123*t5790;
  t5798 = t5796 + t5797;
  t5810 = t4961*t130*t4867;
  t5811 = t4961*t4856*t4903;
  t5812 = t5810 + t5811;
  t5814 = t4927*t5812;
  t5815 = t4862*t4954;
  t5816 = t5814 + t5815;
  t5824 = -1.*t5002*t5053*t5816;
  t5825 = -1.*t5041*t5816*t5017;
  t5826 = t5824 + t5825;
  t5828 = t5041*t5002*t5816;
  t5829 = -1.*t5053*t5816*t5017;
  t5830 = t5828 + t5829;
  t5832 = t5098*t5826;
  t5833 = t5092*t5830;
  t5834 = t5832 + t5833;
  t5836 = t5092*t5826;
  t5837 = -1.*t5098*t5830;
  t5838 = t5836 + t5837;
  t5840 = -1.*t5123*t5834;
  t5841 = t5118*t5838;
  t5842 = t5840 + t5841;
  t5844 = t5118*t5834;
  t5845 = t5123*t5838;
  t5846 = t5844 + t5845;
  t5864 = -1.*t5002*t5210;
  t5865 = -1.*t5215*t5017;
  t5866 = t5864 + t5865;
  t5869 = t5053*t5866;
  t5870 = t5869 + t5229;
  t5872 = t5041*t5866;
  t5873 = -1.*t5053*t5225;
  t5874 = t5872 + t5873;
  t5876 = -1.*t5098*t5870;
  t5877 = t5092*t5874;
  t5878 = t5876 + t5877;
  t5880 = t5092*t5870;
  t5881 = t5098*t5874;
  t5882 = t5880 + t5881;
  t5884 = t5123*t5878;
  t5885 = t5118*t5882;
  t5886 = t5884 + t5885;
  t5888 = t5118*t5878;
  t5889 = -1.*t5123*t5882;
  t5890 = t5888 + t5889;
  t5857 = 0.049*t5002;
  t5858 = t5857 + t5023;
  t5860 = -0.09*t5002;
  t5861 = -0.049*t5017;
  t5862 = t5860 + t5861;
  t5902 = t4961*t4927*t4859;
  t5903 = t5765*t4954;
  t5904 = t5902 + t5903;
  t5906 = -1.*t5002*t5904;
  t5907 = -1.*t5664*t5017;
  t5908 = t5906 + t5907;
  t5910 = t5002*t5664;
  t5911 = -1.*t5904*t5017;
  t5912 = t5910 + t5911;
  t5914 = t5053*t5908;
  t5915 = t5041*t5912;
  t5916 = t5914 + t5915;
  t5918 = t5041*t5908;
  t5919 = -1.*t5053*t5912;
  t5920 = t5918 + t5919;
  t5922 = -1.*t5098*t5916;
  t5923 = t5092*t5920;
  t5924 = t5922 + t5923;
  t5926 = t5092*t5916;
  t5927 = t5098*t5920;
  t5928 = t5926 + t5927;
  t5930 = t5123*t5924;
  t5931 = t5118*t5928;
  t5932 = t5930 + t5931;
  t5934 = t5118*t5924;
  t5935 = -1.*t5123*t5928;
  t5936 = t5934 + t5935;
  t5948 = -1.*t4927*t4862;
  t5949 = t5812*t4954;
  t5950 = t5948 + t5949;
  t5952 = -1.*t5002*t5950;
  t5953 = -1.*t5560*t5017;
  t5954 = t5952 + t5953;
  t5956 = t5002*t5560;
  t5957 = -1.*t5950*t5017;
  t5958 = t5956 + t5957;
  t5960 = t5053*t5954;
  t5961 = t5041*t5958;
  t5962 = t5960 + t5961;
  t5964 = t5041*t5954;
  t5965 = -1.*t5053*t5958;
  t5966 = t5964 + t5965;
  t5968 = -1.*t5098*t5962;
  t5969 = t5092*t5966;
  t5970 = t5968 + t5969;
  t5972 = t5092*t5962;
  t5973 = t5098*t5966;
  t5974 = t5972 + t5973;
  t5976 = t5123*t5970;
  t5977 = t5118*t5974;
  t5978 = t5976 + t5977;
  t5980 = t5118*t5970;
  t5981 = -1.*t5123*t5974;
  t5982 = t5980 + t5981;
  t6001 = -1.*t5041*t5221;
  t6002 = t6001 + t5873;
  t6004 = -1.*t5098*t5231;
  t6005 = t5092*t6002;
  t6006 = t6004 + t6005;
  t6008 = t5098*t6002;
  t6009 = t5245 + t6008;
  t6011 = t5123*t6006;
  t6012 = t5118*t6009;
  t6013 = t6011 + t6012;
  t6015 = t5118*t6006;
  t6016 = -1.*t5123*t6009;
  t6017 = t6015 + t6016;
  t5993 = -0.21*t5041;
  t5994 = -0.049*t5053;
  t5995 = t5993 + t5994;
  t5997 = 0.049*t5041;
  t5998 = t5997 + t5054;
  t6028 = t5002*t5904;
  t6029 = t5664*t5017;
  t6030 = t6028 + t6029;
  t6033 = -1.*t5053*t6030;
  t6034 = t6033 + t5915;
  t6036 = -1.*t5041*t6030;
  t6037 = t6036 + t5919;
  t6039 = -1.*t5098*t6034;
  t6040 = t5092*t6037;
  t6041 = t6039 + t6040;
  t6043 = t5092*t6034;
  t6044 = t5098*t6037;
  t6045 = t6043 + t6044;
  t6047 = t5123*t6041;
  t6048 = t5118*t6045;
  t6049 = t6047 + t6048;
  t6051 = t5118*t6041;
  t6052 = -1.*t5123*t6045;
  t6053 = t6051 + t6052;
  t6064 = t5002*t5950;
  t6065 = t5560*t5017;
  t6066 = t6064 + t6065;
  t6069 = -1.*t5053*t6066;
  t6070 = t6069 + t5961;
  t6072 = -1.*t5041*t6066;
  t6073 = t6072 + t5965;
  t6075 = -1.*t5098*t6070;
  t6076 = t5092*t6073;
  t6077 = t6075 + t6076;
  t6079 = t5092*t6070;
  t6080 = t5098*t6073;
  t6081 = t6079 + t6080;
  t6083 = t5123*t6077;
  t6084 = t5118*t6081;
  t6085 = t6083 + t6084;
  t6087 = t5118*t6077;
  t6088 = -1.*t5123*t6081;
  t6089 = t6087 + t6088;
  t6107 = -1.*t5092*t5237;
  t6108 = t6004 + t6107;
  t6111 = t5123*t6108;
  t6112 = t6111 + t5250;
  t6114 = t5118*t6108;
  t6115 = -1.*t5123*t5247;
  t6116 = t6114 + t6115;
  t6100 = 0.0016*t5092;
  t6101 = t6100 + t5111;
  t6103 = -0.2707*t5092;
  t6104 = -0.0016*t5098;
  t6105 = t6103 + t6104;
  t6128 = t5041*t6030;
  t6129 = t5053*t5912;
  t6130 = t6128 + t6129;
  t6132 = -1.*t5092*t6130;
  t6133 = t6039 + t6132;
  t6135 = -1.*t5098*t6130;
  t6136 = t6043 + t6135;
  t6138 = t5123*t6133;
  t6139 = t5118*t6136;
  t6140 = t6138 + t6139;
  t6142 = t5118*t6133;
  t6143 = -1.*t5123*t6136;
  t6144 = t6142 + t6143;
  t6156 = t5041*t6066;
  t6157 = t5053*t5958;
  t6158 = t6156 + t6157;
  t6160 = -1.*t5092*t6158;
  t6161 = t6075 + t6160;
  t6163 = -1.*t5098*t6158;
  t6164 = t6079 + t6163;
  t6166 = t5123*t6161;
  t6167 = t5118*t6164;
  t6168 = t6166 + t6167;
  t6170 = t5118*t6161;
  t6171 = -1.*t5123*t6164;
  t6172 = t6170 + t6171;
  t6191 = -1.*t5118*t5243;
  t6192 = t6191 + t6115;
  t5261 = t5145*t5251;
  t6183 = -0.7055*t5118;
  t6184 = 0.0184*t5123;
  t6185 = t6183 + t6184;
  t6187 = -0.0184*t5118;
  t6188 = t6187 + t5124;
  t6202 = t5098*t6034;
  t6203 = t5092*t6130;
  t6204 = t6202 + t6203;
  t6207 = -1.*t5123*t6204;
  t6208 = t6207 + t6139;
  t6210 = -1.*t5118*t6204;
  t6211 = t6210 + t6143;
  t6222 = t5098*t6070;
  t6223 = t5092*t6158;
  t6224 = t6222 + t6223;
  t6227 = -1.*t5123*t6224;
  t6228 = t6227 + t6167;
  t6230 = -1.*t5118*t6224;
  t6231 = t6230 + t6171;
  t6194 = -1.*t5153*t5251;
  t5262 = -1.*t5153*t5255;
  t5263 = t5261 + t5262;
  t6242 = 0.0216*t5145;
  t6243 = t6242 + t5167;
  t6245 = -1.1135*t5145;
  t6246 = -0.0216*t5153;
  t6247 = t6245 + t6246;
  t6213 = -1.*t5153*t6208;
  t6255 = t5118*t6204;
  t6256 = t5123*t6136;
  t6257 = t6255 + t6256;
  t6217 = t5145*t6208;
  t6233 = -1.*t5153*t6228;
  t6267 = t5118*t6224;
  t6268 = t5123*t6164;
  t6269 = t6267 + t6268;
  t6237 = t5145*t6228;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t4838*t4871 + t4899*t4907 + t4926*t4957 + 0.1305*(t4926*t4927 + t4859*t4954*t4961) - 1.*t4859*t4961*t4964 + t5001*t5028 + t5036*t5039 + t5055*t5062 + t5071*t5084 + t5103*t5107 + t5112*t5115 + t5126*t5129 + t5136*t5142 + t5157*t5161 + t5169*t5174 - 0.0216*(t5153*t5161 + t5145*t5174) - 1.1135*(t5145*t5161 - 1.*t5153*t5174);
  p_output1[10]=t4854*t4961*t4964 + t4838*t5190 + t4907*t5194 + t4957*t5198 + 0.1305*t5203 + t5028*t5210 + t5039*t5215 + t5055*t5221 + t5071*t5225 + t5103*t5231 + t5112*t5237 + t5126*t5243 + t5136*t5247 + t5157*t5251 + t5169*t5255 - 0.0216*(t5153*t5251 + t5145*t5255) - 1.1135*t5263;
  p_output1[11]=0;
  p_output1[12]=t4838*t4854*t4867*t4961 + t4854*t4856*t4907*t4961 - 1.*t4854*t4862*t4964 + t4957*t5270 + 0.1305*(t4854*t4862*t4954 + t4927*t5270) + t5028*t5279 + t5039*t5283 + t5055*t5287 + t5071*t5291 + t5103*t5295 + t5112*t5299 + t5126*t5303 + t5136*t5307 + t5157*t5311 + t5169*t5315 - 0.0216*(t5153*t5311 + t5145*t5315) - 1.1135*(t5145*t5311 - 1.*t5153*t5315);
  p_output1[13]=t4838*t4859*t4867*t4961 + t4856*t4859*t4907*t4961 - 1.*t4859*t4862*t4964 + t4957*t5330 + 0.1305*(t4859*t4862*t4954 + t4927*t5330) + t5028*t5339 + t5039*t5343 + t5055*t5347 + t5071*t5351 + t5103*t5355 + t5112*t5359 + t5126*t5363 + t5136*t5367 + t5157*t5371 + t5169*t5375 - 0.0216*(t5153*t5371 + t5145*t5375) - 1.1135*(t5145*t5371 - 1.*t5153*t5375);
  p_output1[14]=-1.*t4838*t4862*t4867 - 1.*t4856*t4862*t4907 - 1.*t4961*t4964 + t4957*t5390 + 0.1305*(t4954*t4961 + t4927*t5390) + t5028*t5399 + t5039*t5403 + t5055*t5407 + t5071*t5411 + t5103*t5415 + t5112*t5419 + t5126*t5423 + t5136*t5427 + t5157*t5431 + t5169*t5435 - 0.0216*(t5153*t5431 + t5145*t5435) - 1.1135*(t5145*t5431 - 1.*t5153*t5435);
  p_output1[15]=t4838*t5194 + t4907*t5449 + 0.1305*t4927*t5452 + t4957*t5452 + t4954*t5028*t5452 + t5039*t5458 + t5055*t5462 + t5071*t5466 + t5103*t5470 + t5112*t5474 + t5126*t5478 + t5136*t5482 + t5157*t5486 + t5169*t5490 - 0.0216*(t5153*t5486 + t5145*t5490) - 1.1135*(t5145*t5486 - 1.*t5153*t5490);
  p_output1[16]=t4871*t4907 + t4838*t5503 + 0.1305*t4927*t5508 + t4957*t5508 + t4954*t5028*t5508 + t5039*t5513 + t5055*t5517 + t5071*t5521 + t5103*t5525 + t5112*t5529 + t5126*t5533 + t5136*t5537 + t5157*t5541 + t5169*t5545 - 0.0216*(t5153*t5541 + t5145*t5545) - 1.1135*(t5145*t5541 - 1.*t5153*t5545);
  p_output1[17]=t4838*t4856*t4961 - 1.*t4867*t4907*t4961 + t5561 + t5562 + t5563 + t5567 + t5571 + t5575 + t5579 + t5583 + t5587 + t5591 + t5595 + t5599 + t5603 + t5607;
  p_output1[18]=0.135*t4903*t5190 - 0.135*t130*t5194 + 0.1305*t4927*t5215 + t4957*t5215 + t4954*t5028*t5215 + t5039*t5615 + t5055*t5619 + t5071*t5623 + t5103*t5627 + t5112*t5631 + t5126*t5635 + t5136*t5639 + t5157*t5643 + t5169*t5647 - 0.0216*(t5153*t5643 + t5145*t5647) - 1.1135*(t5145*t5643 - 1.*t5153*t5647);
  p_output1[19]=-0.135*t130*t5503 + 0.135*t4903*t5661 + 0.1305*t4927*t5664 + t4957*t5664 + t4954*t5028*t5664 + t5039*t5669 + t5055*t5673 + t5071*t5677 + t5103*t5681 + t5112*t5685 + t5126*t5689 + t5136*t5693 + t5157*t5697 + t5169*t5701 - 0.0216*(t5153*t5697 + t5145*t5701) - 1.1135*(t5145*t5697 - 1.*t5153*t5701);
  p_output1[20]=-0.135*t130*t4856*t4961 + 0.135*t4867*t4903*t4961 + t5561 + t5562 + t5563 + t5567 + t5571 + t5575 + t5579 + t5583 + t5587 + t5591 + t5595 + t5599 + t5603 + t5607;
  p_output1[21]=0.1305*(-1.*t4854*t4927*t4961 - 1.*t4954*t5198) + t5028*t5203 + t5002*t5055*t5203 - 1.*t5017*t5071*t5203 + t4854*t4961*t5717 + t5198*t5720 + t5103*t5731 + t5112*t5735 + t5126*t5739 + t5136*t5743 + t5157*t5747 + t5169*t5751 - 0.0216*(t5153*t5747 + t5145*t5751) - 1.1135*(t5145*t5747 - 1.*t5153*t5751);
  p_output1[22]=t4859*t4961*t5717 + t5720*t5765 + 0.1305*(t4991 - 1.*t4954*t5765) + t5028*t5769 + t5002*t5055*t5769 - 1.*t5017*t5071*t5769 + t5103*t5778 + t5112*t5782 + t5126*t5786 + t5136*t5790 + t5157*t5794 + t5169*t5798 - 0.0216*(t5153*t5794 + t5145*t5798) - 1.1135*(t5145*t5794 - 1.*t5153*t5798);
  p_output1[23]=-1.*t4862*t5717 + t5720*t5812 + 0.1305*(t4862*t4927 - 1.*t4954*t5812) + t5028*t5816 + t5002*t5055*t5816 - 1.*t5017*t5071*t5816 + t5103*t5826 + t5112*t5830 + t5126*t5834 + t5136*t5838 + t5157*t5842 + t5169*t5846 - 0.0216*(t5153*t5842 + t5145*t5846) - 1.1135*(t5145*t5842 - 1.*t5153*t5846);
  p_output1[24]=t5055*t5225 + t5215*t5858 + t5210*t5862 + t5071*t5866 + t5112*t5870 + t5103*t5874 + t5136*t5878 + t5126*t5882 + t5169*t5886 + t5157*t5890 - 1.1135*(-1.*t5153*t5886 + t5145*t5890) - 0.0216*(t5145*t5886 + t5153*t5890);
  p_output1[25]=t5664*t5858 + t5862*t5904 + t5071*t5908 + t5055*t5912 + t5112*t5916 + t5103*t5920 + t5136*t5924 + t5126*t5928 + t5169*t5932 + t5157*t5936 - 1.1135*(-1.*t5153*t5932 + t5145*t5936) - 0.0216*(t5145*t5932 + t5153*t5936);
  p_output1[26]=t5560*t5858 + t5862*t5950 + t5071*t5954 + t5055*t5958 + t5112*t5962 + t5103*t5966 + t5136*t5970 + t5126*t5974 + t5169*t5978 + t5157*t5982 - 1.1135*(-1.*t5153*t5978 + t5145*t5982) - 0.0216*(t5145*t5978 + t5153*t5982);
  p_output1[27]=t5112*t5231 + t5221*t5995 + t5225*t5998 + t5103*t6002 + t5136*t6006 + t5126*t6009 + t5169*t6013 + t5157*t6017 - 1.1135*(-1.*t5153*t6013 + t5145*t6017) - 0.0216*(t5145*t6013 + t5153*t6017);
  p_output1[28]=t5912*t5998 + t5995*t6030 + t5112*t6034 + t5103*t6037 + t5136*t6041 + t5126*t6045 + t5169*t6049 + t5157*t6053 - 1.1135*(-1.*t5153*t6049 + t5145*t6053) - 0.0216*(t5145*t6049 + t5153*t6053);
  p_output1[29]=t5958*t5998 + t5995*t6066 + t5112*t6070 + t5103*t6073 + t5136*t6077 + t5126*t6081 + t5169*t6085 + t5157*t6089 - 1.1135*(-1.*t5153*t6085 + t5145*t6089) - 0.0216*(t5145*t6085 + t5153*t6089);
  p_output1[30]=t5126*t5247 + t5231*t6101 + t5237*t6105 + t5136*t6108 + t5169*t6112 + t5157*t6116 - 1.1135*(-1.*t5153*t6112 + t5145*t6116) - 0.0216*(t5145*t6112 + t5153*t6116);
  p_output1[31]=t6034*t6101 + t6105*t6130 + t5136*t6133 + t5126*t6136 + t5169*t6140 + t5157*t6144 - 1.1135*(-1.*t5153*t6140 + t5145*t6144) - 0.0216*(t5145*t6140 + t5153*t6144);
  p_output1[32]=t6070*t6101 + t6105*t6158 + t5136*t6161 + t5126*t6164 + t5169*t6168 + t5157*t6172 - 1.1135*(-1.*t5153*t6168 + t5145*t6172) - 0.0216*(t5145*t6168 + t5153*t6172);
  p_output1[33]=t5169*t5251 + t5243*t6185 + t5247*t6188 + t5157*t6192 - 0.0216*(t5261 + t5153*t6192) - 1.1135*(t5145*t6192 + t6194);
  p_output1[34]=t6136*t6188 + t6185*t6204 + t5169*t6208 + t5157*t6211 - 1.1135*(t5145*t6211 + t6213) - 0.0216*(t5153*t6211 + t6217);
  p_output1[35]=t6164*t6188 + t6185*t6224 + t5169*t6228 + t5157*t6231 - 1.1135*(t5145*t6231 + t6233) - 0.0216*(t5153*t6231 + t6237);
  p_output1[36]=-0.0216*t5263 - 1.1135*(-1.*t5145*t5255 + t6194) + t5251*t6243 + t5255*t6247;
  p_output1[37]=t6208*t6243 + t6247*t6257 - 1.1135*(t6213 - 1.*t5145*t6257) - 0.0216*(t6217 - 1.*t5153*t6257);
  p_output1[38]=t6228*t6243 + t6247*t6269 - 1.1135*(t6233 - 1.*t5145*t6269) - 0.0216*(t6237 - 1.*t5153*t6269);
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "J_toe_joint_left_mex.hh"

namespace SymExpression
{

void J_toe_joint_left_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
