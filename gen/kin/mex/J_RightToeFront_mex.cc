/*
 * Automatically Generated from Mathematica.
 * Mon 2 Jul 2018 15:34:18 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t1602;
  double t2313;
  double t2180;
  double t2290;
  double t2319;
  double t423;
  double t456;
  double t514;
  double t1055;
  double t1790;
  double t2310;
  double t2394;
  double t2536;
  double t2664;
  double t2960;
  double t2993;
  double t3013;
  double t185;
  double t3337;
  double t3348;
  double t3418;
  double t3492;
  double t3514;
  double t3553;
  double t3563;
  double t3582;
  double t3601;
  double t3701;
  double t3935;
  double t3943;
  double t3960;
  double t4119;
  double t4196;
  double t4210;
  double t4305;
  double t4360;
  double t4386;
  double t4426;
  double t4503;
  double t4535;
  double t4630;
  double t4655;
  double t4660;
  double t4664;
  double t4683;
  double t4703;
  double t4741;
  double t4753;
  double t4881;
  double t4884;
  double t4895;
  double t4932;
  double t4935;
  double t4957;
  double t4981;
  double t5089;
  double t5109;
  double t5123;
  double t5190;
  double t5203;
  double t5218;
  double t5252;
  double t5255;
  double t5288;
  double t5298;
  double t5325;
  double t5330;
  double t5337;
  double t5373;
  double t5374;
  double t5385;
  double t567;
  double t1174;
  double t1303;
  double t1809;
  double t1863;
  double t2689;
  double t2735;
  double t2788;
  double t2886;
  double t3084;
  double t3267;
  double t3282;
  double t5559;
  double t5567;
  double t5573;
  double t5593;
  double t5596;
  double t5597;
  double t3560;
  double t3574;
  double t3577;
  double t5616;
  double t5656;
  double t5660;
  double t3884;
  double t3894;
  double t3908;
  double t4213;
  double t4329;
  double t4333;
  double t5677;
  double t5678;
  double t5708;
  double t5825;
  double t5833;
  double t5863;
  double t4469;
  double t4472;
  double t4501;
  double t4674;
  double t4688;
  double t4698;
  double t5885;
  double t5902;
  double t5914;
  double t5921;
  double t5923;
  double t5927;
  double t4792;
  double t4858;
  double t4863;
  double t4966;
  double t4996;
  double t5016;
  double t5932;
  double t5951;
  double t5960;
  double t5966;
  double t5971;
  double t5972;
  double t5164;
  double t5171;
  double t5183;
  double t5294;
  double t5307;
  double t5315;
  double t5997;
  double t6003;
  double t6020;
  double t6033;
  double t6037;
  double t6039;
  double t5353;
  double t5357;
  double t5362;
  double t6057;
  double t6071;
  double t6081;
  double t6089;
  double t6094;
  double t6097;
  double t6215;
  double t6223;
  double t6230;
  double t6250;
  double t6260;
  double t6265;
  double t6299;
  double t6302;
  double t6303;
  double t6310;
  double t6312;
  double t6319;
  double t6322;
  double t6325;
  double t6331;
  double t6348;
  double t6351;
  double t6352;
  double t6356;
  double t6360;
  double t6363;
  double t6376;
  double t6377;
  double t6379;
  double t6391;
  double t6396;
  double t6397;
  double t6419;
  double t6424;
  double t6429;
  double t6435;
  double t6436;
  double t6438;
  double t6509;
  double t6527;
  double t6530;
  double t6535;
  double t6545;
  double t6553;
  double t6577;
  double t6583;
  double t6584;
  double t6591;
  double t6600;
  double t6605;
  double t6610;
  double t6612;
  double t6615;
  double t6619;
  double t6620;
  double t6621;
  double t6633;
  double t6639;
  double t6641;
  double t6660;
  double t6662;
  double t6669;
  double t6690;
  double t6691;
  double t6694;
  double t6699;
  double t6704;
  double t6708;
  double t6717;
  double t6720;
  double t6723;
  double t6813;
  double t6821;
  double t6824;
  double t6833;
  double t6847;
  double t6849;
  double t6878;
  double t6880;
  double t6886;
  double t6889;
  double t6897;
  double t6902;
  double t6913;
  double t6915;
  double t6917;
  double t6920;
  double t6923;
  double t6928;
  double t6930;
  double t6939;
  double t6941;
  double t6946;
  double t6956;
  double t6964;
  double t6973;
  double t6978;
  double t6984;
  double t6988;
  double t6991;
  double t6994;
  double t7000;
  double t7009;
  double t7010;
  double t7065;
  double t7075;
  double t7078;
  double t7110;
  double t7116;
  double t7091;
  double t7092;
  double t7093;
  double t7141;
  double t7145;
  double t7146;
  double t7152;
  double t7172;
  double t7174;
  double t7178;
  double t7181;
  double t7186;
  double t7193;
  double t7199;
  double t7210;
  double t7214;
  double t7215;
  double t7223;
  double t7230;
  double t7232;
  double t7237;
  double t7242;
  double t7249;
  double t7252;
  double t7257;
  double t7258;
  double t7262;
  double t7293;
  double t7294;
  double t7295;
  double t7308;
  double t7314;
  double t7317;
  double t7303;
  double t7305;
  double t7333;
  double t7336;
  double t7339;
  double t7344;
  double t7349;
  double t7353;
  double t7361;
  double t7362;
  double t7367;
  double t7384;
  double t7390;
  double t7391;
  double t7397;
  double t7400;
  double t7406;
  double t7409;
  double t7411;
  double t7413;
  double t7428;
  double t7429;
  double t7431;
  double t7438;
  double t7439;
  double t7441;
  double t7516;
  double t7526;
  double t7528;
  double t7487;
  double t7490;
  double t7499;
  double t7553;
  double t7555;
  double t7560;
  double t7563;
  double t7567;
  double t7572;
  double t7575;
  double t7584;
  double t7585;
  double t7596;
  double t7598;
  double t7606;
  double t7617;
  double t7621;
  double t7623;
  double t7627;
  double t7629;
  double t7632;
  double t7640;
  double t7641;
  double t7643;
  double t7649;
  double t7651;
  double t7658;
  double t7710;
  double t7712;
  double t7728;
  double t7732;
  double t7748;
  double t7752;
  double t7753;
  double t7768;
  double t7776;
  double t7787;
  double t7789;
  double t7796;
  double t7798;
  double t7820;
  double t7831;
  double t7841;
  double t7842;
  double t7856;
  double t7860;
  double t7863;
  double t7865;
  double t7866;
  double t7879;
  double t7891;
  double t7894;
  double t7896;
  double t7950;
  double t7958;
  double t7970;
  double t7998;
  double t7999;
  double t7976;
  double t7996;
  double t8031;
  double t8034;
  double t8038;
  double t8055;
  double t8059;
  double t8065;
  double t8085;
  double t8087;
  double t8096;
  double t8100;
  double t8101;
  double t8103;
  double t8112;
  double t8114;
  double t8116;
  double t8135;
  double t8148;
  double t8166;
  double t8186;
  double t8193;
  double t8199;
  double t8227;
  double t8230;
  double t8240;
  double t7502;
  double t7532;
  double t7544;
  double t7552;
  double t7562;
  double t7574;
  double t7592;
  double t7610;
  double t7625;
  double t7637;
  double t7648;
  double t7667;
  double t7670;
  double t7672;
  double t7673;
  double t7674;
  double t7680;
  double t7684;
  double t7689;
  double t7696;
  double t5761;
  double t5762;
  double t5777;
  double t8375;
  double t8380;
  double t8384;
  double t8405;
  double t8406;
  double t8408;
  double t8414;
  double t8424;
  double t8425;
  double t8436;
  double t8441;
  double t8448;
  double t8457;
  double t8459;
  double t8463;
  double t8467;
  double t8475;
  double t8476;
  double t8310;
  double t8314;
  double t8315;
  double t8338;
  double t8341;
  double t8553;
  double t8557;
  double t8559;
  double t8571;
  double t8573;
  double t8577;
  double t8597;
  double t8598;
  double t8602;
  double t8608;
  double t8610;
  double t8612;
  double t8619;
  double t8623;
  double t8624;
  double t8633;
  double t8637;
  double t8639;
  double t8648;
  double t8654;
  double t8655;
  double t8661;
  double t8666;
  double t8674;
  double t8730;
  double t8732;
  double t8754;
  double t8763;
  double t8769;
  double t8771;
  double t8797;
  double t8804;
  double t8805;
  double t8808;
  double t8813;
  double t8816;
  double t8831;
  double t8832;
  double t8844;
  double t8858;
  double t8860;
  double t8864;
  double t8867;
  double t8868;
  double t8873;
  double t8877;
  double t8882;
  double t8885;
  double t9012;
  double t9021;
  double t9022;
  double t9036;
  double t9037;
  double t9045;
  double t9051;
  double t9052;
  double t9055;
  double t9059;
  double t9067;
  double t9084;
  double t9090;
  double t9095;
  double t9112;
  double t9120;
  double t9122;
  double t9128;
  double t9141;
  double t9145;
  double t8959;
  double t8968;
  double t8989;
  double t8990;
  double t9003;
  double t9200;
  double t9205;
  double t9209;
  double t9222;
  double t9223;
  double t9228;
  double t9237;
  double t9238;
  double t9257;
  double t9260;
  double t9267;
  double t9271;
  double t9277;
  double t9281;
  double t9282;
  double t9292;
  double t9297;
  double t9308;
  double t9314;
  double t9315;
  double t9316;
  double t9323;
  double t9325;
  double t9328;
  double t9335;
  double t9337;
  double t9341;
  double t9434;
  double t9447;
  double t9449;
  double t9478;
  double t9487;
  double t9490;
  double t9496;
  double t9515;
  double t9521;
  double t9529;
  double t9531;
  double t9540;
  double t9544;
  double t9553;
  double t9554;
  double t9561;
  double t9563;
  double t9575;
  double t9580;
  double t9588;
  double t9589;
  double t9595;
  double t9608;
  double t9609;
  double t9622;
  double t9631;
  double t9640;
  double t9739;
  double t9753;
  double t9768;
  double t9778;
  double t9788;
  double t9802;
  double t9804;
  double t9806;
  double t9809;
  double t9812;
  double t9816;
  double t9817;
  double t9820;
  double t9693;
  double t9697;
  double t9700;
  double t9713;
  double t9728;
  double t9893;
  double t9895;
  double t9907;
  double t9915;
  double t9921;
  double t9926;
  double t9928;
  double t9937;
  double t9939;
  double t9942;
  double t9956;
  double t9959;
  double t9961;
  double t9975;
  double t9977;
  double t9981;
  double t10001;
  double t10005;
  double t10010;
  double t10050;
  double t10052;
  double t10053;
  double t10070;
  double t10080;
  double t10091;
  double t10096;
  double t10098;
  double t10103;
  double t10107;
  double t10114;
  double t10119;
  double t10122;
  double t10125;
  double t10126;
  double t10134;
  double t10137;
  double t10140;
  double t10141;
  double t10203;
  double t10204;
  double t10212;
  double t10214;
  double t10228;
  double t10230;
  double t10233;
  double t10175;
  double t10176;
  double t10187;
  double t10194;
  double t10199;
  double t10296;
  double t10298;
  double t10300;
  double t10307;
  double t10309;
  double t10317;
  double t10324;
  double t10332;
  double t10342;
  double t10344;
  double t10349;
  double t10350;
  double t10351;
  double t10403;
  double t10414;
  double t10417;
  double t10425;
  double t10427;
  double t10434;
  double t10439;
  double t10448;
  double t10454;
  double t10461;
  double t10479;
  double t10482;
  double t10486;
  double t10562;
  double t10568;
  double t6145;
  double t10519;
  double t10523;
  double t10528;
  double t10542;
  double t10544;
  double t10597;
  double t10601;
  double t10608;
  double t10616;
  double t10620;
  double t10642;
  double t10649;
  double t10698;
  double t10700;
  double t10702;
  double t10710;
  double t10713;
  double t10719;
  double t10723;
  double t10571;
  double t6156;
  double t6157;
  double t10754;
  double t10755;
  double t10759;
  double t10760;
  double t10765;
  double t10655;
  double t10793;
  double t10794;
  double t10795;
  double t10676;
  double t10729;
  double t10823;
  double t10824;
  double t10826;
  double t10745;
  t1602 = Sin(var1[3]);
  t2313 = Cos(var1[3]);
  t2180 = Cos(var1[5]);
  t2290 = Sin(var1[4]);
  t2319 = Sin(var1[5]);
  t423 = Cos(var1[14]);
  t456 = -1.*t423;
  t514 = 1. + t456;
  t1055 = Sin(var1[14]);
  t1790 = Sin(var1[13]);
  t2310 = -1.*t2180*t1602*t2290;
  t2394 = t2313*t2319;
  t2536 = t2310 + t2394;
  t2664 = Cos(var1[13]);
  t2960 = -1.*t2313*t2180;
  t2993 = -1.*t1602*t2290*t2319;
  t3013 = t2960 + t2993;
  t185 = Cos(var1[4]);
  t3337 = t1790*t2536;
  t3348 = t2664*t3013;
  t3418 = t3337 + t3348;
  t3492 = Cos(var1[15]);
  t3514 = -1.*t3492;
  t3553 = 1. + t3514;
  t3563 = Sin(var1[15]);
  t3582 = t2664*t2536;
  t3601 = -1.*t1790*t3013;
  t3701 = t3582 + t3601;
  t3935 = -1.*t423*t185*t1602;
  t3943 = t1055*t3418;
  t3960 = t3935 + t3943;
  t4119 = Cos(var1[16]);
  t4196 = -1.*t4119;
  t4210 = 1. + t4196;
  t4305 = Sin(var1[16]);
  t4360 = t3563*t3701;
  t4386 = t3492*t3960;
  t4426 = t4360 + t4386;
  t4503 = t3492*t3701;
  t4535 = -1.*t3563*t3960;
  t4630 = t4503 + t4535;
  t4655 = Cos(var1[17]);
  t4660 = -1.*t4655;
  t4664 = 1. + t4660;
  t4683 = Sin(var1[17]);
  t4703 = -1.*t4305*t4426;
  t4741 = t4119*t4630;
  t4753 = t4703 + t4741;
  t4881 = t4119*t4426;
  t4884 = t4305*t4630;
  t4895 = t4881 + t4884;
  t4932 = Cos(var1[18]);
  t4935 = -1.*t4932;
  t4957 = 1. + t4935;
  t4981 = Sin(var1[18]);
  t5089 = t4683*t4753;
  t5109 = t4655*t4895;
  t5123 = t5089 + t5109;
  t5190 = t4655*t4753;
  t5203 = -1.*t4683*t4895;
  t5218 = t5190 + t5203;
  t5252 = Cos(var1[19]);
  t5255 = -1.*t5252;
  t5288 = 1. + t5255;
  t5298 = Sin(var1[19]);
  t5325 = -1.*t4981*t5123;
  t5330 = t4932*t5218;
  t5337 = t5325 + t5330;
  t5373 = t4932*t5123;
  t5374 = t4981*t5218;
  t5385 = t5373 + t5374;
  t567 = -0.049*t514;
  t1174 = -0.135*t1055;
  t1303 = 0. + t567 + t1174;
  t1809 = 0.135*t1790;
  t1863 = 0. + t1809;
  t2689 = -1.*t2664;
  t2735 = 1. + t2689;
  t2788 = -0.135*t2735;
  t2886 = 0. + t2788;
  t3084 = -0.135*t514;
  t3267 = 0.049*t1055;
  t3282 = 0. + t3084 + t3267;
  t5559 = t2313*t2180*t2290;
  t5567 = t1602*t2319;
  t5573 = t5559 + t5567;
  t5593 = -1.*t2180*t1602;
  t5596 = t2313*t2290*t2319;
  t5597 = t5593 + t5596;
  t3560 = -0.09*t3553;
  t3574 = 0.049*t3563;
  t3577 = 0. + t3560 + t3574;
  t5616 = t1790*t5573;
  t5656 = t2664*t5597;
  t5660 = t5616 + t5656;
  t3884 = -0.049*t3553;
  t3894 = -0.09*t3563;
  t3908 = 0. + t3884 + t3894;
  t4213 = -0.049*t4210;
  t4329 = -0.21*t4305;
  t4333 = 0. + t4213 + t4329;
  t5677 = t2664*t5573;
  t5678 = -1.*t1790*t5597;
  t5708 = t5677 + t5678;
  t5825 = t423*t2313*t185;
  t5833 = t1055*t5660;
  t5863 = t5825 + t5833;
  t4469 = -0.21*t4210;
  t4472 = 0.049*t4305;
  t4501 = 0. + t4469 + t4472;
  t4674 = -0.2707*t4664;
  t4688 = 0.0016*t4683;
  t4698 = 0. + t4674 + t4688;
  t5885 = t3563*t5708;
  t5902 = t3492*t5863;
  t5914 = t5885 + t5902;
  t5921 = t3492*t5708;
  t5923 = -1.*t3563*t5863;
  t5927 = t5921 + t5923;
  t4792 = -0.0016*t4664;
  t4858 = -0.2707*t4683;
  t4863 = 0. + t4792 + t4858;
  t4966 = 0.0184*t4957;
  t4996 = -0.7055*t4981;
  t5016 = 0. + t4966 + t4996;
  t5932 = -1.*t4305*t5914;
  t5951 = t4119*t5927;
  t5960 = t5932 + t5951;
  t5966 = t4119*t5914;
  t5971 = t4305*t5927;
  t5972 = t5966 + t5971;
  t5164 = -0.7055*t4957;
  t5171 = -0.0184*t4981;
  t5183 = 0. + t5164 + t5171;
  t5294 = -1.1135*t5288;
  t5307 = 0.0216*t5298;
  t5315 = 0. + t5294 + t5307;
  t5997 = t4683*t5960;
  t6003 = t4655*t5972;
  t6020 = t5997 + t6003;
  t6033 = t4655*t5960;
  t6037 = -1.*t4683*t5972;
  t6039 = t6033 + t6037;
  t5353 = -0.0216*t5288;
  t5357 = -1.1135*t5298;
  t5362 = 0. + t5353 + t5357;
  t6057 = -1.*t4981*t6020;
  t6071 = t4932*t6039;
  t6081 = t6057 + t6071;
  t6089 = t4932*t6020;
  t6094 = t4981*t6039;
  t6097 = t6089 + t6094;
  t6215 = t2313*t185*t2180*t1790;
  t6223 = t2664*t2313*t185*t2319;
  t6230 = t6215 + t6223;
  t6250 = t2664*t2313*t185*t2180;
  t6260 = -1.*t2313*t185*t1790*t2319;
  t6265 = t6250 + t6260;
  t6299 = -1.*t423*t2313*t2290;
  t6302 = t1055*t6230;
  t6303 = t6299 + t6302;
  t6310 = t3563*t6265;
  t6312 = t3492*t6303;
  t6319 = t6310 + t6312;
  t6322 = t3492*t6265;
  t6325 = -1.*t3563*t6303;
  t6331 = t6322 + t6325;
  t6348 = -1.*t4305*t6319;
  t6351 = t4119*t6331;
  t6352 = t6348 + t6351;
  t6356 = t4119*t6319;
  t6360 = t4305*t6331;
  t6363 = t6356 + t6360;
  t6376 = t4683*t6352;
  t6377 = t4655*t6363;
  t6379 = t6376 + t6377;
  t6391 = t4655*t6352;
  t6396 = -1.*t4683*t6363;
  t6397 = t6391 + t6396;
  t6419 = -1.*t4981*t6379;
  t6424 = t4932*t6397;
  t6429 = t6419 + t6424;
  t6435 = t4932*t6379;
  t6436 = t4981*t6397;
  t6438 = t6435 + t6436;
  t6509 = t185*t2180*t1790*t1602;
  t6527 = t2664*t185*t1602*t2319;
  t6530 = t6509 + t6527;
  t6535 = t2664*t185*t2180*t1602;
  t6545 = -1.*t185*t1790*t1602*t2319;
  t6553 = t6535 + t6545;
  t6577 = -1.*t423*t1602*t2290;
  t6583 = t1055*t6530;
  t6584 = t6577 + t6583;
  t6591 = t3563*t6553;
  t6600 = t3492*t6584;
  t6605 = t6591 + t6600;
  t6610 = t3492*t6553;
  t6612 = -1.*t3563*t6584;
  t6615 = t6610 + t6612;
  t6619 = -1.*t4305*t6605;
  t6620 = t4119*t6615;
  t6621 = t6619 + t6620;
  t6633 = t4119*t6605;
  t6639 = t4305*t6615;
  t6641 = t6633 + t6639;
  t6660 = t4683*t6621;
  t6662 = t4655*t6641;
  t6669 = t6660 + t6662;
  t6690 = t4655*t6621;
  t6691 = -1.*t4683*t6641;
  t6694 = t6690 + t6691;
  t6699 = -1.*t4981*t6669;
  t6704 = t4932*t6694;
  t6708 = t6699 + t6704;
  t6717 = t4932*t6669;
  t6720 = t4981*t6694;
  t6723 = t6717 + t6720;
  t6813 = -1.*t2180*t1790*t2290;
  t6821 = -1.*t2664*t2290*t2319;
  t6824 = t6813 + t6821;
  t6833 = -1.*t2664*t2180*t2290;
  t6847 = t1790*t2290*t2319;
  t6849 = t6833 + t6847;
  t6878 = -1.*t423*t185;
  t6880 = t1055*t6824;
  t6886 = t6878 + t6880;
  t6889 = t3563*t6849;
  t6897 = t3492*t6886;
  t6902 = t6889 + t6897;
  t6913 = t3492*t6849;
  t6915 = -1.*t3563*t6886;
  t6917 = t6913 + t6915;
  t6920 = -1.*t4305*t6902;
  t6923 = t4119*t6917;
  t6928 = t6920 + t6923;
  t6930 = t4119*t6902;
  t6939 = t4305*t6917;
  t6941 = t6930 + t6939;
  t6946 = t4683*t6928;
  t6956 = t4655*t6941;
  t6964 = t6946 + t6956;
  t6973 = t4655*t6928;
  t6978 = -1.*t4683*t6941;
  t6984 = t6973 + t6978;
  t6988 = -1.*t4981*t6964;
  t6991 = t4932*t6984;
  t6994 = t6988 + t6991;
  t7000 = t4932*t6964;
  t7009 = t4981*t6984;
  t7010 = t7000 + t7009;
  t7065 = t2180*t1602;
  t7075 = -1.*t2313*t2290*t2319;
  t7078 = t7065 + t7075;
  t7110 = t1790*t7078;
  t7116 = t5677 + t7110;
  t7091 = -1.*t1790*t5573;
  t7092 = t2664*t7078;
  t7093 = t7091 + t7092;
  t7141 = t3563*t7093;
  t7145 = t3492*t1055*t7116;
  t7146 = t7141 + t7145;
  t7152 = t3492*t7093;
  t7172 = -1.*t1055*t3563*t7116;
  t7174 = t7152 + t7172;
  t7178 = -1.*t4305*t7146;
  t7181 = t4119*t7174;
  t7186 = t7178 + t7181;
  t7193 = t4119*t7146;
  t7199 = t4305*t7174;
  t7210 = t7193 + t7199;
  t7214 = t4683*t7186;
  t7215 = t4655*t7210;
  t7223 = t7214 + t7215;
  t7230 = t4655*t7186;
  t7232 = -1.*t4683*t7210;
  t7237 = t7230 + t7232;
  t7242 = -1.*t4981*t7223;
  t7249 = t4932*t7237;
  t7252 = t7242 + t7249;
  t7257 = t4932*t7223;
  t7258 = t4981*t7237;
  t7262 = t7257 + t7258;
  t7293 = t2180*t1602*t2290;
  t7294 = -1.*t2313*t2319;
  t7295 = t7293 + t7294;
  t7308 = t2664*t7295;
  t7314 = t1790*t3013;
  t7317 = t7308 + t7314;
  t7303 = -1.*t1790*t7295;
  t7305 = t7303 + t3348;
  t7333 = t3563*t7305;
  t7336 = t3492*t1055*t7317;
  t7339 = t7333 + t7336;
  t7344 = t3492*t7305;
  t7349 = -1.*t1055*t3563*t7317;
  t7353 = t7344 + t7349;
  t7361 = -1.*t4305*t7339;
  t7362 = t4119*t7353;
  t7367 = t7361 + t7362;
  t7384 = t4119*t7339;
  t7390 = t4305*t7353;
  t7391 = t7384 + t7390;
  t7397 = t4683*t7367;
  t7400 = t4655*t7391;
  t7406 = t7397 + t7400;
  t7409 = t4655*t7367;
  t7411 = -1.*t4683*t7391;
  t7413 = t7409 + t7411;
  t7428 = -1.*t4981*t7406;
  t7429 = t4932*t7413;
  t7431 = t7428 + t7429;
  t7438 = t4932*t7406;
  t7439 = t4981*t7413;
  t7441 = t7438 + t7439;
  t7516 = t2664*t185*t2180;
  t7526 = -1.*t185*t1790*t2319;
  t7528 = t7516 + t7526;
  t7487 = -1.*t185*t2180*t1790;
  t7490 = -1.*t2664*t185*t2319;
  t7499 = t7487 + t7490;
  t7553 = t3563*t7499;
  t7555 = t3492*t1055*t7528;
  t7560 = t7553 + t7555;
  t7563 = t3492*t7499;
  t7567 = -1.*t1055*t3563*t7528;
  t7572 = t7563 + t7567;
  t7575 = -1.*t4305*t7560;
  t7584 = t4119*t7572;
  t7585 = t7575 + t7584;
  t7596 = t4119*t7560;
  t7598 = t4305*t7572;
  t7606 = t7596 + t7598;
  t7617 = t4683*t7585;
  t7621 = t4655*t7606;
  t7623 = t7617 + t7621;
  t7627 = t4655*t7585;
  t7629 = -1.*t4683*t7606;
  t7632 = t7627 + t7629;
  t7640 = -1.*t4981*t7623;
  t7641 = t4932*t7632;
  t7643 = t7640 + t7641;
  t7649 = t4932*t7623;
  t7651 = t4981*t7632;
  t7658 = t7649 + t7651;
  t7710 = -1.*t2664*t5597;
  t7712 = t7091 + t7710;
  t7728 = t3563*t7712;
  t7732 = t3492*t1055*t5708;
  t7748 = t7728 + t7732;
  t7752 = t3492*t7712;
  t7753 = -1.*t1055*t3563*t5708;
  t7768 = t7752 + t7753;
  t7776 = -1.*t4305*t7748;
  t7787 = t4119*t7768;
  t7789 = t7776 + t7787;
  t7796 = t4119*t7748;
  t7798 = t4305*t7768;
  t7820 = t7796 + t7798;
  t7831 = t4683*t7789;
  t7841 = t4655*t7820;
  t7842 = t7831 + t7841;
  t7856 = t4655*t7789;
  t7860 = -1.*t4683*t7820;
  t7863 = t7856 + t7860;
  t7865 = -1.*t4981*t7842;
  t7866 = t4932*t7863;
  t7879 = t7865 + t7866;
  t7891 = t4932*t7842;
  t7894 = t4981*t7863;
  t7896 = t7891 + t7894;
  t7950 = t2313*t2180;
  t7958 = t1602*t2290*t2319;
  t7970 = t7950 + t7958;
  t7998 = -1.*t1790*t7970;
  t7999 = t7308 + t7998;
  t7976 = -1.*t2664*t7970;
  t7996 = t7303 + t7976;
  t8031 = t3563*t7996;
  t8034 = t3492*t1055*t7999;
  t8038 = t8031 + t8034;
  t8055 = t3492*t7996;
  t8059 = -1.*t1055*t3563*t7999;
  t8065 = t8055 + t8059;
  t8085 = -1.*t4305*t8038;
  t8087 = t4119*t8065;
  t8096 = t8085 + t8087;
  t8100 = t4119*t8038;
  t8101 = t4305*t8065;
  t8103 = t8100 + t8101;
  t8112 = t4683*t8096;
  t8114 = t4655*t8103;
  t8116 = t8112 + t8114;
  t8135 = t4655*t8096;
  t8148 = -1.*t4683*t8103;
  t8166 = t8135 + t8148;
  t8186 = -1.*t4981*t8116;
  t8193 = t4932*t8166;
  t8199 = t8186 + t8193;
  t8227 = t4932*t8116;
  t8230 = t4981*t8166;
  t8240 = t8227 + t8230;
  t7502 = t3577*t7499;
  t7532 = -0.1305*t423*t7528;
  t7544 = t3282*t7528;
  t7552 = t1055*t3908*t7528;
  t7562 = t4333*t7560;
  t7574 = t4501*t7572;
  t7592 = t4698*t7585;
  t7610 = t4863*t7606;
  t7625 = t5016*t7623;
  t7637 = t5183*t7632;
  t7648 = t5315*t7643;
  t7667 = t5362*t7658;
  t7670 = t5298*t7643;
  t7672 = t5252*t7658;
  t7673 = t7670 + t7672;
  t7674 = 0.088451*t7673;
  t7680 = t5252*t7643;
  t7684 = -1.*t5298*t7658;
  t7689 = t7680 + t7684;
  t7696 = -1.062256*t7689;
  t5761 = -1.*t2313*t185*t1055;
  t5762 = t423*t5660;
  t5777 = t5761 + t5762;
  t8375 = -1.*t4119*t3563*t5777;
  t8380 = -1.*t3492*t4305*t5777;
  t8384 = t8375 + t8380;
  t8405 = t3492*t4119*t5777;
  t8406 = -1.*t3563*t4305*t5777;
  t8408 = t8405 + t8406;
  t8414 = t4683*t8384;
  t8424 = t4655*t8408;
  t8425 = t8414 + t8424;
  t8436 = t4655*t8384;
  t8441 = -1.*t4683*t8408;
  t8448 = t8436 + t8441;
  t8457 = -1.*t4981*t8425;
  t8459 = t4932*t8448;
  t8463 = t8457 + t8459;
  t8467 = t4932*t8425;
  t8475 = t4981*t8448;
  t8476 = t8467 + t8475;
  t8310 = -0.135*t423;
  t8314 = -0.049*t1055;
  t8315 = t8310 + t8314;
  t8338 = 0.049*t423;
  t8341 = t8338 + t1174;
  t8553 = t1790*t7295;
  t8557 = t2664*t7970;
  t8559 = t8553 + t8557;
  t8571 = -1.*t185*t1055*t1602;
  t8573 = t423*t8559;
  t8577 = t8571 + t8573;
  t8597 = -1.*t4119*t3563*t8577;
  t8598 = -1.*t3492*t4305*t8577;
  t8602 = t8597 + t8598;
  t8608 = t3492*t4119*t8577;
  t8610 = -1.*t3563*t4305*t8577;
  t8612 = t8608 + t8610;
  t8619 = t4683*t8602;
  t8623 = t4655*t8612;
  t8624 = t8619 + t8623;
  t8633 = t4655*t8602;
  t8637 = -1.*t4683*t8612;
  t8639 = t8633 + t8637;
  t8648 = -1.*t4981*t8624;
  t8654 = t4932*t8639;
  t8655 = t8648 + t8654;
  t8661 = t4932*t8624;
  t8666 = t4981*t8639;
  t8674 = t8661 + t8666;
  t8730 = t185*t2180*t1790;
  t8732 = t2664*t185*t2319;
  t8754 = t8730 + t8732;
  t8763 = t1055*t2290;
  t8769 = t423*t8754;
  t8771 = t8763 + t8769;
  t8797 = -1.*t4119*t3563*t8771;
  t8804 = -1.*t3492*t4305*t8771;
  t8805 = t8797 + t8804;
  t8808 = t3492*t4119*t8771;
  t8813 = -1.*t3563*t4305*t8771;
  t8816 = t8808 + t8813;
  t8831 = t4683*t8805;
  t8832 = t4655*t8816;
  t8844 = t8831 + t8832;
  t8858 = t4655*t8805;
  t8860 = -1.*t4683*t8816;
  t8864 = t8858 + t8860;
  t8867 = -1.*t4981*t8844;
  t8868 = t4932*t8864;
  t8873 = t8867 + t8868;
  t8877 = t4932*t8844;
  t8882 = t4981*t8864;
  t8885 = t8877 + t8882;
  t9012 = -1.*t3563*t5708;
  t9021 = -1.*t3492*t5863;
  t9022 = t9012 + t9021;
  t9036 = t4305*t9022;
  t9037 = t9036 + t5951;
  t9045 = t4119*t9022;
  t9051 = -1.*t4305*t5927;
  t9052 = t9045 + t9051;
  t9055 = -1.*t4683*t9037;
  t9059 = t4655*t9052;
  t9067 = t9055 + t9059;
  t9084 = t4655*t9037;
  t9090 = t4683*t9052;
  t9095 = t9084 + t9090;
  t9112 = t4981*t9067;
  t9120 = t4932*t9095;
  t9122 = t9112 + t9120;
  t9128 = t4932*t9067;
  t9141 = -1.*t4981*t9095;
  t9145 = t9128 + t9141;
  t8959 = 0.049*t3492;
  t8968 = t8959 + t3894;
  t8989 = -0.09*t3492;
  t8990 = -0.049*t3563;
  t9003 = t8989 + t8990;
  t9200 = t423*t185*t1602;
  t9205 = t1055*t8559;
  t9209 = t9200 + t9205;
  t9222 = -1.*t3563*t7999;
  t9223 = -1.*t3492*t9209;
  t9228 = t9222 + t9223;
  t9237 = t3492*t7999;
  t9238 = -1.*t3563*t9209;
  t9257 = t9237 + t9238;
  t9260 = t4305*t9228;
  t9267 = t4119*t9257;
  t9271 = t9260 + t9267;
  t9277 = t4119*t9228;
  t9281 = -1.*t4305*t9257;
  t9282 = t9277 + t9281;
  t9292 = -1.*t4683*t9271;
  t9297 = t4655*t9282;
  t9308 = t9292 + t9297;
  t9314 = t4655*t9271;
  t9315 = t4683*t9282;
  t9316 = t9314 + t9315;
  t9323 = t4981*t9308;
  t9325 = t4932*t9316;
  t9328 = t9323 + t9325;
  t9335 = t4932*t9308;
  t9337 = -1.*t4981*t9316;
  t9341 = t9335 + t9337;
  t9434 = -1.*t423*t2290;
  t9447 = t1055*t8754;
  t9449 = t9434 + t9447;
  t9478 = -1.*t3563*t7528;
  t9487 = -1.*t3492*t9449;
  t9490 = t9478 + t9487;
  t9496 = t3492*t7528;
  t9515 = -1.*t3563*t9449;
  t9521 = t9496 + t9515;
  t9529 = t4305*t9490;
  t9531 = t4119*t9521;
  t9540 = t9529 + t9531;
  t9544 = t4119*t9490;
  t9553 = -1.*t4305*t9521;
  t9554 = t9544 + t9553;
  t9561 = -1.*t4683*t9540;
  t9563 = t4655*t9554;
  t9575 = t9561 + t9563;
  t9580 = t4655*t9540;
  t9588 = t4683*t9554;
  t9589 = t9580 + t9588;
  t9595 = t4981*t9575;
  t9608 = t4932*t9589;
  t9609 = t9595 + t9608;
  t9622 = t4932*t9575;
  t9631 = -1.*t4981*t9589;
  t9640 = t9622 + t9631;
  t9739 = -1.*t4119*t5914;
  t9753 = t9739 + t9051;
  t9768 = -1.*t4683*t5960;
  t9778 = t4655*t9753;
  t9788 = t9768 + t9778;
  t9802 = t4683*t9753;
  t9804 = t6033 + t9802;
  t9806 = t4981*t9788;
  t9809 = t4932*t9804;
  t9812 = t9806 + t9809;
  t9816 = t4932*t9788;
  t9817 = -1.*t4981*t9804;
  t9820 = t9816 + t9817;
  t9693 = -0.21*t4119;
  t9697 = -0.049*t4305;
  t9700 = t9693 + t9697;
  t9713 = 0.049*t4119;
  t9728 = t9713 + t4329;
  t9893 = t3563*t7999;
  t9895 = t3492*t9209;
  t9907 = t9893 + t9895;
  t9915 = -1.*t4305*t9907;
  t9921 = t9915 + t9267;
  t9926 = -1.*t4119*t9907;
  t9928 = t9926 + t9281;
  t9937 = -1.*t4683*t9921;
  t9939 = t4655*t9928;
  t9942 = t9937 + t9939;
  t9956 = t4655*t9921;
  t9959 = t4683*t9928;
  t9961 = t9956 + t9959;
  t9975 = t4981*t9942;
  t9977 = t4932*t9961;
  t9981 = t9975 + t9977;
  t10001 = t4932*t9942;
  t10005 = -1.*t4981*t9961;
  t10010 = t10001 + t10005;
  t10050 = t3563*t7528;
  t10052 = t3492*t9449;
  t10053 = t10050 + t10052;
  t10070 = -1.*t4305*t10053;
  t10080 = t10070 + t9531;
  t10091 = -1.*t4119*t10053;
  t10096 = t10091 + t9553;
  t10098 = -1.*t4683*t10080;
  t10103 = t4655*t10096;
  t10107 = t10098 + t10103;
  t10114 = t4655*t10080;
  t10119 = t4683*t10096;
  t10122 = t10114 + t10119;
  t10125 = t4981*t10107;
  t10126 = t4932*t10122;
  t10134 = t10125 + t10126;
  t10137 = t4932*t10107;
  t10140 = -1.*t4981*t10122;
  t10141 = t10137 + t10140;
  t10203 = -1.*t4655*t5972;
  t10204 = t9768 + t10203;
  t10212 = t4981*t10204;
  t10214 = t10212 + t6071;
  t10228 = t4932*t10204;
  t10230 = -1.*t4981*t6039;
  t10233 = t10228 + t10230;
  t10175 = 0.0016*t4655;
  t10176 = t10175 + t4858;
  t10187 = -0.2707*t4655;
  t10194 = -0.0016*t4683;
  t10199 = t10187 + t10194;
  t10296 = t4119*t9907;
  t10298 = t4305*t9257;
  t10300 = t10296 + t10298;
  t10307 = -1.*t4655*t10300;
  t10309 = t9937 + t10307;
  t10317 = -1.*t4683*t10300;
  t10324 = t9956 + t10317;
  t10332 = t4981*t10309;
  t10342 = t4932*t10324;
  t10344 = t10332 + t10342;
  t10349 = t4932*t10309;
  t10350 = -1.*t4981*t10324;
  t10351 = t10349 + t10350;
  t10403 = t4119*t10053;
  t10414 = t4305*t9521;
  t10417 = t10403 + t10414;
  t10425 = -1.*t4655*t10417;
  t10427 = t10098 + t10425;
  t10434 = -1.*t4683*t10417;
  t10439 = t10114 + t10434;
  t10448 = t4981*t10427;
  t10454 = t4932*t10439;
  t10461 = t10448 + t10454;
  t10479 = t4932*t10427;
  t10482 = -1.*t4981*t10439;
  t10486 = t10479 + t10482;
  t10562 = -1.*t4932*t6020;
  t10568 = t10562 + t10230;
  t6145 = t5252*t6081;
  t10519 = -0.7055*t4932;
  t10523 = 0.0184*t4981;
  t10528 = t10519 + t10523;
  t10542 = -0.0184*t4932;
  t10544 = t10542 + t4996;
  t10597 = t4683*t9921;
  t10601 = t4655*t10300;
  t10608 = t10597 + t10601;
  t10616 = -1.*t4981*t10608;
  t10620 = t10616 + t10342;
  t10642 = -1.*t4932*t10608;
  t10649 = t10642 + t10350;
  t10698 = t4683*t10080;
  t10700 = t4655*t10417;
  t10702 = t10698 + t10700;
  t10710 = -1.*t4981*t10702;
  t10713 = t10710 + t10454;
  t10719 = -1.*t4932*t10702;
  t10723 = t10719 + t10482;
  t10571 = -1.*t5298*t6081;
  t6156 = -1.*t5298*t6097;
  t6157 = t6145 + t6156;
  t10754 = 0.0216*t5252;
  t10755 = t10754 + t5357;
  t10759 = -1.1135*t5252;
  t10760 = -0.0216*t5298;
  t10765 = t10759 + t10760;
  t10655 = -1.*t5298*t10620;
  t10793 = t4932*t10608;
  t10794 = t4981*t10324;
  t10795 = t10793 + t10794;
  t10676 = t5252*t10620;
  t10729 = -1.*t5298*t10713;
  t10823 = t4932*t10702;
  t10824 = t4981*t10439;
  t10826 = t10823 + t10824;
  t10745 = t5252*t10713;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=-1.*t1303*t1602*t185 + t1863*t2536 + t2886*t3013 + t3282*t3418 + t3577*t3701 + t3908*t3960 - 0.1305*(t1055*t1602*t185 + t3418*t423) + t4333*t4426 + t4501*t4630 + t4698*t4753 + t4863*t4895 + t5016*t5123 + t5183*t5218 + t5315*t5337 + t5362*t5385 + 0.088451*(t5298*t5337 + t5252*t5385) - 1.062256*(t5252*t5337 - 1.*t5298*t5385);
  p_output1[10]=t1303*t185*t2313 + t1863*t5573 + t2886*t5597 + t3282*t5660 + t3577*t5708 - 0.1305*t5777 + t3908*t5863 + t4333*t5914 + t4501*t5927 + t4698*t5960 + t4863*t5972 + t5016*t6020 + t5183*t6039 + t5315*t6081 + t5362*t6097 + 0.088451*(t5298*t6081 + t5252*t6097) - 1.062256*t6157;
  p_output1[11]=0;
  p_output1[12]=t185*t1863*t2180*t2313 - 1.*t1303*t2290*t2313 + t185*t2313*t2319*t2886 + t3282*t6230 - 0.1305*(t1055*t2290*t2313 + t423*t6230) + t3577*t6265 + t3908*t6303 + t4333*t6319 + t4501*t6331 + t4698*t6352 + t4863*t6363 + t5016*t6379 + t5183*t6397 + t5315*t6429 + t5362*t6438 + 0.088451*(t5298*t6429 + t5252*t6438) - 1.062256*(t5252*t6429 - 1.*t5298*t6438);
  p_output1[13]=t1602*t185*t1863*t2180 - 1.*t1303*t1602*t2290 + t1602*t185*t2319*t2886 + t3282*t6530 - 0.1305*(t1055*t1602*t2290 + t423*t6530) + t3577*t6553 + t3908*t6584 + t4333*t6605 + t4501*t6615 + t4698*t6621 + t4863*t6641 + t5016*t6669 + t5183*t6694 + t5315*t6708 + t5362*t6723 + 0.088451*(t5298*t6708 + t5252*t6723) - 1.062256*(t5252*t6708 - 1.*t5298*t6723);
  p_output1[14]=-1.*t1303*t185 - 1.*t1863*t2180*t2290 - 1.*t2290*t2319*t2886 + t3282*t6824 - 0.1305*(t1055*t185 + t423*t6824) + t3577*t6849 + t3908*t6886 + t4333*t6902 + t4501*t6917 + t4698*t6928 + t4863*t6941 + t5016*t6964 + t5183*t6984 + t5315*t6994 + t5362*t7010 + 0.088451*(t5298*t6994 + t5252*t7010) - 1.062256*(t5252*t6994 - 1.*t5298*t7010);
  p_output1[15]=t2886*t5573 + t1863*t7078 + t3577*t7093 + t3282*t7116 + t1055*t3908*t7116 - 0.1305*t423*t7116 + t4333*t7146 + t4501*t7174 + t4698*t7186 + t4863*t7210 + t5016*t7223 + t5183*t7237 + t5315*t7252 + t5362*t7262 + 0.088451*(t5298*t7252 + t5252*t7262) - 1.062256*(t5252*t7252 - 1.*t5298*t7262);
  p_output1[16]=t1863*t3013 + t2886*t7295 + t3577*t7305 + t3282*t7317 + t1055*t3908*t7317 - 0.1305*t423*t7317 + t4333*t7339 + t4501*t7353 + t4698*t7367 + t4863*t7391 + t5016*t7406 + t5183*t7413 + t5315*t7431 + t5362*t7441 + 0.088451*(t5298*t7431 + t5252*t7441) - 1.062256*(t5252*t7431 - 1.*t5298*t7441);
  p_output1[17]=-1.*t185*t1863*t2319 + t185*t2180*t2886 + t7502 + t7532 + t7544 + t7552 + t7562 + t7574 + t7592 + t7610 + t7625 + t7637 + t7648 + t7667 + t7674 + t7696;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0.135*t2664*t5573 - 0.135*t1790*t5597 + t3282*t5708 + t1055*t3908*t5708 - 0.1305*t423*t5708 + t3577*t7712 + t4333*t7748 + t4501*t7768 + t4698*t7789 + t4863*t7820 + t5016*t7842 + t5183*t7863 + t5315*t7879 + t5362*t7896 + 0.088451*(t5298*t7879 + t5252*t7896) - 1.062256*(t5252*t7879 - 1.*t5298*t7896);
  p_output1[40]=0.135*t2664*t7295 - 0.135*t1790*t7970 + t3577*t7996 + t3282*t7999 + t1055*t3908*t7999 - 0.1305*t423*t7999 + t4333*t8038 + t4501*t8065 + t4698*t8096 + t4863*t8103 + t5016*t8116 + t5183*t8166 + t5315*t8199 + t5362*t8240 + 0.088451*(t5298*t8199 + t5252*t8240) - 1.062256*(t5252*t8199 - 1.*t5298*t8240);
  p_output1[41]=-0.135*t1790*t185*t2319 + 0.135*t185*t2180*t2664 + t7502 + t7532 + t7544 + t7552 + t7562 + t7574 + t7592 + t7610 + t7625 + t7637 + t7648 + t7667 + t7674 + t7696;
  p_output1[42]=-0.1305*(-1.*t185*t2313*t423 - 1.*t1055*t5660) + t3908*t5777 + t3492*t4333*t5777 - 1.*t3563*t4501*t5777 + t185*t2313*t8315 + t5660*t8341 + t4698*t8384 + t4863*t8408 + t5016*t8425 + t5183*t8448 + t5315*t8463 + t5362*t8476 + 0.088451*(t5298*t8463 + t5252*t8476) - 1.062256*(t5252*t8463 - 1.*t5298*t8476);
  p_output1[43]=t1602*t185*t8315 + t8341*t8559 - 0.1305*(t3935 - 1.*t1055*t8559) + t3908*t8577 + t3492*t4333*t8577 - 1.*t3563*t4501*t8577 + t4698*t8602 + t4863*t8612 + t5016*t8624 + t5183*t8639 + t5315*t8655 + t5362*t8674 + 0.088451*(t5298*t8655 + t5252*t8674) - 1.062256*(t5252*t8655 - 1.*t5298*t8674);
  p_output1[44]=-1.*t2290*t8315 + t8341*t8754 - 0.1305*(t2290*t423 - 1.*t1055*t8754) + t3908*t8771 + t3492*t4333*t8771 - 1.*t3563*t4501*t8771 + t4698*t8805 + t4863*t8816 + t5016*t8844 + t5183*t8864 + t5315*t8873 + t5362*t8885 + 0.088451*(t5298*t8873 + t5252*t8885) - 1.062256*(t5252*t8873 - 1.*t5298*t8885);
  p_output1[45]=t4333*t5927 + t5708*t8968 + t5863*t9003 + t4501*t9022 + t4863*t9037 + t4698*t9052 + t5183*t9067 + t5016*t9095 + t5362*t9122 + t5315*t9145 - 1.062256*(-1.*t5298*t9122 + t5252*t9145) + 0.088451*(t5252*t9122 + t5298*t9145);
  p_output1[46]=t7999*t8968 + t9003*t9209 + t4501*t9228 + t4333*t9257 + t4863*t9271 + t4698*t9282 + t5183*t9308 + t5016*t9316 + t5362*t9328 + t5315*t9341 - 1.062256*(-1.*t5298*t9328 + t5252*t9341) + 0.088451*(t5252*t9328 + t5298*t9341);
  p_output1[47]=t7528*t8968 + t9003*t9449 + t4501*t9490 + t4333*t9521 + t4863*t9540 + t4698*t9554 + t5183*t9575 + t5016*t9589 + t5362*t9609 + t5315*t9640 - 1.062256*(-1.*t5298*t9609 + t5252*t9640) + 0.088451*(t5252*t9609 + t5298*t9640);
  p_output1[48]=t4863*t5960 + t5914*t9700 + t5927*t9728 + t4698*t9753 + t5183*t9788 + t5016*t9804 + t5362*t9812 + t5315*t9820 - 1.062256*(-1.*t5298*t9812 + t5252*t9820) + 0.088451*(t5252*t9812 + t5298*t9820);
  p_output1[49]=t10010*t5315 + t9257*t9728 + t9700*t9907 + t4863*t9921 + t4698*t9928 + t5183*t9942 + t5016*t9961 + t5362*t9981 + 0.088451*(t10010*t5298 + t5252*t9981) - 1.062256*(t10010*t5252 - 1.*t5298*t9981);
  p_output1[50]=t10096*t4698 + t10080*t4863 + t10122*t5016 + t10107*t5183 - 1.062256*(t10141*t5252 - 1.*t10134*t5298) + 0.088451*(t10134*t5252 + t10141*t5298) + t10141*t5315 + t10134*t5362 + t10053*t9700 + t9521*t9728;
  p_output1[51]=t10204*t5183 - 1.062256*(t10233*t5252 - 1.*t10214*t5298) + 0.088451*(t10214*t5252 + t10233*t5298) + t10233*t5315 + t10214*t5362 + t10176*t5960 + t10199*t5972 + t5016*t6039;
  p_output1[52]=t10199*t10300 + t10324*t5016 + t10309*t5183 - 1.062256*(t10351*t5252 - 1.*t10344*t5298) + 0.088451*(t10344*t5252 + t10351*t5298) + t10351*t5315 + t10344*t5362 + t10176*t9921;
  p_output1[53]=t10080*t10176 + t10199*t10417 + t10439*t5016 + t10427*t5183 - 1.062256*(t10486*t5252 - 1.*t10461*t5298) + 0.088451*(t10461*t5252 + t10486*t5298) + t10486*t5315 + t10461*t5362;
  p_output1[54]=-1.062256*(t10571 + t10568*t5252) + t10568*t5315 + t10528*t6020 + t10544*t6039 + t5362*t6081 + 0.088451*(t10568*t5298 + t6145);
  p_output1[55]=t10324*t10544 + t10528*t10608 - 1.062256*(t10655 + t10649*t5252) + 0.088451*(t10676 + t10649*t5298) + t10649*t5315 + t10620*t5362;
  p_output1[56]=t10439*t10544 + t10528*t10702 - 1.062256*(t10729 + t10723*t5252) + 0.088451*(t10745 + t10723*t5298) + t10723*t5315 + t10713*t5362;
  p_output1[57]=t10755*t6081 + t10765*t6097 - 1.062256*(t10571 - 1.*t5252*t6097) + 0.088451*t6157;
  p_output1[58]=t10620*t10755 + t10765*t10795 - 1.062256*(t10655 - 1.*t10795*t5252) + 0.088451*(t10676 - 1.*t10795*t5298);
  p_output1[59]=t10713*t10755 + t10765*t10826 - 1.062256*(t10729 - 1.*t10826*t5252) + 0.088451*(t10745 - 1.*t10826*t5298);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "J_RightToeFront_mex.hh"

namespace SymExpression
{

void J_RightToeFront_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
