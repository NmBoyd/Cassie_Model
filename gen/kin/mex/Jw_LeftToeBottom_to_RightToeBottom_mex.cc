/*
 * Automatically Generated from Mathematica.
 * Mon 26 Feb 2018 15:49:58 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t24;
  double t121;
  double t85;
  double t107;
  double t124;
  double t149;
  double t109;
  double t129;
  double t130;
  double t73;
  double t250;
  double t255;
  double t311;
  double t434;
  double t148;
  double t317;
  double t339;
  double t60;
  double t510;
  double t515;
  double t524;
  double t593;
  double t359;
  double t531;
  double t569;
  double t51;
  double t611;
  double t612;
  double t634;
  double t743;
  double t579;
  double t690;
  double t697;
  double t40;
  double t761;
  double t766;
  double t775;
  double t880;
  double t882;
  double t914;
  double t928;
  double t936;
  double t977;
  double t985;
  double t929;
  double t986;
  double t990;
  double t1040;
  double t1054;
  double t1061;
  double t1035;
  double t1064;
  double t1068;
  double t1088;
  double t1099;
  double t1112;
  double t1187;
  double t1196;
  double t1201;
  double t1216;
  double t1233;
  double t1244;
  double t1215;
  double t1248;
  double t1252;
  double t1288;
  double t1296;
  double t1303;
  double t1255;
  double t1313;
  double t1316;
  double t1349;
  double t1379;
  double t1381;
  double t1317;
  double t1389;
  double t1390;
  double t1401;
  double t1426;
  double t1433;
  double t737;
  double t830;
  double t832;
  double t852;
  double t853;
  double t857;
  double t1071;
  double t1117;
  double t1121;
  double t1155;
  double t1160;
  double t1167;
  double t1396;
  double t1441;
  double t1442;
  double t1492;
  double t1497;
  double t1498;
  double t1565;
  double t1591;
  double t1608;
  double t1457;
  double t1502;
  double t1511;
  double t1142;
  double t1177;
  double t1185;
  double t1638;
  double t1647;
  double t1655;
  double t835;
  double t858;
  double t870;
  double t1186;
  double t1518;
  double t1519;
  double t1524;
  double t1525;
  double t1528;
  double t1530;
  double t1613;
  double t1663;
  double t1669;
  double t1683;
  double t1692;
  double t1698;
  double t1707;
  double t1708;
  double t1806;
  double t1771;
  double t1772;
  double t1781;
  double t1811;
  double t1763;
  double t1820;
  double t1827;
  double t1828;
  double t1784;
  double t1816;
  double t1818;
  double t1829;
  double t1762;
  double t1890;
  double t1899;
  double t1900;
  double t1819;
  double t1837;
  double t1865;
  double t1957;
  double t1755;
  double t2010;
  double t2016;
  double t2022;
  double t1880;
  double t1977;
  double t1998;
  double t2063;
  double t1753;
  double t2153;
  double t2180;
  double t2181;
  double t2003;
  double t2112;
  double t2115;
  double t2184;
  double t1739;
  double t1740;
  double t2371;
  double t2394;
  double t2395;
  double t2402;
  double t2380;
  double t2386;
  double t2387;
  double t2451;
  double t2470;
  double t2482;
  double t2393;
  double t2403;
  double t2405;
  double t2528;
  double t2530;
  double t2541;
  double t2447;
  double t2509;
  double t2513;
  double t2695;
  double t2706;
  double t2708;
  double t2675;
  double t2683;
  double t2689;
  double t2773;
  double t2776;
  double t2779;
  double t2694;
  double t2712;
  double t2753;
  double t2824;
  double t2827;
  double t2862;
  double t2763;
  double t2789;
  double t2790;
  double t2890;
  double t2919;
  double t2934;
  double t2800;
  double t2864;
  double t2872;
  double t2118;
  double t2205;
  double t2208;
  double t2257;
  double t2262;
  double t2274;
  double t2527;
  double t2542;
  double t2577;
  double t2592;
  double t2617;
  double t2620;
  double t2887;
  double t2943;
  double t3008;
  double t3026;
  double t3030;
  double t3032;
  double t3077;
  double t3083;
  double t3093;
  double t2352;
  double t3141;
  double t3165;
  double t3167;
  double t2648;
  double t2666;
  double t2670;
  double t3187;
  double t3214;
  double t3220;
  double t3048;
  double t3050;
  double t3058;
  double t2241;
  double t2275;
  double t2284;
  double t3107;
  double t3123;
  double t3129;
  double t2585;
  double t2621;
  double t2641;
  double t3168;
  double t3171;
  double t3172;
  double t3015;
  double t3041;
  double t3045;
  double t3223;
  double t3225;
  double t3229;
  double t1732;
  double t1749;
  double t1752;
  double t2356;
  double t2673;
  double t3061;
  double t3069;
  double t3131;
  double t3173;
  double t3234;
  double t3239;
  double t3375;
  double t3425;
  double t3437;
  double t3442;
  double t3497;
  double t3500;
  double t3504;
  double t3251;
  double t3277;
  double t3278;
  double t3292;
  double t3302;
  double t3323;
  double t3325;
  double t3326;
  double t3385;
  double t3496;
  double t3508;
  double t3512;
  double t3516;
  double t3522;
  double t3527;
  double t3528;
  double t3537;
  double t3538;
  double t3542;
  double t3563;
  double t3612;
  double t3615;
  double t3617;
  double t3629;
  double t3701;
  double t3712;
  double t3731;
  double t3757;
  double t3761;
  double t3764;
  double t3736;
  double t3774;
  double t3775;
  double t3806;
  double t3837;
  double t3847;
  double t3784;
  double t3860;
  double t3861;
  double t3887;
  double t3888;
  double t3892;
  double t3513;
  double t3569;
  double t3582;
  double t3590;
  double t3602;
  double t3633;
  double t3636;
  double t3638;
  double t3643;
  double t3645;
  double t3648;
  double t3652;
  double t3660;
  double t3663;
  double t3664;
  double t3669;
  double t3670;
  double t3676;
  double t3681;
  double t3694;
  double t4072;
  double t4077;
  double t4080;
  double t4059;
  double t4086;
  double t4098;
  double t4134;
  double t4139;
  double t4130;
  double t4159;
  double t4163;
  double t4182;
  double t4185;
  double t4191;
  double t35;
  double t3870;
  double t3906;
  double t3920;
  double t3932;
  double t3944;
  double t3950;
  double t3957;
  double t3966;
  double t3977;
  double t3993;
  double t4004;
  double t4177;
  double t4200;
  double t4206;
  double t4223;
  double t4239;
  double t4240;
  double t4249;
  double t4254;
  double t4262;
  double t4263;
  double t4268;
  double t4012;
  double t4013;
  double t4015;
  double t4018;
  double t4019;
  double t4273;
  double t4290;
  double t4612;
  double t4614;
  double t4615;
  double t4341;
  double t4350;
  double t4362;
  double t4368;
  double t4381;
  double t4644;
  double t4648;
  double t4655;
  double t4404;
  double t4409;
  double t4461;
  double t4463;
  double t4464;
  double t4477;
  double t4542;
  double t4561;
  double t4585;
  double t3248;
  double t3357;
  double t3358;
  double t3361;
  double t3371;
  double t4307;
  double t4313;
  double t4324;
  double t4330;
  double t4337;
  double t4419;
  double t4422;
  double t4430;
  double t4434;
  double t4441;
  double t4741;
  double t4744;
  double t4751;
  double t4767;
  double t4772;
  double t4780;
  double t4843;
  double t4857;
  double t4885;
  double t4901;
  double t4916;
  double t4933;
  double t4899;
  double t4937;
  double t4942;
  double t4957;
  double t4961;
  double t4964;
  double t4954;
  double t4968;
  double t4971;
  double t4991;
  double t4997;
  double t5000;
  double t5129;
  double t5135;
  double t5147;
  double t5124;
  double t5151;
  double t5154;
  double t5182;
  double t5190;
  double t5175;
  double t5194;
  double t5197;
  double t5212;
  double t5216;
  double t5237;
  double t4984;
  double t5008;
  double t5014;
  double t5020;
  double t5040;
  double t5062;
  double t5208;
  double t5239;
  double t5242;
  double t5245;
  double t5264;
  double t5276;
  t24 = Sin(var1[1]);
  t121 = Cos(var1[0]);
  t85 = Cos(var1[2]);
  t107 = Sin(var1[0]);
  t124 = Sin(var1[2]);
  t149 = Cos(var1[3]);
  t109 = -1.*t85*t107*t24;
  t129 = -1.*t121*t124;
  t130 = t109 + t129;
  t73 = Sin(var1[3]);
  t250 = t121*t85;
  t255 = -1.*t107*t24*t124;
  t311 = t250 + t255;
  t434 = Cos(var1[4]);
  t148 = t73*t130;
  t317 = t149*t311;
  t339 = t148 + t317;
  t60 = Sin(var1[4]);
  t510 = t149*t130;
  t515 = -1.*t73*t311;
  t524 = t510 + t515;
  t593 = Cos(var1[5]);
  t359 = -1.*t60*t339;
  t531 = t434*t524;
  t569 = t359 + t531;
  t51 = Sin(var1[5]);
  t611 = t434*t339;
  t612 = t60*t524;
  t634 = t611 + t612;
  t743 = Cos(var1[6]);
  t579 = t51*t569;
  t690 = t593*t634;
  t697 = t579 + t690;
  t40 = Sin(var1[6]);
  t761 = t593*t569;
  t766 = -1.*t51*t634;
  t775 = t761 + t766;
  t880 = Cos(var1[1]);
  t882 = t880*t85*t73;
  t914 = t149*t880*t124;
  t928 = t882 + t914;
  t936 = t149*t880*t85;
  t977 = -1.*t880*t73*t124;
  t985 = t936 + t977;
  t929 = -1.*t60*t928;
  t986 = t434*t985;
  t990 = t929 + t986;
  t1040 = t434*t928;
  t1054 = t60*t985;
  t1061 = t1040 + t1054;
  t1035 = t51*t990;
  t1064 = t593*t1061;
  t1068 = t1035 + t1064;
  t1088 = t593*t990;
  t1099 = -1.*t51*t1061;
  t1112 = t1088 + t1099;
  t1187 = -1.*t121*t85*t24;
  t1196 = t107*t124;
  t1201 = t1187 + t1196;
  t1216 = -1.*t85*t107;
  t1233 = -1.*t121*t24*t124;
  t1244 = t1216 + t1233;
  t1215 = t73*t1201;
  t1248 = t149*t1244;
  t1252 = t1215 + t1248;
  t1288 = t149*t1201;
  t1296 = -1.*t73*t1244;
  t1303 = t1288 + t1296;
  t1255 = -1.*t60*t1252;
  t1313 = t434*t1303;
  t1316 = t1255 + t1313;
  t1349 = t434*t1252;
  t1379 = t60*t1303;
  t1381 = t1349 + t1379;
  t1317 = t51*t1316;
  t1389 = t593*t1381;
  t1390 = t1317 + t1389;
  t1401 = t593*t1316;
  t1426 = -1.*t51*t1381;
  t1433 = t1401 + t1426;
  t737 = -1.*t40*t697;
  t830 = t743*t775;
  t832 = t737 + t830;
  t852 = t743*t697;
  t853 = t40*t775;
  t857 = t852 + t853;
  t1071 = -1.*t40*t1068;
  t1117 = t743*t1112;
  t1121 = t1071 + t1117;
  t1155 = t743*t1068;
  t1160 = t40*t1112;
  t1167 = t1155 + t1160;
  t1396 = -1.*t40*t1390;
  t1441 = t743*t1433;
  t1442 = t1396 + t1441;
  t1492 = t743*t1390;
  t1497 = t40*t1433;
  t1498 = t1492 + t1497;
  t1565 = -0.766044*t1121;
  t1591 = -0.642788*t1167;
  t1608 = t1565 + t1591;
  t1457 = 0.642788*t1442;
  t1502 = -0.766044*t1498;
  t1511 = t1457 + t1502;
  t1142 = 0.642788*t1121;
  t1177 = -0.766044*t1167;
  t1185 = t1142 + t1177;
  t1638 = -0.766044*t1442;
  t1647 = -0.642788*t1498;
  t1655 = t1638 + t1647;
  t835 = -0.766044*t832;
  t858 = -0.642788*t857;
  t870 = t835 + t858;
  t1186 = -1.*t121*t880*t1185;
  t1518 = t24*t1511;
  t1519 = t1186 + t1518;
  t1524 = t870*t1519;
  t1525 = 0.642788*t832;
  t1528 = -0.766044*t857;
  t1530 = t1525 + t1528;
  t1613 = -1.*t121*t880*t1608;
  t1663 = t24*t1655;
  t1669 = t1613 + t1663;
  t1683 = -1.*t1530*t1669;
  t1692 = -1.*t1608*t1511;
  t1698 = t1185*t1655;
  t1707 = t1692 + t1698;
  t1708 = t880*t107*t1707;
  t1806 = Cos(var1[7]);
  t1771 = Cos(var1[9]);
  t1772 = Sin(var1[7]);
  t1781 = Sin(var1[8]);
  t1811 = Sin(var1[9]);
  t1763 = Cos(var1[10]);
  t1820 = t1806*t1771;
  t1827 = -1.*t1772*t1781*t1811;
  t1828 = t1820 + t1827;
  t1784 = -1.*t1771*t1772*t1781;
  t1816 = -1.*t1806*t1811;
  t1818 = t1784 + t1816;
  t1829 = Sin(var1[10]);
  t1762 = Cos(var1[11]);
  t1890 = t1763*t1828;
  t1899 = t1818*t1829;
  t1900 = t1890 + t1899;
  t1819 = t1763*t1818;
  t1837 = -1.*t1828*t1829;
  t1865 = t1819 + t1837;
  t1957 = Sin(var1[11]);
  t1755 = Cos(var1[12]);
  t2010 = t1762*t1900;
  t2016 = t1865*t1957;
  t2022 = t2010 + t2016;
  t1880 = t1762*t1865;
  t1977 = -1.*t1900*t1957;
  t1998 = t1880 + t1977;
  t2063 = Sin(var1[12]);
  t1753 = Cos(var1[13]);
  t2153 = t1755*t2022;
  t2180 = t1998*t2063;
  t2181 = t2153 + t2180;
  t2003 = t1755*t1998;
  t2112 = -1.*t2022*t2063;
  t2115 = t2003 + t2112;
  t2184 = Sin(var1[13]);
  t1739 = 0. + t1524 + t1683 + t1708;
  t1740 = 1/t1739;
  t2371 = Cos(var1[8]);
  t2394 = t2371*t1763*t1811;
  t2395 = t2371*t1771*t1829;
  t2402 = t2394 + t2395;
  t2380 = t2371*t1771*t1763;
  t2386 = -1.*t2371*t1811*t1829;
  t2387 = t2380 + t2386;
  t2451 = t1762*t2402;
  t2470 = t2387*t1957;
  t2482 = t2451 + t2470;
  t2393 = t1762*t2387;
  t2403 = -1.*t2402*t1957;
  t2405 = t2393 + t2403;
  t2528 = t1755*t2482;
  t2530 = t2405*t2063;
  t2541 = t2528 + t2530;
  t2447 = t1755*t2405;
  t2509 = -1.*t2482*t2063;
  t2513 = t2447 + t2509;
  t2695 = -1.*t1771*t1772;
  t2706 = -1.*t1806*t1781*t1811;
  t2708 = t2695 + t2706;
  t2675 = -1.*t1806*t1771*t1781;
  t2683 = t1772*t1811;
  t2689 = t2675 + t2683;
  t2773 = t1763*t2708;
  t2776 = t2689*t1829;
  t2779 = t2773 + t2776;
  t2694 = t1763*t2689;
  t2712 = -1.*t2708*t1829;
  t2753 = t2694 + t2712;
  t2824 = t1762*t2779;
  t2827 = t2753*t1957;
  t2862 = t2824 + t2827;
  t2763 = t1762*t2753;
  t2789 = -1.*t2779*t1957;
  t2790 = t2763 + t2789;
  t2890 = t1755*t2862;
  t2919 = t2790*t2063;
  t2934 = t2890 + t2919;
  t2800 = t1755*t2790;
  t2864 = -1.*t2862*t2063;
  t2872 = t2800 + t2864;
  t2118 = t1753*t2115;
  t2205 = -1.*t2181*t2184;
  t2208 = t2118 + t2205;
  t2257 = t1753*t2181;
  t2262 = t2115*t2184;
  t2274 = t2257 + t2262;
  t2527 = t1753*t2513;
  t2542 = -1.*t2541*t2184;
  t2577 = t2527 + t2542;
  t2592 = t1753*t2541;
  t2617 = t2513*t2184;
  t2620 = t2592 + t2617;
  t2887 = t1753*t2872;
  t2943 = -1.*t2934*t2184;
  t3008 = t2887 + t2943;
  t3026 = t1753*t2934;
  t3030 = t2872*t2184;
  t3032 = t3026 + t3030;
  t3077 = 0.642788*t2208;
  t3083 = -0.766044*t2274;
  t3093 = t3077 + t3083;
  t2352 = 0. + t1186 + t1518;
  t3141 = 0.642788*t2577;
  t3165 = -0.766044*t2620;
  t3167 = t3141 + t3165;
  t2648 = -1.*t880*t107*t1511;
  t2666 = t121*t880*t1530;
  t2670 = 0. + t2648 + t2666;
  t3187 = 0.642788*t3008;
  t3214 = -0.766044*t3032;
  t3220 = t3187 + t3214;
  t3048 = t880*t107*t1185;
  t3050 = -1.*t24*t1530;
  t3058 = 0. + t3048 + t3050;
  t2241 = -0.766044*t2208;
  t2275 = -0.642788*t2274;
  t2284 = t2241 + t2275;
  t3107 = t121*t880*t1608;
  t3123 = -1.*t24*t1655;
  t3129 = 0. + t3107 + t3123;
  t2585 = -0.766044*t2577;
  t2621 = -0.642788*t2620;
  t2641 = t2585 + t2621;
  t3168 = t880*t107*t1655;
  t3171 = -1.*t121*t880*t870;
  t3172 = 0. + t3168 + t3171;
  t3015 = -0.766044*t3008;
  t3041 = -0.642788*t3032;
  t3045 = t3015 + t3041;
  t3223 = -1.*t880*t107*t1608;
  t3225 = t24*t870;
  t3229 = 0. + t3223 + t3225;
  t1732 = t1524 + t1683 + t1708;
  t1749 = t1732*t1740;
  t1752 = 0. + t1749;
  t2356 = t2284*t2352*t1740;
  t2673 = t2641*t2670*t1740;
  t3061 = t3045*t3058*t1740;
  t3069 = 0. + t2356 + t2673 + t3061;
  t3131 = t3093*t3129*t1740;
  t3173 = t3167*t3172*t1740;
  t3234 = t3220*t3229*t1740;
  t3239 = 0. + t3131 + t3173 + t3234;
  t3375 = 0. + t1692 + t1698;
  t3425 = t1608*t1530;
  t3437 = -1.*t1185*t870;
  t3442 = 0. + t3425 + t3437;
  t3497 = -1.*t1655*t1530;
  t3500 = t1511*t870;
  t3504 = 0. + t3497 + t3500;
  t3251 = t3093*t2352*t1740;
  t3277 = t3167*t2670*t1740;
  t3278 = t3220*t3058*t1740;
  t3292 = 0. + t3251 + t3277 + t3278;
  t3302 = t2284*t3129*t1740;
  t3323 = t2641*t3172*t1740;
  t3325 = t3045*t3229*t1740;
  t3326 = 0. + t3302 + t3323 + t3325;
  t3385 = t2371*t1772*t3375*t1740;
  t3496 = t1806*t2371*t3442*t1740;
  t3508 = t1781*t3504*t1740;
  t3512 = 0. + t3385 + t3496 + t3508;
  t3516 = t2371*t1772*t3129*t1740;
  t3522 = t1781*t3172*t1740;
  t3527 = t1806*t2371*t3229*t1740;
  t3528 = 0. + t3516 + t3522 + t3527;
  t3537 = t3093*t3375*t1740;
  t3538 = t3220*t3442*t1740;
  t3542 = t3167*t3504*t1740;
  t3563 = 0. + t3537 + t3538 + t3542;
  t3612 = t2284*t3375*t1740;
  t3615 = t3045*t3442*t1740;
  t3617 = t2641*t3504*t1740;
  t3629 = 0. + t3612 + t3615 + t3617;
  t3701 = 0.642788*t743;
  t3712 = -0.766044*t40;
  t3731 = t3701 + t3712;
  t3757 = -0.766044*t743;
  t3761 = -0.642788*t40;
  t3764 = t3757 + t3761;
  t3736 = -1.*t51*t3731;
  t3774 = t593*t3764;
  t3775 = 0. + t3736 + t3774;
  t3806 = t593*t3731;
  t3837 = t51*t3764;
  t3847 = 0. + t3806 + t3837;
  t3784 = t60*t3775;
  t3860 = t434*t3847;
  t3861 = 0. + t3784 + t3860;
  t3887 = t434*t3775;
  t3888 = -1.*t60*t3847;
  t3892 = 0. + t3887 + t3888;
  t3513 = t3239*t3512;
  t3569 = -1.*t3528*t3563;
  t3582 = t3513 + t3569;
  t3590 = t3069*t3582;
  t3602 = t3326*t3512;
  t3633 = -1.*t3528*t3629;
  t3636 = t3602 + t3633;
  t3638 = -1.*t3292*t3636;
  t3643 = t2371*t1772*t2352*t1740;
  t3645 = t1781*t2670*t1740;
  t3648 = t1806*t2371*t3058*t1740;
  t3652 = 0. + t3643 + t3645 + t3648;
  t3660 = t3326*t3563;
  t3663 = -1.*t3239*t3629;
  t3664 = t3660 + t3663;
  t3669 = t3652*t3664;
  t3670 = t3590 + t3638 + t3669;
  t3676 = t1752*t3670;
  t3681 = 0. + t3676;
  t3694 = 1/t3681;
  t4072 = -0.642788*t743;
  t4077 = 0.766044*t40;
  t4080 = t4072 + t4077;
  t4059 = -1.*t51*t3764;
  t4086 = t593*t4080;
  t4098 = 0. + t4059 + t4086;
  t4134 = t51*t4080;
  t4139 = 0. + t3774 + t4134;
  t4130 = t60*t4098;
  t4159 = t434*t4139;
  t4163 = 0. + t4130 + t4159;
  t4182 = t434*t4098;
  t4185 = -1.*t60*t4139;
  t4191 = 0. + t4182 + t4185;
  t35 = 0. + t24;
  t3870 = t149*t3861;
  t3906 = t73*t3892;
  t3920 = 0. + t3870 + t3906;
  t3932 = t85*t3920;
  t3944 = -1.*t73*t3861;
  t3950 = t149*t3892;
  t3957 = 0. + t3944 + t3950;
  t3966 = t3957*t124;
  t3977 = 0. + t3932 + t3966;
  t3993 = t880*t3977;
  t4004 = 0. + t3993;
  t4177 = t149*t4163;
  t4200 = t73*t4191;
  t4206 = 0. + t4177 + t4200;
  t4223 = t85*t4206;
  t4239 = -1.*t73*t4163;
  t4240 = t149*t4191;
  t4249 = 0. + t4239 + t4240;
  t4254 = t4249*t124;
  t4262 = 0. + t4223 + t4254;
  t4263 = t880*t4262;
  t4268 = 0. + t4263;
  t4012 = t3069*t3563;
  t4013 = -1.*t3292*t3629;
  t4015 = t4012 + t4013;
  t4018 = -1.*t1752*t4015;
  t4019 = 0. + t4018;
  t4273 = t1752*t3664;
  t4290 = 0. + t4273;
  t4612 = -1.*t85*t3957;
  t4614 = t3920*t124;
  t4615 = 0. + t4612 + t4614;
  t4341 = t3069*t3512;
  t4350 = -1.*t3652*t3629;
  t4362 = t4341 + t4350;
  t4368 = t1752*t4362;
  t4381 = 0. + t4368;
  t4644 = -1.*t85*t4249;
  t4648 = t4206*t124;
  t4655 = 0. + t4644 + t4648;
  t4404 = -1.*t1752*t3636;
  t4409 = 0. + t4404;
  t4461 = t3292*t3512;
  t4463 = -1.*t3652*t3563;
  t4464 = t4461 + t4463;
  t4477 = -1.*t1752*t4464;
  t4542 = 0. + t4477;
  t4561 = t1752*t3582;
  t4585 = 0. + t4561;
  t3248 = t3069*t3239;
  t3357 = -1.*t3292*t3326;
  t3358 = t3248 + t3357;
  t3361 = t1752*t3358;
  t3371 = 0. + t3361;
  t4307 = t3069*t3528;
  t4313 = -1.*t3652*t3326;
  t4324 = t4307 + t4313;
  t4330 = -1.*t1752*t4324;
  t4337 = 0. + t4330;
  t4419 = t3292*t3528;
  t4422 = -1.*t3652*t3239;
  t4430 = t4419 + t4422;
  t4434 = t1752*t4430;
  t4441 = 0. + t4434;
  t4741 = -1.*t3371*t3694;
  t4744 = 0. + t4741;
  t4751 = -1.*t4337*t3694;
  t4767 = 0. + t4751;
  t4772 = -1.*t4441*t3694;
  t4780 = 0. + t4772;
  t4843 = 0.642788*t1753;
  t4857 = -0.766044*t2184;
  t4885 = t4843 + t4857;
  t4901 = -0.766044*t1753;
  t4916 = -0.642788*t2184;
  t4933 = t4901 + t4916;
  t4899 = -1.*t2063*t4885;
  t4937 = t1755*t4933;
  t4942 = 0. + t4899 + t4937;
  t4957 = t1755*t4885;
  t4961 = t2063*t4933;
  t4964 = 0. + t4957 + t4961;
  t4954 = t1957*t4942;
  t4968 = t1762*t4964;
  t4971 = 0. + t4954 + t4968;
  t4991 = t1762*t4942;
  t4997 = -1.*t1957*t4964;
  t5000 = 0. + t4991 + t4997;
  t5129 = -0.642788*t1753;
  t5135 = 0.766044*t2184;
  t5147 = t5129 + t5135;
  t5124 = -1.*t2063*t4933;
  t5151 = t1755*t5147;
  t5154 = 0. + t5124 + t5151;
  t5182 = t2063*t5147;
  t5190 = 0. + t4937 + t5182;
  t5175 = t1957*t5154;
  t5194 = t1762*t5190;
  t5197 = 0. + t5175 + t5194;
  t5212 = t1762*t5154;
  t5216 = -1.*t1957*t5190;
  t5237 = 0. + t5212 + t5216;
  t4984 = -1.*t1829*t4971;
  t5008 = t1763*t5000;
  t5014 = 0. + t4984 + t5008;
  t5020 = t1763*t4971;
  t5040 = t1829*t5000;
  t5062 = 0. + t5020 + t5040;
  t5208 = -1.*t1829*t5197;
  t5239 = t1763*t5237;
  t5242 = 0. + t5208 + t5239;
  t5245 = t1763*t5197;
  t5264 = t1829*t5237;
  t5276 = 0. + t5245 + t5264;
  p_output1[0]=-1.*t3371*t35*t3694 - 1.*t3694*t4004*t4019 - 1.*t3694*t4268*t4290;
  p_output1[1]=-1.*t35*t3694*t4337 - 1.*t3694*t4004*t4381 - 1.*t3694*t4268*t4409;
  p_output1[2]=-1.*t35*t3694*t4441 - 1.*t3694*t4004*t4542 - 1.*t3694*t4268*t4585;
  p_output1[3]=0. - 1.*t3694*t4019*t4615 - 1.*t3694*t4290*t4655;
  p_output1[4]=0. - 1.*t3694*t4381*t4615 - 1.*t3694*t4409*t4655;
  p_output1[5]=0. - 1.*t3694*t4542*t4615 - 1.*t3694*t4585*t4655;
  p_output1[6]=t4744;
  p_output1[7]=t4767;
  p_output1[8]=t4780;
  p_output1[9]=t4744;
  p_output1[10]=t4767;
  p_output1[11]=t4780;
  p_output1[12]=t4744;
  p_output1[13]=t4767;
  p_output1[14]=t4780;
  p_output1[15]=t4744;
  p_output1[16]=t4767;
  p_output1[17]=t4780;
  p_output1[18]=t4744;
  p_output1[19]=t4767;
  p_output1[20]=t4780;
  p_output1[21]=0. + t1781;
  p_output1[22]=0. + t2371*(0. + t1811*t5014 + t1771*t5062);
  p_output1[23]=0. + t2371*(0. + t1811*t5242 + t1771*t5276);
  p_output1[24]=0.;
  p_output1[25]=0. - 1.*t1771*t5014 + t1811*t5062;
  p_output1[26]=0. - 1.*t1771*t5242 + t1811*t5276;
  p_output1[27]=1.;
  p_output1[28]=0.;
  p_output1[29]=0.;
  p_output1[30]=1.;
  p_output1[31]=0.;
  p_output1[32]=0.;
  p_output1[33]=1.;
  p_output1[34]=0.;
  p_output1[35]=0.;
  p_output1[36]=1.;
  p_output1[37]=0.;
  p_output1[38]=0.;
  p_output1[39]=1.;
  p_output1[40]=0.;
  p_output1[41]=0.;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 14 && ncols == 1) && 
      !(mrows == 1 && ncols == 14))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 14, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Jw_LeftToeBottom_to_RightToeBottom_mex.hh"

namespace SymExpression
{

void Jw_LeftToeBottom_to_RightToeBottom_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
