/*
 * Automatically Generated from Mathematica.
 * Mon 2 Jul 2018 15:26:38 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t151;
  double t166;
  double t217;
  double t155;
  double t173;
  double t187;
  double t148;
  double t222;
  double t235;
  double t240;
  double t297;
  double t205;
  double t257;
  double t274;
  double t137;
  double t311;
  double t320;
  double t334;
  double t390;
  double t292;
  double t339;
  double t350;
  double t124;
  double t391;
  double t392;
  double t395;
  double t119;
  double t122;
  double t502;
  double t514;
  double t515;
  double t501;
  double t517;
  double t522;
  double t535;
  double t549;
  double t523;
  double t559;
  double t570;
  double t623;
  double t626;
  double t631;
  double t463;
  double t436;
  double t445;
  double t462;
  double t355;
  double t407;
  double t415;
  double t683;
  double t690;
  double t731;
  double t612;
  double t657;
  double t673;
  double t849;
  double t990;
  double t974;
  double t979;
  double t995;
  double t973;
  double t1025;
  double t1060;
  double t1068;
  double t980;
  double t1000;
  double t1003;
  double t1077;
  double t926;
  double t1124;
  double t1125;
  double t1139;
  double t1008;
  double t1090;
  double t1118;
  double t1156;
  double t890;
  double t1220;
  double t1225;
  double t1232;
  double t1120;
  double t1173;
  double t1189;
  double t1249;
  double t880;
  double t1310;
  double t1335;
  double t1337;
  double t1218;
  double t1252;
  double t1297;
  double t1355;
  double t1438;
  double t1494;
  double t1507;
  double t1508;
  double t1456;
  double t1464;
  double t1489;
  double t1594;
  double t1598;
  double t1601;
  double t1492;
  double t1519;
  double t1543;
  double t1674;
  double t1681;
  double t1683;
  double t1553;
  double t1617;
  double t1630;
  double t1797;
  double t1819;
  double t1829;
  double t1764;
  double t1784;
  double t1788;
  double t1853;
  double t1858;
  double t1869;
  double t1792;
  double t1834;
  double t1838;
  double t1882;
  double t1902;
  double t1903;
  double t1850;
  double t1872;
  double t1876;
  double t1926;
  double t1942;
  double t1943;
  double t1878;
  double t1909;
  double t1911;
  double t1307;
  double t1366;
  double t1375;
  double t1395;
  double t1412;
  double t1418;
  double t1639;
  double t1684;
  double t1686;
  double t1703;
  double t1734;
  double t1737;
  double t1915;
  double t1954;
  double t1955;
  double t1965;
  double t1975;
  double t1976;
  double t2043;
  double t2046;
  double t2053;
  double t1964;
  double t1997;
  double t2002;
  double t1698;
  double t1746;
  double t1753;
  double t2055;
  double t2061;
  double t2073;
  double t1381;
  double t1419;
  double t1421;
  double t1763;
  double t2003;
  double t2005;
  double t2012;
  double t2023;
  double t2031;
  double t2042;
  double t2054;
  double t2094;
  double t2097;
  double t2108;
  double t2113;
  double t2121;
  double t2125;
  double t2126;
  double t2146;
  double t2153;
  double t2180;
  double t2187;
  double t2189;
  double t2194;
  double t2198;
  double t2207;
  double t2191;
  double t2211;
  double t2219;
  double t2233;
  double t2234;
  double t2235;
  double t2227;
  double t2237;
  double t2259;
  double t2274;
  double t2283;
  double t2285;
  double t110;
  double t2339;
  double t2332;
  double t2336;
  double t2356;
  double t2358;
  double t2364;
  double t2367;
  double t2376;
  double t2360;
  double t2377;
  double t2386;
  double t2394;
  double t2395;
  double t2396;
  double t2389;
  double t2398;
  double t2401;
  double t2405;
  double t2406;
  double t2426;
  double t2403;
  double t2427;
  double t2428;
  double t2434;
  double t2436;
  double t2437;
  double t2542;
  double t2558;
  double t2559;
  double t2594;
  double t2596;
  double t2597;
  double t2562;
  double t2603;
  double t2628;
  double t2641;
  double t2646;
  double t2651;
  double t2638;
  double t2653;
  double t2655;
  double t2686;
  double t2700;
  double t2704;
  double t2678;
  double t2706;
  double t2731;
  double t2744;
  double t2745;
  double t2770;
  double t2273;
  double t2287;
  double t2298;
  double t2305;
  double t2307;
  double t2313;
  double t2429;
  double t2439;
  double t2450;
  double t2456;
  double t2461;
  double t2462;
  double t2732;
  double t2788;
  double t2791;
  double t2800;
  double t2814;
  double t2820;
  double t2874;
  double t2900;
  double t2909;
  double t2303;
  double t2316;
  double t2319;
  double t2955;
  double t2988;
  double t3002;
  double t2452;
  double t2465;
  double t2471;
  double t3019;
  double t3037;
  double t3052;
  double t2798;
  double t2821;
  double t2823;
  double t2157;
  double t2163;
  double t2170;
  double t2928;
  double t2933;
  double t2938;
  double t2324;
  double t2326;
  double t2329;
  double t3005;
  double t3010;
  double t3013;
  double t2530;
  double t3054;
  double t3078;
  double t3082;
  double t2129;
  double t2154;
  double t2155;
  double t3133;
  double t3145;
  double t3153;
  double t3155;
  double t3102;
  double t3115;
  double t3117;
  double t3127;
  double t3352;
  double t3357;
  double t3368;
  double t3270;
  double t3288;
  double t3299;
  double t3339;
  double t2320;
  double t2478;
  double t2837;
  double t2844;
  double t3327;
  double t3350;
  double t3378;
  double t3382;
  double t2952;
  double t3018;
  double t3090;
  double t3094;
  double t3391;
  double t3398;
  double t3405;
  double t3412;
  double t3422;
  double t3435;
  double t3454;
  double t3456;
  double t3483;
  double t3496;
  double t3500;
  double t3517;
  double t3726;
  double t3727;
  double t3740;
  double t3783;
  double t3801;
  double t3803;
  double t3754;
  double t3809;
  double t3817;
  double t3832;
  double t3836;
  double t3844;
  double t3828;
  double t3857;
  double t3887;
  double t3944;
  double t3954;
  double t3963;
  double t3605;
  double t3609;
  double t3616;
  double t3383;
  double t3457;
  double t3465;
  double t3469;
  double t3473;
  double t3547;
  double t3549;
  double t3570;
  double t3581;
  double t3584;
  double t3600;
  double t3602;
  double t3624;
  double t3662;
  double t3671;
  double t3693;
  double t3696;
  double t4093;
  double t4098;
  double t4107;
  double t4087;
  double t4110;
  double t4136;
  double t4153;
  double t4163;
  double t4150;
  double t4189;
  double t4191;
  double t4201;
  double t4208;
  double t4211;
  double t874;
  double t3941;
  double t3964;
  double t3967;
  double t3978;
  double t3981;
  double t3987;
  double t4004;
  double t4011;
  double t4019;
  double t4035;
  double t4053;
  double t4195;
  double t4227;
  double t4228;
  double t4232;
  double t4237;
  double t4246;
  double t4255;
  double t4263;
  double t4266;
  double t4270;
  double t4275;
  double t4065;
  double t4068;
  double t4282;
  double t4301;
  double t4305;
  double t4307;
  double t4308;
  double t4634;
  double t4639;
  double t4644;
  double t4385;
  double t4390;
  double t4650;
  double t4663;
  double t4666;
  double t4397;
  double t4401;
  double t4416;
  double t4453;
  double t4456;
  double t4539;
  double t4546;
  double t4562;
  double t4573;
  double t4592;
  double t4603;
  double t4606;
  double t3096;
  double t3175;
  double t3201;
  double t3232;
  double t3256;
  double t4321;
  double t4325;
  double t4337;
  double t4352;
  double t4354;
  double t4471;
  double t4483;
  double t4507;
  double t4511;
  double t4520;
  double t4718;
  double t4730;
  double t4731;
  double t4736;
  double t4744;
  double t4772;
  t151 = Cos(var1[6]);
  t166 = Sin(var1[6]);
  t217 = Cos(var1[5]);
  t155 = 0.642788*t151;
  t173 = -0.766044*t166;
  t187 = t155 + t173;
  t148 = Sin(var1[5]);
  t222 = 0.766044*t151;
  t235 = 0.642788*t166;
  t240 = t222 + t235;
  t297 = Cos(var1[4]);
  t205 = t148*t187;
  t257 = t217*t240;
  t274 = 0. + t205 + t257;
  t137 = Sin(var1[4]);
  t311 = t217*t187;
  t320 = -1.*t148*t240;
  t334 = 0. + t311 + t320;
  t390 = Sin(var1[3]);
  t292 = -1.*t137*t274;
  t339 = t297*t334;
  t350 = 0. + t292 + t339;
  t124 = Cos(var1[3]);
  t391 = t297*t274;
  t392 = t137*t334;
  t395 = 0. + t391 + t392;
  t119 = Cos(var1[1]);
  t122 = Cos(var1[2]);
  t502 = -0.766044*t151;
  t514 = -0.642788*t166;
  t515 = t502 + t514;
  t501 = -1.*t148*t187;
  t517 = t217*t515;
  t522 = 0. + t501 + t517;
  t535 = t148*t515;
  t549 = 0. + t311 + t535;
  t523 = t137*t522;
  t559 = t297*t549;
  t570 = 0. + t523 + t559;
  t623 = t297*t522;
  t626 = -1.*t137*t549;
  t631 = 0. + t623 + t626;
  t463 = Sin(var1[2]);
  t436 = t390*t350;
  t445 = t124*t395;
  t462 = 0. + t436 + t445;
  t355 = t124*t350;
  t407 = -1.*t390*t395;
  t415 = 0. + t355 + t407;
  t683 = t124*t570;
  t690 = t390*t631;
  t731 = 0. + t683 + t690;
  t612 = -1.*t390*t570;
  t657 = t124*t631;
  t673 = 0. + t612 + t657;
  t849 = Sin(var1[8]);
  t990 = Cos(var1[7]);
  t974 = Cos(var1[9]);
  t979 = Sin(var1[7]);
  t995 = Sin(var1[9]);
  t973 = Cos(var1[10]);
  t1025 = t990*t974;
  t1060 = -1.*t979*t849*t995;
  t1068 = t1025 + t1060;
  t980 = t974*t979*t849;
  t1000 = t990*t995;
  t1003 = t980 + t1000;
  t1077 = Sin(var1[10]);
  t926 = Cos(var1[11]);
  t1124 = t973*t1068;
  t1125 = -1.*t1003*t1077;
  t1139 = t1124 + t1125;
  t1008 = t973*t1003;
  t1090 = t1068*t1077;
  t1118 = t1008 + t1090;
  t1156 = Sin(var1[11]);
  t890 = Cos(var1[12]);
  t1220 = t926*t1139;
  t1225 = -1.*t1118*t1156;
  t1232 = t1220 + t1225;
  t1120 = t926*t1118;
  t1173 = t1139*t1156;
  t1189 = t1120 + t1173;
  t1249 = Sin(var1[12]);
  t880 = Cos(var1[13]);
  t1310 = t890*t1232;
  t1335 = -1.*t1189*t1249;
  t1337 = t1310 + t1335;
  t1218 = t890*t1189;
  t1252 = t1232*t1249;
  t1297 = t1218 + t1252;
  t1355 = Sin(var1[13]);
  t1438 = Cos(var1[8]);
  t1494 = -1.*t1438*t973*t995;
  t1507 = -1.*t1438*t974*t1077;
  t1508 = t1494 + t1507;
  t1456 = t1438*t974*t973;
  t1464 = -1.*t1438*t995*t1077;
  t1489 = t1456 + t1464;
  t1594 = t926*t1508;
  t1598 = -1.*t1489*t1156;
  t1601 = t1594 + t1598;
  t1492 = t926*t1489;
  t1519 = t1508*t1156;
  t1543 = t1492 + t1519;
  t1674 = t890*t1601;
  t1681 = -1.*t1543*t1249;
  t1683 = t1674 + t1681;
  t1553 = t890*t1543;
  t1617 = t1601*t1249;
  t1630 = t1553 + t1617;
  t1797 = -1.*t974*t979;
  t1819 = -1.*t990*t849*t995;
  t1829 = t1797 + t1819;
  t1764 = t990*t974*t849;
  t1784 = -1.*t979*t995;
  t1788 = t1764 + t1784;
  t1853 = t973*t1829;
  t1858 = -1.*t1788*t1077;
  t1869 = t1853 + t1858;
  t1792 = t973*t1788;
  t1834 = t1829*t1077;
  t1838 = t1792 + t1834;
  t1882 = t926*t1869;
  t1902 = -1.*t1838*t1156;
  t1903 = t1882 + t1902;
  t1850 = t926*t1838;
  t1872 = t1869*t1156;
  t1876 = t1850 + t1872;
  t1926 = t890*t1903;
  t1942 = -1.*t1876*t1249;
  t1943 = t1926 + t1942;
  t1878 = t890*t1876;
  t1909 = t1903*t1249;
  t1911 = t1878 + t1909;
  t1307 = t880*t1297;
  t1366 = t1337*t1355;
  t1375 = t1307 + t1366;
  t1395 = t880*t1337;
  t1412 = -1.*t1297*t1355;
  t1418 = t1395 + t1412;
  t1639 = t880*t1630;
  t1684 = t1683*t1355;
  t1686 = t1639 + t1684;
  t1703 = t880*t1683;
  t1734 = -1.*t1630*t1355;
  t1737 = t1703 + t1734;
  t1915 = t880*t1911;
  t1954 = t1943*t1355;
  t1955 = t1915 + t1954;
  t1965 = t880*t1943;
  t1975 = -1.*t1911*t1355;
  t1976 = t1965 + t1975;
  t2043 = 0.642788*t1686;
  t2046 = 0.766044*t1737;
  t2053 = t2043 + t2046;
  t1964 = -0.766044*t1955;
  t1997 = 0.642788*t1976;
  t2002 = t1964 + t1997;
  t1698 = -0.766044*t1686;
  t1746 = 0.642788*t1737;
  t1753 = t1698 + t1746;
  t2055 = 0.642788*t1955;
  t2061 = 0.766044*t1976;
  t2073 = t2055 + t2061;
  t1381 = 0.642788*t1375;
  t1419 = 0.766044*t1418;
  t1421 = t1381 + t1419;
  t1763 = t990*t1438*t1753;
  t2003 = t849*t2002;
  t2005 = t1763 + t2003;
  t2012 = -1.*t1421*t2005;
  t2023 = -0.766044*t1375;
  t2031 = 0.642788*t1418;
  t2042 = t2023 + t2031;
  t2054 = t990*t1438*t2053;
  t2094 = t849*t2073;
  t2097 = t2054 + t2094;
  t2108 = t2042*t2097;
  t2113 = t2053*t2002;
  t2121 = -1.*t1753*t2073;
  t2125 = t2113 + t2121;
  t2126 = -1.*t1438*t979*t2125;
  t2146 = 0. + t2012 + t2108 + t2126;
  t2153 = 1/t2146;
  t2180 = -1.*t119*t122*t390;
  t2187 = -1.*t124*t119*t463;
  t2189 = t2180 + t2187;
  t2194 = t124*t119*t122;
  t2198 = -1.*t119*t390*t463;
  t2207 = t2194 + t2198;
  t2191 = t137*t2189;
  t2211 = t297*t2207;
  t2219 = t2191 + t2211;
  t2233 = t297*t2189;
  t2234 = -1.*t137*t2207;
  t2235 = t2233 + t2234;
  t2227 = -1.*t148*t2219;
  t2237 = t217*t2235;
  t2259 = t2227 + t2237;
  t2274 = t217*t2219;
  t2283 = t148*t2235;
  t2285 = t2274 + t2283;
  t110 = Sin(var1[1]);
  t2339 = Sin(var1[0]);
  t2332 = Cos(var1[0]);
  t2336 = t2332*t122*t110;
  t2356 = -1.*t2339*t463;
  t2358 = t2336 + t2356;
  t2364 = -1.*t122*t2339;
  t2367 = -1.*t2332*t110*t463;
  t2376 = t2364 + t2367;
  t2360 = -1.*t390*t2358;
  t2377 = t124*t2376;
  t2386 = t2360 + t2377;
  t2394 = t124*t2358;
  t2395 = t390*t2376;
  t2396 = t2394 + t2395;
  t2389 = t137*t2386;
  t2398 = t297*t2396;
  t2401 = t2389 + t2398;
  t2405 = t297*t2386;
  t2406 = -1.*t137*t2396;
  t2426 = t2405 + t2406;
  t2403 = -1.*t148*t2401;
  t2427 = t217*t2426;
  t2428 = t2403 + t2427;
  t2434 = t217*t2401;
  t2436 = t148*t2426;
  t2437 = t2434 + t2436;
  t2542 = t122*t2339*t110;
  t2558 = t2332*t463;
  t2559 = t2542 + t2558;
  t2594 = t2332*t122;
  t2596 = -1.*t2339*t110*t463;
  t2597 = t2594 + t2596;
  t2562 = -1.*t390*t2559;
  t2603 = t124*t2597;
  t2628 = t2562 + t2603;
  t2641 = t124*t2559;
  t2646 = t390*t2597;
  t2651 = t2641 + t2646;
  t2638 = t137*t2628;
  t2653 = t297*t2651;
  t2655 = t2638 + t2653;
  t2686 = t297*t2628;
  t2700 = -1.*t137*t2651;
  t2704 = t2686 + t2700;
  t2678 = -1.*t148*t2655;
  t2706 = t217*t2704;
  t2731 = t2678 + t2706;
  t2744 = t217*t2655;
  t2745 = t148*t2704;
  t2770 = t2744 + t2745;
  t2273 = t166*t2259;
  t2287 = t151*t2285;
  t2298 = t2273 + t2287;
  t2305 = t151*t2259;
  t2307 = -1.*t166*t2285;
  t2313 = t2305 + t2307;
  t2429 = t166*t2428;
  t2439 = t151*t2437;
  t2450 = t2429 + t2439;
  t2456 = t151*t2428;
  t2461 = -1.*t166*t2437;
  t2462 = t2456 + t2461;
  t2732 = t166*t2731;
  t2788 = t151*t2770;
  t2791 = t2732 + t2788;
  t2800 = t151*t2731;
  t2814 = -1.*t166*t2770;
  t2820 = t2800 + t2814;
  t2874 = -1.*t1438*t979*t2002;
  t2900 = t990*t1438*t2042;
  t2909 = 0. + t2874 + t2900;
  t2303 = -0.766044*t2298;
  t2316 = 0.642788*t2313;
  t2319 = t2303 + t2316;
  t2955 = t1438*t979*t1753;
  t2988 = t849*t2042;
  t3002 = 0. + t2955 + t2988;
  t2452 = -0.766044*t2450;
  t2465 = 0.642788*t2462;
  t2471 = t2452 + t2465;
  t3019 = -1.*t990*t1438*t1753;
  t3037 = -1.*t849*t2002;
  t3052 = 0. + t3019 + t3037;
  t2798 = -0.766044*t2791;
  t2821 = 0.642788*t2820;
  t2823 = t2798 + t2821;
  t2157 = t1438*t979*t2073;
  t2163 = -1.*t990*t1438*t1421;
  t2170 = 0. + t2157 + t2163;
  t2928 = 0.642788*t2298;
  t2933 = 0.766044*t2313;
  t2938 = t2928 + t2933;
  t2324 = -1.*t1438*t979*t2053;
  t2326 = -1.*t849*t1421;
  t2329 = 0. + t2324 + t2326;
  t3005 = 0.642788*t2450;
  t3010 = 0.766044*t2462;
  t3013 = t3005 + t3010;
  t2530 = 0. + t2054 + t2094;
  t3054 = 0.642788*t2791;
  t3078 = 0.766044*t2820;
  t3082 = t3054 + t3078;
  t2129 = t2012 + t2108 + t2126;
  t2154 = t2129*t2153;
  t2155 = 0. + t2154;
  t3133 = t2170*t2153*t2938;
  t3145 = t2329*t2153*t3013;
  t3153 = t2530*t2153*t3082;
  t3155 = 0. + t3133 + t3145 + t3153;
  t3102 = t2909*t2153*t2319;
  t3115 = t3002*t2153*t2471;
  t3117 = t3052*t2153*t2823;
  t3127 = 0. + t3102 + t3115 + t3117;
  t3352 = t2073*t2042;
  t3357 = -1.*t2002*t1421;
  t3368 = 0. + t3352 + t3357;
  t3270 = -1.*t2053*t2042;
  t3288 = t1753*t1421;
  t3299 = 0. + t3270 + t3288;
  t3339 = 0. + t2113 + t2121;
  t2320 = t2170*t2153*t2319;
  t2478 = t2329*t2153*t2471;
  t2837 = t2530*t2153*t2823;
  t2844 = 0. + t2320 + t2478 + t2837;
  t3327 = -1.*t2332*t119*t3299*t2153;
  t3350 = -1.*t119*t3339*t2153*t2339;
  t3378 = t3368*t2153*t110;
  t3382 = 0. + t3327 + t3350 + t3378;
  t2952 = t2909*t2153*t2938;
  t3018 = t3002*t2153*t3013;
  t3090 = t3052*t2153*t3082;
  t3094 = 0. + t2952 + t3018 + t3090;
  t3391 = -1.*t2332*t119*t3002*t2153;
  t3398 = -1.*t119*t3052*t2153*t2339;
  t3405 = t2909*t2153*t110;
  t3412 = 0. + t3391 + t3398 + t3405;
  t3422 = t3368*t2153*t2319;
  t3435 = t3299*t2153*t2471;
  t3454 = t3339*t2153*t2823;
  t3456 = 0. + t3422 + t3435 + t3454;
  t3483 = t3368*t2153*t2938;
  t3496 = t3299*t2153*t3013;
  t3500 = t3339*t2153*t3082;
  t3517 = 0. + t3483 + t3496 + t3500;
  t3726 = 0.642788*t880;
  t3727 = -0.766044*t1355;
  t3740 = t3726 + t3727;
  t3783 = -0.766044*t880;
  t3801 = -0.642788*t1355;
  t3803 = t3783 + t3801;
  t3754 = -1.*t1249*t3740;
  t3809 = t890*t3803;
  t3817 = 0. + t3754 + t3809;
  t3832 = t890*t3740;
  t3836 = t1249*t3803;
  t3844 = 0. + t3832 + t3836;
  t3828 = t1156*t3817;
  t3857 = t926*t3844;
  t3887 = 0. + t3828 + t3857;
  t3944 = t926*t3817;
  t3954 = -1.*t1156*t3844;
  t3963 = 0. + t3944 + t3954;
  t3605 = -1.*t3456*t3094;
  t3609 = t3127*t3517;
  t3616 = t3605 + t3609;
  t3383 = t3382*t3127;
  t3457 = -1.*t3412*t3456;
  t3465 = t3383 + t3457;
  t3469 = -1.*t3155*t3465;
  t3473 = t3382*t3094;
  t3547 = -1.*t3412*t3517;
  t3549 = t3473 + t3547;
  t3570 = t2844*t3549;
  t3581 = -1.*t2332*t119*t2329*t2153;
  t3584 = -1.*t119*t2530*t2153*t2339;
  t3600 = t2170*t2153*t110;
  t3602 = 0. + t3581 + t3584 + t3600;
  t3624 = t3602*t3616;
  t3662 = t3469 + t3570 + t3624;
  t3671 = t2155*t3662;
  t3693 = 0. + t3671;
  t3696 = 1/t3693;
  t4093 = 0.766044*t880;
  t4098 = 0.642788*t1355;
  t4107 = t4093 + t4098;
  t4087 = t1249*t3740;
  t4110 = t890*t4107;
  t4136 = 0. + t4087 + t4110;
  t4153 = -1.*t1249*t4107;
  t4163 = 0. + t3832 + t4153;
  t4150 = -1.*t1156*t4136;
  t4189 = t926*t4163;
  t4191 = 0. + t4150 + t4189;
  t4201 = t926*t4136;
  t4208 = t1156*t4163;
  t4211 = 0. + t4201 + t4208;
  t874 = 0. + t849;
  t3941 = -1.*t1077*t3887;
  t3964 = t973*t3963;
  t3967 = 0. + t3941 + t3964;
  t3978 = t974*t3967;
  t3981 = t973*t3887;
  t3987 = t1077*t3963;
  t4004 = 0. + t3981 + t3987;
  t4011 = -1.*t995*t4004;
  t4019 = 0. + t3978 + t4011;
  t4035 = t1438*t4019;
  t4053 = 0. + t4035;
  t4195 = t1077*t4191;
  t4227 = t973*t4211;
  t4228 = 0. + t4195 + t4227;
  t4232 = -1.*t995*t4228;
  t4237 = t973*t4191;
  t4246 = -1.*t1077*t4211;
  t4255 = 0. + t4237 + t4246;
  t4263 = t974*t4255;
  t4266 = 0. + t4232 + t4263;
  t4270 = t1438*t4266;
  t4275 = 0. + t4270;
  t4065 = t2155*t3616;
  t4068 = 0. + t4065;
  t4282 = -1.*t3456*t3155;
  t4301 = t2844*t3517;
  t4305 = t4282 + t4301;
  t4307 = -1.*t2155*t4305;
  t4308 = 0. + t4307;
  t4634 = t995*t3967;
  t4639 = t974*t4004;
  t4644 = 0. + t4634 + t4639;
  t4385 = -1.*t2155*t3465;
  t4390 = 0. + t4385;
  t4650 = t974*t4228;
  t4663 = t995*t4255;
  t4666 = 0. + t4650 + t4663;
  t4397 = t3382*t2844;
  t4401 = -1.*t3602*t3456;
  t4416 = t4397 + t4401;
  t4453 = t2155*t4416;
  t4456 = 0. + t4453;
  t4539 = t2155*t3549;
  t4546 = 0. + t4539;
  t4562 = t3382*t3155;
  t4573 = -1.*t3602*t3517;
  t4592 = t4562 + t4573;
  t4603 = -1.*t2155*t4592;
  t4606 = 0. + t4603;
  t3096 = t2844*t3094;
  t3175 = -1.*t3127*t3155;
  t3201 = t3096 + t3175;
  t3232 = t2155*t3201;
  t3256 = 0. + t3232;
  t4321 = -1.*t3602*t3127;
  t4325 = t3412*t2844;
  t4337 = t4321 + t4325;
  t4352 = -1.*t2155*t4337;
  t4354 = 0. + t4352;
  t4471 = -1.*t3602*t3094;
  t4483 = t3412*t3155;
  t4507 = t4471 + t4483;
  t4511 = t2155*t4507;
  t4520 = 0. + t4511;
  t4718 = -1.*t3256*t3696;
  t4730 = 0. + t4718;
  t4731 = -1.*t4354*t3696;
  t4736 = 0. + t4731;
  t4744 = -1.*t4520*t3696;
  t4772 = 0. + t4744;
  p_output1[0]=0. + t110;
  p_output1[1]=0. + t119*(0. + t122*t415 - 1.*t462*t463);
  p_output1[2]=0. + t119*(0. + t122*t673 - 1.*t463*t731);
  p_output1[3]=0.;
  p_output1[4]=0. + t122*t462 + t415*t463;
  p_output1[5]=0. + t463*t673 + t122*t731;
  p_output1[6]=1.;
  p_output1[7]=0.;
  p_output1[8]=0.;
  p_output1[9]=1.;
  p_output1[10]=0.;
  p_output1[11]=0.;
  p_output1[12]=1.;
  p_output1[13]=0.;
  p_output1[14]=0.;
  p_output1[15]=1.;
  p_output1[16]=0.;
  p_output1[17]=0.;
  p_output1[18]=1.;
  p_output1[19]=0.;
  p_output1[20]=0.;
  p_output1[21]=-1.*t3696*t4053*t4068 - 1.*t3696*t4275*t4308 - 1.*t3256*t3696*t874;
  p_output1[22]=-1.*t3696*t4053*t4390 - 1.*t3696*t4275*t4456 - 1.*t3696*t4354*t874;
  p_output1[23]=-1.*t3696*t4053*t4546 - 1.*t3696*t4275*t4606 - 1.*t3696*t4520*t874;
  p_output1[24]=0. - 1.*t3696*t4068*t4644 - 1.*t3696*t4308*t4666;
  p_output1[25]=0. - 1.*t3696*t4390*t4644 - 1.*t3696*t4456*t4666;
  p_output1[26]=0. - 1.*t3696*t4546*t4644 - 1.*t3696*t4606*t4666;
  p_output1[27]=t4730;
  p_output1[28]=t4736;
  p_output1[29]=t4772;
  p_output1[30]=t4730;
  p_output1[31]=t4736;
  p_output1[32]=t4772;
  p_output1[33]=t4730;
  p_output1[34]=t4736;
  p_output1[35]=t4772;
  p_output1[36]=t4730;
  p_output1[37]=t4736;
  p_output1[38]=t4772;
  p_output1[39]=t4730;
  p_output1[40]=t4736;
  p_output1[41]=t4772;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 14 && ncols == 1) && 
      !(mrows == 1 && ncols == 14))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 14, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Jw_RightToeBottom_to_LeftToeBottom_mex.hh"

namespace SymExpression
{

void Jw_RightToeBottom_to_LeftToeBottom_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
