/*
 * Automatically Generated from Mathematica.
 * Mon 2 Jul 2018 15:34:08 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t741;
  double t836;
  double t872;
  double t711;
  double t1440;
  double t330;
  double t772;
  double t1446;
  double t1572;
  double t1766;
  double t1837;
  double t1852;
  double t1867;
  double t2280;
  double t2289;
  double t2330;
  double t2657;
  double t2077;
  double t2146;
  double t2168;
  double t2802;
  double t3629;
  double t3632;
  double t3729;
  double t3782;
  double t3379;
  double t3495;
  double t3570;
  double t4038;
  double t4058;
  double t4201;
  double t4346;
  double t4419;
  double t4421;
  double t4575;
  double t4840;
  double t4890;
  double t4901;
  double t5001;
  double t5030;
  double t5053;
  double t5242;
  double t5284;
  double t5313;
  double t5371;
  double t5397;
  double t5429;
  double t5434;
  double t5524;
  double t5534;
  double t5560;
  double t5587;
  double t5589;
  double t5609;
  double t5622;
  double t5636;
  double t5653;
  double t5657;
  double t5712;
  double t5732;
  double t5743;
  double t5755;
  double t5758;
  double t5761;
  double t5771;
  double t5804;
  double t5807;
  double t5814;
  double t5858;
  double t5863;
  double t5873;
  double t387;
  double t493;
  double t590;
  double t653;
  double t1965;
  double t2004;
  double t5983;
  double t5996;
  double t6001;
  double t6028;
  double t6071;
  double t6072;
  double t2337;
  double t2686;
  double t2703;
  double t2916;
  double t3005;
  double t3009;
  double t6088;
  double t6112;
  double t6135;
  double t3730;
  double t3827;
  double t3854;
  double t4273;
  double t4279;
  double t4282;
  double t4512;
  double t4601;
  double t4718;
  double t6181;
  double t6191;
  double t6200;
  double t6211;
  double t6213;
  double t6221;
  double t4941;
  double t4973;
  double t4983;
  double t5327;
  double t5389;
  double t5396;
  double t6229;
  double t6261;
  double t6263;
  double t6300;
  double t6317;
  double t6333;
  double t5466;
  double t5469;
  double t5485;
  double t5615;
  double t5623;
  double t5626;
  double t6366;
  double t6382;
  double t6387;
  double t6397;
  double t6407;
  double t6408;
  double t5691;
  double t5701;
  double t5705;
  double t5762;
  double t5786;
  double t5799;
  double t6420;
  double t6440;
  double t6449;
  double t6458;
  double t6463;
  double t6466;
  double t5834;
  double t5845;
  double t5853;
  double t6476;
  double t6487;
  double t6489;
  double t6519;
  double t6521;
  double t6529;
  double t6731;
  double t6746;
  double t6750;
  double t6795;
  double t6801;
  double t6802;
  double t6825;
  double t6841;
  double t6842;
  double t6849;
  double t6865;
  double t6870;
  double t6873;
  double t6877;
  double t6883;
  double t6895;
  double t6899;
  double t6902;
  double t6908;
  double t6921;
  double t6922;
  double t6937;
  double t6940;
  double t6942;
  double t6947;
  double t6948;
  double t6951;
  double t6963;
  double t6966;
  double t6979;
  double t7004;
  double t7007;
  double t7026;
  double t7112;
  double t7113;
  double t7125;
  double t7173;
  double t7175;
  double t7182;
  double t7192;
  double t7198;
  double t7202;
  double t7208;
  double t7210;
  double t7219;
  double t7225;
  double t7229;
  double t7230;
  double t7247;
  double t7248;
  double t7252;
  double t7264;
  double t7265;
  double t7272;
  double t7285;
  double t7300;
  double t7302;
  double t7320;
  double t7328;
  double t7329;
  double t7347;
  double t7357;
  double t7368;
  double t7374;
  double t7384;
  double t7389;
  double t7447;
  double t7451;
  double t7452;
  double t7482;
  double t7486;
  double t7489;
  double t7501;
  double t7506;
  double t7507;
  double t7515;
  double t7525;
  double t7527;
  double t7531;
  double t7533;
  double t7537;
  double t7541;
  double t7545;
  double t7551;
  double t7563;
  double t7565;
  double t7566;
  double t7573;
  double t7576;
  double t7579;
  double t7606;
  double t7609;
  double t7630;
  double t7653;
  double t7654;
  double t7655;
  double t7677;
  double t7679;
  double t7682;
  double t7730;
  double t7738;
  double t7745;
  double t7751;
  double t7757;
  double t7773;
  double t7779;
  double t7782;
  double t7803;
  double t7808;
  double t7817;
  double t7821;
  double t7826;
  double t7829;
  double t7837;
  double t7846;
  double t7848;
  double t7852;
  double t7860;
  double t7862;
  double t7885;
  double t7892;
  double t7907;
  double t7920;
  double t7921;
  double t7923;
  double t7932;
  double t7934;
  double t7939;
  double t7951;
  double t7959;
  double t7962;
  double t8006;
  double t8012;
  double t8017;
  double t8048;
  double t8050;
  double t8053;
  double t8071;
  double t8075;
  double t8081;
  double t8087;
  double t8088;
  double t8096;
  double t8097;
  double t8100;
  double t8108;
  double t8112;
  double t8131;
  double t8142;
  double t8147;
  double t8149;
  double t8159;
  double t8184;
  double t8191;
  double t8195;
  double t8200;
  double t8203;
  double t8214;
  double t8220;
  double t8222;
  double t8231;
  double t8233;
  double t8234;
  double t8283;
  double t8284;
  double t8285;
  double t8304;
  double t8308;
  double t8310;
  double t8314;
  double t8317;
  double t8319;
  double t8337;
  double t8342;
  double t8345;
  double t8356;
  double t8361;
  double t8362;
  double t8364;
  double t8370;
  double t8373;
  double t8378;
  double t8385;
  double t8387;
  double t8390;
  double t8397;
  double t8401;
  double t8403;
  double t8405;
  double t8406;
  double t8409;
  double t8412;
  double t8413;
  double t8471;
  double t8472;
  double t8476;
  double t8478;
  double t8479;
  double t8484;
  double t8486;
  double t8487;
  double t8490;
  double t8492;
  double t8500;
  double t8503;
  double t8505;
  double t8510;
  double t8515;
  double t8516;
  double t8522;
  double t8527;
  double t8532;
  double t8533;
  double t8540;
  double t8541;
  double t8546;
  double t8552;
  double t8553;
  double t8554;
  double t8598;
  double t8599;
  double t8606;
  double t8613;
  double t8617;
  double t8628;
  double t8632;
  double t8638;
  double t8640;
  double t8643;
  double t8648;
  double t8651;
  double t8655;
  double t8659;
  double t8660;
  double t8662;
  double t8673;
  double t8675;
  double t8676;
  double t8679;
  double t8681;
  double t8682;
  double t8703;
  double t8710;
  double t8711;
  double t8719;
  double t8720;
  double t8721;
  double t8729;
  double t8735;
  double t8739;
  double t8286;
  double t8291;
  double t8296;
  double t8311;
  double t8322;
  double t8354;
  double t8363;
  double t8377;
  double t8388;
  double t8402;
  double t8407;
  double t8415;
  double t8420;
  double t8424;
  double t8425;
  double t8433;
  double t8441;
  double t8449;
  double t8451;
  double t8453;
  double t6150;
  double t6164;
  double t6167;
  double t8870;
  double t8871;
  double t8872;
  double t8879;
  double t8881;
  double t8883;
  double t8887;
  double t8888;
  double t8903;
  double t8913;
  double t8920;
  double t8923;
  double t8925;
  double t8926;
  double t8927;
  double t8930;
  double t8935;
  double t8936;
  double t8834;
  double t8835;
  double t8839;
  double t8847;
  double t8848;
  double t8995;
  double t9002;
  double t9004;
  double t9008;
  double t9018;
  double t9020;
  double t9062;
  double t9063;
  double t9065;
  double t9074;
  double t9075;
  double t9080;
  double t9087;
  double t9090;
  double t9091;
  double t9094;
  double t9095;
  double t9100;
  double t9104;
  double t9109;
  double t9111;
  double t9120;
  double t9122;
  double t9126;
  double t9163;
  double t9169;
  double t9176;
  double t9193;
  double t9195;
  double t9196;
  double t9224;
  double t9230;
  double t9231;
  double t9236;
  double t9240;
  double t9252;
  double t9265;
  double t9270;
  double t9276;
  double t9284;
  double t9288;
  double t9291;
  double t9299;
  double t9302;
  double t9304;
  double t9307;
  double t9308;
  double t9313;
  double t9390;
  double t9392;
  double t9394;
  double t9423;
  double t9424;
  double t9429;
  double t9432;
  double t9434;
  double t9437;
  double t9446;
  double t9447;
  double t9455;
  double t9457;
  double t9462;
  double t9474;
  double t9478;
  double t9480;
  double t9483;
  double t9484;
  double t9486;
  double t9342;
  double t9349;
  double t9355;
  double t9357;
  double t9386;
  double t9522;
  double t9536;
  double t9538;
  double t9547;
  double t9570;
  double t9576;
  double t9608;
  double t9618;
  double t9627;
  double t9636;
  double t9637;
  double t9647;
  double t9659;
  double t9668;
  double t9670;
  double t9678;
  double t9681;
  double t9687;
  double t9693;
  double t9709;
  double t9718;
  double t9737;
  double t9746;
  double t9750;
  double t9760;
  double t9763;
  double t9779;
  double t9845;
  double t9848;
  double t9849;
  double t9855;
  double t9856;
  double t9858;
  double t9863;
  double t9866;
  double t9868;
  double t9870;
  double t9872;
  double t9875;
  double t9888;
  double t9889;
  double t9907;
  double t9920;
  double t9924;
  double t9926;
  double t9934;
  double t9937;
  double t9940;
  double t9943;
  double t9945;
  double t9949;
  double t9954;
  double t9957;
  double t9966;
  double t10064;
  double t10070;
  double t10086;
  double t10089;
  double t10090;
  double t10092;
  double t10094;
  double t10106;
  double t10108;
  double t10110;
  double t10113;
  double t10115;
  double t10120;
  double t10011;
  double t10023;
  double t10024;
  double t10040;
  double t10042;
  double t10181;
  double t10185;
  double t10188;
  double t10217;
  double t10220;
  double t10231;
  double t10237;
  double t10254;
  double t10258;
  double t10293;
  double t10299;
  double t10301;
  double t10306;
  double t10312;
  double t10317;
  double t10319;
  double t10332;
  double t10334;
  double t10343;
  double t10417;
  double t10424;
  double t10438;
  double t10449;
  double t10450;
  double t10458;
  double t10459;
  double t10484;
  double t10490;
  double t10502;
  double t10505;
  double t10513;
  double t10515;
  double t10519;
  double t10521;
  double t10525;
  double t10531;
  double t10534;
  double t10541;
  double t10647;
  double t10649;
  double t10658;
  double t10661;
  double t10667;
  double t10677;
  double t10688;
  double t10593;
  double t10605;
  double t10613;
  double t10619;
  double t10623;
  double t10732;
  double t10734;
  double t10741;
  double t10746;
  double t10750;
  double t10763;
  double t10764;
  double t10766;
  double t10767;
  double t10768;
  double t10792;
  double t10797;
  double t10802;
  double t10870;
  double t10871;
  double t10877;
  double t10882;
  double t10885;
  double t10896;
  double t10900;
  double t10903;
  double t10908;
  double t10915;
  double t10934;
  double t10941;
  double t10950;
  double t11047;
  double t11058;
  double t6650;
  double t11003;
  double t11005;
  double t11012;
  double t11020;
  double t11037;
  double t11107;
  double t11108;
  double t11110;
  double t11126;
  double t11130;
  double t11149;
  double t11152;
  double t11227;
  double t11230;
  double t11241;
  double t11262;
  double t11272;
  double t11277;
  double t11283;
  double t11070;
  double t6661;
  double t6671;
  double t11336;
  double t11338;
  double t11346;
  double t11349;
  double t11351;
  double t11173;
  double t11367;
  double t11368;
  double t11370;
  double t11194;
  double t11312;
  double t11396;
  double t11397;
  double t11398;
  double t11327;
  t741 = Cos(var1[5]);
  t836 = Sin(var1[3]);
  t872 = Sin(var1[4]);
  t711 = Cos(var1[3]);
  t1440 = Sin(var1[5]);
  t330 = Cos(var1[6]);
  t772 = -1.*t711*t741;
  t1446 = -1.*t836*t872*t1440;
  t1572 = t772 + t1446;
  t1766 = -1.*t741*t836*t872;
  t1837 = t711*t1440;
  t1852 = t1766 + t1837;
  t1867 = Sin(var1[6]);
  t2280 = Cos(var1[7]);
  t2289 = -1.*t2280;
  t2330 = 1. + t2289;
  t2657 = Sin(var1[7]);
  t2077 = t330*t1572;
  t2146 = t1852*t1867;
  t2168 = t2077 + t2146;
  t2802 = Cos(var1[4]);
  t3629 = Cos(var1[8]);
  t3632 = -1.*t3629;
  t3729 = 1. + t3632;
  t3782 = Sin(var1[8]);
  t3379 = -1.*t2802*t2280*t836;
  t3495 = t2168*t2657;
  t3570 = t3379 + t3495;
  t4038 = t330*t1852;
  t4058 = -1.*t1572*t1867;
  t4201 = t4038 + t4058;
  t4346 = Cos(var1[9]);
  t4419 = -1.*t4346;
  t4421 = 1. + t4419;
  t4575 = Sin(var1[9]);
  t4840 = t3629*t3570;
  t4890 = t4201*t3782;
  t4901 = t4840 + t4890;
  t5001 = t3629*t4201;
  t5030 = -1.*t3570*t3782;
  t5053 = t5001 + t5030;
  t5242 = Cos(var1[10]);
  t5284 = -1.*t5242;
  t5313 = 1. + t5284;
  t5371 = Sin(var1[10]);
  t5397 = -1.*t4575*t4901;
  t5429 = t4346*t5053;
  t5434 = t5397 + t5429;
  t5524 = t4346*t4901;
  t5534 = t4575*t5053;
  t5560 = t5524 + t5534;
  t5587 = Cos(var1[11]);
  t5589 = -1.*t5587;
  t5609 = 1. + t5589;
  t5622 = Sin(var1[11]);
  t5636 = t5371*t5434;
  t5653 = t5242*t5560;
  t5657 = t5636 + t5653;
  t5712 = t5242*t5434;
  t5732 = -1.*t5371*t5560;
  t5743 = t5712 + t5732;
  t5755 = Cos(var1[12]);
  t5758 = -1.*t5755;
  t5761 = 1. + t5758;
  t5771 = Sin(var1[12]);
  t5804 = -1.*t5622*t5657;
  t5807 = t5587*t5743;
  t5814 = t5804 + t5807;
  t5858 = t5587*t5657;
  t5863 = t5622*t5743;
  t5873 = t5858 + t5863;
  t387 = -1.*t330;
  t493 = 1. + t387;
  t590 = 0.135*t493;
  t653 = 0. + t590;
  t1965 = -0.135*t1867;
  t2004 = 0. + t1965;
  t5983 = -1.*t741*t836;
  t5996 = t711*t872*t1440;
  t6001 = t5983 + t5996;
  t6028 = t711*t741*t872;
  t6071 = t836*t1440;
  t6072 = t6028 + t6071;
  t2337 = 0.135*t2330;
  t2686 = 0.049*t2657;
  t2703 = 0. + t2337 + t2686;
  t2916 = -0.049*t2330;
  t3005 = 0.135*t2657;
  t3009 = 0. + t2916 + t3005;
  t6088 = t330*t6001;
  t6112 = t6072*t1867;
  t6135 = t6088 + t6112;
  t3730 = -0.049*t3729;
  t3827 = -0.09*t3782;
  t3854 = 0. + t3730 + t3827;
  t4273 = -0.09*t3729;
  t4279 = 0.049*t3782;
  t4282 = 0. + t4273 + t4279;
  t4512 = -0.049*t4421;
  t4601 = -0.21*t4575;
  t4718 = 0. + t4512 + t4601;
  t6181 = t711*t2802*t2280;
  t6191 = t6135*t2657;
  t6200 = t6181 + t6191;
  t6211 = t330*t6072;
  t6213 = -1.*t6001*t1867;
  t6221 = t6211 + t6213;
  t4941 = -0.21*t4421;
  t4973 = 0.049*t4575;
  t4983 = 0. + t4941 + t4973;
  t5327 = -0.2707*t5313;
  t5389 = 0.0016*t5371;
  t5396 = 0. + t5327 + t5389;
  t6229 = t3629*t6200;
  t6261 = t6221*t3782;
  t6263 = t6229 + t6261;
  t6300 = t3629*t6221;
  t6317 = -1.*t6200*t3782;
  t6333 = t6300 + t6317;
  t5466 = -0.0016*t5313;
  t5469 = -0.2707*t5371;
  t5485 = 0. + t5466 + t5469;
  t5615 = 0.0184*t5609;
  t5623 = -0.7055*t5622;
  t5626 = 0. + t5615 + t5623;
  t6366 = -1.*t4575*t6263;
  t6382 = t4346*t6333;
  t6387 = t6366 + t6382;
  t6397 = t4346*t6263;
  t6407 = t4575*t6333;
  t6408 = t6397 + t6407;
  t5691 = -0.7055*t5609;
  t5701 = -0.0184*t5622;
  t5705 = 0. + t5691 + t5701;
  t5762 = -1.1135*t5761;
  t5786 = 0.0216*t5771;
  t5799 = 0. + t5762 + t5786;
  t6420 = t5371*t6387;
  t6440 = t5242*t6408;
  t6449 = t6420 + t6440;
  t6458 = t5242*t6387;
  t6463 = -1.*t5371*t6408;
  t6466 = t6458 + t6463;
  t5834 = -0.0216*t5761;
  t5845 = -1.1135*t5771;
  t5853 = 0. + t5834 + t5845;
  t6476 = -1.*t5622*t6449;
  t6487 = t5587*t6466;
  t6489 = t6476 + t6487;
  t6519 = t5587*t6449;
  t6521 = t5622*t6466;
  t6529 = t6519 + t6521;
  t6731 = t711*t2802*t330*t1440;
  t6746 = t711*t2802*t741*t1867;
  t6750 = t6731 + t6746;
  t6795 = -1.*t711*t2280*t872;
  t6801 = t6750*t2657;
  t6802 = t6795 + t6801;
  t6825 = t711*t2802*t741*t330;
  t6841 = -1.*t711*t2802*t1440*t1867;
  t6842 = t6825 + t6841;
  t6849 = t3629*t6802;
  t6865 = t6842*t3782;
  t6870 = t6849 + t6865;
  t6873 = t3629*t6842;
  t6877 = -1.*t6802*t3782;
  t6883 = t6873 + t6877;
  t6895 = -1.*t4575*t6870;
  t6899 = t4346*t6883;
  t6902 = t6895 + t6899;
  t6908 = t4346*t6870;
  t6921 = t4575*t6883;
  t6922 = t6908 + t6921;
  t6937 = t5371*t6902;
  t6940 = t5242*t6922;
  t6942 = t6937 + t6940;
  t6947 = t5242*t6902;
  t6948 = -1.*t5371*t6922;
  t6951 = t6947 + t6948;
  t6963 = -1.*t5622*t6942;
  t6966 = t5587*t6951;
  t6979 = t6963 + t6966;
  t7004 = t5587*t6942;
  t7007 = t5622*t6951;
  t7026 = t7004 + t7007;
  t7112 = t2802*t330*t836*t1440;
  t7113 = t2802*t741*t836*t1867;
  t7125 = t7112 + t7113;
  t7173 = -1.*t2280*t836*t872;
  t7175 = t7125*t2657;
  t7182 = t7173 + t7175;
  t7192 = t2802*t741*t330*t836;
  t7198 = -1.*t2802*t836*t1440*t1867;
  t7202 = t7192 + t7198;
  t7208 = t3629*t7182;
  t7210 = t7202*t3782;
  t7219 = t7208 + t7210;
  t7225 = t3629*t7202;
  t7229 = -1.*t7182*t3782;
  t7230 = t7225 + t7229;
  t7247 = -1.*t4575*t7219;
  t7248 = t4346*t7230;
  t7252 = t7247 + t7248;
  t7264 = t4346*t7219;
  t7265 = t4575*t7230;
  t7272 = t7264 + t7265;
  t7285 = t5371*t7252;
  t7300 = t5242*t7272;
  t7302 = t7285 + t7300;
  t7320 = t5242*t7252;
  t7328 = -1.*t5371*t7272;
  t7329 = t7320 + t7328;
  t7347 = -1.*t5622*t7302;
  t7357 = t5587*t7329;
  t7368 = t7347 + t7357;
  t7374 = t5587*t7302;
  t7384 = t5622*t7329;
  t7389 = t7374 + t7384;
  t7447 = -1.*t330*t872*t1440;
  t7451 = -1.*t741*t872*t1867;
  t7452 = t7447 + t7451;
  t7482 = -1.*t2802*t2280;
  t7486 = t7452*t2657;
  t7489 = t7482 + t7486;
  t7501 = -1.*t741*t330*t872;
  t7506 = t872*t1440*t1867;
  t7507 = t7501 + t7506;
  t7515 = t3629*t7489;
  t7525 = t7507*t3782;
  t7527 = t7515 + t7525;
  t7531 = t3629*t7507;
  t7533 = -1.*t7489*t3782;
  t7537 = t7531 + t7533;
  t7541 = -1.*t4575*t7527;
  t7545 = t4346*t7537;
  t7551 = t7541 + t7545;
  t7563 = t4346*t7527;
  t7565 = t4575*t7537;
  t7566 = t7563 + t7565;
  t7573 = t5371*t7551;
  t7576 = t5242*t7566;
  t7579 = t7573 + t7576;
  t7606 = t5242*t7551;
  t7609 = -1.*t5371*t7566;
  t7630 = t7606 + t7609;
  t7653 = -1.*t5622*t7579;
  t7654 = t5587*t7630;
  t7655 = t7653 + t7654;
  t7677 = t5587*t7579;
  t7679 = t5622*t7630;
  t7682 = t7677 + t7679;
  t7730 = t741*t836;
  t7738 = -1.*t711*t872*t1440;
  t7745 = t7730 + t7738;
  t7751 = t7745*t1867;
  t7757 = t6211 + t7751;
  t7773 = t330*t7745;
  t7779 = -1.*t6072*t1867;
  t7782 = t7773 + t7779;
  t7803 = t3629*t7757*t2657;
  t7808 = t7782*t3782;
  t7817 = t7803 + t7808;
  t7821 = t3629*t7782;
  t7826 = -1.*t7757*t2657*t3782;
  t7829 = t7821 + t7826;
  t7837 = -1.*t4575*t7817;
  t7846 = t4346*t7829;
  t7848 = t7837 + t7846;
  t7852 = t4346*t7817;
  t7860 = t4575*t7829;
  t7862 = t7852 + t7860;
  t7885 = t5371*t7848;
  t7892 = t5242*t7862;
  t7907 = t7885 + t7892;
  t7920 = t5242*t7848;
  t7921 = -1.*t5371*t7862;
  t7923 = t7920 + t7921;
  t7932 = -1.*t5622*t7907;
  t7934 = t5587*t7923;
  t7939 = t7932 + t7934;
  t7951 = t5587*t7907;
  t7959 = t5622*t7923;
  t7962 = t7951 + t7959;
  t8006 = t741*t836*t872;
  t8012 = -1.*t711*t1440;
  t8017 = t8006 + t8012;
  t8048 = t330*t8017;
  t8050 = t1572*t1867;
  t8053 = t8048 + t8050;
  t8071 = -1.*t8017*t1867;
  t8075 = t2077 + t8071;
  t8081 = t3629*t8053*t2657;
  t8087 = t8075*t3782;
  t8088 = t8081 + t8087;
  t8096 = t3629*t8075;
  t8097 = -1.*t8053*t2657*t3782;
  t8100 = t8096 + t8097;
  t8108 = -1.*t4575*t8088;
  t8112 = t4346*t8100;
  t8131 = t8108 + t8112;
  t8142 = t4346*t8088;
  t8147 = t4575*t8100;
  t8149 = t8142 + t8147;
  t8159 = t5371*t8131;
  t8184 = t5242*t8149;
  t8191 = t8159 + t8184;
  t8195 = t5242*t8131;
  t8200 = -1.*t5371*t8149;
  t8203 = t8195 + t8200;
  t8214 = -1.*t5622*t8191;
  t8220 = t5587*t8203;
  t8222 = t8214 + t8220;
  t8231 = t5587*t8191;
  t8233 = t5622*t8203;
  t8234 = t8231 + t8233;
  t8283 = t2802*t741*t330;
  t8284 = -1.*t2802*t1440*t1867;
  t8285 = t8283 + t8284;
  t8304 = -1.*t2802*t330*t1440;
  t8308 = -1.*t2802*t741*t1867;
  t8310 = t8304 + t8308;
  t8314 = t3629*t8285*t2657;
  t8317 = t8310*t3782;
  t8319 = t8314 + t8317;
  t8337 = t3629*t8310;
  t8342 = -1.*t8285*t2657*t3782;
  t8345 = t8337 + t8342;
  t8356 = -1.*t4575*t8319;
  t8361 = t4346*t8345;
  t8362 = t8356 + t8361;
  t8364 = t4346*t8319;
  t8370 = t4575*t8345;
  t8373 = t8364 + t8370;
  t8378 = t5371*t8362;
  t8385 = t5242*t8373;
  t8387 = t8378 + t8385;
  t8390 = t5242*t8362;
  t8397 = -1.*t5371*t8373;
  t8401 = t8390 + t8397;
  t8403 = -1.*t5622*t8387;
  t8405 = t5587*t8401;
  t8406 = t8403 + t8405;
  t8409 = t5587*t8387;
  t8412 = t5622*t8401;
  t8413 = t8409 + t8412;
  t8471 = -1.*t330*t6001;
  t8472 = t8471 + t7779;
  t8476 = t3629*t6221*t2657;
  t8478 = t8472*t3782;
  t8479 = t8476 + t8478;
  t8484 = t3629*t8472;
  t8486 = -1.*t6221*t2657*t3782;
  t8487 = t8484 + t8486;
  t8490 = -1.*t4575*t8479;
  t8492 = t4346*t8487;
  t8500 = t8490 + t8492;
  t8503 = t4346*t8479;
  t8505 = t4575*t8487;
  t8510 = t8503 + t8505;
  t8515 = t5371*t8500;
  t8516 = t5242*t8510;
  t8522 = t8515 + t8516;
  t8527 = t5242*t8500;
  t8532 = -1.*t5371*t8510;
  t8533 = t8527 + t8532;
  t8540 = -1.*t5622*t8522;
  t8541 = t5587*t8533;
  t8546 = t8540 + t8541;
  t8552 = t5587*t8522;
  t8553 = t5622*t8533;
  t8554 = t8552 + t8553;
  t8598 = t711*t741;
  t8599 = t836*t872*t1440;
  t8606 = t8598 + t8599;
  t8613 = -1.*t8606*t1867;
  t8617 = t8048 + t8613;
  t8628 = -1.*t330*t8606;
  t8632 = t8628 + t8071;
  t8638 = t3629*t8617*t2657;
  t8640 = t8632*t3782;
  t8643 = t8638 + t8640;
  t8648 = t3629*t8632;
  t8651 = -1.*t8617*t2657*t3782;
  t8655 = t8648 + t8651;
  t8659 = -1.*t4575*t8643;
  t8660 = t4346*t8655;
  t8662 = t8659 + t8660;
  t8673 = t4346*t8643;
  t8675 = t4575*t8655;
  t8676 = t8673 + t8675;
  t8679 = t5371*t8662;
  t8681 = t5242*t8676;
  t8682 = t8679 + t8681;
  t8703 = t5242*t8662;
  t8710 = -1.*t5371*t8676;
  t8711 = t8703 + t8710;
  t8719 = -1.*t5622*t8682;
  t8720 = t5587*t8711;
  t8721 = t8719 + t8720;
  t8729 = t5587*t8682;
  t8735 = t5622*t8711;
  t8739 = t8729 + t8735;
  t8286 = 0.1305*t2280*t8285;
  t8291 = t8285*t2703;
  t8296 = t8285*t2657*t3854;
  t8311 = t8310*t4282;
  t8322 = t4718*t8319;
  t8354 = t4983*t8345;
  t8363 = t5396*t8362;
  t8377 = t5485*t8373;
  t8388 = t5626*t8387;
  t8402 = t5705*t8401;
  t8407 = t5799*t8406;
  t8415 = t5853*t8413;
  t8420 = t5771*t8406;
  t8424 = t5755*t8413;
  t8425 = t8420 + t8424;
  t8433 = -0.027251*t8425;
  t8441 = t5755*t8406;
  t8449 = -1.*t5771*t8413;
  t8451 = t8441 + t8449;
  t8453 = -1.200144*t8451;
  t6150 = t2280*t6135;
  t6164 = -1.*t711*t2802*t2657;
  t6167 = t6150 + t6164;
  t8870 = -1.*t3629*t4575*t6167;
  t8871 = -1.*t4346*t6167*t3782;
  t8872 = t8870 + t8871;
  t8879 = t4346*t3629*t6167;
  t8881 = -1.*t4575*t6167*t3782;
  t8883 = t8879 + t8881;
  t8887 = t5371*t8872;
  t8888 = t5242*t8883;
  t8903 = t8887 + t8888;
  t8913 = t5242*t8872;
  t8920 = -1.*t5371*t8883;
  t8923 = t8913 + t8920;
  t8925 = -1.*t5622*t8903;
  t8926 = t5587*t8923;
  t8927 = t8925 + t8926;
  t8930 = t5587*t8903;
  t8935 = t5622*t8923;
  t8936 = t8930 + t8935;
  t8834 = 0.135*t2280;
  t8835 = -0.049*t2657;
  t8839 = t8834 + t8835;
  t8847 = 0.049*t2280;
  t8848 = t8847 + t3005;
  t8995 = t330*t8606;
  t9002 = t8017*t1867;
  t9004 = t8995 + t9002;
  t9008 = t2280*t9004;
  t9018 = -1.*t2802*t836*t2657;
  t9020 = t9008 + t9018;
  t9062 = -1.*t3629*t4575*t9020;
  t9063 = -1.*t4346*t9020*t3782;
  t9065 = t9062 + t9063;
  t9074 = t4346*t3629*t9020;
  t9075 = -1.*t4575*t9020*t3782;
  t9080 = t9074 + t9075;
  t9087 = t5371*t9065;
  t9090 = t5242*t9080;
  t9091 = t9087 + t9090;
  t9094 = t5242*t9065;
  t9095 = -1.*t5371*t9080;
  t9100 = t9094 + t9095;
  t9104 = -1.*t5622*t9091;
  t9109 = t5587*t9100;
  t9111 = t9104 + t9109;
  t9120 = t5587*t9091;
  t9122 = t5622*t9100;
  t9126 = t9120 + t9122;
  t9163 = t2802*t330*t1440;
  t9169 = t2802*t741*t1867;
  t9176 = t9163 + t9169;
  t9193 = t2280*t9176;
  t9195 = t872*t2657;
  t9196 = t9193 + t9195;
  t9224 = -1.*t3629*t4575*t9196;
  t9230 = -1.*t4346*t9196*t3782;
  t9231 = t9224 + t9230;
  t9236 = t4346*t3629*t9196;
  t9240 = -1.*t4575*t9196*t3782;
  t9252 = t9236 + t9240;
  t9265 = t5371*t9231;
  t9270 = t5242*t9252;
  t9276 = t9265 + t9270;
  t9284 = t5242*t9231;
  t9288 = -1.*t5371*t9252;
  t9291 = t9284 + t9288;
  t9299 = -1.*t5622*t9276;
  t9302 = t5587*t9291;
  t9304 = t9299 + t9302;
  t9307 = t5587*t9276;
  t9308 = t5622*t9291;
  t9313 = t9307 + t9308;
  t9390 = -1.*t3629*t6200;
  t9392 = -1.*t6221*t3782;
  t9394 = t9390 + t9392;
  t9423 = t4575*t9394;
  t9424 = t9423 + t6382;
  t9429 = t4346*t9394;
  t9432 = -1.*t4575*t6333;
  t9434 = t9429 + t9432;
  t9437 = -1.*t5371*t9424;
  t9446 = t5242*t9434;
  t9447 = t9437 + t9446;
  t9455 = t5242*t9424;
  t9457 = t5371*t9434;
  t9462 = t9455 + t9457;
  t9474 = t5622*t9447;
  t9478 = t5587*t9462;
  t9480 = t9474 + t9478;
  t9483 = t5587*t9447;
  t9484 = -1.*t5622*t9462;
  t9486 = t9483 + t9484;
  t9342 = 0.049*t3629;
  t9349 = t9342 + t3827;
  t9355 = -0.09*t3629;
  t9357 = -0.049*t3782;
  t9386 = t9355 + t9357;
  t9522 = t2802*t2280*t836;
  t9536 = t9004*t2657;
  t9538 = t9522 + t9536;
  t9547 = -1.*t3629*t9538;
  t9570 = -1.*t8617*t3782;
  t9576 = t9547 + t9570;
  t9608 = t3629*t8617;
  t9618 = -1.*t9538*t3782;
  t9627 = t9608 + t9618;
  t9636 = t4575*t9576;
  t9637 = t4346*t9627;
  t9647 = t9636 + t9637;
  t9659 = t4346*t9576;
  t9668 = -1.*t4575*t9627;
  t9670 = t9659 + t9668;
  t9678 = -1.*t5371*t9647;
  t9681 = t5242*t9670;
  t9687 = t9678 + t9681;
  t9693 = t5242*t9647;
  t9709 = t5371*t9670;
  t9718 = t9693 + t9709;
  t9737 = t5622*t9687;
  t9746 = t5587*t9718;
  t9750 = t9737 + t9746;
  t9760 = t5587*t9687;
  t9763 = -1.*t5622*t9718;
  t9779 = t9760 + t9763;
  t9845 = -1.*t2280*t872;
  t9848 = t9176*t2657;
  t9849 = t9845 + t9848;
  t9855 = -1.*t3629*t9849;
  t9856 = -1.*t8285*t3782;
  t9858 = t9855 + t9856;
  t9863 = t3629*t8285;
  t9866 = -1.*t9849*t3782;
  t9868 = t9863 + t9866;
  t9870 = t4575*t9858;
  t9872 = t4346*t9868;
  t9875 = t9870 + t9872;
  t9888 = t4346*t9858;
  t9889 = -1.*t4575*t9868;
  t9907 = t9888 + t9889;
  t9920 = -1.*t5371*t9875;
  t9924 = t5242*t9907;
  t9926 = t9920 + t9924;
  t9934 = t5242*t9875;
  t9937 = t5371*t9907;
  t9940 = t9934 + t9937;
  t9943 = t5622*t9926;
  t9945 = t5587*t9940;
  t9949 = t9943 + t9945;
  t9954 = t5587*t9926;
  t9957 = -1.*t5622*t9940;
  t9966 = t9954 + t9957;
  t10064 = -1.*t4346*t6263;
  t10070 = t10064 + t9432;
  t10086 = -1.*t5371*t6387;
  t10089 = t5242*t10070;
  t10090 = t10086 + t10089;
  t10092 = t5371*t10070;
  t10094 = t6458 + t10092;
  t10106 = t5622*t10090;
  t10108 = t5587*t10094;
  t10110 = t10106 + t10108;
  t10113 = t5587*t10090;
  t10115 = -1.*t5622*t10094;
  t10120 = t10113 + t10115;
  t10011 = -0.21*t4346;
  t10023 = -0.049*t4575;
  t10024 = t10011 + t10023;
  t10040 = 0.049*t4346;
  t10042 = t10040 + t4601;
  t10181 = t3629*t9538;
  t10185 = t8617*t3782;
  t10188 = t10181 + t10185;
  t10217 = -1.*t4575*t10188;
  t10220 = t10217 + t9637;
  t10231 = -1.*t4346*t10188;
  t10237 = t10231 + t9668;
  t10254 = -1.*t5371*t10220;
  t10258 = t5242*t10237;
  t10293 = t10254 + t10258;
  t10299 = t5242*t10220;
  t10301 = t5371*t10237;
  t10306 = t10299 + t10301;
  t10312 = t5622*t10293;
  t10317 = t5587*t10306;
  t10319 = t10312 + t10317;
  t10332 = t5587*t10293;
  t10334 = -1.*t5622*t10306;
  t10343 = t10332 + t10334;
  t10417 = t3629*t9849;
  t10424 = t8285*t3782;
  t10438 = t10417 + t10424;
  t10449 = -1.*t4575*t10438;
  t10450 = t10449 + t9872;
  t10458 = -1.*t4346*t10438;
  t10459 = t10458 + t9889;
  t10484 = -1.*t5371*t10450;
  t10490 = t5242*t10459;
  t10502 = t10484 + t10490;
  t10505 = t5242*t10450;
  t10513 = t5371*t10459;
  t10515 = t10505 + t10513;
  t10519 = t5622*t10502;
  t10521 = t5587*t10515;
  t10525 = t10519 + t10521;
  t10531 = t5587*t10502;
  t10534 = -1.*t5622*t10515;
  t10541 = t10531 + t10534;
  t10647 = -1.*t5242*t6408;
  t10649 = t10086 + t10647;
  t10658 = t5622*t10649;
  t10661 = t10658 + t6487;
  t10667 = t5587*t10649;
  t10677 = -1.*t5622*t6466;
  t10688 = t10667 + t10677;
  t10593 = 0.0016*t5242;
  t10605 = t10593 + t5469;
  t10613 = -0.2707*t5242;
  t10619 = -0.0016*t5371;
  t10623 = t10613 + t10619;
  t10732 = t4346*t10188;
  t10734 = t4575*t9627;
  t10741 = t10732 + t10734;
  t10746 = -1.*t5242*t10741;
  t10750 = t10254 + t10746;
  t10763 = -1.*t5371*t10741;
  t10764 = t10299 + t10763;
  t10766 = t5622*t10750;
  t10767 = t5587*t10764;
  t10768 = t10766 + t10767;
  t10792 = t5587*t10750;
  t10797 = -1.*t5622*t10764;
  t10802 = t10792 + t10797;
  t10870 = t4346*t10438;
  t10871 = t4575*t9868;
  t10877 = t10870 + t10871;
  t10882 = -1.*t5242*t10877;
  t10885 = t10484 + t10882;
  t10896 = -1.*t5371*t10877;
  t10900 = t10505 + t10896;
  t10903 = t5622*t10885;
  t10908 = t5587*t10900;
  t10915 = t10903 + t10908;
  t10934 = t5587*t10885;
  t10941 = -1.*t5622*t10900;
  t10950 = t10934 + t10941;
  t11047 = -1.*t5587*t6449;
  t11058 = t11047 + t10677;
  t6650 = t5755*t6489;
  t11003 = -0.7055*t5587;
  t11005 = 0.0184*t5622;
  t11012 = t11003 + t11005;
  t11020 = -0.0184*t5587;
  t11037 = t11020 + t5623;
  t11107 = t5371*t10220;
  t11108 = t5242*t10741;
  t11110 = t11107 + t11108;
  t11126 = -1.*t5622*t11110;
  t11130 = t11126 + t10767;
  t11149 = -1.*t5587*t11110;
  t11152 = t11149 + t10797;
  t11227 = t5371*t10450;
  t11230 = t5242*t10877;
  t11241 = t11227 + t11230;
  t11262 = -1.*t5622*t11241;
  t11272 = t11262 + t10908;
  t11277 = -1.*t5587*t11241;
  t11283 = t11277 + t10941;
  t11070 = -1.*t5771*t6489;
  t6661 = -1.*t5771*t6529;
  t6671 = t6650 + t6661;
  t11336 = 0.0216*t5755;
  t11338 = t11336 + t5845;
  t11346 = -1.1135*t5755;
  t11349 = -0.0216*t5771;
  t11351 = t11346 + t11349;
  t11173 = -1.*t5771*t11130;
  t11367 = t5587*t11110;
  t11368 = t5622*t10764;
  t11370 = t11367 + t11368;
  t11194 = t5755*t11130;
  t11312 = -1.*t5771*t11272;
  t11396 = t5587*t11241;
  t11397 = t5622*t10900;
  t11398 = t11396 + t11397;
  t11327 = t5755*t11272;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t1852*t2004 + t2168*t2703 + t3570*t3854 + t4201*t4282 + t4718*t4901 + t4983*t5053 + t5396*t5434 + t5485*t5560 + t5626*t5657 + t5705*t5743 + t5799*t5814 + t5853*t5873 - 0.027251*(t5771*t5814 + t5755*t5873) - 1.200144*(t5755*t5814 - 1.*t5771*t5873) + t1572*t653 - 1.*t2802*t3009*t836 + 0.1305*(t2168*t2280 + t2657*t2802*t836);
  p_output1[10]=t2004*t6072 + t2703*t6135 + 0.1305*t6167 + t3854*t6200 + t4282*t6221 + t4718*t6263 + t4983*t6333 + t5396*t6387 + t5485*t6408 + t5626*t6449 + t5705*t6466 + t5799*t6489 + t5853*t6529 - 0.027251*(t5771*t6489 + t5755*t6529) + t6001*t653 - 1.200144*t6671 + t2802*t3009*t711;
  p_output1[11]=0;
  p_output1[12]=t2703*t6750 + t3854*t6802 + t4282*t6842 + t4718*t6870 + t4983*t6883 + t5396*t6902 + t5485*t6922 + t5626*t6942 + t5705*t6951 + t5799*t6979 + t5853*t7026 - 0.027251*(t5771*t6979 + t5755*t7026) - 1.200144*(t5755*t6979 - 1.*t5771*t7026) + t1440*t2802*t653*t711 + t2004*t2802*t711*t741 - 1.*t3009*t711*t872 + 0.1305*(t2280*t6750 + t2657*t711*t872);
  p_output1[13]=t2703*t7125 + t3854*t7182 + t4282*t7202 + t4718*t7219 + t4983*t7230 + t5396*t7252 + t5485*t7272 + t5626*t7302 + t5705*t7329 + t5799*t7368 + t5853*t7389 - 0.027251*(t5771*t7368 + t5755*t7389) - 1.200144*(t5755*t7368 - 1.*t5771*t7389) + t1440*t2802*t653*t836 + t2004*t2802*t741*t836 - 1.*t3009*t836*t872 + 0.1305*(t2280*t7125 + t2657*t836*t872);
  p_output1[14]=-1.*t2802*t3009 + t2703*t7452 + 0.1305*(t2657*t2802 + t2280*t7452) + t3854*t7489 + t4282*t7507 + t4718*t7527 + t4983*t7537 + t5396*t7551 + t5485*t7566 + t5626*t7579 + t5705*t7630 + t5799*t7655 + t5853*t7682 - 0.027251*(t5771*t7655 + t5755*t7682) - 1.200144*(t5755*t7655 - 1.*t5771*t7682) - 1.*t1440*t653*t872 - 1.*t2004*t741*t872;
  p_output1[15]=t6072*t653 + t2004*t7745 + 0.1305*t2280*t7757 + t2703*t7757 + t2657*t3854*t7757 + t4282*t7782 + t4718*t7817 + t4983*t7829 + t5396*t7848 + t5485*t7862 + t5626*t7907 + t5705*t7923 + t5799*t7939 + t5853*t7962 - 0.027251*(t5771*t7939 + t5755*t7962) - 1.200144*(t5755*t7939 - 1.*t5771*t7962);
  p_output1[16]=t1572*t2004 + t653*t8017 + 0.1305*t2280*t8053 + t2703*t8053 + t2657*t3854*t8053 + t4282*t8075 + t4718*t8088 + t4983*t8100 + t5396*t8131 + t5485*t8149 + t5626*t8191 + t5705*t8203 + t5799*t8222 + t5853*t8234 - 0.027251*(t5771*t8222 + t5755*t8234) - 1.200144*(t5755*t8222 - 1.*t5771*t8234);
  p_output1[17]=-1.*t1440*t2004*t2802 + t2802*t653*t741 + t8286 + t8291 + t8296 + t8311 + t8322 + t8354 + t8363 + t8377 + t8388 + t8402 + t8407 + t8415 + t8433 + t8453;
  p_output1[18]=0.135*t1867*t6001 - 0.135*t330*t6072 + 0.1305*t2280*t6221 + t2703*t6221 + t2657*t3854*t6221 + t4282*t8472 + t4718*t8479 + t4983*t8487 + t5396*t8500 + t5485*t8510 + t5626*t8522 + t5705*t8533 + t5799*t8546 + t5853*t8554 - 0.027251*(t5771*t8546 + t5755*t8554) - 1.200144*(t5755*t8546 - 1.*t5771*t8554);
  p_output1[19]=-0.135*t330*t8017 + 0.135*t1867*t8606 + 0.1305*t2280*t8617 + t2703*t8617 + t2657*t3854*t8617 + t4282*t8632 + t4718*t8643 + t4983*t8655 + t5396*t8662 + t5485*t8676 + t5626*t8682 + t5705*t8711 + t5799*t8721 + t5853*t8739 - 0.027251*(t5771*t8721 + t5755*t8739) - 1.200144*(t5755*t8721 - 1.*t5771*t8739);
  p_output1[20]=0.135*t1440*t1867*t2802 - 0.135*t2802*t330*t741 + t8286 + t8291 + t8296 + t8311 + t8322 + t8354 + t8363 + t8377 + t8388 + t8402 + t8407 + t8415 + t8433 + t8453;
  p_output1[21]=t3854*t6167 + t3629*t4718*t6167 - 1.*t3782*t4983*t6167 + 0.1305*(-1.*t2657*t6135 - 1.*t2280*t2802*t711) + t2802*t711*t8839 + t6135*t8848 + t5396*t8872 + t5485*t8883 + t5626*t8903 + t5705*t8923 + t5799*t8927 + t5853*t8936 - 0.027251*(t5771*t8927 + t5755*t8936) - 1.200144*(t5755*t8927 - 1.*t5771*t8936);
  p_output1[22]=t2802*t836*t8839 + t8848*t9004 + 0.1305*(t3379 - 1.*t2657*t9004) + t3854*t9020 + t3629*t4718*t9020 - 1.*t3782*t4983*t9020 + t5396*t9065 + t5485*t9080 + t5626*t9091 + t5705*t9100 + t5799*t9111 + t5853*t9126 - 0.027251*(t5771*t9111 + t5755*t9126) - 1.200144*(t5755*t9111 - 1.*t5771*t9126);
  p_output1[23]=-1.*t872*t8839 + t8848*t9176 + 0.1305*(t2280*t872 - 1.*t2657*t9176) + t3854*t9196 + t3629*t4718*t9196 - 1.*t3782*t4983*t9196 + t5396*t9231 + t5485*t9252 + t5626*t9276 + t5705*t9291 + t5799*t9304 + t5853*t9313 - 0.027251*(t5771*t9304 + t5755*t9313) - 1.200144*(t5755*t9304 - 1.*t5771*t9313);
  p_output1[24]=t4718*t6333 + t6221*t9349 + t6200*t9386 + t4983*t9394 + t5485*t9424 + t5396*t9434 + t5705*t9447 + t5626*t9462 + t5853*t9480 + t5799*t9486 - 1.200144*(-1.*t5771*t9480 + t5755*t9486) - 0.027251*(t5755*t9480 + t5771*t9486);
  p_output1[25]=t8617*t9349 + t9386*t9538 + t4983*t9576 + t4718*t9627 + t5485*t9647 + t5396*t9670 + t5705*t9687 + t5626*t9718 + t5853*t9750 + t5799*t9779 - 1.200144*(-1.*t5771*t9750 + t5755*t9779) - 0.027251*(t5755*t9750 + t5771*t9779);
  p_output1[26]=t8285*t9349 + t9386*t9849 + t4983*t9858 + t4718*t9868 + t5485*t9875 + t5396*t9907 + t5705*t9926 + t5626*t9940 + t5853*t9949 + t5799*t9966 - 1.200144*(-1.*t5771*t9949 + t5755*t9966) - 0.027251*(t5755*t9949 + t5771*t9966);
  p_output1[27]=t10070*t5396 + t10094*t5626 + t10090*t5705 - 1.200144*(t10120*t5755 - 1.*t10110*t5771) - 0.027251*(t10110*t5755 + t10120*t5771) + t10120*t5799 + t10110*t5853 + t10024*t6263 + t10042*t6333 + t5485*t6387;
  p_output1[28]=t10024*t10188 + t10237*t5396 + t10220*t5485 + t10306*t5626 + t10293*t5705 - 1.200144*(t10343*t5755 - 1.*t10319*t5771) - 0.027251*(t10319*t5755 + t10343*t5771) + t10343*t5799 + t10319*t5853 + t10042*t9627;
  p_output1[29]=t10024*t10438 + t10459*t5396 + t10450*t5485 + t10515*t5626 + t10502*t5705 - 1.200144*(t10541*t5755 - 1.*t10525*t5771) - 0.027251*(t10525*t5755 + t10541*t5771) + t10541*t5799 + t10525*t5853 + t10042*t9868;
  p_output1[30]=t10649*t5705 - 1.200144*(t10688*t5755 - 1.*t10661*t5771) - 0.027251*(t10661*t5755 + t10688*t5771) + t10688*t5799 + t10661*t5853 + t10605*t6387 + t10623*t6408 + t5626*t6466;
  p_output1[31]=t10220*t10605 + t10623*t10741 + t10764*t5626 + t10750*t5705 - 1.200144*(t10802*t5755 - 1.*t10768*t5771) - 0.027251*(t10768*t5755 + t10802*t5771) + t10802*t5799 + t10768*t5853;
  p_output1[32]=t10450*t10605 + t10623*t10877 + t10900*t5626 + t10885*t5705 - 1.200144*(t10950*t5755 - 1.*t10915*t5771) - 0.027251*(t10915*t5755 + t10950*t5771) + t10950*t5799 + t10915*t5853;
  p_output1[33]=-1.200144*(t11070 + t11058*t5755) + t11058*t5799 + t11012*t6449 + t11037*t6466 + t5853*t6489 - 0.027251*(t11058*t5771 + t6650);
  p_output1[34]=t10764*t11037 + t11012*t11110 - 1.200144*(t11173 + t11152*t5755) - 0.027251*(t11194 + t11152*t5771) + t11152*t5799 + t11130*t5853;
  p_output1[35]=t10900*t11037 + t11012*t11241 - 1.200144*(t11312 + t11283*t5755) - 0.027251*(t11327 + t11283*t5771) + t11283*t5799 + t11272*t5853;
  p_output1[36]=t11338*t6489 + t11351*t6529 - 1.200144*(t11070 - 1.*t5755*t6529) - 0.027251*t6671;
  p_output1[37]=t11130*t11338 + t11351*t11370 - 1.200144*(t11173 - 1.*t11370*t5755) - 0.027251*(t11194 - 1.*t11370*t5771);
  p_output1[38]=t11272*t11338 + t11351*t11398 - 1.200144*(t11312 - 1.*t11398*t5755) - 0.027251*(t11327 - 1.*t11398*t5771);
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 20 && ncols == 1) && 
      !(mrows == 1 && ncols == 20))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 20, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "J_LeftToeBack_mex.hh"

namespace SymExpression
{

void J_LeftToeBack_mex_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
